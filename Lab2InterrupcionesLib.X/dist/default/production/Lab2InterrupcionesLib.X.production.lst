

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 19:51:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  014E                     __pidataBANK0:
   291                           
   292                           ;initializer for main@tabla
   293  014E  3477               	retlw	119
   294  014F  3441               	retlw	65
   295  0150  343B               	retlw	59
   296  0151  346B               	retlw	107
   297  0152  344D               	retlw	77
   298  0153  346E               	retlw	110
   299  0154  347E               	retlw	126
   300  0155  3443               	retlw	67
   301  0156  347F               	retlw	127
   302  0157  346F               	retlw	111
   303  0158  346F               	retlw	111
   304  0159  346F               	retlw	111
   305  015A  346F               	retlw	111
   306  015B  346F               	retlw	111
   307  015C  346F               	retlw	111
   308  015D  346F               	retlw	111
   309  000C                     _PIR1bits	set	12
   310  0007                     _PORTC	set	7
   311  0006                     _PORTB	set	6
   312  0005                     _PORTA	set	5
   313  0006                     _PORTBbits	set	6
   314  000B                     _INTCONbits	set	11
   315  001F                     _ADCON0bits	set	31
   316  0008                     _PORTD	set	8
   317  001E                     _ADRESH	set	30
   318  0066                     _ADIF	set	102
   319  008C                     _PIE1bits	set	140
   320  009F                     _ADCON1bits	set	159
   321  0096                     _IOCBbits	set	150
   322  0081                     _OPTION_REGbits	set	129
   323  0089                     _TRISEbits	set	137
   324  0088                     _TRISD	set	136
   325  0087                     _TRISC	set	135
   326  0086                     _TRISB	set	134
   327  0085                     _TRISA	set	133
   328  0189                     _ANSELHbits	set	393
   329  0189                     _ANSELH	set	393
   330  0188                     _ANSEL	set	392
   331                           
   332                           	psect	cinit
   333  000F                     start_initialization:	
   334                           ; #config settings
   335                           
   336  000F                     __initialization:
   337                           
   338                           ; Initialize objects allocated to BANK0
   339  000F  1383               	bcf	3,7	;select IRP bank0
   340  0010  3030               	movlw	low (__pdataBANK0+16)
   341  0011  00FD               	movwf	btemp+-1
   342  0012  3001               	movlw	high __pidataBANK0
   343  0013  00FE               	movwf	btemp
   344  0014  304E               	movlw	low __pidataBANK0
   345  0015  00FF               	movwf	btemp+1
   346  0016  3020               	movlw	low __pdataBANK0
   347  0017  0084               	movwf	4
   348  0018  120A  118A  213F  120A  118A  	fcall	init_ram0
   349                           
   350                           ; Clear objects allocated to COMMON
   351  001D  01F4               	clrf	__pbssCOMMON& (0+127)
   352  001E  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   353  001F                     end_of_initialization:	
   354                           ;End of C runtime variable initialization code
   355                           
   356  001F                     __end_of__initialization:
   357  001F  0183               	clrf	3
   358  0020  120A  118A  2927   	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMMON
   361  0074                     __pbssCOMMON:
   362  0074                     _varBoton1:
   363  0074                     	ds	1
   364  0075                     _varADC:
   365  0075                     	ds	1
   366                           
   367                           	psect	dataBANK0
   368  0020                     __pdataBANK0:
   369  0020                     main@tabla:
   370  0020                     	ds	16
   371                           
   372                           	psect	inittext
   373  013B                     init_fetch0:	
   374                           ;	Called with low address in FSR and high address in W
   375                           
   376  013B  087E               	movf	btemp,w
   377  013C  008A               	movwf	10
   378  013D  087F               	movf	btemp+1,w
   379  013E  0082               	movwf	2
   380  013F                     init_ram0:	
   381                           ;Called with:
   382                           ;	high address of idata address in btemp 
   383                           ;	low address of idata address in btemp+1 
   384                           ;	low address of data in FSR
   385                           ;	high address + 1 of data in btemp-1
   386                           
   387  013F  120A  118A  213B  120A  118A  	fcall	init_fetch0
   388  0144  0080               	movwf	0
   389  0145  0A84               	incf	4,f
   390  0146  0804               	movf	4,w
   391  0147  067D               	xorwf	btemp+-1,w
   392  0148  1903               	btfsc	3,2
   393  0149  3400               	retlw	0
   394  014A  0AFF               	incf	btemp+1,f
   395  014B  1903               	btfsc	3,2
   396  014C  0AFE               	incf	btemp,f
   397  014D  293F               	goto	init_ram0
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:
   401  0070                     ?_Setup:
   402  0070                     ?_configADC:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_canalADC:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_ISR:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_ISR:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_main:	
   415                           ; 1 bytes @ 0x0
   416                           
   417                           
   418                           ; 1 bytes @ 0x0
   419  0070                     	ds	3
   420  0073                     ??_Setup:
   421  0073                     ??_configADC:	
   422                           ; 1 bytes @ 0x3
   423                           
   424  0073                     ??_canalADC:	
   425                           ; 1 bytes @ 0x3
   426                           
   427  0073                     canalADC@canal:	
   428                           ; 1 bytes @ 0x3
   429                           
   430                           
   431                           ; 1 bytes @ 0x3
   432  0073                     	ds	1
   433  0074                     ??_main:
   434                           
   435                           	psect	maintext
   436  0127                     __pmaintext:	
   437                           ; 1 bytes @ 0x4
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 79 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : B00/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels required when called:    2
   463 ;; This function calls:
   464 ;;		_Setup
   465 ;;		_canalADC
   466 ;;		_configADC
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _main
   474  0127                     _main:
   475  0127                     l802:	
   476                           ;incstack = 0
   477                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;main.c: 81:     Setup();
   481  0127  120A  118A  20F6  120A  118A  	fcall	_Setup
   482  012C                     l804:
   483                           
   484                           ;main.c: 82:     configADC();
   485  012C  120A  118A  2112  120A  118A  	fcall	_configADC
   486  0131                     l806:
   487                           
   488                           ;main.c: 83:     canalADC(5);
   489  0131  3005               	movlw	5
   490  0132  120A  118A  2023  120A  118A  	fcall	_canalADC
   491  0137                     l64:	
   492                           ;main.c: 85:     static uint8_t tabla[] = {0b01110111,;main.c: 107:     while (1) {
   493                           
   494  0137                     l65:	
   495                           ;main.c: 111:     }
   496                           
   497  0137  2937               	goto	l64
   498  0138  120A  118A  280C   	ljmp	start
   499  013B                     __end_of_main:
   500                           
   501                           	psect	text1
   502  0112                     __ptext1:	
   503 ;; *************** function _configADC *****************
   504 ;; Defined at:
   505 ;;		line 140 in file "ADC.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		None
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _configADC
   535  0112                     _configADC:
   536  0112                     l724:	
   537                           ;incstack = 0
   538                           ; Regs used in _configADC: []
   539                           
   540                           
   541                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   542  0112  1283               	bcf	3,5	;RP0=0, select bank0
   543  0113  1303               	bcf	3,6	;RP1=0, select bank0
   544  0114  171F               	bsf	31,6	;volatile
   545                           
   546                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   547  0115  139F               	bcf	31,7	;volatile
   548                           
   549                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   550  0116  1683               	bsf	3,5	;RP0=1, select bank1
   551  0117  1303               	bcf	3,6	;RP1=0, select bank1
   552  0118  121F               	bcf	31,4	;volatile
   553                           
   554                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   555  0119  129F               	bcf	31,5	;volatile
   556                           
   557                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   558  011A  139F               	bcf	31,7	;volatile
   559                           
   560                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   561  011B  1283               	bcf	3,5	;RP0=0, select bank0
   562  011C  1303               	bcf	3,6	;RP1=0, select bank0
   563  011D  130C               	bcf	12,6	;volatile
   564                           
   565                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   566  011E  1683               	bsf	3,5	;RP0=1, select bank1
   567  011F  1303               	bcf	3,6	;RP1=0, select bank1
   568  0120  170C               	bsf	12,6	;volatile
   569                           
   570                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   571  0121  178B               	bsf	11,7	;volatile
   572                           
   573                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   574  0122  170B               	bsf	11,6	;volatile
   575                           
   576                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   577  0123  1283               	bcf	3,5	;RP0=0, select bank0
   578  0124  1303               	bcf	3,6	;RP1=0, select bank0
   579  0125  141F               	bsf	31,0	;volatile
   580  0126                     l100:
   581  0126  0008               	return
   582  0127                     __end_of_configADC:
   583                           
   584                           	psect	text2
   585  0023                     __ptext2:	
   586 ;; *************** function _canalADC *****************
   587 ;; Defined at:
   588 ;;		line 13 in file "ADC.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  canal           1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  canal           1    3[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         1       0       0       0       0
   606 ;;Total ram usage:        1 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _canalADC
   618  0023                     _canalADC:
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   622                           ;canalADC@canal stored from wreg
   623  0023  00F3               	movwf	canalADC@canal
   624  0024                     l726:
   625                           
   626                           ;ADC.c: 15:     if (canal == 0) {
   627  0024  0873               	movf	canalADC@canal,w
   628  0025  1D03               	btfss	3,2
   629  0026  2828               	goto	u11
   630  0027  2829               	goto	u10
   631  0028                     u11:
   632  0028  282F               	goto	l730
   633  0029                     u10:
   634  0029                     l728:
   635                           
   636                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   637  0029  1283               	bcf	3,5	;RP0=0, select bank0
   638  002A  1303               	bcf	3,6	;RP1=0, select bank0
   639  002B  129F               	bcf	31,5	;volatile
   640                           
   641                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   642  002C  121F               	bcf	31,4	;volatile
   643                           
   644                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   645  002D  119F               	bcf	31,3	;volatile
   646                           
   647                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   648  002E  111F               	bcf	31,2	;volatile
   649  002F                     l730:
   650                           
   651                           ;ADC.c: 23:     if (canal == 1) {
   652  002F  0373               	decf	canalADC@canal,w
   653  0030  1D03               	btfss	3,2
   654  0031  2833               	goto	u21
   655  0032  2834               	goto	u20
   656  0033                     u21:
   657  0033  283A               	goto	l734
   658  0034                     u20:
   659  0034                     l732:
   660                           
   661                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   662  0034  1283               	bcf	3,5	;RP0=0, select bank0
   663  0035  1303               	bcf	3,6	;RP1=0, select bank0
   664  0036  129F               	bcf	31,5	;volatile
   665                           
   666                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   667  0037  121F               	bcf	31,4	;volatile
   668                           
   669                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   670  0038  119F               	bcf	31,3	;volatile
   671                           
   672                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   673  0039  151F               	bsf	31,2	;volatile
   674  003A                     l734:
   675                           
   676                           ;ADC.c: 32:     if (canal == 2) {
   677  003A  3002               	movlw	2
   678  003B  0673               	xorwf	canalADC@canal,w
   679  003C  1D03               	btfss	3,2
   680  003D  283F               	goto	u31
   681  003E  2840               	goto	u30
   682  003F                     u31:
   683  003F  2846               	goto	l738
   684  0040                     u30:
   685  0040                     l736:
   686                           
   687                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   688  0040  1283               	bcf	3,5	;RP0=0, select bank0
   689  0041  1303               	bcf	3,6	;RP1=0, select bank0
   690  0042  129F               	bcf	31,5	;volatile
   691                           
   692                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   693  0043  121F               	bcf	31,4	;volatile
   694                           
   695                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   696  0044  159F               	bsf	31,3	;volatile
   697                           
   698                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   699  0045  111F               	bcf	31,2	;volatile
   700  0046                     l738:
   701                           
   702                           ;ADC.c: 41:     if (canal == 3) {
   703  0046  3003               	movlw	3
   704  0047  0673               	xorwf	canalADC@canal,w
   705  0048  1D03               	btfss	3,2
   706  0049  284B               	goto	u41
   707  004A  284C               	goto	u40
   708  004B                     u41:
   709  004B  2852               	goto	l742
   710  004C                     u40:
   711  004C                     l740:
   712                           
   713                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   714  004C  1283               	bcf	3,5	;RP0=0, select bank0
   715  004D  1303               	bcf	3,6	;RP1=0, select bank0
   716  004E  129F               	bcf	31,5	;volatile
   717                           
   718                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   719  004F  121F               	bcf	31,4	;volatile
   720                           
   721                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   722  0050  159F               	bsf	31,3	;volatile
   723                           
   724                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   725  0051  151F               	bsf	31,2	;volatile
   726  0052                     l742:
   727                           
   728                           ;ADC.c: 50:     if (canal == 4) {
   729  0052  3004               	movlw	4
   730  0053  0673               	xorwf	canalADC@canal,w
   731  0054  1D03               	btfss	3,2
   732  0055  2857               	goto	u51
   733  0056  2858               	goto	u50
   734  0057                     u51:
   735  0057  285E               	goto	l746
   736  0058                     u50:
   737  0058                     l744:
   738                           
   739                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   740  0058  1283               	bcf	3,5	;RP0=0, select bank0
   741  0059  1303               	bcf	3,6	;RP1=0, select bank0
   742  005A  129F               	bcf	31,5	;volatile
   743                           
   744                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   745  005B  161F               	bsf	31,4	;volatile
   746                           
   747                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   748  005C  119F               	bcf	31,3	;volatile
   749                           
   750                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   751  005D  111F               	bcf	31,2	;volatile
   752  005E                     l746:
   753                           
   754                           ;ADC.c: 59:     if (canal == 5) {
   755  005E  3005               	movlw	5
   756  005F  0673               	xorwf	canalADC@canal,w
   757  0060  1D03               	btfss	3,2
   758  0061  2863               	goto	u61
   759  0062  2864               	goto	u60
   760  0063                     u61:
   761  0063  286A               	goto	l750
   762  0064                     u60:
   763  0064                     l748:
   764                           
   765                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   766  0064  1283               	bcf	3,5	;RP0=0, select bank0
   767  0065  1303               	bcf	3,6	;RP1=0, select bank0
   768  0066  129F               	bcf	31,5	;volatile
   769                           
   770                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   771  0067  161F               	bsf	31,4	;volatile
   772                           
   773                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   774  0068  119F               	bcf	31,3	;volatile
   775                           
   776                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   777  0069  151F               	bsf	31,2	;volatile
   778  006A                     l750:
   779                           
   780                           ;ADC.c: 68:     if (canal == 6) {
   781  006A  3006               	movlw	6
   782  006B  0673               	xorwf	canalADC@canal,w
   783  006C  1D03               	btfss	3,2
   784  006D  286F               	goto	u71
   785  006E  2870               	goto	u70
   786  006F                     u71:
   787  006F  2876               	goto	l754
   788  0070                     u70:
   789  0070                     l752:
   790                           
   791                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   792  0070  1283               	bcf	3,5	;RP0=0, select bank0
   793  0071  1303               	bcf	3,6	;RP1=0, select bank0
   794  0072  129F               	bcf	31,5	;volatile
   795                           
   796                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   797  0073  161F               	bsf	31,4	;volatile
   798                           
   799                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   800  0074  159F               	bsf	31,3	;volatile
   801                           
   802                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   803  0075  111F               	bcf	31,2	;volatile
   804  0076                     l754:
   805                           
   806                           ;ADC.c: 77:     if (canal == 7) {
   807  0076  3007               	movlw	7
   808  0077  0673               	xorwf	canalADC@canal,w
   809  0078  1D03               	btfss	3,2
   810  0079  287B               	goto	u81
   811  007A  287C               	goto	u80
   812  007B                     u81:
   813  007B  2882               	goto	l758
   814  007C                     u80:
   815  007C                     l756:
   816                           
   817                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   818  007C  1283               	bcf	3,5	;RP0=0, select bank0
   819  007D  1303               	bcf	3,6	;RP1=0, select bank0
   820  007E  129F               	bcf	31,5	;volatile
   821                           
   822                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   823  007F  161F               	bsf	31,4	;volatile
   824                           
   825                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   826  0080  159F               	bsf	31,3	;volatile
   827                           
   828                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   829  0081  151F               	bsf	31,2	;volatile
   830  0082                     l758:
   831                           
   832                           ;ADC.c: 86:     if (canal == 8) {
   833  0082  3008               	movlw	8
   834  0083  0673               	xorwf	canalADC@canal,w
   835  0084  1D03               	btfss	3,2
   836  0085  2887               	goto	u91
   837  0086  2888               	goto	u90
   838  0087                     u91:
   839  0087  288E               	goto	l762
   840  0088                     u90:
   841  0088                     l760:
   842                           
   843                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   844  0088  1283               	bcf	3,5	;RP0=0, select bank0
   845  0089  1303               	bcf	3,6	;RP1=0, select bank0
   846  008A  169F               	bsf	31,5	;volatile
   847                           
   848                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   849  008B  121F               	bcf	31,4	;volatile
   850                           
   851                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   852  008C  119F               	bcf	31,3	;volatile
   853                           
   854                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
   855  008D  111F               	bcf	31,2	;volatile
   856  008E                     l762:
   857                           
   858                           ;ADC.c: 94:     if (canal == 9) {
   859  008E  3009               	movlw	9
   860  008F  0673               	xorwf	canalADC@canal,w
   861  0090  1D03               	btfss	3,2
   862  0091  2893               	goto	u101
   863  0092  2894               	goto	u100
   864  0093                     u101:
   865  0093  289A               	goto	l766
   866  0094                     u100:
   867  0094                     l764:
   868                           
   869                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
   870  0094  1283               	bcf	3,5	;RP0=0, select bank0
   871  0095  1303               	bcf	3,6	;RP1=0, select bank0
   872  0096  169F               	bsf	31,5	;volatile
   873                           
   874                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
   875  0097  121F               	bcf	31,4	;volatile
   876                           
   877                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
   878  0098  119F               	bcf	31,3	;volatile
   879                           
   880                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
   881  0099  151F               	bsf	31,2	;volatile
   882  009A                     l766:
   883                           
   884                           ;ADC.c: 102:     if (canal == 10) {
   885  009A  300A               	movlw	10
   886  009B  0673               	xorwf	canalADC@canal,w
   887  009C  1D03               	btfss	3,2
   888  009D  289F               	goto	u111
   889  009E  28A0               	goto	u110
   890  009F                     u111:
   891  009F  28A6               	goto	l770
   892  00A0                     u110:
   893  00A0                     l768:
   894                           
   895                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
   896  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   897  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   898  00A2  169F               	bsf	31,5	;volatile
   899                           
   900                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
   901  00A3  121F               	bcf	31,4	;volatile
   902                           
   903                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
   904  00A4  159F               	bsf	31,3	;volatile
   905                           
   906                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
   907  00A5  111F               	bcf	31,2	;volatile
   908  00A6                     l770:
   909                           
   910                           ;ADC.c: 111:     if (canal == 11) {
   911  00A6  300B               	movlw	11
   912  00A7  0673               	xorwf	canalADC@canal,w
   913  00A8  1D03               	btfss	3,2
   914  00A9  28AB               	goto	u121
   915  00AA  28AC               	goto	u120
   916  00AB                     u121:
   917  00AB  28B2               	goto	l774
   918  00AC                     u120:
   919  00AC                     l772:
   920                           
   921                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
   922  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   923  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   924  00AE  169F               	bsf	31,5	;volatile
   925                           
   926                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
   927  00AF  121F               	bcf	31,4	;volatile
   928                           
   929                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
   930  00B0  159F               	bsf	31,3	;volatile
   931                           
   932                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
   933  00B1  151F               	bsf	31,2	;volatile
   934  00B2                     l774:
   935                           
   936                           ;ADC.c: 120:     if (canal == 12) {
   937  00B2  300C               	movlw	12
   938  00B3  0673               	xorwf	canalADC@canal,w
   939  00B4  1D03               	btfss	3,2
   940  00B5  28B7               	goto	u131
   941  00B6  28B8               	goto	u130
   942  00B7                     u131:
   943  00B7  28BE               	goto	l778
   944  00B8                     u130:
   945  00B8                     l776:
   946                           
   947                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
   948  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   949  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   950  00BA  169F               	bsf	31,5	;volatile
   951                           
   952                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
   953  00BB  161F               	bsf	31,4	;volatile
   954                           
   955                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
   956  00BC  119F               	bcf	31,3	;volatile
   957                           
   958                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
   959  00BD  111F               	bcf	31,2	;volatile
   960  00BE                     l778:
   961                           
   962                           ;ADC.c: 129:     if (canal == 13) {
   963  00BE  300D               	movlw	13
   964  00BF  0673               	xorwf	canalADC@canal,w
   965  00C0  1D03               	btfss	3,2
   966  00C1  28C3               	goto	u141
   967  00C2  28C4               	goto	u140
   968  00C3                     u141:
   969  00C3  28CA               	goto	l96
   970  00C4                     u140:
   971  00C4                     l780:
   972                           
   973                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
   974  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   975  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   976  00C6  169F               	bsf	31,5	;volatile
   977                           
   978                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
   979  00C7  161F               	bsf	31,4	;volatile
   980                           
   981                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
   982  00C8  119F               	bcf	31,3	;volatile
   983                           
   984                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
   985  00C9  151F               	bsf	31,2	;volatile
   986  00CA                     l96:	
   987                           ;ADC.c: 135:     }
   988                           
   989                           
   990                           ;ADC.c: 137:     ADCON0bits.GO = 1;
   991  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   992  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   993  00CC  149F               	bsf	31,1	;volatile
   994  00CD                     l97:
   995  00CD  0008               	return
   996  00CE                     __end_of_canalADC:
   997                           
   998                           	psect	text3
   999  00F6                     __ptext3:	
  1000 ;; *************** function _Setup *****************
  1001 ;; Defined at:
  1002 ;;		line 116 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _Setup
  1032  00F6                     _Setup:
  1033  00F6                     l692:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _Setup: [wreg+status,2]
  1036                           
  1037                           
  1038                           ;main.c: 121:     ANSEL = 0;
  1039  00F6  1683               	bsf	3,5	;RP0=1, select bank3
  1040  00F7  1703               	bsf	3,6	;RP1=1, select bank3
  1041  00F8  0188               	clrf	8	;volatile
  1042                           
  1043                           ;main.c: 122:     ANSELH = 0;
  1044  00F9  0189               	clrf	9	;volatile
  1045  00FA                     l694:
  1046                           
  1047                           ;main.c: 123:     ANSELHbits.ANS12 = 1;
  1048  00FA  1609               	bsf	9,4	;volatile
  1049                           
  1050                           ;main.c: 125:     TRISA = 0;
  1051  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1052  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1053  00FD  0185               	clrf	5	;volatile
  1054  00FE                     l696:
  1055                           
  1056                           ;main.c: 126:     TRISB = 1;
  1057  00FE  3001               	movlw	1
  1058  00FF  0086               	movwf	6	;volatile
  1059  0100                     l698:
  1060                           
  1061                           ;main.c: 127:     TRISC = 0;
  1062  0100  0187               	clrf	7	;volatile
  1063  0101                     l700:
  1064                           
  1065                           ;main.c: 128:     TRISD = 0;
  1066  0101  0188               	clrf	8	;volatile
  1067  0102                     l702:
  1068                           
  1069                           ;main.c: 129:     TRISEbits.TRISE0 = 1;
  1070  0102  1409               	bsf	9,0	;volatile
  1071  0103                     l704:
  1072                           
  1073                           ;main.c: 131:     PORTA = 0;
  1074  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0105  0185               	clrf	5	;volatile
  1077  0106                     l706:
  1078                           
  1079                           ;main.c: 132:     PORTB = 0;
  1080  0106  0186               	clrf	6	;volatile
  1081  0107                     l708:
  1082                           
  1083                           ;main.c: 133:     PORTC = 0;
  1084  0107  0187               	clrf	7	;volatile
  1085  0108                     l710:
  1086                           
  1087                           ;main.c: 134:     PORTD = 0;
  1088  0108  0188               	clrf	8	;volatile
  1089  0109                     l712:
  1090                           
  1091                           ;main.c: 135:     OPTION_REGbits.nRBPU = 0;
  1092  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1093  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1094  010B  1381               	bcf	1,7	;volatile
  1095  010C                     l714:
  1096                           
  1097                           ;main.c: 136:     IOCBbits.IOCB0 = 1;
  1098  010C  1416               	bsf	22,0	;volatile
  1099  010D                     l716:
  1100                           
  1101                           ;main.c: 137:     IOCBbits.IOCB1 = 1;
  1102  010D  1496               	bsf	22,1	;volatile
  1103  010E                     l718:
  1104                           
  1105                           ;main.c: 139:     INTCONbits.RBIE = 1;
  1106  010E  158B               	bsf	11,3	;volatile
  1107  010F                     l720:
  1108                           
  1109                           ;main.c: 140:     INTCONbits.GIE = 1;
  1110  010F  178B               	bsf	11,7	;volatile
  1111  0110                     l722:
  1112                           
  1113                           ;main.c: 141:     INTCONbits.RBIF = 0;
  1114  0110  100B               	bcf	11,0	;volatile
  1115  0111                     l70:
  1116  0111  0008               	return
  1117  0112                     __end_of_Setup:
  1118                           
  1119                           	psect	text4
  1120  00CE                     __ptext4:	
  1121 ;; *************** function _ISR *****************
  1122 ;; Defined at:
  1123 ;;		line 50 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          3       0       0       0       0
  1140 ;;      Totals:         3       0       0       0       0
  1141 ;;Total ram usage:        3 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		Interrupt level 1
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _ISR
  1152  00CE                     _ISR:
  1153  00CE                     i1l782:
  1154                           
  1155                           ;main.c: 52:     if (ADIF == 1) {
  1156  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1157  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1158  00D0  1F0C               	btfss	12,6	;volatile
  1159  00D1  28D3               	goto	u15_21
  1160  00D2  28D4               	goto	u15_20
  1161  00D3                     u15_21:
  1162  00D3  28DC               	goto	i1l790
  1163  00D4                     u15_20:
  1164  00D4                     i1l784:
  1165                           
  1166                           ;main.c: 54:         varADC = ADRESH;
  1167  00D4  081E               	movf	30,w	;volatile
  1168  00D5  00F0               	movwf	??_ISR
  1169  00D6  0870               	movf	??_ISR,w
  1170  00D7  00F5               	movwf	_varADC	;volatile
  1171                           
  1172                           ;main.c: 55:         PORTD = varADC;
  1173  00D8  0875               	movf	_varADC,w	;volatile
  1174  00D9  0088               	movwf	8	;volatile
  1175  00DA                     i1l786:
  1176                           
  1177                           ;main.c: 56:         ADIF = 0;
  1178  00DA  130C               	bcf	12,6	;volatile
  1179  00DB                     i1l788:
  1180                           
  1181                           ;main.c: 57:         ADCON0bits.GO = 1;
  1182  00DB  149F               	bsf	31,1	;volatile
  1183  00DC                     i1l790:
  1184                           
  1185                           ;main.c: 61:     if (INTCONbits.RBIF == 1) {
  1186  00DC  1C0B               	btfss	11,0	;volatile
  1187  00DD  28DF               	goto	u16_21
  1188  00DE  28E0               	goto	u16_20
  1189  00DF                     u16_21:
  1190  00DF  28EF               	goto	i1l57
  1191  00E0                     u16_20:
  1192  00E0                     i1l792:
  1193                           
  1194                           ;main.c: 63:         if (PORTBbits.RB0 == 1) {
  1195  00E0  1C06               	btfss	6,0	;volatile
  1196  00E1  28E3               	goto	u17_21
  1197  00E2  28E4               	goto	u17_20
  1198  00E3                     u17_21:
  1199  00E3  28E8               	goto	i1l796
  1200  00E4                     u17_20:
  1201  00E4                     i1l794:
  1202                           
  1203                           ;main.c: 64:             PORTA++;
  1204  00E4  3001               	movlw	1
  1205  00E5  00F0               	movwf	??_ISR
  1206  00E6  0870               	movf	??_ISR,w
  1207  00E7  0785               	addwf	5,f	;volatile
  1208  00E8                     i1l796:
  1209                           
  1210                           ;main.c: 68:         if (PORTBbits.RB1 == 1) {
  1211  00E8  1C86               	btfss	6,1	;volatile
  1212  00E9  28EB               	goto	u18_21
  1213  00EA  28EC               	goto	u18_20
  1214  00EB                     u18_21:
  1215  00EB  28EE               	goto	i1l800
  1216  00EC                     u18_20:
  1217  00EC                     i1l798:
  1218                           
  1219                           ;main.c: 69:             PORTA--;
  1220  00EC  3001               	movlw	1
  1221  00ED  0285               	subwf	5,f	;volatile
  1222  00EE                     i1l800:
  1223                           
  1224                           ;main.c: 72:         INTCONbits.RBIF = 0;
  1225  00EE  100B               	bcf	11,0	;volatile
  1226  00EF                     i1l57:
  1227  00EF  0872               	movf	??_ISR+2,w
  1228  00F0  008A               	movwf	10
  1229  00F1  0E71               	swapf	??_ISR+1,w
  1230  00F2  0083               	movwf	3
  1231  00F3  0EFE               	swapf	btemp,f
  1232  00F4  0E7E               	swapf	btemp,w
  1233  00F5  0009               	retfie
  1234  00F6                     __end_of_ISR:
  1235  007E                     btemp	set	126	;btemp
  1236  007E                     wtemp0	set	126
  1237                           
  1238                           	psect	intentry
  1239  0004                     __pintentry:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1242                           
  1243  0004                     interrupt_function:
  1244  007E                     saved_w	set	btemp
  1245  0004  00FE               	movwf	btemp
  1246  0005  0E03               	swapf	3,w
  1247  0006  00F1               	movwf	??_ISR+1
  1248  0007  080A               	movf	10,w
  1249  0008  00F2               	movwf	??_ISR+2
  1250  0009  120A  118A  28CE   	ljmp	_ISR
  1251                           
  1252                           	psect	config
  1253                           
  1254                           ;Config register CONFIG1 @ 0x2007
  1255                           ;	Oscillator Selection bits
  1256                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1257                           ;	Watchdog Timer Enable bit
  1258                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1259                           ;	Power-up Timer Enable bit
  1260                           ;	PWRTE = OFF, PWRT disabled
  1261                           ;	RE3/MCLR pin function select bit
  1262                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1263                           ;	Code Protection bit
  1264                           ;	CP = OFF, Program memory code protection is disabled
  1265                           ;	Data Code Protection bit
  1266                           ;	CPD = OFF, Data memory code protection is disabled
  1267                           ;	Brown Out Reset Selection bits
  1268                           ;	BOREN = OFF, BOR disabled
  1269                           ;	Internal External Switchover bit
  1270                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1271                           ;	Fail-Safe Clock Monitor Enabled bit
  1272                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1273                           ;	Low Voltage Programming Enable bit
  1274                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1275                           ;	In-Circuit Debugger Mode bit
  1276                           ;	DEBUG = 0x1, unprogrammed default
  1277  2007                     	org	8199
  1278  2007  20D4               	dw	8404
  1279                           
  1280                           ;Config register CONFIG2 @ 0x2008
  1281                           ;	Brown-out Reset Selection bit
  1282                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1283                           ;	Flash Program Memory Self Write Enable bits
  1284                           ;	WRT = OFF, Write protection off
  1285  2008                     	org	8200
  1286  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_canalADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     210
                              _Setup
                           _canalADC
                          _configADC
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16      12        0.0%
ABS                  0      0      16       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 19:51:12 2021

                      pc 0002                       l70 0111                       l64 0137  
                     l65 0137                       l96 00CA                       l97 00CD  
                     u10 0029                       u11 0028                       u20 0034  
                     u21 0033                       u30 0040                       u31 003F  
                     u40 004C                       u41 004B                       u50 0058  
                     u51 0057                       u60 0064                       u61 0063  
                     u70 0070                       u71 006F                       u80 007C  
                     u81 007B                       u90 0088                       u91 0087  
                     fsr 0004                      l100 0126                      l700 0101  
                    l710 0108                      l702 0102                      l720 010F  
                    l712 0109                      l704 0103                      l722 0110  
                    l714 010C                      l706 0106                      l730 002F  
                    l802 0127                      l716 010D                      l708 0107  
                    l740 004C                      l732 0034                      l724 0112  
                    l804 012C                      l718 010E                      l750 006A  
                    l742 0052                      l734 003A                      l726 0024  
                    l806 0131                      l760 0088                      l752 0070  
                    l744 0058                      l736 0040                      l728 0029  
                    l770 00A6                      l762 008E                      l754 0076  
                    l746 005E                      l738 0046                      l692 00F6  
                    l780 00C4                      l772 00AC                      l764 0094  
                    l756 007C                      l748 0064                      l694 00FA  
                    l774 00B2                      l766 009A                      l758 0082  
                    l696 00FE                      l776 00B8                      l768 00A0  
                    l698 0100                      l778 00BE                      u100 0094  
                    u101 0093                      u110 00A0                      u111 009F  
                    u120 00AC                      u121 00AB                      u130 00B8  
                    u131 00B7                      u140 00C4                      u141 00C3  
                    _ISR 00CE                      indf 0000                     ?_ISR 0070  
                   _ADIF 0066                     i1l57 00EF                     _main 0127  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l800 00EE  
                  i1l790 00DC                    i1l782 00CE                    i1l792 00E0  
                  i1l784 00D4                    i1l794 00E4                    i1l786 00DA  
                  i1l796 00E8                    i1l788 00DB                    i1l798 00EC  
                  u15_20 00D4                    u15_21 00D3                    u16_20 00E0  
                  u16_21 00DF                    u17_20 00E4                    u17_21 00E3  
                  u18_20 00EC                    u18_21 00EB                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _Setup 00F6                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 013B                   ??_main 0074                   ?_Setup 0070  
                 _ADRESH 001E                   _ANSELH 0189         __end_of_canalADC 00CE  
                 _varADC 0075                   saved_w 007E  __end_of__initialization 001F  
         __pcstackCOMMON 0070            __end_of_Setup 0112             __pidataBANK0 014E  
         _OPTION_REGbits 0081       __size_of_configADC 0015                  ??_Setup 0073  
             __pmaintext 0127               __pintentry 0004                ?_canalADC 0070  
      __end_of_configADC 0127                  __ptext1 0112                  __ptext2 0023  
                __ptext3 00F6                  __ptext4 00CE               ??_canalADC 0073  
           __size_of_ISR 0028     end_of_initialization 001F                _PORTBbits 0006  
              _TRISEbits 0089      start_initialization 000F              __end_of_ISR 00F6  
             init_fetch0 013B              __pdataBANK0 0020              __pbssCOMMON 0074  
              ___latbits 0002        __size_of_canalADC 00AB                _configADC 0112  
         __size_of_Setup 001C        interrupt_function 0004                 _IOCBbits 0096  
              _varBoton1 0074                 _PIE1bits 008C                 _PIR1bits 000C  
             ?_configADC 0070               _ADCON0bits 001F               _ADCON1bits 009F  
              main@tabla 0020                 _canalADC 0023               _ANSELHbits 0189  
          canalADC@canal 0073            __size_of_main 0014              ??_configADC 0073  
             _INTCONbits 000B                 init_ram0 013F                 intlevel1 0000  
