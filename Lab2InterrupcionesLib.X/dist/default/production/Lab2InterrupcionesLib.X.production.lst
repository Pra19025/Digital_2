

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 18:30:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  0139                     __pidataBANK0:
   291                           
   292                           ;initializer for main@tabla
   293  0139  3477               	retlw	119
   294  013A  3441               	retlw	65
   295  013B  343B               	retlw	59
   296  013C  346B               	retlw	107
   297  013D  344D               	retlw	77
   298  013E  346E               	retlw	110
   299  013F  347E               	retlw	126
   300  0140  3443               	retlw	67
   301  0141  347F               	retlw	127
   302  0142  346F               	retlw	111
   303  0143  346F               	retlw	111
   304  0144  346F               	retlw	111
   305  0145  346F               	retlw	111
   306  0146  346F               	retlw	111
   307  0147  346F               	retlw	111
   308  0148  346F               	retlw	111
   309  000B                     _INTCONbits	set	11
   310  000C                     _PIR1bits	set	12
   311  0007                     _PORTC	set	7
   312  0006                     _PORTB	set	6
   313  0005                     _PORTA	set	5
   314  001F                     _ADCON0bits	set	31
   315  0008                     _PORTD	set	8
   316  001E                     _ADRESH	set	30
   317  005B                     _RBIE	set	91
   318  0066                     _ADIF	set	102
   319  008C                     _PIE1bits	set	140
   320  009F                     _ADCON1bits	set	159
   321  0089                     _TRISEbits	set	137
   322  0088                     _TRISD	set	136
   323  0087                     _TRISC	set	135
   324  0086                     _TRISB	set	134
   325  0085                     _TRISA	set	133
   326  0189                     _ANSELHbits	set	393
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           	psect	cinit
   331  000F                     start_initialization:	
   332                           ; #config settings
   333                           
   334  000F                     __initialization:
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  000F  1383               	bcf	3,7	;select IRP bank0
   338  0010  3030               	movlw	low (__pdataBANK0+16)
   339  0011  00FD               	movwf	btemp+-1
   340  0012  3001               	movlw	high __pidataBANK0
   341  0013  00FE               	movwf	btemp
   342  0014  3039               	movlw	low __pidataBANK0
   343  0015  00FF               	movwf	btemp+1
   344  0016  3020               	movlw	low __pdataBANK0
   345  0017  0084               	movwf	4
   346  0018  120A  118A  212A  120A  118A  	fcall	init_ram0
   347                           
   348                           ; Clear objects allocated to COMMON
   349  001D  01F4               	clrf	__pbssCOMMON& (0+127)
   350  001E  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   351  001F                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354  001F                     __end_of__initialization:
   355  001F  0183               	clrf	3
   356  0020  120A  118A  28FE   	ljmp	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMMON
   359  0074                     __pbssCOMMON:
   360  0074                     _varBoton1:
   361  0074                     	ds	1
   362  0075                     _varADC:
   363  0075                     	ds	1
   364                           
   365                           	psect	dataBANK0
   366  0020                     __pdataBANK0:
   367  0020                     main@tabla:
   368  0020                     	ds	16
   369                           
   370                           	psect	inittext
   371  0126                     init_fetch0:	
   372                           ;	Called with low address in FSR and high address in W
   373                           
   374  0126  087E               	movf	btemp,w
   375  0127  008A               	movwf	10
   376  0128  087F               	movf	btemp+1,w
   377  0129  0082               	movwf	2
   378  012A                     init_ram0:	
   379                           ;Called with:
   380                           ;	high address of idata address in btemp 
   381                           ;	low address of idata address in btemp+1 
   382                           ;	low address of data in FSR
   383                           ;	high address + 1 of data in btemp-1
   384                           
   385  012A  120A  118A  2126  120A  118A  	fcall	init_fetch0
   386  012F  0080               	movwf	0
   387  0130  0A84               	incf	4,f
   388  0131  0804               	movf	4,w
   389  0132  067D               	xorwf	btemp+-1,w
   390  0133  1903               	btfsc	3,2
   391  0134  3400               	retlw	0
   392  0135  0AFF               	incf	btemp+1,f
   393  0136  1903               	btfsc	3,2
   394  0137  0AFE               	incf	btemp,f
   395  0138  292A               	goto	init_ram0
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:
   399  0070                     ?_Setup:
   400  0070                     ?_configADC:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_canalADC:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_ISR:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ??_ISR:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415                           
   416                           ; 1 bytes @ 0x0
   417  0070                     	ds	3
   418  0073                     ??_Setup:
   419  0073                     ??_configADC:	
   420                           ; 1 bytes @ 0x3
   421                           
   422  0073                     ??_canalADC:	
   423                           ; 1 bytes @ 0x3
   424                           
   425  0073                     canalADC@canal:	
   426                           ; 1 bytes @ 0x3
   427                           
   428                           
   429                           ; 1 bytes @ 0x3
   430  0073                     	ds	1
   431  0074                     ??_main:
   432                           
   433                           	psect	maintext
   434  00FE                     __pmaintext:	
   435                           ; 1 bytes @ 0x4
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   438 ;;
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 68 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : B00/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels required when called:    2
   461 ;; This function calls:
   462 ;;		_Setup
   463 ;;		_canalADC
   464 ;;		_configADC
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  00FE                     _main:
   473  00FE                     l774:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 70:     Setup();
   479  00FE  120A  118A  2112  120A  118A  	fcall	_Setup
   480  0103                     l776:
   481                           
   482                           ;main.c: 71:     configADC();
   483  0103  120A  118A  20E9  120A  118A  	fcall	_configADC
   484  0108                     l778:
   485                           
   486                           ;main.c: 72:     canalADC(5);
   487  0108  3005               	movlw	5
   488  0109  120A  118A  2023  120A  118A  	fcall	_canalADC
   489  010E                     l56:	
   490                           ;main.c: 74:     static uint8_t tabla[] = {0b01110111,;main.c: 96:     while (1) {
   491                           
   492  010E                     l57:	
   493                           ;main.c: 100:     }
   494                           
   495  010E  290E               	goto	l56
   496  010F  120A  118A  280C   	ljmp	start
   497  0112                     __end_of_main:
   498                           
   499                           	psect	text1
   500  00E9                     __ptext1:	
   501 ;; *************** function _configADC *****************
   502 ;; Defined at:
   503 ;;		line 140 in file "ADC.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		None
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _configADC
   533  00E9                     _configADC:
   534  00E9                     l704:	
   535                           ;incstack = 0
   536                           ; Regs used in _configADC: []
   537                           
   538                           
   539                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   540  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   541  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   542  00EB  171F               	bsf	31,6	;volatile
   543                           
   544                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   545  00EC  139F               	bcf	31,7	;volatile
   546                           
   547                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   548  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   549  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   550  00EF  121F               	bcf	31,4	;volatile
   551                           
   552                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   553  00F0  129F               	bcf	31,5	;volatile
   554                           
   555                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   556  00F1  139F               	bcf	31,7	;volatile
   557                           
   558                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   559  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   560  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   561  00F4  130C               	bcf	12,6	;volatile
   562                           
   563                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   564  00F5  1683               	bsf	3,5	;RP0=1, select bank1
   565  00F6  1303               	bcf	3,6	;RP1=0, select bank1
   566  00F7  170C               	bsf	12,6	;volatile
   567                           
   568                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   569  00F8  178B               	bsf	11,7	;volatile
   570                           
   571                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   572  00F9  170B               	bsf	11,6	;volatile
   573                           
   574                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   575  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   576  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   577  00FC  141F               	bsf	31,0	;volatile
   578  00FD                     l92:
   579  00FD  0008               	return
   580  00FE                     __end_of_configADC:
   581                           
   582                           	psect	text2
   583  0023                     __ptext2:	
   584 ;; *************** function _canalADC *****************
   585 ;; Defined at:
   586 ;;		line 13 in file "ADC.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  canal           1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  canal           1    3[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _canalADC
   616  0023                     _canalADC:
   617                           
   618                           ;incstack = 0
   619                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   620                           ;canalADC@canal stored from wreg
   621  0023  00F3               	movwf	canalADC@canal
   622  0024                     l706:
   623                           
   624                           ;ADC.c: 15:     if (canal == 0) {
   625  0024  0873               	movf	canalADC@canal,w
   626  0025  1D03               	btfss	3,2
   627  0026  2828               	goto	u11
   628  0027  2829               	goto	u10
   629  0028                     u11:
   630  0028  282F               	goto	l710
   631  0029                     u10:
   632  0029                     l708:
   633                           
   634                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   635  0029  1283               	bcf	3,5	;RP0=0, select bank0
   636  002A  1303               	bcf	3,6	;RP1=0, select bank0
   637  002B  129F               	bcf	31,5	;volatile
   638                           
   639                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   640  002C  121F               	bcf	31,4	;volatile
   641                           
   642                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   643  002D  119F               	bcf	31,3	;volatile
   644                           
   645                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   646  002E  111F               	bcf	31,2	;volatile
   647  002F                     l710:
   648                           
   649                           ;ADC.c: 23:     if (canal == 1) {
   650  002F  0373               	decf	canalADC@canal,w
   651  0030  1D03               	btfss	3,2
   652  0031  2833               	goto	u21
   653  0032  2834               	goto	u20
   654  0033                     u21:
   655  0033  283A               	goto	l714
   656  0034                     u20:
   657  0034                     l712:
   658                           
   659                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   660  0034  1283               	bcf	3,5	;RP0=0, select bank0
   661  0035  1303               	bcf	3,6	;RP1=0, select bank0
   662  0036  129F               	bcf	31,5	;volatile
   663                           
   664                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   665  0037  121F               	bcf	31,4	;volatile
   666                           
   667                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   668  0038  119F               	bcf	31,3	;volatile
   669                           
   670                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   671  0039  151F               	bsf	31,2	;volatile
   672  003A                     l714:
   673                           
   674                           ;ADC.c: 32:     if (canal == 2) {
   675  003A  3002               	movlw	2
   676  003B  0673               	xorwf	canalADC@canal,w
   677  003C  1D03               	btfss	3,2
   678  003D  283F               	goto	u31
   679  003E  2840               	goto	u30
   680  003F                     u31:
   681  003F  2846               	goto	l718
   682  0040                     u30:
   683  0040                     l716:
   684                           
   685                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   686  0040  1283               	bcf	3,5	;RP0=0, select bank0
   687  0041  1303               	bcf	3,6	;RP1=0, select bank0
   688  0042  129F               	bcf	31,5	;volatile
   689                           
   690                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   691  0043  121F               	bcf	31,4	;volatile
   692                           
   693                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   694  0044  159F               	bsf	31,3	;volatile
   695                           
   696                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   697  0045  111F               	bcf	31,2	;volatile
   698  0046                     l718:
   699                           
   700                           ;ADC.c: 41:     if (canal == 3) {
   701  0046  3003               	movlw	3
   702  0047  0673               	xorwf	canalADC@canal,w
   703  0048  1D03               	btfss	3,2
   704  0049  284B               	goto	u41
   705  004A  284C               	goto	u40
   706  004B                     u41:
   707  004B  2852               	goto	l722
   708  004C                     u40:
   709  004C                     l720:
   710                           
   711                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   712  004C  1283               	bcf	3,5	;RP0=0, select bank0
   713  004D  1303               	bcf	3,6	;RP1=0, select bank0
   714  004E  129F               	bcf	31,5	;volatile
   715                           
   716                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   717  004F  121F               	bcf	31,4	;volatile
   718                           
   719                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   720  0050  159F               	bsf	31,3	;volatile
   721                           
   722                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   723  0051  151F               	bsf	31,2	;volatile
   724  0052                     l722:
   725                           
   726                           ;ADC.c: 50:     if (canal == 4) {
   727  0052  3004               	movlw	4
   728  0053  0673               	xorwf	canalADC@canal,w
   729  0054  1D03               	btfss	3,2
   730  0055  2857               	goto	u51
   731  0056  2858               	goto	u50
   732  0057                     u51:
   733  0057  285E               	goto	l726
   734  0058                     u50:
   735  0058                     l724:
   736                           
   737                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   738  0058  1283               	bcf	3,5	;RP0=0, select bank0
   739  0059  1303               	bcf	3,6	;RP1=0, select bank0
   740  005A  129F               	bcf	31,5	;volatile
   741                           
   742                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   743  005B  161F               	bsf	31,4	;volatile
   744                           
   745                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   746  005C  119F               	bcf	31,3	;volatile
   747                           
   748                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   749  005D  111F               	bcf	31,2	;volatile
   750  005E                     l726:
   751                           
   752                           ;ADC.c: 59:     if (canal == 5) {
   753  005E  3005               	movlw	5
   754  005F  0673               	xorwf	canalADC@canal,w
   755  0060  1D03               	btfss	3,2
   756  0061  2863               	goto	u61
   757  0062  2864               	goto	u60
   758  0063                     u61:
   759  0063  286A               	goto	l730
   760  0064                     u60:
   761  0064                     l728:
   762                           
   763                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   764  0064  1283               	bcf	3,5	;RP0=0, select bank0
   765  0065  1303               	bcf	3,6	;RP1=0, select bank0
   766  0066  129F               	bcf	31,5	;volatile
   767                           
   768                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   769  0067  161F               	bsf	31,4	;volatile
   770                           
   771                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   772  0068  119F               	bcf	31,3	;volatile
   773                           
   774                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   775  0069  151F               	bsf	31,2	;volatile
   776  006A                     l730:
   777                           
   778                           ;ADC.c: 68:     if (canal == 6) {
   779  006A  3006               	movlw	6
   780  006B  0673               	xorwf	canalADC@canal,w
   781  006C  1D03               	btfss	3,2
   782  006D  286F               	goto	u71
   783  006E  2870               	goto	u70
   784  006F                     u71:
   785  006F  2876               	goto	l734
   786  0070                     u70:
   787  0070                     l732:
   788                           
   789                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   790  0070  1283               	bcf	3,5	;RP0=0, select bank0
   791  0071  1303               	bcf	3,6	;RP1=0, select bank0
   792  0072  129F               	bcf	31,5	;volatile
   793                           
   794                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   795  0073  161F               	bsf	31,4	;volatile
   796                           
   797                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   798  0074  159F               	bsf	31,3	;volatile
   799                           
   800                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   801  0075  111F               	bcf	31,2	;volatile
   802  0076                     l734:
   803                           
   804                           ;ADC.c: 77:     if (canal == 7) {
   805  0076  3007               	movlw	7
   806  0077  0673               	xorwf	canalADC@canal,w
   807  0078  1D03               	btfss	3,2
   808  0079  287B               	goto	u81
   809  007A  287C               	goto	u80
   810  007B                     u81:
   811  007B  2882               	goto	l738
   812  007C                     u80:
   813  007C                     l736:
   814                           
   815                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   816  007C  1283               	bcf	3,5	;RP0=0, select bank0
   817  007D  1303               	bcf	3,6	;RP1=0, select bank0
   818  007E  129F               	bcf	31,5	;volatile
   819                           
   820                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   821  007F  161F               	bsf	31,4	;volatile
   822                           
   823                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   824  0080  159F               	bsf	31,3	;volatile
   825                           
   826                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   827  0081  151F               	bsf	31,2	;volatile
   828  0082                     l738:
   829                           
   830                           ;ADC.c: 86:     if (canal == 8) {
   831  0082  3008               	movlw	8
   832  0083  0673               	xorwf	canalADC@canal,w
   833  0084  1D03               	btfss	3,2
   834  0085  2887               	goto	u91
   835  0086  2888               	goto	u90
   836  0087                     u91:
   837  0087  288E               	goto	l742
   838  0088                     u90:
   839  0088                     l740:
   840                           
   841                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   842  0088  1283               	bcf	3,5	;RP0=0, select bank0
   843  0089  1303               	bcf	3,6	;RP1=0, select bank0
   844  008A  169F               	bsf	31,5	;volatile
   845                           
   846                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   847  008B  121F               	bcf	31,4	;volatile
   848                           
   849                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   850  008C  119F               	bcf	31,3	;volatile
   851                           
   852                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
   853  008D  111F               	bcf	31,2	;volatile
   854  008E                     l742:
   855                           
   856                           ;ADC.c: 94:     if (canal == 9) {
   857  008E  3009               	movlw	9
   858  008F  0673               	xorwf	canalADC@canal,w
   859  0090  1D03               	btfss	3,2
   860  0091  2893               	goto	u101
   861  0092  2894               	goto	u100
   862  0093                     u101:
   863  0093  289A               	goto	l746
   864  0094                     u100:
   865  0094                     l744:
   866                           
   867                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
   868  0094  1283               	bcf	3,5	;RP0=0, select bank0
   869  0095  1303               	bcf	3,6	;RP1=0, select bank0
   870  0096  169F               	bsf	31,5	;volatile
   871                           
   872                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
   873  0097  121F               	bcf	31,4	;volatile
   874                           
   875                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
   876  0098  119F               	bcf	31,3	;volatile
   877                           
   878                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
   879  0099  151F               	bsf	31,2	;volatile
   880  009A                     l746:
   881                           
   882                           ;ADC.c: 102:     if (canal == 10) {
   883  009A  300A               	movlw	10
   884  009B  0673               	xorwf	canalADC@canal,w
   885  009C  1D03               	btfss	3,2
   886  009D  289F               	goto	u111
   887  009E  28A0               	goto	u110
   888  009F                     u111:
   889  009F  28A6               	goto	l750
   890  00A0                     u110:
   891  00A0                     l748:
   892                           
   893                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
   894  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   895  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   896  00A2  169F               	bsf	31,5	;volatile
   897                           
   898                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
   899  00A3  121F               	bcf	31,4	;volatile
   900                           
   901                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
   902  00A4  159F               	bsf	31,3	;volatile
   903                           
   904                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
   905  00A5  111F               	bcf	31,2	;volatile
   906  00A6                     l750:
   907                           
   908                           ;ADC.c: 111:     if (canal == 11) {
   909  00A6  300B               	movlw	11
   910  00A7  0673               	xorwf	canalADC@canal,w
   911  00A8  1D03               	btfss	3,2
   912  00A9  28AB               	goto	u121
   913  00AA  28AC               	goto	u120
   914  00AB                     u121:
   915  00AB  28B2               	goto	l754
   916  00AC                     u120:
   917  00AC                     l752:
   918                           
   919                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
   920  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   921  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   922  00AE  169F               	bsf	31,5	;volatile
   923                           
   924                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
   925  00AF  121F               	bcf	31,4	;volatile
   926                           
   927                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
   928  00B0  159F               	bsf	31,3	;volatile
   929                           
   930                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
   931  00B1  151F               	bsf	31,2	;volatile
   932  00B2                     l754:
   933                           
   934                           ;ADC.c: 120:     if (canal == 12) {
   935  00B2  300C               	movlw	12
   936  00B3  0673               	xorwf	canalADC@canal,w
   937  00B4  1D03               	btfss	3,2
   938  00B5  28B7               	goto	u131
   939  00B6  28B8               	goto	u130
   940  00B7                     u131:
   941  00B7  28BE               	goto	l758
   942  00B8                     u130:
   943  00B8                     l756:
   944                           
   945                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
   946  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   947  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   948  00BA  169F               	bsf	31,5	;volatile
   949                           
   950                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
   951  00BB  161F               	bsf	31,4	;volatile
   952                           
   953                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
   954  00BC  119F               	bcf	31,3	;volatile
   955                           
   956                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
   957  00BD  111F               	bcf	31,2	;volatile
   958  00BE                     l758:
   959                           
   960                           ;ADC.c: 129:     if (canal == 13) {
   961  00BE  300D               	movlw	13
   962  00BF  0673               	xorwf	canalADC@canal,w
   963  00C0  1D03               	btfss	3,2
   964  00C1  28C3               	goto	u141
   965  00C2  28C4               	goto	u140
   966  00C3                     u141:
   967  00C3  28CA               	goto	l88
   968  00C4                     u140:
   969  00C4                     l760:
   970                           
   971                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
   972  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   973  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   974  00C6  169F               	bsf	31,5	;volatile
   975                           
   976                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
   977  00C7  161F               	bsf	31,4	;volatile
   978                           
   979                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
   980  00C8  119F               	bcf	31,3	;volatile
   981                           
   982                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
   983  00C9  151F               	bsf	31,2	;volatile
   984  00CA                     l88:	
   985                           ;ADC.c: 135:     }
   986                           
   987                           
   988                           ;ADC.c: 137:     ADCON0bits.GO = 1;
   989  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   990  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   991  00CC  149F               	bsf	31,1	;volatile
   992  00CD                     l89:
   993  00CD  0008               	return
   994  00CE                     __end_of_canalADC:
   995                           
   996                           	psect	text3
   997  0112                     __ptext3:	
   998 ;; *************** function _Setup *****************
   999 ;; Defined at:
  1000 ;;		line 105 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _Setup
  1030  0112                     _Setup:
  1031  0112                     l684:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _Setup: [wreg+status,2]
  1034                           
  1035                           
  1036                           ;main.c: 110:     ANSEL = 0;
  1037  0112  1683               	bsf	3,5	;RP0=1, select bank3
  1038  0113  1703               	bsf	3,6	;RP1=1, select bank3
  1039  0114  0188               	clrf	8	;volatile
  1040                           
  1041                           ;main.c: 111:     ANSELH = 0;
  1042  0115  0189               	clrf	9	;volatile
  1043  0116                     l686:
  1044                           
  1045                           ;main.c: 112:     ANSELHbits.ANS12 = 1;
  1046  0116  1609               	bsf	9,4	;volatile
  1047                           
  1048                           ;main.c: 114:     TRISA = 0;
  1049  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0119  0185               	clrf	5	;volatile
  1052  011A                     l688:
  1053                           
  1054                           ;main.c: 115:     TRISB = 1;
  1055  011A  3001               	movlw	1
  1056  011B  0086               	movwf	6	;volatile
  1057  011C                     l690:
  1058                           
  1059                           ;main.c: 116:     TRISC = 0;
  1060  011C  0187               	clrf	7	;volatile
  1061  011D                     l692:
  1062                           
  1063                           ;main.c: 117:     TRISD = 0;
  1064  011D  0188               	clrf	8	;volatile
  1065  011E                     l694:
  1066                           
  1067                           ;main.c: 118:     TRISEbits.TRISE0 = 1;
  1068  011E  1409               	bsf	9,0	;volatile
  1069  011F                     l696:
  1070                           
  1071                           ;main.c: 120:     PORTA = 0;
  1072  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0121  0185               	clrf	5	;volatile
  1075  0122                     l698:
  1076                           
  1077                           ;main.c: 121:     PORTB = 0;
  1078  0122  0186               	clrf	6	;volatile
  1079  0123                     l700:
  1080                           
  1081                           ;main.c: 122:     PORTC = 0;
  1082  0123  0187               	clrf	7	;volatile
  1083  0124                     l702:
  1084                           
  1085                           ;main.c: 123:     PORTD = 0;
  1086  0124  0188               	clrf	8	;volatile
  1087  0125                     l62:
  1088  0125  0008               	return
  1089  0126                     __end_of_Setup:
  1090                           
  1091                           	psect	text4
  1092  00CE                     __ptext4:	
  1093 ;; *************** function _ISR *****************
  1094 ;; Defined at:
  1095 ;;		line 50 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          3       0       0       0       0
  1112 ;;      Totals:         3       0       0       0       0
  1113 ;;Total ram usage:        3 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		Interrupt level 1
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _ISR
  1124  00CE                     _ISR:
  1125  00CE                     i1l762:
  1126                           
  1127                           ;main.c: 52:     if (ADIF == 1) {
  1128  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00D0  1F0C               	btfss	12,6	;volatile
  1131  00D1  28D3               	goto	u15_21
  1132  00D2  28D4               	goto	u15_20
  1133  00D3                     u15_21:
  1134  00D3  28DC               	goto	i1l770
  1135  00D4                     u15_20:
  1136  00D4                     i1l764:
  1137                           
  1138                           ;main.c: 54:         varADC = ADRESH;
  1139  00D4  081E               	movf	30,w	;volatile
  1140  00D5  00F0               	movwf	??_ISR
  1141  00D6  0870               	movf	??_ISR,w
  1142  00D7  00F5               	movwf	_varADC	;volatile
  1143                           
  1144                           ;main.c: 55:         PORTD = varADC;
  1145  00D8  0875               	movf	_varADC,w	;volatile
  1146  00D9  0088               	movwf	8	;volatile
  1147  00DA                     i1l766:
  1148                           
  1149                           ;main.c: 56:         ADIF = 0;
  1150  00DA  130C               	bcf	12,6	;volatile
  1151  00DB                     i1l768:
  1152                           
  1153                           ;main.c: 57:         ADCON0bits.GO = 1;
  1154  00DB  149F               	bsf	31,1	;volatile
  1155  00DC                     i1l770:
  1156                           
  1157                           ;main.c: 61:     if(RBIE == 1) {
  1158  00DC  1D8B               	btfss	11,3	;volatile
  1159  00DD  28DF               	goto	u16_21
  1160  00DE  28E0               	goto	u16_20
  1161  00DF                     u16_21:
  1162  00DF  28E2               	goto	i1l49
  1163  00E0                     u16_20:
  1164  00E0                     i1l772:
  1165                           
  1166                           ;main.c: 62:         varBoton1 = 1;
  1167  00E0  01F4               	clrf	_varBoton1
  1168  00E1  0AF4               	incf	_varBoton1,f
  1169  00E2                     i1l49:
  1170  00E2  0872               	movf	??_ISR+2,w
  1171  00E3  008A               	movwf	10
  1172  00E4  0E71               	swapf	??_ISR+1,w
  1173  00E5  0083               	movwf	3
  1174  00E6  0EFE               	swapf	btemp,f
  1175  00E7  0E7E               	swapf	btemp,w
  1176  00E8  0009               	retfie
  1177  00E9                     __end_of_ISR:
  1178  007E                     btemp	set	126	;btemp
  1179  007E                     wtemp0	set	126
  1180                           
  1181                           	psect	intentry
  1182  0004                     __pintentry:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _ISR: [wreg]
  1185                           
  1186  0004                     interrupt_function:
  1187  007E                     saved_w	set	btemp
  1188  0004  00FE               	movwf	btemp
  1189  0005  0E03               	swapf	3,w
  1190  0006  00F1               	movwf	??_ISR+1
  1191  0007  080A               	movf	10,w
  1192  0008  00F2               	movwf	??_ISR+2
  1193  0009  120A  118A  28CE   	ljmp	_ISR
  1194                           
  1195                           	psect	config
  1196                           
  1197                           ;Config register CONFIG1 @ 0x2007
  1198                           ;	Oscillator Selection bits
  1199                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1200                           ;	Watchdog Timer Enable bit
  1201                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1202                           ;	Power-up Timer Enable bit
  1203                           ;	PWRTE = OFF, PWRT disabled
  1204                           ;	RE3/MCLR pin function select bit
  1205                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1206                           ;	Code Protection bit
  1207                           ;	CP = OFF, Program memory code protection is disabled
  1208                           ;	Data Code Protection bit
  1209                           ;	CPD = OFF, Data memory code protection is disabled
  1210                           ;	Brown Out Reset Selection bits
  1211                           ;	BOREN = OFF, BOR disabled
  1212                           ;	Internal External Switchover bit
  1213                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1214                           ;	Fail-Safe Clock Monitor Enabled bit
  1215                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1216                           ;	Low Voltage Programming Enable bit
  1217                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1218                           ;	In-Circuit Debugger Mode bit
  1219                           ;	DEBUG = 0x1, unprogrammed default
  1220  2007                     	org	8199
  1221  2007  20D4               	dw	8404
  1222                           
  1223                           ;Config register CONFIG2 @ 0x2008
  1224                           ;	Brown-out Reset Selection bit
  1225                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1226                           ;	Flash Program Memory Self Write Enable bits
  1227                           ;	WRT = OFF, Write protection off
  1228  2008                     	org	8200
  1229  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_canalADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     210
                              _Setup
                           _canalADC
                          _configADC
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16      12        0.0%
ABS                  0      0      16       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 18:30:14 2021

                      pc 0002                       l62 0125                       l56 010E  
                     l57 010E                       l92 00FD                       l88 00CA  
                     l89 00CD                       u10 0029                       u11 0028  
                     u20 0034                       u21 0033                       u30 0040  
                     u31 003F                       u40 004C                       u41 004B  
                     u50 0058                       u51 0057                       u60 0064  
                     u61 0063                       u70 0070                       u71 006F  
                     u80 007C                       u81 007B                       u90 0088  
                     u91 0087                       fsr 0004                      l700 0123  
                    l702 0124                      l710 002F                      l720 004C  
                    l712 0034                      l704 00E9                      l730 006A  
                    l722 0052                      l714 003A                      l706 0024  
                    l740 0088                      l732 0070                      l724 0058  
                    l716 0040                      l708 0029                      l750 00A6  
                    l742 008E                      l734 0076                      l726 005E  
                    l718 0046                      l760 00C4                      l752 00AC  
                    l744 0094                      l736 007C                      l728 0064  
                    l690 011C                      l754 00B2                      l746 009A  
                    l738 0082                      l692 011D                      l684 0112  
                    l756 00B8                      l748 00A0                      l694 011E  
                    l686 0116                      l758 00BE                      l774 00FE  
                    l696 011F                      l688 011A                      l776 0103  
                    l698 0122                      l778 0108                      u100 0094  
                    u101 0093                      u110 00A0                      u111 009F  
                    u120 00AC                      u121 00AB                      u130 00B8  
                    u131 00B7                      u140 00C4                      u141 00C3  
                    _ISR 00CE                      indf 0000                     ?_ISR 0070  
                   _ADIF 0066                     _RBIE 005B                     i1l49 00E2  
                   _main 00FE                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l770 00DC                    i1l762 00CE                    i1l772 00E0  
                  i1l764 00D4                    i1l766 00DA                    i1l768 00DB  
                  u15_20 00D4                    u15_21 00D3                    u16_20 00E0  
                  u16_21 00DF                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _Setup 0112                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0112  
                 ??_main 0074                   ?_Setup 0070                   _ADRESH 001E  
                 _ANSELH 0189         __end_of_canalADC 00CE                   _varADC 0075  
                 saved_w 007E  __end_of__initialization 001F           __pcstackCOMMON 0070  
          __end_of_Setup 0126             __pidataBANK0 0139       __size_of_configADC 0015  
                ??_Setup 0073               __pmaintext 00FE               __pintentry 0004  
              ?_canalADC 0070        __end_of_configADC 00FE                  __ptext1 00E9  
                __ptext2 0023                  __ptext3 0112                  __ptext4 00CE  
             ??_canalADC 0073             __size_of_ISR 001B     end_of_initialization 001F  
              _TRISEbits 0089      start_initialization 000F              __end_of_ISR 00E9  
             init_fetch0 0126              __pdataBANK0 0020              __pbssCOMMON 0074  
              ___latbits 0002        __size_of_canalADC 00AB                _configADC 00E9  
         __size_of_Setup 0014        interrupt_function 0004                _varBoton1 0074  
               _PIE1bits 008C                 _PIR1bits 000C               ?_configADC 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                main@tabla 0020  
               _canalADC 0023               _ANSELHbits 0189            canalADC@canal 0073  
          __size_of_main 0014              ??_configADC 0073               _INTCONbits 000B  
               init_ram0 012A                 intlevel1 0000  
