

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 09:40:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371                           
   372                           	psect	idataBANK0
   373  01C1                     __pidataBANK0:
   374                           
   375                           ;initializer for tabla7@tabla
   376  01C1  3477               	retlw	119
   377  01C2  3441               	retlw	65
   378  01C3  343B               	retlw	59
   379  01C4  346B               	retlw	107
   380  01C5  344D               	retlw	77
   381  01C6  346E               	retlw	110
   382  01C7  347E               	retlw	126
   383  01C8  3443               	retlw	67
   384  01C9  347F               	retlw	127
   385  01CA  346F               	retlw	111
   386  01CB  345F               	retlw	95
   387  01CC  347C               	retlw	124
   388  01CD  3436               	retlw	54
   389  01CE  3479               	retlw	121
   390  01CF  343E               	retlw	62
   391  01D0  341E               	retlw	30
   392  000B                     _INTCON	set	11
   393  000C                     _PIR1bits	set	12
   394  0009                     _PORTE	set	9
   395  0006                     _PORTB	set	6
   396  0009                     _PORTEbits	set	9
   397  0008                     _PORTD	set	8
   398  0007                     _PORTC	set	7
   399  0001                     _TMR0	set	1
   400  0005                     _PORTA	set	5
   401  0006                     _PORTBbits	set	6
   402  000B                     _INTCONbits	set	11
   403  001F                     _ADCON0bits	set	31
   404  001E                     _ADRESH	set	30
   405  0066                     _ADIF	set	102
   406  0081                     _OPTION_REG	set	129
   407  008C                     _PIE1bits	set	140
   408  009F                     _ADCON1bits	set	159
   409  0096                     _IOCBbits	set	150
   410  0089                     _TRISEbits	set	137
   411  0088                     _TRISD	set	136
   412  0087                     _TRISC	set	135
   413  0086                     _TRISB	set	134
   414  0085                     _TRISA	set	133
   415  0188                     _ANSELbits	set	392
   416  0189                     _ANSELH	set	393
   417  0188                     _ANSEL	set	392
   418                           
   419                           	psect	cinit
   420  0011                     start_initialization:	
   421                           ; #config settings
   422                           
   423  0011                     __initialization:
   424                           
   425                           ; Initialize objects allocated to BANK0
   426  0011  1383               	bcf	3,7	;select IRP bank0
   427  0012  3030               	movlw	low (__pdataBANK0+16)
   428  0013  00FD               	movwf	btemp+-1
   429  0014  3001               	movlw	high __pidataBANK0
   430  0015  00FE               	movwf	btemp
   431  0016  30C1               	movlw	low __pidataBANK0
   432  0017  00FF               	movwf	btemp+1
   433  0018  3020               	movlw	low __pdataBANK0
   434  0019  0084               	movwf	4
   435  001A  120A  118A  21B2  120A  118A  	fcall	init_ram0
   436                           
   437                           ; Clear objects allocated to BANK0
   438  001F  01B0               	clrf	__pbssBANK0& (0+127)
   439                           
   440                           ; Clear objects allocated to COMMON
   441  0020  01F9               	clrf	__pbssCOMMON& (0+127)
   442  0021  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   443  0022  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   444  0023  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   445  0024  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   446  0025                     end_of_initialization:	
   447                           ;End of C runtime variable initialization code
   448                           
   449  0025                     __end_of__initialization:
   450  0025  0183               	clrf	3
   451  0026  120A  118A  293F   	ljmp	_main	;jump to C main() function
   452                           
   453                           	psect	bssCOMMON
   454  0079                     __pbssCOMMON:
   455  0079                     _Nibble2:
   456  0079                     	ds	1
   457  007A                     _Nibble1:
   458  007A                     	ds	1
   459  007B                     _debounce2:
   460  007B                     	ds	1
   461  007C                     _debounce1:
   462  007C                     	ds	1
   463  007D                     _varADC:
   464  007D                     	ds	1
   465                           
   466                           	psect	bssBANK0
   467  0030                     __pbssBANK0:
   468  0030                     _var1:
   469  0030                     	ds	1
   470                           
   471                           	psect	dataBANK0
   472  0020                     __pdataBANK0:
   473  0020                     tabla7@tabla:
   474  0020                     	ds	16
   475                           
   476                           	psect	inittext
   477  01AE                     init_fetch0:	
   478                           ;	Called with low address in FSR and high address in W
   479                           
   480  01AE  087E               	movf	btemp,w
   481  01AF  008A               	movwf	10
   482  01B0  087F               	movf	btemp+1,w
   483  01B1  0082               	movwf	2
   484  01B2                     init_ram0:	
   485                           ;Called with:
   486                           ;	high address of idata address in btemp 
   487                           ;	low address of idata address in btemp+1 
   488                           ;	low address of data in FSR
   489                           ;	high address + 1 of data in btemp-1
   490                           
   491  01B2  120A  118A  21AE  120A  118A  	fcall	init_fetch0
   492  01B7  0080               	movwf	0
   493  01B8  0A84               	incf	4,f
   494  01B9  0804               	movf	4,w
   495  01BA  067D               	xorwf	btemp+-1,w
   496  01BB  1903               	btfsc	3,2
   497  01BC  3400               	retlw	0
   498  01BD  0AFF               	incf	btemp+1,f
   499  01BE  1903               	btfsc	3,2
   500  01BF  0AFE               	incf	btemp,f
   501  01C0  29B2               	goto	init_ram0
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:
   505  0070                     ?_NibbleL:
   506  0070                     ??_NibbleL:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_NibbleH:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_NibbleH:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_tabla7:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_tabla7:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_Setup:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_multiplexor:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_configADC:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_canalADC:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_ISR:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     tabla7@entrada:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544  0070                     	ds	1
   545  0071                     NibbleL@ValorADC:
   546                           
   547                           ; 1 bytes @ 0x1
   548  0071                     	ds	1
   549  0072                     NibbleL@NibbleL:
   550  0072                     NibbleH@ValorADC:	
   551                           ; 1 bytes @ 0x2
   552                           
   553                           
   554                           ; 1 bytes @ 0x2
   555  0072                     	ds	1
   556  0073                     NibbleH@NibbleH:
   557                           
   558                           ; 1 bytes @ 0x3
   559  0073                     	ds	1
   560  0074                     NibbleH@aux:
   561                           
   562                           ; 1 bytes @ 0x4
   563  0074                     	ds	1
   564  0075                     ??_ISR:
   565                           
   566                           ; 1 bytes @ 0x5
   567  0075                     	ds	4
   568                           
   569                           	psect	cstackBANK0
   570  0031                     __pcstackBANK0:
   571  0031                     ??_Setup:
   572  0031                     ??_multiplexor:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0031                     ??_configADC:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0031                     ??_canalADC:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0031                     canalADC@canal:	
   582                           ; 1 bytes @ 0x0
   583                           
   584                           
   585                           ; 1 bytes @ 0x0
   586  0031                     	ds	1
   587  0032                     ??_main:
   588                           
   589                           	psect	maintext
   590  013F                     __pmaintext:	
   591                           ; 1 bytes @ 0x1
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 126 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : B00/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels required when called:    3
   617 ;; This function calls:
   618 ;;		_Setup
   619 ;;		_canalADC
   620 ;;		_configADC
   621 ;;		_multiplexor
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _main
   629  013F                     _main:
   630  013F                     l1096:	
   631                           ;incstack = 0
   632                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   633                           
   634  013F  120A  118A  2163  120A  118A  	fcall	_Setup
   635  0144  120A  118A  21D1  120A  118A  	fcall	_multiplexor
   636  0149                     l1098:
   637  0149  120A  118A  2199  120A  118A  	fcall	_configADC
   638  014E                     l1100:
   639  014E  3005               	movlw	5
   640  014F  120A  118A  2029  120A  118A  	fcall	_canalADC
   641  0154                     l1102:
   642                           
   643                           ;main.c: 142:         if (var1 == varADC) {
   644  0154  1283               	bcf	3,5	;RP0=0, select bank0
   645  0155  1303               	bcf	3,6	;RP1=0, select bank0
   646  0156  0830               	movf	_var1,w
   647  0157  067D               	xorwf	_varADC,w	;volatile
   648  0158  1D03               	skipz
   649  0159  295B               	goto	u501
   650  015A  295C               	goto	u500
   651  015B                     u501:
   652  015B  295E               	goto	l89
   653  015C                     u500:
   654  015C                     l1104:
   655                           
   656                           ;main.c: 143:             PORTEbits.RE1 = 1;
   657  015C  1489               	bsf	9,1	;volatile
   658                           
   659                           ;main.c: 145:         } else {
   660  015D  2954               	goto	l1102
   661  015E                     l89:
   662                           
   663                           ;main.c: 146:             PORTEbits.RE1 = 0;
   664  015E  1089               	bcf	9,1	;volatile
   665  015F  2954               	goto	l1102
   666  0160  120A  118A  280E   	ljmp	start
   667  0163                     __end_of_main:
   668                           
   669                           	psect	text1
   670  01D1                     __ptext1:	
   671 ;; *************** function _multiplexor *****************
   672 ;; Defined at:
   673 ;;		line 37 in file "display7.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _multiplexor
   703  01D1                     _multiplexor:
   704  01D1                     l978:	
   705                           ;incstack = 0
   706                           ; Regs used in _multiplexor: [wreg]
   707                           
   708                           
   709                           ;display7.c: 39:     OPTION_REG = 0x86;
   710  01D1  3086               	movlw	134
   711  01D2  1683               	bsf	3,5	;RP0=1, select bank1
   712  01D3  1303               	bcf	3,6	;RP1=0, select bank1
   713  01D4  0081               	movwf	1	;volatile
   714                           
   715                           ;display7.c: 40:     TMR0 = 61;
   716  01D5  303D               	movlw	61
   717  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   718  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   719  01D8  0081               	movwf	1	;volatile
   720                           
   721                           ;display7.c: 41:     INTCON = 0xA0;
   722  01D9  30A0               	movlw	160
   723  01DA  008B               	movwf	11	;volatile
   724  01DB                     l140:
   725  01DB  0008               	return
   726  01DC                     __end_of_multiplexor:
   727                           
   728                           	psect	text2
   729  0199                     __ptext2:	
   730 ;; *************** function _configADC *****************
   731 ;; Defined at:
   732 ;;		line 140 in file "ADC.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		None
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    2
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _configADC
   762  0199                     _configADC:
   763  0199                     l980:	
   764                           ;incstack = 0
   765                           ; Regs used in _configADC: []
   766                           
   767                           
   768                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   769  0199  1283               	bcf	3,5	;RP0=0, select bank0
   770  019A  1303               	bcf	3,6	;RP1=0, select bank0
   771  019B  171F               	bsf	31,6	;volatile
   772                           
   773                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   774  019C  139F               	bcf	31,7	;volatile
   775                           
   776                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   777  019D  1683               	bsf	3,5	;RP0=1, select bank1
   778  019E  1303               	bcf	3,6	;RP1=0, select bank1
   779  019F  121F               	bcf	31,4	;volatile
   780                           
   781                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   782  01A0  129F               	bcf	31,5	;volatile
   783                           
   784                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   785  01A1  139F               	bcf	31,7	;volatile
   786                           
   787                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   788  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   789  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   790  01A4  130C               	bcf	12,6	;volatile
   791                           
   792                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   793  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   794  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   795  01A7  170C               	bsf	12,6	;volatile
   796                           
   797                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   798  01A8  178B               	bsf	11,7	;volatile
   799                           
   800                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   801  01A9  170B               	bsf	11,6	;volatile
   802                           
   803                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   804  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   805  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   806  01AC  141F               	bsf	31,0	;volatile
   807  01AD                     l126:
   808  01AD  0008               	return
   809  01AE                     __end_of_configADC:
   810                           
   811                           	psect	text3
   812  0029                     __ptext3:	
   813 ;; *************** function _canalADC *****************
   814 ;; Defined at:
   815 ;;		line 13 in file "ADC.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  canal           1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  canal           1    0[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       1       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       1       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    2
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _canalADC
   845  0029                     _canalADC:
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   849                           ;canalADC@canal stored from wreg
   850  0029  1283               	bcf	3,5	;RP0=0, select bank0
   851  002A  1303               	bcf	3,6	;RP1=0, select bank0
   852  002B  00B1               	movwf	canalADC@canal
   853  002C                     l982:
   854                           
   855                           ;ADC.c: 15:     if (canal == 0) {
   856  002C  0831               	movf	canalADC@canal,w
   857  002D  1D03               	btfss	3,2
   858  002E  2830               	goto	u271
   859  002F  2831               	goto	u270
   860  0030                     u271:
   861  0030  2835               	goto	l986
   862  0031                     u270:
   863  0031                     l984:
   864                           
   865                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   866  0031  129F               	bcf	31,5	;volatile
   867                           
   868                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   869  0032  121F               	bcf	31,4	;volatile
   870                           
   871                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   872  0033  119F               	bcf	31,3	;volatile
   873                           
   874                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   875  0034  111F               	bcf	31,2	;volatile
   876  0035                     l986:
   877                           
   878                           ;ADC.c: 23:     if (canal == 1) {
   879  0035  0331               	decf	canalADC@canal,w
   880  0036  1D03               	btfss	3,2
   881  0037  2839               	goto	u281
   882  0038  283A               	goto	u280
   883  0039                     u281:
   884  0039  283E               	goto	l990
   885  003A                     u280:
   886  003A                     l988:
   887                           
   888                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   889  003A  129F               	bcf	31,5	;volatile
   890                           
   891                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   892  003B  121F               	bcf	31,4	;volatile
   893                           
   894                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   895  003C  119F               	bcf	31,3	;volatile
   896                           
   897                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   898  003D  151F               	bsf	31,2	;volatile
   899  003E                     l990:
   900                           
   901                           ;ADC.c: 32:     if (canal == 2) {
   902  003E  3002               	movlw	2
   903  003F  0631               	xorwf	canalADC@canal,w
   904  0040  1D03               	btfss	3,2
   905  0041  2843               	goto	u291
   906  0042  2844               	goto	u290
   907  0043                     u291:
   908  0043  2848               	goto	l994
   909  0044                     u290:
   910  0044                     l992:
   911                           
   912                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   913  0044  129F               	bcf	31,5	;volatile
   914                           
   915                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   916  0045  121F               	bcf	31,4	;volatile
   917                           
   918                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   919  0046  159F               	bsf	31,3	;volatile
   920                           
   921                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   922  0047  111F               	bcf	31,2	;volatile
   923  0048                     l994:
   924                           
   925                           ;ADC.c: 41:     if (canal == 3) {
   926  0048  3003               	movlw	3
   927  0049  0631               	xorwf	canalADC@canal,w
   928  004A  1D03               	btfss	3,2
   929  004B  284D               	goto	u301
   930  004C  284E               	goto	u300
   931  004D                     u301:
   932  004D  2852               	goto	l998
   933  004E                     u300:
   934  004E                     l996:
   935                           
   936                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   937  004E  129F               	bcf	31,5	;volatile
   938                           
   939                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   940  004F  121F               	bcf	31,4	;volatile
   941                           
   942                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   943  0050  159F               	bsf	31,3	;volatile
   944                           
   945                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   946  0051  151F               	bsf	31,2	;volatile
   947  0052                     l998:
   948                           
   949                           ;ADC.c: 50:     if (canal == 4) {
   950  0052  3004               	movlw	4
   951  0053  0631               	xorwf	canalADC@canal,w
   952  0054  1D03               	btfss	3,2
   953  0055  2857               	goto	u311
   954  0056  2858               	goto	u310
   955  0057                     u311:
   956  0057  285C               	goto	l1002
   957  0058                     u310:
   958  0058                     l1000:
   959                           
   960                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   961  0058  129F               	bcf	31,5	;volatile
   962                           
   963                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   964  0059  161F               	bsf	31,4	;volatile
   965                           
   966                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   967  005A  119F               	bcf	31,3	;volatile
   968                           
   969                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   970  005B  111F               	bcf	31,2	;volatile
   971  005C                     l1002:
   972                           
   973                           ;ADC.c: 59:     if (canal == 5) {
   974  005C  3005               	movlw	5
   975  005D  0631               	xorwf	canalADC@canal,w
   976  005E  1D03               	btfss	3,2
   977  005F  2861               	goto	u321
   978  0060  2862               	goto	u320
   979  0061                     u321:
   980  0061  2866               	goto	l1006
   981  0062                     u320:
   982  0062                     l1004:
   983                           
   984                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   985  0062  129F               	bcf	31,5	;volatile
   986                           
   987                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   988  0063  161F               	bsf	31,4	;volatile
   989                           
   990                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   991  0064  119F               	bcf	31,3	;volatile
   992                           
   993                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   994  0065  151F               	bsf	31,2	;volatile
   995  0066                     l1006:
   996                           
   997                           ;ADC.c: 68:     if (canal == 6) {
   998  0066  3006               	movlw	6
   999  0067  0631               	xorwf	canalADC@canal,w
  1000  0068  1D03               	btfss	3,2
  1001  0069  286B               	goto	u331
  1002  006A  286C               	goto	u330
  1003  006B                     u331:
  1004  006B  2870               	goto	l1010
  1005  006C                     u330:
  1006  006C                     l1008:
  1007                           
  1008                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
  1009  006C  129F               	bcf	31,5	;volatile
  1010                           
  1011                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
  1012  006D  161F               	bsf	31,4	;volatile
  1013                           
  1014                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
  1015  006E  159F               	bsf	31,3	;volatile
  1016                           
  1017                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
  1018  006F  111F               	bcf	31,2	;volatile
  1019  0070                     l1010:
  1020                           
  1021                           ;ADC.c: 77:     if (canal == 7) {
  1022  0070  3007               	movlw	7
  1023  0071  0631               	xorwf	canalADC@canal,w
  1024  0072  1D03               	btfss	3,2
  1025  0073  2875               	goto	u341
  1026  0074  2876               	goto	u340
  1027  0075                     u341:
  1028  0075  287A               	goto	l1014
  1029  0076                     u340:
  1030  0076                     l1012:
  1031                           
  1032                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
  1033  0076  129F               	bcf	31,5	;volatile
  1034                           
  1035                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
  1036  0077  161F               	bsf	31,4	;volatile
  1037                           
  1038                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
  1039  0078  159F               	bsf	31,3	;volatile
  1040                           
  1041                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
  1042  0079  151F               	bsf	31,2	;volatile
  1043  007A                     l1014:
  1044                           
  1045                           ;ADC.c: 86:     if (canal == 8) {
  1046  007A  3008               	movlw	8
  1047  007B  0631               	xorwf	canalADC@canal,w
  1048  007C  1D03               	btfss	3,2
  1049  007D  287F               	goto	u351
  1050  007E  2880               	goto	u350
  1051  007F                     u351:
  1052  007F  2884               	goto	l1018
  1053  0080                     u350:
  1054  0080                     l1016:
  1055                           
  1056                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
  1057  0080  169F               	bsf	31,5	;volatile
  1058                           
  1059                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
  1060  0081  121F               	bcf	31,4	;volatile
  1061                           
  1062                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
  1063  0082  119F               	bcf	31,3	;volatile
  1064                           
  1065                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
  1066  0083  111F               	bcf	31,2	;volatile
  1067  0084                     l1018:
  1068                           
  1069                           ;ADC.c: 94:     if (canal == 9) {
  1070  0084  3009               	movlw	9
  1071  0085  0631               	xorwf	canalADC@canal,w
  1072  0086  1D03               	btfss	3,2
  1073  0087  2889               	goto	u361
  1074  0088  288A               	goto	u360
  1075  0089                     u361:
  1076  0089  288E               	goto	l1022
  1077  008A                     u360:
  1078  008A                     l1020:
  1079                           
  1080                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1081  008A  169F               	bsf	31,5	;volatile
  1082                           
  1083                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1084  008B  121F               	bcf	31,4	;volatile
  1085                           
  1086                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1087  008C  119F               	bcf	31,3	;volatile
  1088                           
  1089                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1090  008D  151F               	bsf	31,2	;volatile
  1091  008E                     l1022:
  1092                           
  1093                           ;ADC.c: 102:     if (canal == 10) {
  1094  008E  300A               	movlw	10
  1095  008F  0631               	xorwf	canalADC@canal,w
  1096  0090  1D03               	btfss	3,2
  1097  0091  2893               	goto	u371
  1098  0092  2894               	goto	u370
  1099  0093                     u371:
  1100  0093  2898               	goto	l1026
  1101  0094                     u370:
  1102  0094                     l1024:
  1103                           
  1104                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1105  0094  169F               	bsf	31,5	;volatile
  1106                           
  1107                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1108  0095  121F               	bcf	31,4	;volatile
  1109                           
  1110                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1111  0096  159F               	bsf	31,3	;volatile
  1112                           
  1113                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1114  0097  111F               	bcf	31,2	;volatile
  1115  0098                     l1026:
  1116                           
  1117                           ;ADC.c: 111:     if (canal == 11) {
  1118  0098  300B               	movlw	11
  1119  0099  0631               	xorwf	canalADC@canal,w
  1120  009A  1D03               	btfss	3,2
  1121  009B  289D               	goto	u381
  1122  009C  289E               	goto	u380
  1123  009D                     u381:
  1124  009D  28A2               	goto	l1030
  1125  009E                     u380:
  1126  009E                     l1028:
  1127                           
  1128                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1129  009E  169F               	bsf	31,5	;volatile
  1130                           
  1131                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1132  009F  121F               	bcf	31,4	;volatile
  1133                           
  1134                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1135  00A0  159F               	bsf	31,3	;volatile
  1136                           
  1137                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1138  00A1  151F               	bsf	31,2	;volatile
  1139  00A2                     l1030:
  1140                           
  1141                           ;ADC.c: 120:     if (canal == 12) {
  1142  00A2  300C               	movlw	12
  1143  00A3  0631               	xorwf	canalADC@canal,w
  1144  00A4  1D03               	btfss	3,2
  1145  00A5  28A7               	goto	u391
  1146  00A6  28A8               	goto	u390
  1147  00A7                     u391:
  1148  00A7  28AC               	goto	l1034
  1149  00A8                     u390:
  1150  00A8                     l1032:
  1151                           
  1152                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1153  00A8  169F               	bsf	31,5	;volatile
  1154                           
  1155                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1156  00A9  161F               	bsf	31,4	;volatile
  1157                           
  1158                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1159  00AA  119F               	bcf	31,3	;volatile
  1160                           
  1161                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1162  00AB  111F               	bcf	31,2	;volatile
  1163  00AC                     l1034:
  1164                           
  1165                           ;ADC.c: 129:     if (canal == 13) {
  1166  00AC  300D               	movlw	13
  1167  00AD  0631               	xorwf	canalADC@canal,w
  1168  00AE  1D03               	btfss	3,2
  1169  00AF  28B1               	goto	u401
  1170  00B0  28B2               	goto	u400
  1171  00B1                     u401:
  1172  00B1  28B6               	goto	l122
  1173  00B2                     u400:
  1174  00B2                     l1036:
  1175                           
  1176                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1177  00B2  169F               	bsf	31,5	;volatile
  1178                           
  1179                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1180  00B3  161F               	bsf	31,4	;volatile
  1181                           
  1182                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1183  00B4  119F               	bcf	31,3	;volatile
  1184                           
  1185                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1186  00B5  151F               	bsf	31,2	;volatile
  1187  00B6                     l122:	
  1188                           ;ADC.c: 135:     }
  1189                           
  1190                           
  1191                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1192  00B6  149F               	bsf	31,1	;volatile
  1193  00B7                     l123:
  1194  00B7  0008               	return
  1195  00B8                     __end_of_canalADC:
  1196                           
  1197                           	psect	text4
  1198  0163                     __ptext4:	
  1199 ;; *************** function _Setup *****************
  1200 ;; Defined at:
  1201 ;;		line 159 in file "main.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    2
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _Setup
  1231  0163                     _Setup:
  1232  0163                     l942:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _Setup: [wreg+status,2]
  1235                           
  1236                           
  1237                           ;main.c: 161:     ANSEL = 0;
  1238  0163  1683               	bsf	3,5	;RP0=1, select bank3
  1239  0164  1703               	bsf	3,6	;RP1=1, select bank3
  1240  0165  0188               	clrf	8	;volatile
  1241                           
  1242                           ;main.c: 162:     ANSELH = 0;
  1243  0166  0189               	clrf	9	;volatile
  1244  0167                     l944:
  1245                           
  1246                           ;main.c: 163:     ANSELbits.ANS5 = 1;
  1247  0167  1688               	bsf	8,5	;volatile
  1248                           
  1249                           ;main.c: 165:     TRISA = 0;
  1250  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1252  016A  0185               	clrf	5	;volatile
  1253  016B                     l946:
  1254                           
  1255                           ;main.c: 166:     TRISB = 255;
  1256  016B  30FF               	movlw	255
  1257  016C  0086               	movwf	6	;volatile
  1258  016D                     l948:
  1259                           
  1260                           ;main.c: 167:     TRISC = 0;
  1261  016D  0187               	clrf	7	;volatile
  1262  016E                     l950:
  1263                           
  1264                           ;main.c: 168:     TRISD = 0;
  1265  016E  0188               	clrf	8	;volatile
  1266  016F                     l952:
  1267                           
  1268                           ;main.c: 169:     TRISEbits.TRISE0 = 1;
  1269  016F  1409               	bsf	9,0	;volatile
  1270  0170                     l954:
  1271                           
  1272                           ;main.c: 170:     TRISEbits.TRISE1 = 0;
  1273  0170  1089               	bcf	9,1	;volatile
  1274  0171                     l956:
  1275                           
  1276                           ;main.c: 172:     PORTA = 0;
  1277  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0173  0185               	clrf	5	;volatile
  1280  0174                     l958:
  1281                           
  1282                           ;main.c: 173:     PORTB = 0;
  1283  0174  0186               	clrf	6	;volatile
  1284  0175                     l960:
  1285                           
  1286                           ;main.c: 174:     PORTC = 0;
  1287  0175  0187               	clrf	7	;volatile
  1288  0176                     l962:
  1289                           
  1290                           ;main.c: 175:     PORTD = 0;
  1291  0176  0188               	clrf	8	;volatile
  1292  0177                     l964:
  1293                           
  1294                           ;main.c: 176:     PORTE = 0;
  1295  0177  0189               	clrf	9	;volatile
  1296  0178                     l966:
  1297                           
  1298                           ;main.c: 177:     IOCBbits.IOCB0 = 1;
  1299  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1300  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1301  017A  1416               	bsf	22,0	;volatile
  1302  017B                     l968:
  1303                           
  1304                           ;main.c: 178:     IOCBbits.IOCB1 = 1;
  1305  017B  1496               	bsf	22,1	;volatile
  1306  017C                     l970:
  1307                           
  1308                           ;main.c: 180:     INTCONbits.RBIE = 1;
  1309  017C  158B               	bsf	11,3	;volatile
  1310  017D                     l972:
  1311                           
  1312                           ;main.c: 181:     INTCONbits.GIE = 1;
  1313  017D  178B               	bsf	11,7	;volatile
  1314  017E                     l974:
  1315                           
  1316                           ;main.c: 182:     INTCONbits.PEIE = 1;
  1317  017E  170B               	bsf	11,6	;volatile
  1318  017F                     l976:
  1319                           
  1320                           ;main.c: 183:     INTCONbits.RBIF = 0;
  1321  017F  100B               	bcf	11,0	;volatile
  1322  0180                     l96:
  1323  0180  0008               	return
  1324  0181                     __end_of_Setup:
  1325                           
  1326                           	psect	text5
  1327  00B8                     __ptext5:	
  1328 ;; *************** function _ISR *****************
  1329 ;; Defined at:
  1330 ;;		line 54 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0
  1346 ;;      Temps:          4       0       0       0       0
  1347 ;;      Totals:         4       0       0       0       0
  1348 ;;Total ram usage:        4 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    1
  1351 ;; This function calls:
  1352 ;;		_NibbleH
  1353 ;;		_NibbleL
  1354 ;;		_tabla7
  1355 ;; This function is called by:
  1356 ;;		Interrupt level 1
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _ISR
  1362  00B8                     _ISR:
  1363  00B8                     i1l1038:
  1364                           
  1365                           ;main.c: 56:                 var1++;
  1366  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1367  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1368  00BA  1F0C               	btfss	12,6	;volatile
  1369  00BB  28BD               	goto	u41_21
  1370  00BC  28BE               	goto	u41_20
  1371  00BD                     u41_21:
  1372  00BD  28C4               	goto	i1l1046
  1373  00BE                     u41_20:
  1374  00BE                     i1l1040:
  1375                           
  1376                           ;main.c: 58:         }
  1377  00BE  081E               	movf	30,w	;volatile
  1378  00BF  00F5               	movwf	??_ISR
  1379  00C0  0875               	movf	??_ISR,w
  1380  00C1  00FD               	movwf	_varADC	;volatile
  1381  00C2                     i1l1042:
  1382                           
  1383                           ;main.c: 60: 
  1384  00C2  130C               	bcf	12,6	;volatile
  1385  00C3                     i1l1044:
  1386                           
  1387                           ;main.c: 61: 
  1388  00C3  149F               	bsf	31,1	;volatile
  1389  00C4                     i1l1046:
  1390                           
  1391                           ;main.c: 65:         INTCONbits.TMR0IF = 0;
  1392  00C4  1C0B               	btfss	11,0	;volatile
  1393  00C5  28C7               	goto	u42_21
  1394  00C6  28C8               	goto	u42_20
  1395  00C7                     u42_21:
  1396  00C7  28F3               	goto	i1l1072
  1397  00C8                     u42_20:
  1398  00C8                     i1l1048:
  1399                           
  1400                           ;main.c: 67:         PORTC = 0;
  1401  00C8  100B               	bcf	11,0	;volatile
  1402                           
  1403                           ;main.c: 69:         Nibble2 = NibbleH(varADC);
  1404  00C9  1C86               	btfss	6,1	;volatile
  1405  00CA  28CC               	goto	u43_21
  1406  00CB  28CD               	goto	u43_20
  1407  00CC                     u43_21:
  1408  00CC  28DC               	goto	i1l1060
  1409  00CD                     u43_20:
  1410  00CD                     i1l1050:
  1411                           
  1412                           ;main.c: 70: 
  1413  00CD  3001               	movlw	1
  1414  00CE  00F5               	movwf	??_ISR
  1415  00CF  0875               	movf	??_ISR,w
  1416  00D0  07FB               	addwf	_debounce2,f
  1417  00D1                     i1l1052:
  1418                           
  1419                           ;main.c: 71:         if (PORTD == 2) {
  1420  00D1  3002               	movlw	2
  1421  00D2  027B               	subwf	_debounce2,w
  1422  00D3  1C03               	skipc
  1423  00D4  28D6               	goto	u44_21
  1424  00D5  28D7               	goto	u44_20
  1425  00D6                     u44_21:
  1426  00D6  28DC               	goto	i1l1060
  1427  00D7                     u44_20:
  1428  00D7                     i1l1054:
  1429                           
  1430                           ;main.c: 72:             PORTD = 0;
  1431  00D7  01FB               	clrf	_debounce2
  1432  00D8                     i1l1056:
  1433                           
  1434                           ;main.c: 73: 
  1435  00D8  3001               	movlw	1
  1436  00D9  0285               	subwf	5,f	;volatile
  1437  00DA                     i1l1058:
  1438                           
  1439                           ;main.c: 76:         if (PORTD == 0) {
  1440  00DA  3001               	movlw	1
  1441  00DB  02B0               	subwf	_var1,f
  1442  00DC                     i1l1060:
  1443                           
  1444                           ;main.c: 81: 
  1445  00DC  1C06               	btfss	6,0	;volatile
  1446  00DD  28DF               	goto	u45_21
  1447  00DE  28E0               	goto	u45_20
  1448  00DF                     u45_21:
  1449  00DF  28F3               	goto	i1l1072
  1450  00E0                     u45_20:
  1451  00E0                     i1l1062:
  1452                           
  1453                           ;main.c: 82:         } else {
  1454  00E0  3001               	movlw	1
  1455  00E1  00F5               	movwf	??_ISR
  1456  00E2  0875               	movf	??_ISR,w
  1457  00E3  07FC               	addwf	_debounce1,f
  1458  00E4                     i1l1064:
  1459                           
  1460                           ;main.c: 83:             PORTD = (PORTD << 1);
  1461  00E4  3002               	movlw	2
  1462  00E5  027C               	subwf	_debounce1,w
  1463  00E6  1C03               	skipc
  1464  00E7  28E9               	goto	u46_21
  1465  00E8  28EA               	goto	u46_20
  1466  00E9                     u46_21:
  1467  00E9  28F3               	goto	i1l1072
  1468  00EA                     u46_20:
  1469  00EA                     i1l1066:
  1470                           
  1471                           ;main.c: 84: 
  1472  00EA  01FC               	clrf	_debounce1
  1473  00EB                     i1l1068:
  1474                           
  1475                           ;main.c: 85:             PORTC = tabla7(Nibble1);
  1476  00EB  3001               	movlw	1
  1477  00EC  00F5               	movwf	??_ISR
  1478  00ED  0875               	movf	??_ISR,w
  1479  00EE  0785               	addwf	5,f	;volatile
  1480  00EF                     i1l1070:
  1481                           
  1482                           ;main.c: 86: 
  1483  00EF  3001               	movlw	1
  1484  00F0  00F5               	movwf	??_ISR
  1485  00F1  0875               	movf	??_ISR,w
  1486  00F2  07B0               	addwf	_var1,f
  1487  00F3                     i1l1072:
  1488                           
  1489                           ;main.c: 94: }
  1490  00F3  1D0B               	btfss	11,2	;volatile
  1491  00F4  28F6               	goto	u47_21
  1492  00F5  28F7               	goto	u47_20
  1493  00F6                     u47_21:
  1494  00F6  2936               	goto	i1l83
  1495  00F7                     u47_20:
  1496  00F7                     i1l1074:
  1497                           
  1498                           ;main.c: 95: 
  1499  00F7  110B               	bcf	11,2	;volatile
  1500  00F8                     i1l1076:
  1501                           
  1502                           ;main.c: 96: void main(void) {
  1503  00F8  303D               	movlw	61
  1504  00F9  0081               	movwf	1	;volatile
  1505  00FA                     i1l1078:
  1506                           
  1507                           ;main.c: 97: 
  1508  00FA  0187               	clrf	7	;volatile
  1509  00FB                     i1l1080:
  1510                           
  1511                           ;main.c: 98:     Setup();
  1512  00FB  087D               	movf	_varADC,w	;volatile
  1513  00FC  120A  118A  21DC  120A  118A  	fcall	_NibbleL
  1514  0101  00F5               	movwf	??_ISR
  1515  0102  0875               	movf	??_ISR,w
  1516  0103  00FA               	movwf	_Nibble1
  1517  0104                     i1l1082:
  1518                           
  1519                           ;main.c: 99:     multiplexor();
  1520  0104  087D               	movf	_varADC,w	;volatile
  1521  0105  120A  118A  2181  120A  118A  	fcall	_NibbleH
  1522  010A  00F5               	movwf	??_ISR
  1523  010B  0875               	movf	??_ISR,w
  1524  010C  00F9               	movwf	_Nibble2
  1525                           
  1526                           ;main.c: 101:     canalADC(5);
  1527  010D  3002               	movlw	2
  1528  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1529  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0110  0608               	xorwf	8,w	;volatile
  1531  0111  1D03               	btfss	3,2
  1532  0112  2914               	goto	u48_21
  1533  0113  2915               	goto	u48_20
  1534  0114                     u48_21:
  1535  0114  2916               	goto	i1l1086
  1536  0115                     u48_20:
  1537  0115                     i1l1084:
  1538  0115  0188               	clrf	8	;volatile
  1539  0116                     i1l1086:
  1540  0116  0808               	movf	8,w	;volatile
  1541  0117  1D03               	btfss	3,2
  1542  0118  291A               	goto	u49_21
  1543  0119  291B               	goto	u49_20
  1544  011A                     u49_21:
  1545  011A  2929               	goto	i1l1092
  1546  011B                     u49_20:
  1547  011B                     i1l1088:
  1548  011B  3001               	movlw	1
  1549  011C  00F5               	movwf	??_ISR
  1550  011D  0875               	movf	??_ISR,w
  1551  011E  0788               	addwf	8,f	;volatile
  1552  011F                     i1l1090:
  1553  011F  0879               	movf	_Nibble2,w
  1554  0120  120A  118A  21E4  120A  118A  	fcall	_tabla7
  1555  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0127  0087               	movwf	7	;volatile
  1558  0128  2936               	goto	i1l83
  1559  0129                     i1l1092:
  1560  0129  0808               	movf	8,w	;volatile
  1561  012A  00F5               	movwf	??_ISR
  1562  012B  0775               	addwf	??_ISR,w
  1563  012C  0088               	movwf	8	;volatile
  1564  012D                     i1l1094:
  1565  012D  087A               	movf	_Nibble1,w
  1566  012E  120A  118A  21E4  120A  118A  	fcall	_tabla7
  1567  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0135  0087               	movwf	7	;volatile
  1570  0136                     i1l83:
  1571  0136  0878               	movf	??_ISR+3,w
  1572  0137  008A               	movwf	10
  1573  0138  0877               	movf	??_ISR+2,w
  1574  0139  0084               	movwf	4
  1575  013A  0E76               	swapf	??_ISR+1,w
  1576  013B  0083               	movwf	3
  1577  013C  0EFE               	swapf	btemp,f
  1578  013D  0E7E               	swapf	btemp,w
  1579  013E  0009               	retfie
  1580  013F                     __end_of_ISR:
  1581                           
  1582                           	psect	intentry
  1583  0004                     __pintentry:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1586                           
  1587  0004                     interrupt_function:
  1588  007E                     saved_w	set	btemp
  1589  0004  00FE               	movwf	btemp
  1590  0005  0E03               	swapf	3,w
  1591  0006  00F6               	movwf	??_ISR+1
  1592  0007  0804               	movf	4,w
  1593  0008  00F7               	movwf	??_ISR+2
  1594  0009  080A               	movf	10,w
  1595  000A  00F8               	movwf	??_ISR+3
  1596  000B  120A  118A  28B8   	ljmp	_ISR
  1597                           
  1598                           	psect	text6
  1599  01E4                     __ptext6:	
  1600 ;; *************** function _tabla7 *****************
  1601 ;; Defined at:
  1602 ;;		line 13 in file "display7.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  entrada         1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  entrada         1    0[COMMON] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         1       0       0       0       0
  1620 ;;Total ram usage:        1 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_ISR
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _tabla7
  1631  01E4                     _tabla7:
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _tabla7: [wreg-fsr0h+status,2+status,0]
  1635                           ;tabla7@entrada stored from wreg
  1636  01E4  00F0               	movwf	tabla7@entrada
  1637  01E5                     i1l938:
  1638                           
  1639                           ;display7.c: 15:     static uint8_t tabla[] = {0b01110111,;display7.c: 34:     return ta
      +                          bla[entrada];
  1640  01E5  0870               	movf	tabla7@entrada,w
  1641  01E6  3E20               	addlw	(low (tabla7@tabla| 0))& (0+255)
  1642  01E7  0084               	movwf	4
  1643  01E8  1383               	bcf	3,7	;select IRP bank0
  1644  01E9  0800               	movf	0,w
  1645  01EA                     i1l137:
  1646  01EA  0008               	return
  1647  01EB                     __end_of_tabla7:
  1648                           
  1649                           	psect	text7
  1650  01DC                     __ptext7:	
  1651 ;; *************** function _NibbleL *****************
  1652 ;; Defined at:
  1653 ;;		line 44 in file "display7.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  ValorADC        1    wreg     unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  ValorADC        1    1[COMMON] unsigned char 
  1658 ;;  NibbleL         1    2[COMMON] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      unsigned char 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         2       0       0       0       0
  1670 ;;      Temps:          1       0       0       0       0
  1671 ;;      Totals:         3       0       0       0       0
  1672 ;;Total ram usage:        3 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_ISR
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _NibbleL
  1683  01DC                     _NibbleL:
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _NibbleL: [wreg+status,2]
  1687                           ;NibbleL@ValorADC stored from wreg
  1688  01DC  00F1               	movwf	NibbleL@ValorADC
  1689  01DD                     i1l922:
  1690                           
  1691                           ;display7.c: 46:     uint8_t NibbleL = (ValorADC & 0b00001111);
  1692  01DD  0871               	movf	NibbleL@ValorADC,w
  1693  01DE  390F               	andlw	15
  1694  01DF  00F0               	movwf	??_NibbleL
  1695  01E0  0870               	movf	??_NibbleL,w
  1696  01E1  00F2               	movwf	NibbleL@NibbleL
  1697  01E2                     i1l924:
  1698                           
  1699                           ;display7.c: 49:     return NibbleL;
  1700  01E2  0872               	movf	NibbleL@NibbleL,w
  1701  01E3                     i1l143:
  1702  01E3  0008               	return
  1703  01E4                     __end_of_NibbleL:
  1704                           
  1705                           	psect	text8
  1706  0181                     __ptext8:	
  1707 ;; *************** function _NibbleH *****************
  1708 ;; Defined at:
  1709 ;;		line 53 in file "display7.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  ValorADC        1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  ValorADC        1    2[COMMON] unsigned char 
  1714 ;;  aux             1    4[COMMON] unsigned char 
  1715 ;;  NibbleH         1    3[COMMON] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         3       0       0       0       0
  1727 ;;      Temps:          2       0       0       0       0
  1728 ;;      Totals:         5       0       0       0       0
  1729 ;;Total ram usage:        5 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_ISR
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _NibbleH
  1740  0181                     _NibbleH:
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _NibbleH: [wreg+status,2+status,0]
  1744                           ;NibbleH@ValorADC stored from wreg
  1745  0181  00F2               	movwf	NibbleH@ValorADC
  1746  0182                     i1l928:
  1747                           
  1748                           ;display7.c: 55:     uint8_t aux = ValorADC ;
  1749  0182  0872               	movf	NibbleH@ValorADC,w
  1750  0183  00F0               	movwf	??_NibbleH
  1751  0184  0870               	movf	??_NibbleH,w
  1752  0185  00F4               	movwf	NibbleH@aux
  1753  0186                     i1l930:
  1754                           
  1755                           ;display7.c: 56:     aux = (aux >> 4);
  1756  0186  0874               	movf	NibbleH@aux,w
  1757  0187  00F0               	movwf	??_NibbleH
  1758  0188  3004               	movlw	4
  1759  0189                     u26_25:
  1760  0189  1003               	clrc
  1761  018A  0CF0               	rrf	??_NibbleH,f
  1762  018B  3EFF               	addlw	-1
  1763  018C  1D03               	skipz
  1764  018D  2989               	goto	u26_25
  1765  018E  0870               	movf	??_NibbleH,w
  1766  018F  00F1               	movwf	??_NibbleH+1
  1767  0190  0871               	movf	??_NibbleH+1,w
  1768  0191  00F4               	movwf	NibbleH@aux
  1769  0192                     i1l932:
  1770                           
  1771                           ;display7.c: 57:     uint8_t NibbleH= (aux & 0b00001111);
  1772  0192  0874               	movf	NibbleH@aux,w
  1773  0193  390F               	andlw	15
  1774  0194  00F0               	movwf	??_NibbleH
  1775  0195  0870               	movf	??_NibbleH,w
  1776  0196  00F3               	movwf	NibbleH@NibbleH
  1777  0197                     i1l934:
  1778                           
  1779                           ;display7.c: 61:     return NibbleH;
  1780  0197  0873               	movf	NibbleH@NibbleH,w
  1781  0198                     i1l146:
  1782  0198  0008               	return
  1783  0199                     __end_of_NibbleH:
  1784  007E                     btemp	set	126	;btemp
  1785  007E                     wtemp0	set	126
  1786                           
  1787                           	psect	config
  1788                           
  1789                           ;Config register CONFIG1 @ 0x2007
  1790                           ;	Oscillator Selection bits
  1791                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1792                           ;	Watchdog Timer Enable bit
  1793                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1794                           ;	Power-up Timer Enable bit
  1795                           ;	PWRTE = OFF, PWRT disabled
  1796                           ;	RE3/MCLR pin function select bit
  1797                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1798                           ;	Code Protection bit
  1799                           ;	CP = OFF, Program memory code protection is disabled
  1800                           ;	Data Code Protection bit
  1801                           ;	CPD = OFF, Data memory code protection is disabled
  1802                           ;	Brown Out Reset Selection bits
  1803                           ;	BOREN = OFF, BOR disabled
  1804                           ;	Internal External Switchover bit
  1805                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1806                           ;	Fail-Safe Clock Monitor Enabled bit
  1807                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1808                           ;	Low Voltage Programming Enable bit
  1809                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1810                           ;	In-Circuit Debugger Mode bit
  1811                           ;	DEBUG = 0x1, unprogrammed default
  1812  2007                     	org	8199
  1813  2007  20D4               	dw	8404
  1814                           
  1815                           ;Config register CONFIG2 @ 0x2008
  1816                           ;	Brown-out Reset Selection bit
  1817                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1818                           ;	Flash Program Memory Self Write Enable bits
  1819                           ;	WRT = OFF, Write protection off
  1820  2008                     	org	8200
  1821  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      1      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_NibbleH

Critical Paths under _main in BANK0

    _main->_canalADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     308
                              _Setup
                           _canalADC
                          _configADC
                        _multiplexor
 ---------------------------------------------------------------------------------
 (1) _multiplexor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     308
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0     158
                                              5 COMMON     4     4      0
                            _NibbleH
                            _NibbleL
                             _tabla7
 ---------------------------------------------------------------------------------
 (3) _tabla7                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _NibbleL                                              3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _NibbleH                                              5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _multiplexor

 _ISR (ROOT)
   _NibbleH
   _NibbleL
   _tabla7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 09:40:01 2021

                      pc 0002                       l96 0180                       l89 015E  
                     fsr 0004                      l122 00B6                      l123 00B7  
                    l140 01DB                      l126 01AD                      l950 016E  
                    l942 0163                      l960 0175                      l952 016F  
                    l944 0167                      l970 017C                      l962 0176  
                    l954 0170                      l946 016B                      l972 017D  
                    l964 0177                      l956 0171                      l948 016D  
                    l980 0199                      l974 017E                      l966 0178  
                    l958 0174                      l990 003E                      l982 002C  
                    l976 017F                      l968 017B                      l992 0044  
                    l984 0031                      l994 0048                      l986 0035  
                    l978 01D1                      l996 004E                      l988 003A  
                    l998 0052                      u300 004E                      u301 004D  
                    u310 0058                      u311 0057                      u400 00B2  
                    u320 0062                      u401 00B1                      u321 0061  
                    u330 006C                      u331 006B                      u340 0076  
                    u500 015C                      u341 0075                      u501 015B  
                    u350 0080                      u270 0031                      u351 007F  
                    u271 0030                      u360 008A                      u280 003A  
                    u361 0089                      u281 0039                      u370 0094  
                    u290 0044                      u371 0093                      u291 0043  
                    u380 009E                      _ISR 00B8                      u381 009D  
                    u390 00A8                      u391 00A7                      fsr0 0004  
                    indf 0000                     ?_ISR 0070               NibbleH@aux 0074  
                   l1000 0058                     l1010 0070                     l1002 005C  
                   l1020 008A                     l1012 0076                     l1004 0062  
                   l1100 014E                     l1030 00A2                     l1022 008E  
                   l1014 007A                     l1006 0066                     l1102 0154  
                   l1032 00A8                     l1024 0094                     l1016 0080  
                   l1008 006C                     l1104 015C                     l1034 00AC  
                   l1026 0098                     l1018 0084                     l1036 00B2  
                   l1028 009E                     l1096 013F                     l1098 0149  
                   _ADIF 0066                     i1l83 0136                     _TMR0 0001  
                   _main 013F                     _var1 0030                     btemp 007E  
                   start 000E          __end_of_NibbleH 0199          __end_of_NibbleL 01E4  
                  ??_ISR 0075                    ?_main 0070                    _ANSEL 0188  
                  i1l143 01E3                    i1l137 01EA                    i1l146 0198  
                  i1l930 0186                    i1l922 01DD                    i1l932 0192  
                  i1l924 01E2                    i1l934 0197                    i1l928 0182  
                  i1l938 01E5                    u41_20 00BE                    u41_21 00BD  
                  u42_20 00C8                    u42_21 00C7                    u26_25 0189  
                  u43_20 00CD                    u43_21 00CC                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u44_20 00D7                    u44_21 00D6  
                  u45_20 00E0                    u45_21 00DF                    u46_20 00EA  
                  u46_21 00E9                    u47_20 00F7                    u47_21 00F6  
                  u48_20 0115                    u48_21 0114                    u49_20 011B  
                  u49_21 011A                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _Setup 0163  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0163                   ??_main 0032  
                 ?_Setup 0070                   _ADRESH 001E                   _ANSELH 0189  
                 i1l1040 00BE                   i1l1050 00CD                   i1l1042 00C2  
                 i1l1052 00D1                   i1l1060 00DC                   i1l1044 00C3  
                 i1l1070 00EF                   i1l1062 00E0                   i1l1054 00D7  
                 i1l1046 00C4                   i1l1038 00B8                   i1l1080 00FB  
                 i1l1064 00E4                   i1l1056 00D8                   i1l1048 00C8  
                 i1l1072 00F3                   i1l1090 011F                   i1l1082 0104  
                 i1l1074 00F7                   i1l1066 00EA                   i1l1058 00DA  
                 i1l1092 0129                   i1l1084 0115                   i1l1076 00F8  
                 i1l1068 00EB                   i1l1094 012D                   i1l1086 0116  
                 i1l1078 00FA                   i1l1088 011B                   _INTCON 000B  
       __end_of_canalADC 00B8                ??_NibbleH 0070                ??_NibbleL 0070  
            tabla7@tabla 0020                   _varADC 007D                   _tabla7 01E4  
                 saved_w 007E          NibbleH@ValorADC 0072             ?_multiplexor 0070  
__end_of__initialization 0025           __pcstackCOMMON 0070            __end_of_Setup 0181  
           __pidataBANK0 01C1          NibbleL@ValorADC 0071       __size_of_configADC 0015  
                ??_Setup 0031               __pbssBANK0 0030               __pmaintext 013F  
             __pintentry 0004                  ?_tabla7 0070                ?_canalADC 0070  
                _Nibble1 007A                  _Nibble2 0079                  _NibbleH 0181  
                _NibbleL 01DC        __end_of_configADC 01AE          __size_of_tabla7 0007  
              _ANSELbits 0188                  __ptext1 01D1                  __ptext2 0199  
                __ptext3 0029                  __ptext4 0163                  __ptext5 00B8  
                __ptext6 01E4                  __ptext7 01DC                  __ptext8 0181  
             ??_canalADC 0031             __size_of_ISR 0087     end_of_initialization 0025  
   __size_of_multiplexor 000B                _PORTBbits 0006                _PORTEbits 0009  
              _TRISEbits 0089           __end_of_tabla7 01EB      start_initialization 0011  
            __end_of_ISR 013F               init_fetch0 01AE              __pdataBANK0 0020  
         NibbleH@NibbleH 0073                 ??_tabla7 0070           NibbleL@NibbleL 0072  
            __pbssCOMMON 0079                ___latbits 0002        __size_of_canalADC 008F  
          __pcstackBANK0 0031                 ?_NibbleH 0070                 ?_NibbleL 0070  
              _debounce1 007C                _debounce2 007B                _configADC 0199  
         __size_of_Setup 001E        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C               ?_configADC 0070  
             _ADCON0bits 001F               _ADCON1bits 009F            ??_multiplexor 0031  
       __size_of_NibbleH 0018         __size_of_NibbleL 0008                 _canalADC 0029  
          canalADC@canal 0031            tabla7@entrada 0070            __size_of_main 0024  
    __end_of_multiplexor 01DC              ??_configADC 0031               _INTCONbits 000B  
               init_ram0 01B2                 intlevel1 0000               _OPTION_REG 0081  
            _multiplexor 01D1  
