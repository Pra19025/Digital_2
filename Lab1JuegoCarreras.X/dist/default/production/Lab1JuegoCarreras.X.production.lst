

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 21 18:52:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.31
    14                           ; Generated 13/10/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0007                     _PORTC	set	7
   205  0006                     _PORTB	set	6
   206  0005                     _PORTA	set	5
   207  0007                     _PORTCbits	set	7
   208  0087                     _TRISCbits	set	135
   209  0085                     _TRISA	set	133
   210  0086                     _TRISB	set	134
   211  0189                     _ANSELH	set	393
   212  0188                     _ANSEL	set	392
   213                           
   214                           	psect	cinit
   215  07F6                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07F6                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   222  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   223  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   224  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   225  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   226  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   227  07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FC                     __end_of__initialization:
   231  07FC  0183               	clrf	3
   232  07FD  120A  118A  2F4F   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0070                     __pbssCOMMON:
   236  0070                     _j2:
   237  0070                     	ds	2
   238  0072                     _j1:
   239  0072                     	ds	2
   240  0074                     _bandera:
   241  0074                     	ds	2
   242                           
   243                           	psect	cstackCOMMON
   244  0076                     __pcstackCOMMON:
   245  0076                     ?_Setup:
   246  0076                     ??_Setup:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0076                     ?_semaforo:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0076                     ??_semaforo:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0076                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260  0076                     	ds	3
   261  0079                     ??_main:
   262                           
   263                           ; 1 bytes @ 0x3
   264  0079                     	ds	2
   265                           
   266                           	psect	maintext
   267  074F                     __pmaintext:	
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 56 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called:    1
   293 ;; This function calls:
   294 ;;		_Setup
   295 ;;		_semaforo
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _main
   303  074F                     _main:
   304  074F                     l690:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;main.c: 57:     Setup();
   310  074F  120A  118A  26FF  120A  118A  	fcall	_Setup
   311  0754                     l692:
   312                           
   313                           ;main.c: 58:     bandera = 0;
   314  0754  01F4               	clrf	_bandera
   315  0755  01F5               	clrf	_bandera+1
   316  0756                     l694:
   317                           
   318                           ;main.c: 66:         if (PORTCbits.RC0 == 1) {
   319  0756  1283               	bcf	3,5	;RP0=0, select bank0
   320  0757  1303               	bcf	3,6	;RP1=0, select bank0
   321  0758  1C07               	btfss	7,0	;volatile
   322  0759  2F5B               	goto	u11
   323  075A  2F5C               	goto	u10
   324  075B                     u11:
   325  075B  2F7A               	goto	l708
   326  075C                     u10:
   327  075C                     l696:
   328                           
   329                           ;main.c: 67:             _delay((unsigned long)((15)*(4000000/4000.0)));
   330  075C  3014               	movlw	20
   331  075D  00FA               	movwf	??_main+1
   332  075E  3079               	movlw	121
   333  075F  00F9               	movwf	??_main
   334  0760                     u147:
   335  0760  0BF9               	decfsz	??_main,f
   336  0761  2F60               	goto	u147
   337  0762  0BFA               	decfsz	??_main+1,f
   338  0763  2F60               	goto	u147
   339  0764  2F65               	nop2
   340  0765                     l698:
   341                           
   342                           ;main.c: 68:             if (PORTCbits.RC0 == 0) {
   343  0765  1283               	bcf	3,5	;RP0=0, select bank0
   344  0766  1303               	bcf	3,6	;RP1=0, select bank0
   345  0767  1807               	btfsc	7,0	;volatile
   346  0768  2F6A               	goto	u21
   347  0769  2F6B               	goto	u20
   348  076A                     u21:
   349  076A  2F7A               	goto	l708
   350  076B                     u20:
   351  076B                     l700:
   352                           
   353                           ;main.c: 69:                 PORTCbits.RC3 = 0;
   354  076B  1187               	bcf	7,3	;volatile
   355                           
   356                           ;main.c: 70:                 PORTCbits.RC4 = 0;
   357  076C  1207               	bcf	7,4	;volatile
   358  076D                     l702:
   359                           
   360                           ;main.c: 71:                 j1 = 0;
   361  076D  01F2               	clrf	_j1
   362  076E  01F3               	clrf	_j1+1
   363                           
   364                           ;main.c: 72:                 j2 = 0;
   365  076F  01F0               	clrf	_j2
   366  0770  01F1               	clrf	_j2+1
   367  0771                     l704:
   368                           
   369                           ;main.c: 73:                 semaforo();
   370  0771  120A  118A  2719  120A  118A  	fcall	_semaforo
   371  0776                     l706:
   372                           
   373                           ;main.c: 75:                 bandera = 1;
   374  0776  3001               	movlw	1
   375  0777  00F4               	movwf	_bandera
   376  0778  3000               	movlw	0
   377  0779  00F5               	movwf	_bandera+1
   378  077A                     l708:
   379                           
   380                           ;main.c: 79:         if (bandera == 1) {
   381  077A  0374               	decf	_bandera,w
   382  077B  0475               	iorwf	_bandera+1,w
   383  077C  1D03               	btfss	3,2
   384  077D  2F7F               	goto	u31
   385  077E  2F80               	goto	u30
   386  077F                     u31:
   387  077F  2F56               	goto	l694
   388  0780                     u30:
   389  0780                     l710:
   390                           
   391                           ;main.c: 81:             if (PORTCbits.RC1 == 1) {
   392  0780  1283               	bcf	3,5	;RP0=0, select bank0
   393  0781  1303               	bcf	3,6	;RP1=0, select bank0
   394  0782  1C87               	btfss	7,1	;volatile
   395  0783  2F85               	goto	u41
   396  0784  2F86               	goto	u40
   397  0785                     u41:
   398  0785  2FA9               	goto	l39
   399  0786                     u40:
   400  0786                     l712:
   401                           
   402                           ;main.c: 82:                 _delay((unsigned long)((15)*(4000000/4000.0)));
   403  0786  3014               	movlw	20
   404  0787  00FA               	movwf	??_main+1
   405  0788  3079               	movlw	121
   406  0789  00F9               	movwf	??_main
   407  078A                     u157:
   408  078A  0BF9               	decfsz	??_main,f
   409  078B  2F8A               	goto	u157
   410  078C  0BFA               	decfsz	??_main+1,f
   411  078D  2F8A               	goto	u157
   412  078E  2F8F               	nop2
   413  078F                     l714:
   414                           
   415                           ;main.c: 83:                 if (PORTCbits.RC1 == 0) {
   416  078F  1283               	bcf	3,5	;RP0=0, select bank0
   417  0790  1303               	bcf	3,6	;RP1=0, select bank0
   418  0791  1887               	btfsc	7,1	;volatile
   419  0792  2F94               	goto	u51
   420  0793  2F95               	goto	u50
   421  0794                     u51:
   422  0794  2FA9               	goto	l39
   423  0795                     u50:
   424  0795                     l716:
   425                           
   426                           ;main.c: 84:                     j1++;
   427  0795  3001               	movlw	1
   428  0796  07F2               	addwf	_j1,f
   429  0797  1803               	skipnc
   430  0798  0AF3               	incf	_j1+1,f
   431  0799  3000               	movlw	0
   432  079A  07F3               	addwf	_j1+1,f
   433  079B                     l718:
   434                           
   435                           ;main.c: 85:                     if (PORTA == 0) {
   436  079B  0805               	movf	5,w	;volatile
   437  079C  1D03               	btfss	3,2
   438  079D  2F9F               	goto	u61
   439  079E  2FA0               	goto	u60
   440  079F                     u61:
   441  079F  2FA5               	goto	l722
   442  07A0                     u60:
   443  07A0                     l720:
   444                           
   445                           ;main.c: 86:                         PORTA++;
   446  07A0  3001               	movlw	1
   447  07A1  00F9               	movwf	??_main
   448  07A2  0879               	movf	??_main,w
   449  07A3  0785               	addwf	5,f	;volatile
   450                           
   451                           ;main.c: 87:                     } else {
   452  07A4  2FA9               	goto	l39
   453  07A5                     l722:
   454                           
   455                           ;main.c: 88:                         PORTA = (PORTA << 1);
   456  07A5  0805               	movf	5,w	;volatile
   457  07A6  00F9               	movwf	??_main
   458  07A7  0779               	addwf	??_main,w
   459  07A8  0085               	movwf	5	;volatile
   460  07A9                     l39:	
   461                           ;main.c: 91:             }
   462                           
   463                           
   464                           ;main.c: 93:             if (j1 == 8) {
   465  07A9  3008               	movlw	8
   466  07AA  0672               	xorwf	_j1,w
   467  07AB  0473               	iorwf	_j1+1,w
   468  07AC  1D03               	btfss	3,2
   469  07AD  2FAF               	goto	u71
   470  07AE  2FB0               	goto	u70
   471  07AF                     u71:
   472  07AF  2FB1               	goto	l43
   473  07B0                     u70:
   474  07B0                     l724:
   475                           
   476                           ;main.c: 94:                 PORTCbits.RC3 = 1;
   477  07B0  1587               	bsf	7,3	;volatile
   478  07B1                     l43:	
   479                           ;main.c: 95:             }
   480                           
   481                           
   482                           ;main.c: 97:             if (PORTCbits.RC2 == 1) {
   483  07B1  1D07               	btfss	7,2	;volatile
   484  07B2  2FB4               	goto	u81
   485  07B3  2FB5               	goto	u80
   486  07B4                     u81:
   487  07B4  2FD8               	goto	l44
   488  07B5                     u80:
   489  07B5                     l726:
   490                           
   491                           ;main.c: 98:                 _delay((unsigned long)((15)*(4000000/4000.0)));
   492  07B5  3014               	movlw	20
   493  07B6  00FA               	movwf	??_main+1
   494  07B7  3079               	movlw	121
   495  07B8  00F9               	movwf	??_main
   496  07B9                     u167:
   497  07B9  0BF9               	decfsz	??_main,f
   498  07BA  2FB9               	goto	u167
   499  07BB  0BFA               	decfsz	??_main+1,f
   500  07BC  2FB9               	goto	u167
   501  07BD  2FBE               	nop2
   502  07BE                     l728:
   503                           
   504                           ;main.c: 99:                 if (PORTCbits.RC2 == 0) {
   505  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   506  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   507  07C0  1907               	btfsc	7,2	;volatile
   508  07C1  2FC3               	goto	u91
   509  07C2  2FC4               	goto	u90
   510  07C3                     u91:
   511  07C3  2FD8               	goto	l44
   512  07C4                     u90:
   513  07C4                     l730:
   514                           
   515                           ;main.c: 100:                     j2++;
   516  07C4  3001               	movlw	1
   517  07C5  07F0               	addwf	_j2,f
   518  07C6  1803               	skipnc
   519  07C7  0AF1               	incf	_j2+1,f
   520  07C8  3000               	movlw	0
   521  07C9  07F1               	addwf	_j2+1,f
   522  07CA                     l732:
   523                           
   524                           ;main.c: 101:                     if (PORTB == 0) {
   525  07CA  0806               	movf	6,w	;volatile
   526  07CB  1D03               	btfss	3,2
   527  07CC  2FCE               	goto	u101
   528  07CD  2FCF               	goto	u100
   529  07CE                     u101:
   530  07CE  2FD4               	goto	l736
   531  07CF                     u100:
   532  07CF                     l734:
   533                           
   534                           ;main.c: 102:                         PORTB++;
   535  07CF  3001               	movlw	1
   536  07D0  00F9               	movwf	??_main
   537  07D1  0879               	movf	??_main,w
   538  07D2  0786               	addwf	6,f	;volatile
   539                           
   540                           ;main.c: 104:                     } else {
   541  07D3  2FD8               	goto	l44
   542  07D4                     l736:
   543                           
   544                           ;main.c: 105:                         PORTB = (PORTB << 1);
   545  07D4  0806               	movf	6,w	;volatile
   546  07D5  00F9               	movwf	??_main
   547  07D6  0779               	addwf	??_main,w
   548  07D7  0086               	movwf	6	;volatile
   549  07D8                     l44:	
   550                           ;main.c: 108:             }
   551                           
   552                           
   553                           ;main.c: 111:             if (j2 == 8) {
   554  07D8  3008               	movlw	8
   555  07D9  0670               	xorwf	_j2,w
   556  07DA  0471               	iorwf	_j2+1,w
   557  07DB  1D03               	btfss	3,2
   558  07DC  2FDE               	goto	u111
   559  07DD  2FDF               	goto	u110
   560  07DE                     u111:
   561  07DE  2FE0               	goto	l740
   562  07DF                     u110:
   563  07DF                     l738:
   564                           
   565                           ;main.c: 112:                 PORTCbits.RC4 = 1;
   566  07DF  1607               	bsf	7,4	;volatile
   567  07E0                     l740:
   568                           
   569                           ;main.c: 115:             if (j1 == 8 | j2 == 8) {
   570  07E0  3008               	movlw	8
   571  07E1  0672               	xorwf	_j1,w
   572  07E2  0473               	iorwf	_j1+1,w
   573  07E3  1903               	btfsc	3,2
   574  07E4  2FE6               	goto	u121
   575  07E5  2FE7               	goto	u120
   576  07E6                     u121:
   577  07E6  2FEE               	goto	l744
   578  07E7                     u120:
   579  07E7                     l742:
   580  07E7  3008               	movlw	8
   581  07E8  0670               	xorwf	_j2,w
   582  07E9  0471               	iorwf	_j2+1,w
   583  07EA  1D03               	btfss	3,2
   584  07EB  2FED               	goto	u131
   585  07EC  2FEE               	goto	u130
   586  07ED                     u131:
   587  07ED  2F56               	goto	l694
   588  07EE                     u130:
   589  07EE                     l744:
   590                           
   591                           ;main.c: 117:                 bandera = 0;
   592  07EE  01F4               	clrf	_bandera
   593  07EF  01F5               	clrf	_bandera+1
   594                           
   595                           ;main.c: 118:                 PORTA = 0;
   596  07F0  0185               	clrf	5	;volatile
   597                           
   598                           ;main.c: 119:                 PORTB = 0;
   599  07F1  0186               	clrf	6	;volatile
   600  07F2  2F56               	goto	l694
   601  07F3  120A  118A  2800   	ljmp	start
   602  07F6                     __end_of_main:
   603                           
   604                           	psect	text1
   605  0719                     __ptext1:	
   606 ;; *************** function _semaforo *****************
   607 ;; Defined at:
   608 ;;		line 158 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          3       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _semaforo
   637  0719                     _semaforo:
   638  0719                     l676:	
   639                           ;incstack = 0
   640                           ; Regs used in _semaforo: [wreg]
   641                           
   642                           
   643                           ;main.c: 161:     PORTCbits.RC5 = 1;
   644  0719  1283               	bcf	3,5	;RP0=0, select bank0
   645  071A  1303               	bcf	3,6	;RP1=0, select bank0
   646  071B  1687               	bsf	7,5	;volatile
   647  071C                     l678:
   648                           
   649                           ;main.c: 162:     _delay((unsigned long)((250)*(4000000/4000.0)));
   650  071C  3002               	movlw	2
   651  071D  00F8               	movwf	??_semaforo+2
   652  071E  3045               	movlw	69
   653  071F  00F7               	movwf	??_semaforo+1
   654  0720  30A9               	movlw	169
   655  0721  00F6               	movwf	??_semaforo
   656  0722                     u177:
   657  0722  0BF6               	decfsz	??_semaforo,f
   658  0723  2F22               	goto	u177
   659  0724  0BF7               	decfsz	??_semaforo+1,f
   660  0725  2F22               	goto	u177
   661  0726  0BF8               	decfsz	??_semaforo+2,f
   662  0727  2F22               	goto	u177
   663  0728  2F29               	nop2
   664  0729                     l680:
   665                           
   666                           ;main.c: 163:     PORTCbits.RC5 = 0;
   667  0729  1283               	bcf	3,5	;RP0=0, select bank0
   668  072A  1303               	bcf	3,6	;RP1=0, select bank0
   669  072B  1287               	bcf	7,5	;volatile
   670  072C                     l682:
   671                           
   672                           ;main.c: 164:     PORTCbits.RC6 = 1;
   673  072C  1707               	bsf	7,6	;volatile
   674                           
   675                           ;main.c: 165:     _delay((unsigned long)((250)*(4000000/4000.0)));
   676  072D  3002               	movlw	2
   677  072E  00F8               	movwf	??_semaforo+2
   678  072F  3045               	movlw	69
   679  0730  00F7               	movwf	??_semaforo+1
   680  0731  30A9               	movlw	169
   681  0732  00F6               	movwf	??_semaforo
   682  0733                     u187:
   683  0733  0BF6               	decfsz	??_semaforo,f
   684  0734  2F33               	goto	u187
   685  0735  0BF7               	decfsz	??_semaforo+1,f
   686  0736  2F33               	goto	u187
   687  0737  0BF8               	decfsz	??_semaforo+2,f
   688  0738  2F33               	goto	u187
   689  0739  2F3A               	nop2
   690  073A                     l684:
   691                           
   692                           ;main.c: 166:     PORTCbits.RC6 = 0;
   693  073A  1283               	bcf	3,5	;RP0=0, select bank0
   694  073B  1303               	bcf	3,6	;RP1=0, select bank0
   695  073C  1307               	bcf	7,6	;volatile
   696  073D                     l686:
   697                           
   698                           ;main.c: 167:     PORTCbits.RC7 = 1;
   699  073D  1787               	bsf	7,7	;volatile
   700                           
   701                           ;main.c: 168:     _delay((unsigned long)((250)*(4000000/4000.0)));
   702  073E  3002               	movlw	2
   703  073F  00F8               	movwf	??_semaforo+2
   704  0740  3045               	movlw	69
   705  0741  00F7               	movwf	??_semaforo+1
   706  0742  30A9               	movlw	169
   707  0743  00F6               	movwf	??_semaforo
   708  0744                     u197:
   709  0744  0BF6               	decfsz	??_semaforo,f
   710  0745  2F44               	goto	u197
   711  0746  0BF7               	decfsz	??_semaforo+1,f
   712  0747  2F44               	goto	u197
   713  0748  0BF8               	decfsz	??_semaforo+2,f
   714  0749  2F44               	goto	u197
   715  074A  2F4B               	nop2
   716  074B                     l688:
   717                           
   718                           ;main.c: 169:     PORTCbits.RC7 = 0;
   719  074B  1283               	bcf	3,5	;RP0=0, select bank0
   720  074C  1303               	bcf	3,6	;RP1=0, select bank0
   721  074D  1387               	bcf	7,7	;volatile
   722  074E                     l60:
   723  074E  0008               	return
   724  074F                     __end_of_semaforo:
   725                           
   726                           	psect	text2
   727  06FF                     __ptext2:	
   728 ;; *************** function _Setup *****************
   729 ;; Defined at:
   730 ;;		line 132 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _Setup
   759  06FF                     _Setup:
   760  06FF                     l652:	
   761                           ;incstack = 0
   762                           ; Regs used in _Setup: [status,2]
   763                           
   764                           
   765                           ;main.c: 133:     PORTA = 0;
   766  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   767  0700  1303               	bcf	3,6	;RP1=0, select bank0
   768  0701  0185               	clrf	5	;volatile
   769                           
   770                           ;main.c: 134:     PORTB = 0;
   771  0702  0186               	clrf	6	;volatile
   772                           
   773                           ;main.c: 135:     PORTC = 0;
   774  0703  0187               	clrf	7	;volatile
   775  0704                     l654:
   776                           
   777                           ;main.c: 136:     PORTCbits.RC0 = 1;
   778  0704  1407               	bsf	7,0	;volatile
   779  0705                     l656:
   780                           
   781                           ;main.c: 137:     PORTCbits.RC1 = 1;
   782  0705  1487               	bsf	7,1	;volatile
   783  0706                     l658:
   784                           
   785                           ;main.c: 138:     PORTCbits.RC2 = 1;
   786  0706  1507               	bsf	7,2	;volatile
   787  0707                     l660:
   788                           
   789                           ;main.c: 140:     PORTCbits.RC5 = 0;
   790  0707  1287               	bcf	7,5	;volatile
   791  0708                     l662:
   792                           
   793                           ;main.c: 141:     PORTCbits.RC6 = 0;
   794  0708  1307               	bcf	7,6	;volatile
   795  0709                     l664:
   796                           
   797                           ;main.c: 142:     PORTCbits.RC7 = 0;
   798  0709  1387               	bcf	7,7	;volatile
   799                           
   800                           ;main.c: 144:     ANSEL = 0;
   801  070A  1683               	bsf	3,5	;RP0=1, select bank3
   802  070B  1703               	bsf	3,6	;RP1=1, select bank3
   803  070C  0188               	clrf	8	;volatile
   804                           
   805                           ;main.c: 145:     ANSELH = 0;
   806  070D  0189               	clrf	9	;volatile
   807                           
   808                           ;main.c: 146:     TRISB = 0;
   809  070E  1683               	bsf	3,5	;RP0=1, select bank1
   810  070F  1303               	bcf	3,6	;RP1=0, select bank1
   811  0710  0186               	clrf	6	;volatile
   812                           
   813                           ;main.c: 147:     TRISA = 0;
   814  0711  0185               	clrf	5	;volatile
   815  0712                     l666:
   816                           
   817                           ;main.c: 148:     TRISCbits.TRISC3 = 0;
   818  0712  1187               	bcf	7,3	;volatile
   819  0713                     l668:
   820                           
   821                           ;main.c: 149:     TRISCbits.TRISC4 = 0;
   822  0713  1207               	bcf	7,4	;volatile
   823  0714                     l670:
   824                           
   825                           ;main.c: 150:     TRISCbits.TRISC5 = 0;
   826  0714  1287               	bcf	7,5	;volatile
   827  0715                     l672:
   828                           
   829                           ;main.c: 151:     TRISCbits.TRISC6 = 0;
   830  0715  1307               	bcf	7,6	;volatile
   831  0716                     l674:
   832                           
   833                           ;main.c: 152:     TRISCbits.TRISC7 = 0;
   834  0716  1387               	bcf	7,7	;volatile
   835                           
   836                           ;main.c: 154:     TRISB = 0;
   837  0717  0186               	clrf	6	;volatile
   838  0718                     l57:
   839  0718  0008               	return
   840  0719                     __end_of_Setup:
   841  007E                     btemp	set	126	;btemp
   842  007E                     wtemp0	set	126
   843                           
   844                           	psect	config
   845                           
   846                           ;Config register CONFIG1 @ 0x2007
   847                           ;	Oscillator Selection bits
   848                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   849                           ;	Watchdog Timer Enable bit
   850                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   851                           ;	Power-up Timer Enable bit
   852                           ;	PWRTE = OFF, PWRT disabled
   853                           ;	RE3/MCLR pin function select bit
   854                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   855                           ;	Code Protection bit
   856                           ;	CP = OFF, Program memory code protection is disabled
   857                           ;	Data Code Protection bit
   858                           ;	CPD = OFF, Data memory code protection is disabled
   859                           ;	Brown Out Reset Selection bits
   860                           ;	BOREN = OFF, BOR disabled
   861                           ;	Internal External Switchover bit
   862                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   863                           ;	Fail-Safe Clock Monitor Enabled bit
   864                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   865                           ;	Low Voltage Programming Enable bit
   866                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   867                           ;	In-Circuit Debugger Mode bit
   868                           ;	DEBUG = 0x1, unprogrammed default
   869  2007                     	org	8199
   870  2007  20D4               	dw	8404
   871                           
   872                           ;Config register CONFIG2 @ 0x2008
   873                           ;	Brown-out Reset Selection bit
   874                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   875                           ;	Flash Program Memory Self Write Enable bits
   876                           ;	WRT = OFF, Write protection off
   877  2008                     	org	8200
   878  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                              _Setup
                           _semaforo
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _semaforo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 21 18:52:09 2021

                     l43 07B1                       l60 074E                       l44 07D8  
                     l39 07A9                       l57 0718                       u10 075C  
                     u11 075B                       u20 076B                       u21 076A  
                     u30 0780                       u31 077F                       u40 0786  
                     u41 0785                       u50 0795                       u51 0794  
                     u60 07A0                       u61 079F                       u70 07B0  
                     u71 07AF                       u80 07B5                       u81 07B4  
                     u90 07C4                       u91 07C3                       _j1 0072  
                     _j2 0070                      l700 076B                      l710 0780  
                    l702 076D                      l720 07A0                      l712 0786  
                    l704 0771                      l730 07C4                      l722 07A5  
                    l714 078F                      l706 0776                      l660 0707  
                    l652 06FF                      l740 07E0                      l732 07CA  
                    l724 07B0                      l716 0795                      l708 077A  
                    l670 0714                      l662 0708                      l654 0704  
                    l742 07E7                      l734 07CF                      l726 07B5  
                    l718 079B                      l672 0715                      l664 0709  
                    l656 0705                      l680 0729                      l744 07EE  
                    l736 07D4                      l728 07BE                      l674 0716  
                    l666 0712                      l658 0706                      l682 072C  
                    l738 07DF                      l690 074F                      l668 0713  
                    l684 073A                      l676 0719                      l692 0754  
                    l686 073D                      l678 071C                      l694 0756  
                    l688 074B                      l696 075C                      l698 0765  
                    u100 07CF                      u101 07CE                      u110 07DF  
                    u111 07DE                      u120 07E7                      u121 07E6  
                    u130 07EE                      u131 07ED                      u147 0760  
                    u157 078A                      u167 07B9                      u177 0722  
                    u187 0733                      u197 0744                     _main 074F  
                   btemp 007E                     start 0000                    ?_main 0076  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _Setup 06FF                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 07F6                   ??_main 0079  
                 ?_Setup 0076                   _ANSELH 0189         __end_of_semaforo 074F  
__end_of__initialization 07FC           __pcstackCOMMON 0076            __end_of_Setup 0719  
                ??_Setup 0076               __pmaintext 074F                ?_semaforo 0076  
                _bandera 0074                  __ptext1 0719                  __ptext2 06FF  
   end_of_initialization 07FC               ??_semaforo 0076                _PORTCbits 0007  
              _TRISCbits 0087      start_initialization 07F6              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_semaforo 0036           __size_of_Setup 001A  
          __size_of_main 00A7                 _semaforo 0719  
