

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 20:41:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	strings
   460  046D                     __pstrings:
   461  046D                     stringtab:
   462  046D                     __stringtab:
   463  046D                     stringcode:	
   464                           ;	String table - string pointers are 1 byte each
   465                           
   466  046D                     stringdir:
   467  046D  3004               	movlw	high stringdir
   468  046E  008A               	movwf	10
   469  046F  0804               	movf	4,w
   470  0470  0A84               	incf	4,f
   471  0471  0782               	addwf	2,f
   472  0472                     __stringbase:
   473  0472  3400               	retlw	0
   474  0473                     __end_of__stringtab:
   475  0473                     _dpowers:
   476  0473  3401               	retlw	1
   477  0474  3400               	retlw	0
   478  0475  340A               	retlw	10
   479  0476  3400               	retlw	0
   480  0477  3464               	retlw	100
   481  0478  3400               	retlw	0
   482  0479  34E8               	retlw	232
   483  047A  3403               	retlw	3
   484  047B  3410               	retlw	16
   485  047C  3427               	retlw	39
   486  047D                     __end_of_dpowers:
   487  001A                     _RCREG	set	26
   488  000C                     _PIR1bits	set	12
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  0013                     _SSPBUF	set	19
   492  0014                     _SSPCON	set	20
   493  0007                     _PORTC	set	7
   494  0005                     _PORTA	set	5
   495  0005                     _PORTAbits	set	5
   496  0063                     _SSPIF	set	99
   497  005E                     _PEIE	set	94
   498  005F                     _GIE	set	95
   499  0098                     _TXSTAbits	set	152
   500  0099                     _SPBRG	set	153
   501  0091                     _SSPCON2bits	set	145
   502  0087                     _TRISCbits	set	135
   503  0094                     _SSPSTAT	set	148
   504  0093                     _SSPADD	set	147
   505  0091                     _SSPCON2	set	145
   506  0087                     _TRISC	set	135
   507  0085                     _TRISA	set	133
   508  048C                     _ACKEN	set	1164
   509  048D                     _ACKDT	set	1165
   510  04A0                     _BF	set	1184
   511  048B                     _RCEN	set	1163
   512  0488                     _SEN	set	1160
   513  0463                     _SSPIE	set	1123
   514  043C                     _TRISC4	set	1084
   515  043B                     _TRISC3	set	1083
   516  0189                     _ANSELH	set	393
   517  0188                     _ANSEL	set	392
   518  047D                     STR_5:
   519  047D  3420               	retlw	32	;' '
   520  047E  3447               	retlw	71	;'G'
   521  047F  3478               	retlw	120	;'x'
   522  0480  3420               	retlw	32	;' '
   523  0481  343D               	retlw	61	;'='
   524  0482  3420               	retlw	32	;' '
   525  0483  3425               	retlw	37	;'%'
   526  0484  3464               	retlw	100	;'d'
   527  0485  3420               	retlw	32	;' '
   528  0486  3420               	retlw	32	;' '
   529  0487  3420               	retlw	32	;' '
   530  0488  3420               	retlw	32	;' '
   531  0489  3400               	retlw	0
   532  048A                     STR_2:
   533  048A  3420               	retlw	32	;' '
   534  048B  3441               	retlw	65	;'A'
   535  048C  3479               	retlw	121	;'y'
   536  048D  3420               	retlw	32	;' '
   537  048E  343D               	retlw	61	;'='
   538  048F  3420               	retlw	32	;' '
   539  0490  3425               	retlw	37	;'%'
   540  0491  3464               	retlw	100	;'d'
   541  0492  3420               	retlw	32	;' '
   542  0493  3420               	retlw	32	;' '
   543  0494  3420               	retlw	32	;' '
   544  0495  3420               	retlw	32	;' '
   545  0496  3400               	retlw	0
   546  0497                     STR_6:
   547  0497  3420               	retlw	32	;' '
   548  0498  3447               	retlw	71	;'G'
   549  0499  3479               	retlw	121	;'y'
   550  049A  3420               	retlw	32	;' '
   551  049B  343D               	retlw	61	;'='
   552  049C  3420               	retlw	32	;' '
   553  049D  3425               	retlw	37	;'%'
   554  049E  3464               	retlw	100	;'d'
   555  049F  3420               	retlw	32	;' '
   556  04A0  3420               	retlw	32	;' '
   557  04A1  3420               	retlw	32	;' '
   558  04A2  3420               	retlw	32	;' '
   559  04A3  3400               	retlw	0
   560  04A4                     STR_3:
   561  04A4  3420               	retlw	32	;' '
   562  04A5  3441               	retlw	65	;'A'
   563  04A6  347A               	retlw	122	;'z'
   564  04A7  3420               	retlw	32	;' '
   565  04A8  343D               	retlw	61	;'='
   566  04A9  3420               	retlw	32	;' '
   567  04AA  3425               	retlw	37	;'%'
   568  04AB  3464               	retlw	100	;'d'
   569  04AC  3420               	retlw	32	;' '
   570  04AD  3420               	retlw	32	;' '
   571  04AE  3420               	retlw	32	;' '
   572  04AF  3420               	retlw	32	;' '
   573  04B0  3400               	retlw	0
   574  04B1                     STR_1:
   575  04B1  3441               	retlw	65	;'A'
   576  04B2  3478               	retlw	120	;'x'
   577  04B3  3420               	retlw	32	;' '
   578  04B4  343D               	retlw	61	;'='
   579  04B5  3420               	retlw	32	;' '
   580  04B6  3425               	retlw	37	;'%'
   581  04B7  3464               	retlw	100	;'d'
   582  04B8  3420               	retlw	32	;' '
   583  04B9  3420               	retlw	32	;' '
   584  04BA  3420               	retlw	32	;' '
   585  04BB  3420               	retlw	32	;' '
   586  04BC  3400               	retlw	0
   587  04BD                     STR_7:
   588  04BD  3420               	retlw	32	;' '
   589  04BE  3447               	retlw	71	;'G'
   590  04BF  347A               	retlw	122	;'z'
   591  04C0  3420               	retlw	32	;' '
   592  04C1  343D               	retlw	61	;'='
   593  04C2  3420               	retlw	32	;' '
   594  04C3  3425               	retlw	37	;'%'
   595  04C4  3464               	retlw	100	;'d'
   596  04C5  340D               	retlw	13
   597  04C6  340A               	retlw	10
   598  04C7  3400               	retlw	0
   599  04C8                     STR_4:
   600  04C8  3420               	retlw	32	;' '
   601  04C9  3454               	retlw	84	;'T'
   602  04CA  3420               	retlw	32	;' '
   603  04CB  343D               	retlw	61	;'='
   604  04CC  3420               	retlw	32	;' '
   605  04CD  3425               	retlw	37	;'%'
   606  04CE  3464               	retlw	100	;'d'
   607  04CF  3420               	retlw	32	;' '
   608  04D0  3420               	retlw	32	;' '
   609  04D1  3400               	retlw	0
   610                           
   611                           	psect	cinit
   612  000F                     start_initialization:	
   613                           ; #config settings
   614                           
   615  000F                     __initialization:
   616  000F                     end_of_initialization:	
   617                           ;End of C runtime variable initialization code
   618                           
   619  000F                     __end_of__initialization:
   620  000F  0183               	clrf	3
   621  0010  120A  118A  2CD2   	ljmp	_main	;jump to C main() function
   622                           
   623                           	psect	cstackBANK1
   624  00A0                     __pcstackBANK1:
   625  00A0                     GY_Read@buf:
   626                           
   627                           ; 50 bytes @ 0x0
   628  00A0                     	ds	50
   629  00D2                     GY_Read@valores:
   630                           
   631                           ; 14 bytes @ 0x32
   632  00D2                     	ds	14
   633  00E0                     GY_Read@Ax:
   634                           
   635                           ; 2 bytes @ 0x40
   636  00E0                     	ds	2
   637  00E2                     GY_Read@Ay:
   638                           
   639                           ; 2 bytes @ 0x42
   640  00E2                     	ds	2
   641  00E4                     GY_Read@Az:
   642                           
   643                           ; 2 bytes @ 0x44
   644  00E4                     	ds	2
   645  00E6                     GY_Read@Gx:
   646                           
   647                           ; 2 bytes @ 0x46
   648  00E6                     	ds	2
   649  00E8                     GY_Read@Gy:
   650                           
   651                           ; 2 bytes @ 0x48
   652  00E8                     	ds	2
   653  00EA                     GY_Read@Gz:
   654                           
   655                           ; 2 bytes @ 0x4A
   656  00EA                     	ds	2
   657  00EC                     GY_Read@T:
   658                           
   659                           ; 2 bytes @ 0x4C
   660  00EC                     	ds	2
   661  00EE                     GY_Read@i:
   662                           
   663                           ; 2 bytes @ 0x4E
   664  00EE                     	ds	2
   665                           
   666                           	psect	cstackCOMMON
   667  0070                     __pcstackCOMMON:
   668  0070                     ?_Setup:
   669  0070                     ?_GY_init:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_GY_Read:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_I2C_ACK:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_I2C_NACK:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_ISR:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ??_ISR:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_main:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_I2C_Master_Wait:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_I2C_Master_RepeatedStart:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_I2C_Master_Stop:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_I2C_Start:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_I2C_Read:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_UARTSendChar:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_UARTSendString:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0070                     	ds	2
   714  0072                     ??_I2C_ACK:
   715  0072                     ??_I2C_NACK:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ??_I2C_Master_Wait:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_I2C_Master_RepeatedStart:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_I2C_Master_Stop:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ?_I2C_Master_Write:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_I2C_Read:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_UARTSendChar:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ?___lwdiv:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ?___lldiv:	
   740                           ; 2 bytes @ 0x2
   741                           
   742  0072                     UARTSendChar@c:	
   743                           ; 4 bytes @ 0x2
   744                           
   745  0072                     I2C_Master_Write@d:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ___lwdiv@divisor:	
   749                           ; 2 bytes @ 0x2
   750                           
   751  0072                     ___lldiv@divisor:	
   752                           ; 2 bytes @ 0x2
   753                           
   754                           
   755                           ; 4 bytes @ 0x2
   756  0072                     	ds	1
   757  0073                     ??_UARTSendString:
   758  0073                     I2C_Read@ACK_NACK:	
   759                           ; 1 bytes @ 0x3
   760                           
   761                           
   762                           ; 1 bytes @ 0x3
   763  0073                     	ds	1
   764  0074                     ??_I2C_Master_Write:
   765  0074                     ??_I2C_Start:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     I2C_Read@Data:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     UARTSendString@i:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     ___lwdiv@dividend:	
   775                           ; 2 bytes @ 0x4
   776                           
   777                           
   778                           ; 2 bytes @ 0x4
   779  0074                     	ds	2
   780  0076                     ??___lwdiv:
   781  0076                     I2C_Start@add:	
   782                           ; 1 bytes @ 0x6
   783                           
   784  0076                     UARTSendString@str:	
   785                           ; 1 bytes @ 0x6
   786                           
   787  0076                     ___lldiv@dividend:	
   788                           ; 1 bytes @ 0x6
   789                           
   790                           
   791                           ; 4 bytes @ 0x6
   792  0076                     	ds	1
   793  0077                     ??_GY_init:
   794  0077                     ___lwdiv@quotient:	
   795                           ; 1 bytes @ 0x7
   796                           
   797                           
   798                           ; 2 bytes @ 0x7
   799  0077                     	ds	2
   800  0079                     ___lwdiv@counter:
   801                           
   802                           ; 1 bytes @ 0x9
   803  0079                     	ds	1
   804  007A                     ??___lldiv:
   805  007A                     ??___lwmod:	
   806                           ; 1 bytes @ 0xA
   807                           
   808                           
   809                           ; 1 bytes @ 0xA
   810  007A                     	ds	1
   811  007B                     ??_Setup:
   812  007B                     ___lwmod@counter:	
   813                           ; 1 bytes @ 0xB
   814                           
   815                           
   816                           ; 1 bytes @ 0xB
   817  007B                     	ds	1
   818                           
   819                           	psect	cstackBANK0
   820  0020                     __pcstackBANK0:
   821  0020                     ?___lwmod:
   822  0020                     ___lwmod@divisor:	
   823                           ; 2 bytes @ 0x0
   824                           
   825  0020                     ___lldiv@quotient:	
   826                           ; 2 bytes @ 0x0
   827                           
   828                           
   829                           ; 4 bytes @ 0x0
   830  0020                     	ds	2
   831  0022                     ___lwmod@dividend:
   832                           
   833                           ; 2 bytes @ 0x2
   834  0022                     	ds	2
   835  0024                     ?_sprintf:
   836  0024                     sprintf@f:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0024                     ___lldiv@counter:	
   840                           ; 1 bytes @ 0x4
   841                           
   842                           
   843                           ; 1 bytes @ 0x4
   844  0024                     	ds	1
   845  0025                     ?_I2C_Master_Init:
   846  0025                     ?_UARTInit:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0025                     I2C_Master_Init@c:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0025                     UARTInit@baud_rate:	
   853                           ; 4 bytes @ 0x5
   854                           
   855                           
   856                           ; 4 bytes @ 0x5
   857  0025                     	ds	2
   858  0027                     ??_sprintf:
   859                           
   860                           ; 1 bytes @ 0x7
   861  0027                     	ds	2
   862  0029                     ??_I2C_Master_Init:
   863  0029                     UARTInit@BRGH:	
   864                           ; 1 bytes @ 0x9
   865                           
   866                           
   867                           ; 1 bytes @ 0x9
   868  0029                     	ds	1
   869  002A                     ??_UARTInit:
   870  002A                     sprintf@ap:	
   871                           ; 1 bytes @ 0xA
   872                           
   873                           
   874                           ; 1 bytes @ 0xA
   875  002A                     	ds	1
   876  002B                     sprintf@flag:
   877                           
   878                           ; 1 bytes @ 0xB
   879  002B                     	ds	1
   880  002C                     sprintf@prec:
   881                           
   882                           ; 1 bytes @ 0xC
   883  002C                     	ds	1
   884  002D                     sprintf@val:
   885                           
   886                           ; 2 bytes @ 0xD
   887  002D                     	ds	2
   888  002F                     sprintf@sp:
   889                           
   890                           ; 1 bytes @ 0xF
   891  002F                     	ds	1
   892  0030                     sprintf@c:
   893                           
   894                           ; 1 bytes @ 0x10
   895  0030                     	ds	1
   896  0031                     ??_GY_Read:
   897                           
   898                           ; 1 bytes @ 0x11
   899  0031                     	ds	4
   900  0035                     ??_main:
   901                           
   902                           ; 1 bytes @ 0x15
   903  0035                     	ds	3
   904                           
   905                           	psect	maintext
   906  04D2                     __pmaintext:	
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 52 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       3       0       0       0
   929 ;;      Totals:         0       3       0       0       0
   930 ;;Total ram usage:        3 bytes
   931 ;; Hardware stack levels required when called:    5
   932 ;; This function calls:
   933 ;;		_GY_Read
   934 ;;		_GY_init
   935 ;;		_I2C_Master_Init
   936 ;;		_Setup
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _main
   944  04D2                     _main:
   945  04D2                     l1532:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main.c: 53:     Setup();
   951  04D2  120A  118A  25FA  120A  118A  	fcall	_Setup
   952  04D7                     l1534:
   953                           
   954                           ;main.c: 58:     _delay((unsigned long)((100)*(4000000/4000.0)));
   955  04D7  3082               	movlw	130
   956  04D8  1283               	bcf	3,5	;RP0=0, select bank0
   957  04D9  1303               	bcf	3,6	;RP1=0, select bank0
   958  04DA  00B6               	movwf	??_main+1
   959  04DB  30DD               	movlw	221
   960  04DC  00B5               	movwf	??_main
   961  04DD                     u947:
   962  04DD  0BB5               	decfsz	??_main,f
   963  04DE  2CDD               	goto	u947
   964  04DF  0BB6               	decfsz	??_main+1,f
   965  04E0  2CDD               	goto	u947
   966  04E1                     l1536:
   967                           
   968                           ;main.c: 59:     I2C_Master_Init(100000);
   969  04E1  3000               	movlw	0
   970  04E2  1283               	bcf	3,5	;RP0=0, select bank0
   971  04E3  1303               	bcf	3,6	;RP1=0, select bank0
   972  04E4  00A8               	movwf	I2C_Master_Init@c+3
   973  04E5  3001               	movlw	1
   974  04E6  00A7               	movwf	I2C_Master_Init@c+2
   975  04E7  3086               	movlw	134
   976  04E8  00A6               	movwf	I2C_Master_Init@c+1
   977  04E9  30A0               	movlw	160
   978  04EA  00A5               	movwf	I2C_Master_Init@c
   979  04EB  120A  118A  259B  120A  118A  	fcall	_I2C_Master_Init
   980  04F0                     l1538:
   981                           
   982                           ;main.c: 62:     GY_init();
   983  04F0  120A  118A  22EA  120A  118A  	fcall	_GY_init
   984  04F5                     l1540:
   985                           
   986                           ;main.c: 67:         PORTAbits.RA0 = ~PORTAbits.RA0;
   987  04F5  1003               	clrc
   988  04F6  1283               	bcf	3,5	;RP0=0, select bank0
   989  04F7  1303               	bcf	3,6	;RP1=0, select bank0
   990  04F8  1C05               	btfss	5,0	;volatile
   991  04F9  1403               	setc
   992  04FA  1803               	btfsc	3,0
   993  04FB  2CFD               	goto	u911
   994  04FC  2D01               	goto	u910
   995  04FD                     u911:
   996  04FD  1283               	bcf	3,5	;RP0=0, select bank0
   997  04FE  1303               	bcf	3,6	;RP1=0, select bank0
   998  04FF  1405               	bsf	5,0	;volatile
   999  0500  2D04               	goto	u924
  1000  0501                     u910:
  1001  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0503  1005               	bcf	5,0	;volatile
  1004  0504                     u924:
  1005  0504                     l1542:
  1006                           
  1007                           ;main.c: 68:         GY_Read();
  1008  0504  120A  118A  2013  120A  118A  	fcall	_GY_Read
  1009  0509                     l1544:
  1010                           
  1011                           ;main.c: 69:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1012  0509  3006               	movlw	6
  1013  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1014  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1015  050C  00B7               	movwf	??_main+2
  1016  050D  3013               	movlw	19
  1017  050E  00B6               	movwf	??_main+1
  1018  050F  30AD               	movlw	173
  1019  0510  00B5               	movwf	??_main
  1020  0511                     u957:
  1021  0511  0BB5               	decfsz	??_main,f
  1022  0512  2D11               	goto	u957
  1023  0513  0BB6               	decfsz	??_main+1,f
  1024  0514  2D11               	goto	u957
  1025  0515  0BB7               	decfsz	??_main+2,f
  1026  0516  2D11               	goto	u957
  1027  0517  2CF5               	goto	l1540
  1028  0518  120A  118A  280C   	ljmp	start
  1029  051B                     __end_of_main:
  1030                           
  1031                           	psect	text1
  1032  05FA                     __ptext1:	
  1033 ;; *************** function _Setup *****************
  1034 ;; Defined at:
  1035 ;;		line 80 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    3
  1056 ;; This function calls:
  1057 ;;		_UARTInit
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _Setup
  1065  05FA                     _Setup:
  1066  05FA                     l1440:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  1069                           
  1070                           
  1071                           ;main.c: 82:     UARTInit(9600, 1);
  1072  05FA  3000               	movlw	0
  1073  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1074  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1075  05FD  00A8               	movwf	UARTInit@baud_rate+3
  1076  05FE  3000               	movlw	0
  1077  05FF  00A7               	movwf	UARTInit@baud_rate+2
  1078  0600  3025               	movlw	37
  1079  0601  00A6               	movwf	UARTInit@baud_rate+1
  1080  0602  3080               	movlw	128
  1081  0603  00A5               	movwf	UARTInit@baud_rate
  1082  0604  01A9               	clrf	UARTInit@BRGH
  1083  0605  0AA9               	incf	UARTInit@BRGH,f
  1084  0606  120A  118A  2396  120A  118A  	fcall	_UARTInit
  1085  060B                     l1442:
  1086                           
  1087                           ;main.c: 85:     TRISA = 0;
  1088  060B  1683               	bsf	3,5	;RP0=1, select bank1
  1089  060C  1303               	bcf	3,6	;RP1=0, select bank1
  1090  060D  0185               	clrf	5	;volatile
  1091  060E                     l1444:
  1092                           
  1093                           ;main.c: 86:     PORTA = 0;
  1094  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1095  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0610  0185               	clrf	5	;volatile
  1097  0611                     l1446:
  1098                           
  1099                           ;main.c: 87:     TRISC = 0;
  1100  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0612  1303               	bcf	3,6	;RP1=0, select bank1
  1102  0613  0187               	clrf	7	;volatile
  1103  0614                     l1448:
  1104                           
  1105                           ;main.c: 88:     PORTC = 0;
  1106  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0616  0187               	clrf	7	;volatile
  1109  0617                     l1450:
  1110                           
  1111                           ;main.c: 89:     ANSEL = 0;
  1112  0617  1683               	bsf	3,5	;RP0=1, select bank3
  1113  0618  1703               	bsf	3,6	;RP1=1, select bank3
  1114  0619  0188               	clrf	8	;volatile
  1115  061A                     l1452:
  1116                           
  1117                           ;main.c: 90:     ANSELH = 0;
  1118  061A  0189               	clrf	9	;volatile
  1119  061B                     l42:
  1120  061B  0008               	return
  1121  061C                     __end_of_Setup:
  1122                           
  1123                           	psect	text2
  1124  0396                     __ptext2:	
  1125 ;; *************** function _UARTInit *****************
  1126 ;; Defined at:
  1127 ;;		line 9 in file "UART.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  1130 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       5       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       4       0       0       0
  1145 ;;      Totals:         0       9       0       0       0
  1146 ;;Total ram usage:        9 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		___lldiv
  1151 ;; This function is called by:
  1152 ;;		_Setup
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _UARTInit
  1158  0396                     _UARTInit:
  1159  0396                     l1314:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1162                           
  1163                           
  1164                           ;UART.c: 11:     if (BRGH == 0) {
  1165  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0398  0829               	movf	UARTInit@BRGH,w
  1168  0399  1D03               	btfss	3,2
  1169  039A  2B9C               	goto	u751
  1170  039B  2B9D               	goto	u750
  1171  039C                     u751:
  1172  039C  2BCA               	goto	l1320
  1173  039D                     u750:
  1174  039D                     l1316:
  1175                           
  1176                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  1177  039D  0825               	movf	UARTInit@baud_rate,w
  1178  039E  00AA               	movwf	??_UARTInit
  1179  039F  0826               	movf	UARTInit@baud_rate+1,w
  1180  03A0  00AB               	movwf	??_UARTInit+1
  1181  03A1  0827               	movf	UARTInit@baud_rate+2,w
  1182  03A2  00AC               	movwf	??_UARTInit+2
  1183  03A3  0828               	movf	UARTInit@baud_rate+3,w
  1184  03A4  00AD               	movwf	??_UARTInit+3
  1185  03A5  3006               	movlw	6
  1186  03A6                     u765:
  1187  03A6  1003               	clrc
  1188  03A7  0DAA               	rlf	??_UARTInit,f
  1189  03A8  0DAB               	rlf	??_UARTInit+1,f
  1190  03A9  0DAC               	rlf	??_UARTInit+2,f
  1191  03AA  0DAD               	rlf	??_UARTInit+3,f
  1192  03AB                     u760:
  1193  03AB  3EFF               	addlw	-1
  1194  03AC  1D03               	skipz
  1195  03AD  2BA6               	goto	u765
  1196  03AE  082D               	movf	??_UARTInit+3,w
  1197  03AF  00F5               	movwf	___lldiv@divisor+3
  1198  03B0  082C               	movf	??_UARTInit+2,w
  1199  03B1  00F4               	movwf	___lldiv@divisor+2
  1200  03B2  082B               	movf	??_UARTInit+1,w
  1201  03B3  00F3               	movwf	___lldiv@divisor+1
  1202  03B4  082A               	movf	??_UARTInit,w
  1203  03B5  00F2               	movwf	___lldiv@divisor
  1204  03B6  3000               	movlw	0
  1205  03B7  00F9               	movwf	___lldiv@dividend+3
  1206  03B8  303D               	movlw	61
  1207  03B9  00F8               	movwf	___lldiv@dividend+2
  1208  03BA  3009               	movlw	9
  1209  03BB  00F7               	movwf	___lldiv@dividend+1
  1210  03BC  3000               	movlw	0
  1211  03BD  00F6               	movwf	___lldiv@dividend
  1212  03BE  120A  118A  2405  120A  118A  	fcall	___lldiv
  1213  03C3  0872               	movf	?___lldiv,w
  1214  03C4  3EFF               	addlw	255
  1215  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1216  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1217  03C7  0099               	movwf	25	;volatile
  1218  03C8                     l1318:
  1219                           
  1220                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  1221  03C8  1118               	bcf	24,2	;volatile
  1222                           
  1223                           ;UART.c: 14:     } else {
  1224  03C9  2BF6               	goto	l1324
  1225  03CA                     l1320:
  1226                           
  1227                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  1228  03CA  0825               	movf	UARTInit@baud_rate,w
  1229  03CB  00AA               	movwf	??_UARTInit
  1230  03CC  0826               	movf	UARTInit@baud_rate+1,w
  1231  03CD  00AB               	movwf	??_UARTInit+1
  1232  03CE  0827               	movf	UARTInit@baud_rate+2,w
  1233  03CF  00AC               	movwf	??_UARTInit+2
  1234  03D0  0828               	movf	UARTInit@baud_rate+3,w
  1235  03D1  00AD               	movwf	??_UARTInit+3
  1236  03D2  3004               	movlw	4
  1237  03D3                     u775:
  1238  03D3  1003               	clrc
  1239  03D4  0DAA               	rlf	??_UARTInit,f
  1240  03D5  0DAB               	rlf	??_UARTInit+1,f
  1241  03D6  0DAC               	rlf	??_UARTInit+2,f
  1242  03D7  0DAD               	rlf	??_UARTInit+3,f
  1243  03D8                     u770:
  1244  03D8  3EFF               	addlw	-1
  1245  03D9  1D03               	skipz
  1246  03DA  2BD3               	goto	u775
  1247  03DB  082D               	movf	??_UARTInit+3,w
  1248  03DC  00F5               	movwf	___lldiv@divisor+3
  1249  03DD  082C               	movf	??_UARTInit+2,w
  1250  03DE  00F4               	movwf	___lldiv@divisor+2
  1251  03DF  082B               	movf	??_UARTInit+1,w
  1252  03E0  00F3               	movwf	___lldiv@divisor+1
  1253  03E1  082A               	movf	??_UARTInit,w
  1254  03E2  00F2               	movwf	___lldiv@divisor
  1255  03E3  3000               	movlw	0
  1256  03E4  00F9               	movwf	___lldiv@dividend+3
  1257  03E5  303D               	movlw	61
  1258  03E6  00F8               	movwf	___lldiv@dividend+2
  1259  03E7  3009               	movlw	9
  1260  03E8  00F7               	movwf	___lldiv@dividend+1
  1261  03E9  3000               	movlw	0
  1262  03EA  00F6               	movwf	___lldiv@dividend
  1263  03EB  120A  118A  2405  120A  118A  	fcall	___lldiv
  1264  03F0  0872               	movf	?___lldiv,w
  1265  03F1  3EFF               	addlw	255
  1266  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1267  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  1268  03F4  0099               	movwf	25	;volatile
  1269  03F5                     l1322:
  1270                           
  1271                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  1272  03F5  1518               	bsf	24,2	;volatile
  1273  03F6                     l1324:
  1274                           
  1275                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  1276  03F6  1318               	bcf	24,6	;volatile
  1277  03F7                     l1326:
  1278                           
  1279                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  1280  03F7  1698               	bsf	24,5	;volatile
  1281  03F8                     l1328:
  1282                           
  1283                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  1284  03F8  1218               	bcf	24,4	;volatile
  1285  03F9                     l1330:
  1286                           
  1287                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  1288  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1289  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1290  03FB  1798               	bsf	24,7	;volatile
  1291  03FC                     l1332:
  1292                           
  1293                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1294  03FC  1318               	bcf	24,6	;volatile
  1295  03FD                     l1334:
  1296                           
  1297                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  1298  03FD  1618               	bsf	24,4	;volatile
  1299  03FE                     l1336:
  1300                           
  1301                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  1302  03FE  1118               	bcf	24,2	;volatile
  1303  03FF                     l1338:
  1304                           
  1305                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  1306  03FF  1098               	bcf	24,1	;volatile
  1307  0400                     l1340:
  1308                           
  1309                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  1310  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0401  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0402  1787               	bsf	7,7	;volatile
  1313  0403                     l1342:
  1314                           
  1315                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  1316  0403  1307               	bcf	7,6	;volatile
  1317  0404                     l156:
  1318  0404  0008               	return
  1319  0405                     __end_of_UARTInit:
  1320                           
  1321                           	psect	text3
  1322  059B                     __ptext3:	
  1323 ;; *************** function _I2C_Master_Init *****************
  1324 ;; Defined at:
  1325 ;;		line 17 in file "I2C.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  c               4    5[BANK0 ] const unsigned long 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       4       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       4       0       0       0
  1342 ;;      Totals:         0       8       0       0       0
  1343 ;;Total ram usage:        8 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		___lldiv
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _I2C_Master_Init
  1355  059B                     _I2C_Master_Init:
  1356  059B                     l1456:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1359                           
  1360                           
  1361                           ;I2C.c: 18:     SSPCON = 0b00101000;
  1362  059B  3028               	movlw	40
  1363  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1364  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1365  059E  0094               	movwf	20	;volatile
  1366  059F                     l1458:
  1367                           
  1368                           ;I2C.c: 19:     SSPCON2 = 0;
  1369  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1370  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1371  05A1  0191               	clrf	17	;volatile
  1372  05A2                     l1460:
  1373                           
  1374                           ;I2C.c: 20:     SSPADD = (4000000 / (4 * c)) - 1;
  1375  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1376  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1377  05A4  0825               	movf	I2C_Master_Init@c,w
  1378  05A5  00A9               	movwf	??_I2C_Master_Init
  1379  05A6  0826               	movf	I2C_Master_Init@c+1,w
  1380  05A7  00AA               	movwf	??_I2C_Master_Init+1
  1381  05A8  0827               	movf	I2C_Master_Init@c+2,w
  1382  05A9  00AB               	movwf	??_I2C_Master_Init+2
  1383  05AA  0828               	movf	I2C_Master_Init@c+3,w
  1384  05AB  00AC               	movwf	??_I2C_Master_Init+3
  1385  05AC  3002               	movlw	2
  1386  05AD                     u895:
  1387  05AD  1003               	clrc
  1388  05AE  0DA9               	rlf	??_I2C_Master_Init,f
  1389  05AF  0DAA               	rlf	??_I2C_Master_Init+1,f
  1390  05B0  0DAB               	rlf	??_I2C_Master_Init+2,f
  1391  05B1  0DAC               	rlf	??_I2C_Master_Init+3,f
  1392  05B2                     u890:
  1393  05B2  3EFF               	addlw	-1
  1394  05B3  1D03               	skipz
  1395  05B4  2DAD               	goto	u895
  1396  05B5  082C               	movf	??_I2C_Master_Init+3,w
  1397  05B6  00F5               	movwf	___lldiv@divisor+3
  1398  05B7  082B               	movf	??_I2C_Master_Init+2,w
  1399  05B8  00F4               	movwf	___lldiv@divisor+2
  1400  05B9  082A               	movf	??_I2C_Master_Init+1,w
  1401  05BA  00F3               	movwf	___lldiv@divisor+1
  1402  05BB  0829               	movf	??_I2C_Master_Init,w
  1403  05BC  00F2               	movwf	___lldiv@divisor
  1404  05BD  3000               	movlw	0
  1405  05BE  00F9               	movwf	___lldiv@dividend+3
  1406  05BF  303D               	movlw	61
  1407  05C0  00F8               	movwf	___lldiv@dividend+2
  1408  05C1  3009               	movlw	9
  1409  05C2  00F7               	movwf	___lldiv@dividend+1
  1410  05C3  3000               	movlw	0
  1411  05C4  00F6               	movwf	___lldiv@dividend
  1412  05C5  120A  118A  2405  120A  118A  	fcall	___lldiv
  1413  05CA  0872               	movf	?___lldiv,w
  1414  05CB  3EFF               	addlw	255
  1415  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1416  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1417  05CE  0093               	movwf	19	;volatile
  1418  05CF                     l1462:
  1419                           
  1420                           ;I2C.c: 21:     SSPSTAT = 0;
  1421  05CF  0194               	clrf	20	;volatile
  1422  05D0                     l1464:
  1423                           
  1424                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1425  05D0  1587               	bsf	7,3	;volatile
  1426  05D1                     l1466:
  1427                           
  1428                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1429  05D1  1607               	bsf	7,4	;volatile
  1430  05D2                     l85:
  1431  05D2  0008               	return
  1432  05D3                     __end_of_I2C_Master_Init:
  1433                           
  1434                           	psect	text4
  1435  0405                     __ptext4:	
  1436 ;; *************** function ___lldiv *****************
  1437 ;; Defined at:
  1438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  divisor         4    2[COMMON] unsigned long 
  1441 ;;  dividend        4    6[COMMON] unsigned long 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  quotient        4    0[BANK0 ] unsigned long 
  1444 ;;  counter         1    4[BANK0 ] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  4    2[COMMON] unsigned long 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         8       0       0       0       0
  1455 ;;      Locals:         0       5       0       0       0
  1456 ;;      Temps:          1       0       0       0       0
  1457 ;;      Totals:         9       5       0       0       0
  1458 ;;Total ram usage:       14 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_I2C_Master_Init
  1465 ;;		_UARTInit
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function ___lldiv
  1471  0405                     ___lldiv:
  1472  0405                     l1242:	
  1473                           ;incstack = 0
  1474                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1475                           
  1476  0405  3000               	movlw	0
  1477  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0408  00A3               	movwf	___lldiv@quotient+3
  1480  0409  3000               	movlw	0
  1481  040A  00A2               	movwf	___lldiv@quotient+2
  1482  040B  3000               	movlw	0
  1483  040C  00A1               	movwf	___lldiv@quotient+1
  1484  040D  3000               	movlw	0
  1485  040E  00A0               	movwf	___lldiv@quotient
  1486  040F  0875               	movf	___lldiv@divisor+3,w
  1487  0410  0474               	iorwf	___lldiv@divisor+2,w
  1488  0411  0473               	iorwf	___lldiv@divisor+1,w
  1489  0412  0472               	iorwf	___lldiv@divisor,w
  1490  0413  1903               	skipnz
  1491  0414  2C16               	goto	u551
  1492  0415  2C17               	goto	u550
  1493  0416                     u551:
  1494  0416  2C64               	goto	l1262
  1495  0417                     u550:
  1496  0417                     l1244:
  1497  0417  01A4               	clrf	___lldiv@counter
  1498  0418  0AA4               	incf	___lldiv@counter,f
  1499  0419  2C27               	goto	l1248
  1500  041A                     l1246:
  1501  041A  3001               	movlw	1
  1502  041B  00FA               	movwf	??___lldiv
  1503  041C                     u565:
  1504  041C  1003               	clrc
  1505  041D  0DF2               	rlf	___lldiv@divisor,f
  1506  041E  0DF3               	rlf	___lldiv@divisor+1,f
  1507  041F  0DF4               	rlf	___lldiv@divisor+2,f
  1508  0420  0DF5               	rlf	___lldiv@divisor+3,f
  1509  0421  0BFA               	decfsz	??___lldiv,f
  1510  0422  2C1C               	goto	u565
  1511  0423  3001               	movlw	1
  1512  0424  00FA               	movwf	??___lldiv
  1513  0425  087A               	movf	??___lldiv,w
  1514  0426  07A4               	addwf	___lldiv@counter,f
  1515  0427                     l1248:
  1516  0427  1FF5               	btfss	___lldiv@divisor+3,7
  1517  0428  2C2A               	goto	u571
  1518  0429  2C2B               	goto	u570
  1519  042A                     u571:
  1520  042A  2C1A               	goto	l1246
  1521  042B                     u570:
  1522  042B                     l1250:
  1523  042B  3001               	movlw	1
  1524  042C  00FA               	movwf	??___lldiv
  1525  042D                     u585:
  1526  042D  1003               	clrc
  1527  042E  0DA0               	rlf	___lldiv@quotient,f
  1528  042F  0DA1               	rlf	___lldiv@quotient+1,f
  1529  0430  0DA2               	rlf	___lldiv@quotient+2,f
  1530  0431  0DA3               	rlf	___lldiv@quotient+3,f
  1531  0432  0BFA               	decfsz	??___lldiv,f
  1532  0433  2C2D               	goto	u585
  1533  0434                     l1252:
  1534  0434  0875               	movf	___lldiv@divisor+3,w
  1535  0435  0279               	subwf	___lldiv@dividend+3,w
  1536  0436  1D03               	skipz
  1537  0437  2C42               	goto	u595
  1538  0438  0874               	movf	___lldiv@divisor+2,w
  1539  0439  0278               	subwf	___lldiv@dividend+2,w
  1540  043A  1D03               	skipz
  1541  043B  2C42               	goto	u595
  1542  043C  0873               	movf	___lldiv@divisor+1,w
  1543  043D  0277               	subwf	___lldiv@dividend+1,w
  1544  043E  1D03               	skipz
  1545  043F  2C42               	goto	u595
  1546  0440  0872               	movf	___lldiv@divisor,w
  1547  0441  0276               	subwf	___lldiv@dividend,w
  1548  0442                     u595:
  1549  0442  1C03               	skipc
  1550  0443  2C45               	goto	u591
  1551  0444  2C46               	goto	u590
  1552  0445                     u591:
  1553  0445  2C55               	goto	l1258
  1554  0446                     u590:
  1555  0446                     l1254:
  1556  0446  0872               	movf	___lldiv@divisor,w
  1557  0447  02F6               	subwf	___lldiv@dividend,f
  1558  0448  0873               	movf	___lldiv@divisor+1,w
  1559  0449  1C03               	skipc
  1560  044A  0F73               	incfsz	___lldiv@divisor+1,w
  1561  044B  02F7               	subwf	___lldiv@dividend+1,f
  1562  044C  0874               	movf	___lldiv@divisor+2,w
  1563  044D  1C03               	skipc
  1564  044E  0F74               	incfsz	___lldiv@divisor+2,w
  1565  044F  02F8               	subwf	___lldiv@dividend+2,f
  1566  0450  0875               	movf	___lldiv@divisor+3,w
  1567  0451  1C03               	skipc
  1568  0452  0F75               	incfsz	___lldiv@divisor+3,w
  1569  0453  02F9               	subwf	___lldiv@dividend+3,f
  1570  0454                     l1256:
  1571  0454  1420               	bsf	___lldiv@quotient,0
  1572  0455                     l1258:
  1573  0455  3001               	movlw	1
  1574  0456                     u605:
  1575  0456  1003               	clrc
  1576  0457  0CF5               	rrf	___lldiv@divisor+3,f
  1577  0458  0CF4               	rrf	___lldiv@divisor+2,f
  1578  0459  0CF3               	rrf	___lldiv@divisor+1,f
  1579  045A  0CF2               	rrf	___lldiv@divisor,f
  1580  045B  3EFF               	addlw	-1
  1581  045C  1D03               	skipz
  1582  045D  2C56               	goto	u605
  1583  045E                     l1260:
  1584  045E  3001               	movlw	1
  1585  045F  02A4               	subwf	___lldiv@counter,f
  1586  0460  1D03               	btfss	3,2
  1587  0461  2C63               	goto	u611
  1588  0462  2C64               	goto	u610
  1589  0463                     u611:
  1590  0463  2C2B               	goto	l1250
  1591  0464                     u610:
  1592  0464                     l1262:
  1593  0464  0823               	movf	___lldiv@quotient+3,w
  1594  0465  00F5               	movwf	?___lldiv+3
  1595  0466  0822               	movf	___lldiv@quotient+2,w
  1596  0467  00F4               	movwf	?___lldiv+2
  1597  0468  0821               	movf	___lldiv@quotient+1,w
  1598  0469  00F3               	movwf	?___lldiv+1
  1599  046A  0820               	movf	___lldiv@quotient,w
  1600  046B  00F2               	movwf	?___lldiv
  1601  046C                     l358:
  1602  046C  0008               	return
  1603  046D                     __end_of___lldiv:
  1604                           
  1605                           	psect	text5
  1606  02EA                     __ptext5:	
  1607 ;; *************** function _GY_init *****************
  1608 ;; Defined at:
  1609 ;;		line 17 in file "GY-521.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		_I2C_Master_Stop
  1632 ;;		_I2C_Master_Write
  1633 ;;		_I2C_Start
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _GY_init
  1641  02EA                     _GY_init:
  1642  02EA                     l1468:	
  1643                           ;incstack = 0
  1644                           ; Regs used in _GY_init: [wreg+status,2+status,0+pclath+cstack]
  1645                           
  1646                           
  1647                           ;GY-521.c: 24:     I2C_Start(0xD0);
  1648  02EA  30D0               	movlw	208
  1649  02EB  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1650                           
  1651                           ;GY-521.c: 25:     I2C_Master_Write(0x6B);
  1652  02F0  306B               	movlw	107
  1653  02F1  00F2               	movwf	I2C_Master_Write@d
  1654  02F2  3000               	movlw	0
  1655  02F3  00F3               	movwf	I2C_Master_Write@d+1
  1656  02F4  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1657                           
  1658                           ;GY-521.c: 26:     I2C_Master_Write(0x01);
  1659  02F9  3001               	movlw	1
  1660  02FA  00F2               	movwf	I2C_Master_Write@d
  1661  02FB  3000               	movlw	0
  1662  02FC  00F3               	movwf	I2C_Master_Write@d+1
  1663  02FD  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1664                           
  1665                           ;GY-521.c: 27:     I2C_Master_Stop();
  1666  0302  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1667                           
  1668                           ;GY-521.c: 29:     I2C_Start(0xD0);
  1669  0307  30D0               	movlw	208
  1670  0308  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1671                           
  1672                           ;GY-521.c: 30:     I2C_Master_Write(0x19);
  1673  030D  3019               	movlw	25
  1674  030E  00F2               	movwf	I2C_Master_Write@d
  1675  030F  3000               	movlw	0
  1676  0310  00F3               	movwf	I2C_Master_Write@d+1
  1677  0311  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1678                           
  1679                           ;GY-521.c: 31:     I2C_Master_Write(0x08);
  1680  0316  3008               	movlw	8
  1681  0317  00F2               	movwf	I2C_Master_Write@d
  1682  0318  3000               	movlw	0
  1683  0319  00F3               	movwf	I2C_Master_Write@d+1
  1684  031A  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1685                           
  1686                           ;GY-521.c: 32:     I2C_Master_Stop();
  1687  031F  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1688                           
  1689                           ;GY-521.c: 35:     I2C_Start(0xD0);
  1690  0324  30D0               	movlw	208
  1691  0325  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1692                           
  1693                           ;GY-521.c: 36:     I2C_Master_Write(0x1A);
  1694  032A  301A               	movlw	26
  1695  032B  00F2               	movwf	I2C_Master_Write@d
  1696  032C  3000               	movlw	0
  1697  032D  00F3               	movwf	I2C_Master_Write@d+1
  1698  032E  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1699                           
  1700                           ;GY-521.c: 37:     I2C_Master_Write(0x00);
  1701  0333  3000               	movlw	0
  1702  0334  00F2               	movwf	I2C_Master_Write@d
  1703  0335  00F3               	movwf	I2C_Master_Write@d+1
  1704  0336  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1705                           
  1706                           ;GY-521.c: 38:     I2C_Master_Stop();
  1707  033B  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1708                           
  1709                           ;GY-521.c: 41:     I2C_Start(0xD0);
  1710  0340  30D0               	movlw	208
  1711  0341  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1712                           
  1713                           ;GY-521.c: 42:     I2C_Master_Write(0x1B);
  1714  0346  301B               	movlw	27
  1715  0347  00F2               	movwf	I2C_Master_Write@d
  1716  0348  3000               	movlw	0
  1717  0349  00F3               	movwf	I2C_Master_Write@d+1
  1718  034A  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1719                           
  1720                           ;GY-521.c: 43:     I2C_Master_Write(0x18);
  1721  034F  3018               	movlw	24
  1722  0350  00F2               	movwf	I2C_Master_Write@d
  1723  0351  3000               	movlw	0
  1724  0352  00F3               	movwf	I2C_Master_Write@d+1
  1725  0353  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1726                           
  1727                           ;GY-521.c: 44:     I2C_Master_Stop();
  1728  0358  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1729                           
  1730                           ;GY-521.c: 47:     I2C_Start(0xD0);
  1731  035D  30D0               	movlw	208
  1732  035E  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1733                           
  1734                           ;GY-521.c: 48:     I2C_Master_Write(0x1C);
  1735  0363  301C               	movlw	28
  1736  0364  00F2               	movwf	I2C_Master_Write@d
  1737  0365  3000               	movlw	0
  1738  0366  00F3               	movwf	I2C_Master_Write@d+1
  1739  0367  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1740                           
  1741                           ;GY-521.c: 49:     I2C_Master_Write(0x00);
  1742  036C  3000               	movlw	0
  1743  036D  00F2               	movwf	I2C_Master_Write@d
  1744  036E  00F3               	movwf	I2C_Master_Write@d+1
  1745  036F  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1746                           
  1747                           ;GY-521.c: 50:     I2C_Master_Stop();
  1748  0374  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1749                           
  1750                           ;GY-521.c: 53:     I2C_Start(0xD0);
  1751  0379  30D0               	movlw	208
  1752  037A  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1753                           
  1754                           ;GY-521.c: 54:     I2C_Master_Write(0x38);
  1755  037F  3038               	movlw	56
  1756  0380  00F2               	movwf	I2C_Master_Write@d
  1757  0381  3000               	movlw	0
  1758  0382  00F3               	movwf	I2C_Master_Write@d+1
  1759  0383  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1760                           
  1761                           ;GY-521.c: 55:     I2C_Master_Write(0x00);
  1762  0388  3000               	movlw	0
  1763  0389  00F2               	movwf	I2C_Master_Write@d
  1764  038A  00F3               	movwf	I2C_Master_Write@d+1
  1765  038B  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1766                           
  1767                           ;GY-521.c: 56:     I2C_Master_Stop();
  1768  0390  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1769  0395                     l203:
  1770  0395  0008               	return
  1771  0396                     __end_of_GY_init:
  1772                           
  1773                           	psect	text6
  1774  0013                     __ptext6:	
  1775 ;; *************** function _GY_Read *****************
  1776 ;; Defined at:
  1777 ;;		line 61 in file "GY-521.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  i               2   78[BANK1 ] int 
  1782 ;;  buf            50    0[BANK1 ] unsigned char [50]
  1783 ;;  valores        14   50[BANK1 ] unsigned char [14]
  1784 ;;  T               2   76[BANK1 ] int 
  1785 ;;  Gz              2   74[BANK1 ] int 
  1786 ;;  Gy              2   72[BANK1 ] int 
  1787 ;;  Gx              2   70[BANK1 ] int 
  1788 ;;  Az              2   68[BANK1 ] int 
  1789 ;;  Ay              2   66[BANK1 ] int 
  1790 ;;  Ax              2   64[BANK1 ] int 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0      80       0       0
  1802 ;;      Temps:          0       4       0       0       0
  1803 ;;      Totals:         0       4      80       0       0
  1804 ;;Total ram usage:       84 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    4
  1807 ;; This function calls:
  1808 ;;		_I2C_Master_RepeatedStart
  1809 ;;		_I2C_Master_Stop
  1810 ;;		_I2C_Master_Write
  1811 ;;		_I2C_Read
  1812 ;;		_I2C_Start
  1813 ;;		_UARTSendString
  1814 ;;		_sprintf
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _GY_Read
  1822  0013                     _GY_Read:
  1823  0013                     l1472:	
  1824                           ;incstack = 0
  1825                           ; Regs used in _GY_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1826                           
  1827                           
  1828                           ;GY-521.c: 64:     int Ax, Ay, Az, Gx, Gy, Gz, T;;GY-521.c: 65:     char buf[50];;GY-521
      +                          .c: 66:     char valores[14];;GY-521.c: 68:     I2C_Start(0xD0);
  1829  0013  30D0               	movlw	208
  1830  0014  120A  118A  263D  120A  118A  	fcall	_I2C_Start
  1831                           
  1832                           ;GY-521.c: 69:     I2C_Master_Write(0x3B);
  1833  0019  303B               	movlw	59
  1834  001A  00F2               	movwf	I2C_Master_Write@d
  1835  001B  3000               	movlw	0
  1836  001C  00F3               	movwf	I2C_Master_Write@d+1
  1837  001D  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1838                           
  1839                           ;GY-521.c: 71:     I2C_Master_RepeatedStart();
  1840  0022  120A  118A  2691  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1841                           
  1842                           ;GY-521.c: 73:     I2C_Master_Write(0xD1);
  1843  0027  30D1               	movlw	209
  1844  0028  00F2               	movwf	I2C_Master_Write@d
  1845  0029  3000               	movlw	0
  1846  002A  00F3               	movwf	I2C_Master_Write@d+1
  1847  002B  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  1848  0030                     l1474:
  1849                           
  1850                           ;GY-521.c: 82:     for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  1851  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0031  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0032  01EE               	clrf	GY_Read@i^(0+128)
  1854  0033  01EF               	clrf	(GY_Read@i+1)^(0+128)
  1855  0034                     l1480:
  1856  0034  3000               	movlw	0
  1857  0035  120A  118A  25D3  120A  118A  	fcall	_I2C_Read
  1858  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1859  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1860  003C  00B1               	movwf	??_GY_Read
  1861  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1862  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1863  003F  086E               	movf	GY_Read@i^(0+128),w
  1864  0040  3ED2               	addlw	(low (GY_Read@valores| 0))& (0+255)
  1865  0041  0084               	movwf	4
  1866  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0044  0831               	movf	??_GY_Read,w
  1869  0045  1383               	bcf	3,7	;select IRP bank1
  1870  0046  0080               	movwf	0
  1871  0047                     l1482:
  1872  0047  3001               	movlw	1
  1873  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1875  004A  07EE               	addwf	GY_Read@i^(0+128),f
  1876  004B  1803               	skipnc
  1877  004C  0AEF               	incf	(GY_Read@i+1)^(0+128),f
  1878  004D  3000               	movlw	0
  1879  004E  07EF               	addwf	(GY_Read@i+1)^(0+128),f
  1880  004F                     l1484:
  1881  004F  086F               	movf	(GY_Read@i+1)^(0+128),w
  1882  0050  3A80               	xorlw	128
  1883  0051  00FF               	movwf	btemp+1
  1884  0052  3080               	movlw	128
  1885  0053  027F               	subwf	btemp+1,w
  1886  0054  1D03               	skipz
  1887  0055  2858               	goto	u905
  1888  0056  300D               	movlw	13
  1889  0057  026E               	subwf	GY_Read@i^(0+128),w
  1890  0058                     u905:
  1891  0058  1C03               	skipc
  1892  0059  285B               	goto	u901
  1893  005A  285C               	goto	u900
  1894  005B                     u901:
  1895  005B  2834               	goto	l1480
  1896  005C                     u900:
  1897  005C                     l1486:
  1898                           
  1899                           ;GY-521.c: 83:     valores[13] = I2C_Read(1);
  1900  005C  3001               	movlw	1
  1901  005D  120A  118A  25D3  120A  118A  	fcall	_I2C_Read
  1902  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0064  00B1               	movwf	??_GY_Read
  1905  0065  0831               	movf	??_GY_Read,w
  1906  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0068  00DF               	movwf	(GY_Read@valores^(0+128)+13)
  1909                           
  1910                           ;GY-521.c: 84:     I2C_Master_Stop();
  1911  0069  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Stop
  1912  006E                     l1488:
  1913                           
  1914                           ;GY-521.c: 86:     Ax = ((int) valores[0] << 8) | ((int) valores[1]);
  1915  006E  1683               	bsf	3,5	;RP0=1, select bank1
  1916  006F  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0070  0853               	movf	(GY_Read@valores^(0+128)+1),w
  1918  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0073  00B1               	movwf	??_GY_Read
  1921  0074  01B2               	clrf	??_GY_Read+1
  1922  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1924  0077  0852               	movf	GY_Read@valores^(0+128),w
  1925  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1927  007A  00B3               	movwf	??_GY_Read+2
  1928  007B  01B4               	clrf	??_GY_Read+3
  1929  007C  0833               	movf	??_GY_Read+2,w
  1930  007D  00B4               	movwf	??_GY_Read+3
  1931  007E  01B3               	clrf	??_GY_Read+2
  1932  007F  0831               	movf	??_GY_Read,w
  1933  0080  0433               	iorwf	??_GY_Read+2,w
  1934  0081  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0082  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0083  00E0               	movwf	GY_Read@Ax^(0+128)
  1937  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0086  0832               	movf	??_GY_Read+1,w
  1940  0087  0434               	iorwf	??_GY_Read+3,w
  1941  0088  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0089  1303               	bcf	3,6	;RP1=0, select bank1
  1943  008A  00E1               	movwf	(GY_Read@Ax+1)^(0+128)
  1944  008B                     l1490:
  1945                           
  1946                           ;GY-521.c: 87:     Ay = ((int) valores[2] << 8) | ((int) valores[3]);
  1947  008B  0855               	movf	(GY_Read@valores^(0+128)+3),w
  1948  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1949  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1950  008E  00B1               	movwf	??_GY_Read
  1951  008F  01B2               	clrf	??_GY_Read+1
  1952  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1954  0092  0854               	movf	(GY_Read@valores^(0+128)+2),w
  1955  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0095  00B3               	movwf	??_GY_Read+2
  1958  0096  01B4               	clrf	??_GY_Read+3
  1959  0097  0833               	movf	??_GY_Read+2,w
  1960  0098  00B4               	movwf	??_GY_Read+3
  1961  0099  01B3               	clrf	??_GY_Read+2
  1962  009A  0831               	movf	??_GY_Read,w
  1963  009B  0433               	iorwf	??_GY_Read+2,w
  1964  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1965  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1966  009E  00E2               	movwf	GY_Read@Ay^(0+128)
  1967  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1968  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1969  00A1  0832               	movf	??_GY_Read+1,w
  1970  00A2  0434               	iorwf	??_GY_Read+3,w
  1971  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1972  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1973  00A5  00E3               	movwf	(GY_Read@Ay+1)^(0+128)
  1974  00A6                     l1492:
  1975                           
  1976                           ;GY-521.c: 88:     Az = ((int) valores[4] << 8) | ((int) valores[5]);
  1977  00A6  0857               	movf	(GY_Read@valores^(0+128)+5),w
  1978  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1979  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1980  00A9  00B1               	movwf	??_GY_Read
  1981  00AA  01B2               	clrf	??_GY_Read+1
  1982  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1983  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1984  00AD  0856               	movf	(GY_Read@valores^(0+128)+4),w
  1985  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1986  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1987  00B0  00B3               	movwf	??_GY_Read+2
  1988  00B1  01B4               	clrf	??_GY_Read+3
  1989  00B2  0833               	movf	??_GY_Read+2,w
  1990  00B3  00B4               	movwf	??_GY_Read+3
  1991  00B4  01B3               	clrf	??_GY_Read+2
  1992  00B5  0831               	movf	??_GY_Read,w
  1993  00B6  0433               	iorwf	??_GY_Read+2,w
  1994  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1995  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1996  00B9  00E4               	movwf	GY_Read@Az^(0+128)
  1997  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1998  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1999  00BC  0832               	movf	??_GY_Read+1,w
  2000  00BD  0434               	iorwf	??_GY_Read+3,w
  2001  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  2002  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  2003  00C0  00E5               	movwf	(GY_Read@Az+1)^(0+128)
  2004  00C1                     l1494:
  2005                           
  2006                           ;GY-521.c: 89:     T = ((int) valores[6] << 8) | ((int) valores[7]);
  2007  00C1  0859               	movf	(GY_Read@valores^(0+128)+7),w
  2008  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  2009  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  2010  00C4  00B1               	movwf	??_GY_Read
  2011  00C5  01B2               	clrf	??_GY_Read+1
  2012  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  2013  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  2014  00C8  0858               	movf	(GY_Read@valores^(0+128)+6),w
  2015  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2016  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2017  00CB  00B3               	movwf	??_GY_Read+2
  2018  00CC  01B4               	clrf	??_GY_Read+3
  2019  00CD  0833               	movf	??_GY_Read+2,w
  2020  00CE  00B4               	movwf	??_GY_Read+3
  2021  00CF  01B3               	clrf	??_GY_Read+2
  2022  00D0  0831               	movf	??_GY_Read,w
  2023  00D1  0433               	iorwf	??_GY_Read+2,w
  2024  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  2025  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  2026  00D4  00EC               	movwf	GY_Read@T^(0+128)
  2027  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2028  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2029  00D7  0832               	movf	??_GY_Read+1,w
  2030  00D8  0434               	iorwf	??_GY_Read+3,w
  2031  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2032  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  2033  00DB  00ED               	movwf	(GY_Read@T+1)^(0+128)
  2034  00DC                     l1496:
  2035                           
  2036                           ;GY-521.c: 90:     Gx = ((int) valores[8] << 8) | ((int) valores[9]);
  2037  00DC  085B               	movf	(GY_Read@valores^(0+128)+9),w
  2038  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2039  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2040  00DF  00B1               	movwf	??_GY_Read
  2041  00E0  01B2               	clrf	??_GY_Read+1
  2042  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2043  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  2044  00E3  085A               	movf	(GY_Read@valores^(0+128)+8),w
  2045  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2046  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2047  00E6  00B3               	movwf	??_GY_Read+2
  2048  00E7  01B4               	clrf	??_GY_Read+3
  2049  00E8  0833               	movf	??_GY_Read+2,w
  2050  00E9  00B4               	movwf	??_GY_Read+3
  2051  00EA  01B3               	clrf	??_GY_Read+2
  2052  00EB  0831               	movf	??_GY_Read,w
  2053  00EC  0433               	iorwf	??_GY_Read+2,w
  2054  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  2055  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  2056  00EF  00E6               	movwf	GY_Read@Gx^(0+128)
  2057  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2058  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  2059  00F2  0832               	movf	??_GY_Read+1,w
  2060  00F3  0434               	iorwf	??_GY_Read+3,w
  2061  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  2062  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  2063  00F6  00E7               	movwf	(GY_Read@Gx+1)^(0+128)
  2064  00F7                     l1498:
  2065                           
  2066                           ;GY-521.c: 91:     Gy = ((int) valores[10] << 8) | ((int) valores[11]);
  2067  00F7  085D               	movf	(GY_Read@valores^(0+128)+11),w
  2068  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2069  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2070  00FA  00B1               	movwf	??_GY_Read
  2071  00FB  01B2               	clrf	??_GY_Read+1
  2072  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2073  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2074  00FE  085C               	movf	(GY_Read@valores^(0+128)+10),w
  2075  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0101  00B3               	movwf	??_GY_Read+2
  2078  0102  01B4               	clrf	??_GY_Read+3
  2079  0103  0833               	movf	??_GY_Read+2,w
  2080  0104  00B4               	movwf	??_GY_Read+3
  2081  0105  01B3               	clrf	??_GY_Read+2
  2082  0106  0831               	movf	??_GY_Read,w
  2083  0107  0433               	iorwf	??_GY_Read+2,w
  2084  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2086  010A  00E8               	movwf	GY_Read@Gy^(0+128)
  2087  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2088  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2089  010D  0832               	movf	??_GY_Read+1,w
  2090  010E  0434               	iorwf	??_GY_Read+3,w
  2091  010F  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0110  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0111  00E9               	movwf	(GY_Read@Gy+1)^(0+128)
  2094  0112                     l1500:
  2095                           
  2096                           ;GY-521.c: 92:     Gz = ((int) valores[12] << 8) | ((int) valores[13]);
  2097  0112  085F               	movf	(GY_Read@valores^(0+128)+13),w
  2098  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0115  00B1               	movwf	??_GY_Read
  2101  0116  01B2               	clrf	??_GY_Read+1
  2102  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0119  085E               	movf	(GY_Read@valores^(0+128)+12),w
  2105  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2106  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2107  011C  00B3               	movwf	??_GY_Read+2
  2108  011D  01B4               	clrf	??_GY_Read+3
  2109  011E  0833               	movf	??_GY_Read+2,w
  2110  011F  00B4               	movwf	??_GY_Read+3
  2111  0120  01B3               	clrf	??_GY_Read+2
  2112  0121  0831               	movf	??_GY_Read,w
  2113  0122  0433               	iorwf	??_GY_Read+2,w
  2114  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0125  00EA               	movwf	GY_Read@Gz^(0+128)
  2117  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0128  0832               	movf	??_GY_Read+1,w
  2120  0129  0434               	iorwf	??_GY_Read+3,w
  2121  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2122  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2123  012C  00EB               	movwf	(GY_Read@Gz+1)^(0+128)
  2124  012D                     l1502:
  2125                           
  2126                           ;GY-521.c: 96:     sprintf(buf, "Ax = %d    ", Ax);
  2127  012D  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2128  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2129  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0130  00B1               	movwf	??_GY_Read
  2131  0131  0831               	movf	??_GY_Read,w
  2132  0132  00A4               	movwf	sprintf@f
  2133  0133  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0134  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0135  0861               	movf	(GY_Read@Ax+1)^(0+128),w
  2136  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0138  00A6               	movwf	?_sprintf+2
  2139  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2140  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2141  013B  0860               	movf	GY_Read@Ax^(0+128),w
  2142  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2143  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2144  013E  00A5               	movwf	?_sprintf+1
  2145  013F  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2146  0140  120A  118A  2200  120A  118A  	fcall	_sprintf
  2147  0145                     l1504:
  2148                           
  2149                           ;GY-521.c: 97:     UARTSendString(buf);
  2150  0145  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2151  0146  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2152  014B                     l1506:
  2153                           
  2154                           ;GY-521.c: 99:     sprintf(buf, " Ay = %d    ", Ay);
  2155  014B  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2156  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2157  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2158  014E  00B1               	movwf	??_GY_Read
  2159  014F  0831               	movf	??_GY_Read,w
  2160  0150  00A4               	movwf	sprintf@f
  2161  0151  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0152  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0153  0863               	movf	(GY_Read@Ay+1)^(0+128),w
  2164  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0156  00A6               	movwf	?_sprintf+2
  2167  0157  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0158  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0159  0862               	movf	GY_Read@Ay^(0+128),w
  2170  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2171  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2172  015C  00A5               	movwf	?_sprintf+1
  2173  015D  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2174  015E  120A  118A  2200  120A  118A  	fcall	_sprintf
  2175  0163                     l1508:
  2176                           
  2177                           ;GY-521.c: 100:     UARTSendString(buf);
  2178  0163  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2179  0164  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2180  0169                     l1510:
  2181                           
  2182                           ;GY-521.c: 102:     sprintf(buf, " Az = %d    ", Az);
  2183  0169  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2184  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2185  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2186  016C  00B1               	movwf	??_GY_Read
  2187  016D  0831               	movf	??_GY_Read,w
  2188  016E  00A4               	movwf	sprintf@f
  2189  016F  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0170  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0171  0865               	movf	(GY_Read@Az+1)^(0+128),w
  2192  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0174  00A6               	movwf	?_sprintf+2
  2195  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0176  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0177  0864               	movf	GY_Read@Az^(0+128),w
  2198  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2200  017A  00A5               	movwf	?_sprintf+1
  2201  017B  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2202  017C  120A  118A  2200  120A  118A  	fcall	_sprintf
  2203  0181                     l1512:
  2204                           
  2205                           ;GY-521.c: 103:     UARTSendString(buf);
  2206  0181  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2207  0182  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2208  0187                     l1514:
  2209                           
  2210                           ;GY-521.c: 105:     sprintf(buf, " T = %d  ", T);
  2211  0187  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2212  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2214  018A  00B1               	movwf	??_GY_Read
  2215  018B  0831               	movf	??_GY_Read,w
  2216  018C  00A4               	movwf	sprintf@f
  2217  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2218  018E  1303               	bcf	3,6	;RP1=0, select bank1
  2219  018F  086D               	movf	(GY_Read@T+1)^(0+128),w
  2220  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0192  00A6               	movwf	?_sprintf+2
  2223  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2224  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2225  0195  086C               	movf	GY_Read@T^(0+128),w
  2226  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0198  00A5               	movwf	?_sprintf+1
  2229  0199  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2230  019A  120A  118A  2200  120A  118A  	fcall	_sprintf
  2231  019F                     l1516:
  2232                           
  2233                           ;GY-521.c: 106:     UARTSendString(buf);
  2234  019F  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2235  01A0  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2236  01A5                     l1518:
  2237                           
  2238                           ;GY-521.c: 108:     sprintf(buf, " Gx = %d    ", Gx);
  2239  01A5  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2240  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2241  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2242  01A8  00B1               	movwf	??_GY_Read
  2243  01A9  0831               	movf	??_GY_Read,w
  2244  01AA  00A4               	movwf	sprintf@f
  2245  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2246  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2247  01AD  0867               	movf	(GY_Read@Gx+1)^(0+128),w
  2248  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2249  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2250  01B0  00A6               	movwf	?_sprintf+2
  2251  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2252  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2253  01B3  0866               	movf	GY_Read@Gx^(0+128),w
  2254  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2255  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2256  01B6  00A5               	movwf	?_sprintf+1
  2257  01B7  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2258  01B8  120A  118A  2200  120A  118A  	fcall	_sprintf
  2259  01BD                     l1520:
  2260                           
  2261                           ;GY-521.c: 109:     UARTSendString(buf);
  2262  01BD  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2263  01BE  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2264  01C3                     l1522:
  2265                           
  2266                           ;GY-521.c: 111:     sprintf(buf, " Gy = %d    ", Gy);
  2267  01C3  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2268  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2269  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2270  01C6  00B1               	movwf	??_GY_Read
  2271  01C7  0831               	movf	??_GY_Read,w
  2272  01C8  00A4               	movwf	sprintf@f
  2273  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2274  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  2275  01CB  0869               	movf	(GY_Read@Gy+1)^(0+128),w
  2276  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2277  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2278  01CE  00A6               	movwf	?_sprintf+2
  2279  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2280  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  2281  01D1  0868               	movf	GY_Read@Gy^(0+128),w
  2282  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2283  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2284  01D4  00A5               	movwf	?_sprintf+1
  2285  01D5  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2286  01D6  120A  118A  2200  120A  118A  	fcall	_sprintf
  2287  01DB                     l1524:
  2288                           
  2289                           ;GY-521.c: 112:     UARTSendString(buf);
  2290  01DB  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2291  01DC  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2292  01E1                     l1526:
  2293                           
  2294                           ;GY-521.c: 114:     sprintf(buf, " Gz = %d\r\n", Gz);
  2295  01E1  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2296  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2297  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2298  01E4  00B1               	movwf	??_GY_Read
  2299  01E5  0831               	movf	??_GY_Read,w
  2300  01E6  00A4               	movwf	sprintf@f
  2301  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2302  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2303  01E9  086B               	movf	(GY_Read@Gz+1)^(0+128),w
  2304  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2305  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2306  01EC  00A6               	movwf	?_sprintf+2
  2307  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2308  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2309  01EF  086A               	movf	GY_Read@Gz^(0+128),w
  2310  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2311  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2312  01F2  00A5               	movwf	?_sprintf+1
  2313  01F3  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2314  01F4  120A  118A  2200  120A  118A  	fcall	_sprintf
  2315  01F9                     l1528:
  2316                           
  2317                           ;GY-521.c: 115:     UARTSendString(buf);
  2318  01F9  30A0               	movlw	(low (GY_Read@buf| 0))& (0+255)
  2319  01FA  120A  118A  261C  120A  118A  	fcall	_UARTSendString
  2320  01FF                     l208:
  2321  01FF  0008               	return
  2322  0200                     __end_of_GY_Read:
  2323                           
  2324                           	psect	text7
  2325  0200                     __ptext7:	
  2326 ;; *************** function _sprintf *****************
  2327 ;; Defined at:
  2328 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  sp              1    wreg     PTR unsigned char 
  2331 ;;		 -> GY_Read@buf(50), 
  2332 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  2333 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  2334 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  2337 ;;		 -> GY_Read@buf(50), 
  2338 ;;  tmpval          4    0        struct .
  2339 ;;  val             2   13[BANK0 ] unsigned int 
  2340 ;;  cp              2    0        PTR const unsigned char 
  2341 ;;  len             2    0        unsigned int 
  2342 ;;  c               1   16[BANK0 ] unsigned char 
  2343 ;;  prec            1   12[BANK0 ] char 
  2344 ;;  flag            1   11[BANK0 ] unsigned char 
  2345 ;;  ap              1   10[BANK0 ] PTR void [1]
  2346 ;;		 -> ?_sprintf(2), 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2    4[BANK0 ] int 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         0       3       0       0       0
  2357 ;;      Locals:         0       7       0       0       0
  2358 ;;      Temps:          0       3       0       0       0
  2359 ;;      Totals:         0      13       0       0       0
  2360 ;;Total ram usage:       13 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    2
  2363 ;; This function calls:
  2364 ;;		___lwdiv
  2365 ;;		___lwmod
  2366 ;; This function is called by:
  2367 ;;		_GY_Read
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _sprintf
  2373  0200                     _sprintf:
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2377                           ;sprintf@sp stored from wreg
  2378  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0202  00AF               	movwf	sprintf@sp
  2381  0203                     l1378:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2384  0203  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2385  0204  00A7               	movwf	??_sprintf
  2386  0205  0827               	movf	??_sprintf,w
  2387  0206  00AA               	movwf	sprintf@ap
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2390  0207  2AD3               	goto	l1430
  2391  0208                     l1380:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2394  0208  3025               	movlw	37
  2395  0209  0630               	xorwf	sprintf@c,w
  2396  020A  1903               	btfsc	3,2
  2397  020B  2A0D               	goto	u821
  2398  020C  2A0E               	goto	u820
  2399  020D                     u821:
  2400  020D  2A1A               	goto	l1386
  2401  020E                     u820:
  2402  020E                     l1382:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2405  020E  0830               	movf	sprintf@c,w
  2406  020F  00A7               	movwf	??_sprintf
  2407  0210  082F               	movf	sprintf@sp,w
  2408  0211  0084               	movwf	4
  2409  0212  0827               	movf	??_sprintf,w
  2410  0213  1383               	bcf	3,7	;select IRP bank0
  2411  0214  0080               	movwf	0
  2412  0215                     l1384:
  2413  0215  3001               	movlw	1
  2414  0216  00A7               	movwf	??_sprintf
  2415  0217  0827               	movf	??_sprintf,w
  2416  0218  07AF               	addwf	sprintf@sp,f
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2419  0219  2AD3               	goto	l1430
  2420  021A                     l1386:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2423  021A  01AB               	clrf	sprintf@flag
  2424  021B                     l1390:	
  2425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2426                           
  2427  021B  3001               	movlw	1
  2428  021C  07A4               	addwf	sprintf@f,f
  2429  021D  30FF               	movlw	-1
  2430  021E  0724               	addwf	sprintf@f,w
  2431  021F  0084               	movwf	4
  2432  0220  120A  118A  246D  120A  118A  	fcall	stringdir
  2433  0225  00B0               	movwf	sprintf@c
  2434  0226  00A7               	movwf	??_sprintf
  2435  0227  01A8               	clrf	??_sprintf+1
  2436                           
  2437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 1, Range of values is 0 to 0
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            4     3 (average)
  2443                           ; direct_byte           11     8 (fixed)
  2444                           ; jumptable            260     6 (fixed)
  2445                           ;	Chosen strategy is simple_byte
  2446  0228  0828               	movf	??_sprintf+1,w
  2447  0229  3A00               	xorlw	0	; case 0
  2448  022A  1903               	skipnz
  2449  022B  2A2D               	goto	l1582
  2450  022C  2AD3               	goto	l1430
  2451  022D                     l1582:
  2452                           
  2453                           ; Switch size 1, requested type "simple"
  2454                           ; Number of cases is 3, Range of values is 0 to 105
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte           10     6 (average)
  2458                           ; jumptable            260     6 (fixed)
  2459                           ;	Chosen strategy is simple_byte
  2460  022D  0827               	movf	??_sprintf,w
  2461  022E  3A00               	xorlw	0	; case 0
  2462  022F  1903               	skipnz
  2463  0230  2AE5               	goto	l1432
  2464  0231  3A64               	xorlw	100	; case 100
  2465  0232  1903               	skipnz
  2466  0233  2A38               	goto	l1392
  2467  0234  3A0D               	xorlw	13	; case 105
  2468  0235  1903               	skipnz
  2469  0236  2A38               	goto	l1392
  2470  0237  2AD3               	goto	l1430
  2471  0238                     l1392:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2474  0238  082A               	movf	sprintf@ap,w
  2475  0239  0084               	movwf	4
  2476  023A  1383               	bcf	3,7	;select IRP bank0
  2477  023B  0800               	movf	0,w
  2478  023C  00AD               	movwf	sprintf@val
  2479  023D  0A84               	incf	4,f
  2480  023E  0800               	movf	0,w
  2481  023F  00AE               	movwf	sprintf@val+1
  2482  0240                     l1394:
  2483  0240  3002               	movlw	2
  2484  0241  00A7               	movwf	??_sprintf
  2485  0242  0827               	movf	??_sprintf,w
  2486  0243  07AA               	addwf	sprintf@ap,f
  2487  0244                     l1396:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2490  0244  1FAE               	btfss	sprintf@val+1,7
  2491  0245  2A47               	goto	u831
  2492  0246  2A48               	goto	u830
  2493  0247                     u831:
  2494  0247  2A51               	goto	l1402
  2495  0248                     u830:
  2496  0248                     l1398:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2499  0248  3003               	movlw	3
  2500  0249  00A7               	movwf	??_sprintf
  2501  024A  0827               	movf	??_sprintf,w
  2502  024B  04AB               	iorwf	sprintf@flag,f
  2503  024C                     l1400:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2506  024C  09AD               	comf	sprintf@val,f
  2507  024D  09AE               	comf	sprintf@val+1,f
  2508  024E  0AAD               	incf	sprintf@val,f
  2509  024F  1903               	skipnz
  2510  0250  0AAE               	incf	sprintf@val+1,f
  2511  0251                     l1402:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2514  0251  01B0               	clrf	sprintf@c
  2515  0252  0AB0               	incf	sprintf@c,f
  2516  0253                     l1408:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2519  0253  0830               	movf	sprintf@c,w
  2520  0254  00A7               	movwf	??_sprintf
  2521  0255  0727               	addwf	??_sprintf,w
  2522  0256  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2523  0257  0084               	movwf	4
  2524  0258  120A  118A  246D  120A  118A  	fcall	stringdir
  2525  025D  00A8               	movwf	??_sprintf+1
  2526  025E  120A  118A  246D  120A  118A  	fcall	stringdir
  2527  0263  00A9               	movwf	??_sprintf+2
  2528  0264  0829               	movf	??_sprintf+2,w
  2529  0265  022E               	subwf	sprintf@val+1,w
  2530  0266  1D03               	skipz
  2531  0267  2A6A               	goto	u845
  2532  0268  0828               	movf	??_sprintf+1,w
  2533  0269  022D               	subwf	sprintf@val,w
  2534  026A                     u845:
  2535  026A  1803               	skipnc
  2536  026B  2A6D               	goto	u841
  2537  026C  2A6E               	goto	u840
  2538  026D                     u841:
  2539  026D  2A6F               	goto	l1412
  2540  026E                     u840:
  2541  026E  2A79               	goto	l1414
  2542  026F                     l1412:
  2543  026F  3001               	movlw	1
  2544  0270  00A7               	movwf	??_sprintf
  2545  0271  0827               	movf	??_sprintf,w
  2546  0272  07B0               	addwf	sprintf@c,f
  2547  0273  3005               	movlw	5
  2548  0274  0630               	xorwf	sprintf@c,w
  2549  0275  1D03               	btfss	3,2
  2550  0276  2A78               	goto	u851
  2551  0277  2A79               	goto	u850
  2552  0278                     u851:
  2553  0278  2A53               	goto	l1408
  2554  0279                     u850:
  2555  0279                     l1414:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2558  0279  082B               	movf	sprintf@flag,w
  2559  027A  3903               	andlw	3
  2560  027B  1903               	btfsc	3,2
  2561  027C  2A7E               	goto	u861
  2562  027D  2A7F               	goto	u860
  2563  027E                     u861:
  2564  027E  2A8A               	goto	l1420
  2565  027F                     u860:
  2566  027F                     l1416:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2569  027F  302D               	movlw	45
  2570  0280  00A7               	movwf	??_sprintf
  2571  0281  082F               	movf	sprintf@sp,w
  2572  0282  0084               	movwf	4
  2573  0283  0827               	movf	??_sprintf,w
  2574  0284  1383               	bcf	3,7	;select IRP bank0
  2575  0285  0080               	movwf	0
  2576  0286                     l1418:
  2577  0286  3001               	movlw	1
  2578  0287  00A7               	movwf	??_sprintf
  2579  0288  0827               	movf	??_sprintf,w
  2580  0289  07AF               	addwf	sprintf@sp,f
  2581  028A                     l1420:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2584  028A  0830               	movf	sprintf@c,w
  2585  028B  00A7               	movwf	??_sprintf
  2586  028C  0827               	movf	??_sprintf,w
  2587  028D  00AC               	movwf	sprintf@prec
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2590  028E  2ACA               	goto	l1428
  2591  028F                     l1422:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2594  028F  300A               	movlw	10
  2595  0290  00A0               	movwf	___lwmod@divisor
  2596  0291  3000               	movlw	0
  2597  0292  00A1               	movwf	___lwmod@divisor+1
  2598  0293  082C               	movf	sprintf@prec,w
  2599  0294  00A7               	movwf	??_sprintf
  2600  0295  0727               	addwf	??_sprintf,w
  2601  0296  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2602  0297  0084               	movwf	4
  2603  0298  120A  118A  246D  120A  118A  	fcall	stringdir
  2604  029D  00F2               	movwf	___lwdiv@divisor
  2605  029E  120A  118A  246D  120A  118A  	fcall	stringdir
  2606  02A3  00F3               	movwf	___lwdiv@divisor+1
  2607  02A4  082E               	movf	sprintf@val+1,w
  2608  02A5  00F5               	movwf	___lwdiv@dividend+1
  2609  02A6  082D               	movf	sprintf@val,w
  2610  02A7  00F4               	movwf	___lwdiv@dividend
  2611  02A8  120A  118A  251B  120A  118A  	fcall	___lwdiv
  2612  02AD  0873               	movf	?___lwdiv+1,w
  2613  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02B0  00A3               	movwf	___lwmod@dividend+1
  2616  02B1  0872               	movf	?___lwdiv,w
  2617  02B2  00A2               	movwf	___lwmod@dividend
  2618  02B3  120A  118A  255F  120A  118A  	fcall	___lwmod
  2619  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2620  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2621  02BA  0820               	movf	?___lwmod,w
  2622  02BB  3E30               	addlw	48
  2623  02BC  00A8               	movwf	??_sprintf+1
  2624  02BD  0828               	movf	??_sprintf+1,w
  2625  02BE  00B0               	movwf	sprintf@c
  2626  02BF                     l1424:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2629  02BF  0830               	movf	sprintf@c,w
  2630  02C0  00A7               	movwf	??_sprintf
  2631  02C1  082F               	movf	sprintf@sp,w
  2632  02C2  0084               	movwf	4
  2633  02C3  0827               	movf	??_sprintf,w
  2634  02C4  1383               	bcf	3,7	;select IRP bank0
  2635  02C5  0080               	movwf	0
  2636  02C6                     l1426:
  2637  02C6  3001               	movlw	1
  2638  02C7  00A7               	movwf	??_sprintf
  2639  02C8  0827               	movf	??_sprintf,w
  2640  02C9  07AF               	addwf	sprintf@sp,f
  2641  02CA                     l1428:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2644  02CA  30FF               	movlw	255
  2645  02CB  00A7               	movwf	??_sprintf
  2646  02CC  0827               	movf	??_sprintf,w
  2647  02CD  07AC               	addwf	sprintf@prec,f
  2648  02CE  0A2C               	incf	sprintf@prec,w
  2649  02CF  1D03               	btfss	3,2
  2650  02D0  2AD2               	goto	u871
  2651  02D1  2AD3               	goto	u870
  2652  02D2                     u871:
  2653  02D2  2A8F               	goto	l1422
  2654  02D3                     u870:
  2655  02D3                     l1430:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2658  02D3  3001               	movlw	1
  2659  02D4  07A4               	addwf	sprintf@f,f
  2660  02D5  30FF               	movlw	-1
  2661  02D6  0724               	addwf	sprintf@f,w
  2662  02D7  0084               	movwf	4
  2663  02D8  120A  118A  246D  120A  118A  	fcall	stringdir
  2664  02DD  00A7               	movwf	??_sprintf
  2665  02DE  0827               	movf	??_sprintf,w
  2666  02DF  00B0               	movwf	sprintf@c
  2667  02E0  0830               	movf	sprintf@c,w
  2668  02E1  1D03               	btfss	3,2
  2669  02E2  2AE4               	goto	u881
  2670  02E3  2AE5               	goto	u880
  2671  02E4                     u881:
  2672  02E4  2A08               	goto	l1380
  2673  02E5                     u880:
  2674  02E5                     l1432:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2677  02E5  082F               	movf	sprintf@sp,w
  2678  02E6  0084               	movwf	4
  2679  02E7  1383               	bcf	3,7	;select IRP bank0
  2680  02E8  0180               	clrf	0
  2681  02E9                     l318:
  2682  02E9  0008               	return
  2683  02EA                     __end_of_sprintf:
  2684                           
  2685                           	psect	text8
  2686  055F                     __ptext8:	
  2687 ;; *************** function ___lwmod *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  divisor         2    0[BANK0 ] unsigned int 
  2692 ;;  dividend        2    2[BANK0 ] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  counter         1   11[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[BANK0 ] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       4       0       0       0
  2705 ;;      Locals:         1       0       0       0       0
  2706 ;;      Temps:          1       0       0       0       0
  2707 ;;      Totals:         2       4       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_sprintf
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function ___lwmod
  2720  055F                     ___lwmod:
  2721  055F                     l1292:	
  2722                           ;incstack = 0
  2723                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2724                           
  2725  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0561  0820               	movf	___lwmod@divisor,w
  2728  0562  0421               	iorwf	___lwmod@divisor+1,w
  2729  0563  1903               	btfsc	3,2
  2730  0564  2D66               	goto	u691
  2731  0565  2D67               	goto	u690
  2732  0566                     u691:
  2733  0566  2D96               	goto	l1310
  2734  0567                     u690:
  2735  0567                     l1294:
  2736  0567  01FB               	clrf	___lwmod@counter
  2737  0568  0AFB               	incf	___lwmod@counter,f
  2738  0569  2D75               	goto	l1300
  2739  056A                     l1296:
  2740  056A  3001               	movlw	1
  2741  056B                     u705:
  2742  056B  1003               	clrc
  2743  056C  0DA0               	rlf	___lwmod@divisor,f
  2744  056D  0DA1               	rlf	___lwmod@divisor+1,f
  2745  056E  3EFF               	addlw	-1
  2746  056F  1D03               	skipz
  2747  0570  2D6B               	goto	u705
  2748  0571                     l1298:
  2749  0571  3001               	movlw	1
  2750  0572  00FA               	movwf	??___lwmod
  2751  0573  087A               	movf	??___lwmod,w
  2752  0574  07FB               	addwf	___lwmod@counter,f
  2753  0575                     l1300:
  2754  0575  1FA1               	btfss	___lwmod@divisor+1,7
  2755  0576  2D78               	goto	u711
  2756  0577  2D79               	goto	u710
  2757  0578                     u711:
  2758  0578  2D6A               	goto	l1296
  2759  0579                     u710:
  2760  0579                     l1302:
  2761  0579  0821               	movf	___lwmod@divisor+1,w
  2762  057A  0223               	subwf	___lwmod@dividend+1,w
  2763  057B  1D03               	skipz
  2764  057C  2D7F               	goto	u725
  2765  057D  0820               	movf	___lwmod@divisor,w
  2766  057E  0222               	subwf	___lwmod@dividend,w
  2767  057F                     u725:
  2768  057F  1C03               	skipc
  2769  0580  2D82               	goto	u721
  2770  0581  2D83               	goto	u720
  2771  0582                     u721:
  2772  0582  2D89               	goto	l1306
  2773  0583                     u720:
  2774  0583                     l1304:
  2775  0583  0820               	movf	___lwmod@divisor,w
  2776  0584  02A2               	subwf	___lwmod@dividend,f
  2777  0585  0821               	movf	___lwmod@divisor+1,w
  2778  0586  1C03               	skipc
  2779  0587  03A3               	decf	___lwmod@dividend+1,f
  2780  0588  02A3               	subwf	___lwmod@dividend+1,f
  2781  0589                     l1306:
  2782  0589  3001               	movlw	1
  2783  058A                     u735:
  2784  058A  1003               	clrc
  2785  058B  0CA1               	rrf	___lwmod@divisor+1,f
  2786  058C  0CA0               	rrf	___lwmod@divisor,f
  2787  058D  3EFF               	addlw	-1
  2788  058E  1D03               	skipz
  2789  058F  2D8A               	goto	u735
  2790  0590                     l1308:
  2791  0590  3001               	movlw	1
  2792  0591  02FB               	subwf	___lwmod@counter,f
  2793  0592  1D03               	btfss	3,2
  2794  0593  2D95               	goto	u741
  2795  0594  2D96               	goto	u740
  2796  0595                     u741:
  2797  0595  2D79               	goto	l1302
  2798  0596                     u740:
  2799  0596                     l1310:
  2800  0596  0823               	movf	___lwmod@dividend+1,w
  2801  0597  00A1               	movwf	?___lwmod+1
  2802  0598  0822               	movf	___lwmod@dividend,w
  2803  0599  00A0               	movwf	?___lwmod
  2804  059A                     l604:
  2805  059A  0008               	return
  2806  059B                     __end_of___lwmod:
  2807                           
  2808                           	psect	text9
  2809  051B                     __ptext9:	
  2810 ;; *************** function ___lwdiv *****************
  2811 ;; Defined at:
  2812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  divisor         2    2[COMMON] unsigned int 
  2815 ;;  dividend        2    4[COMMON] unsigned int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  quotient        2    7[COMMON] unsigned int 
  2818 ;;  counter         1    9[COMMON] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2    2[COMMON] unsigned int 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         4       0       0       0       0
  2829 ;;      Locals:         3       0       0       0       0
  2830 ;;      Temps:          1       0       0       0       0
  2831 ;;      Totals:         8       0       0       0       0
  2832 ;;Total ram usage:        8 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_sprintf
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___lwdiv
  2844  051B                     ___lwdiv:
  2845  051B                     l1266:	
  2846                           ;incstack = 0
  2847                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2848                           
  2849  051B  01F7               	clrf	___lwdiv@quotient
  2850  051C  01F8               	clrf	___lwdiv@quotient+1
  2851  051D                     l1268:
  2852  051D  0872               	movf	___lwdiv@divisor,w
  2853  051E  0473               	iorwf	___lwdiv@divisor+1,w
  2854  051F  1903               	btfsc	3,2
  2855  0520  2D22               	goto	u621
  2856  0521  2D23               	goto	u620
  2857  0522                     u621:
  2858  0522  2D5A               	goto	l1288
  2859  0523                     u620:
  2860  0523                     l1270:
  2861  0523  01F9               	clrf	___lwdiv@counter
  2862  0524  0AF9               	incf	___lwdiv@counter,f
  2863  0525  2D31               	goto	l1276
  2864  0526                     l1272:
  2865  0526  3001               	movlw	1
  2866  0527                     u635:
  2867  0527  1003               	clrc
  2868  0528  0DF2               	rlf	___lwdiv@divisor,f
  2869  0529  0DF3               	rlf	___lwdiv@divisor+1,f
  2870  052A  3EFF               	addlw	-1
  2871  052B  1D03               	skipz
  2872  052C  2D27               	goto	u635
  2873  052D                     l1274:
  2874  052D  3001               	movlw	1
  2875  052E  00F6               	movwf	??___lwdiv
  2876  052F  0876               	movf	??___lwdiv,w
  2877  0530  07F9               	addwf	___lwdiv@counter,f
  2878  0531                     l1276:
  2879  0531  1FF3               	btfss	___lwdiv@divisor+1,7
  2880  0532  2D34               	goto	u641
  2881  0533  2D35               	goto	u640
  2882  0534                     u641:
  2883  0534  2D26               	goto	l1272
  2884  0535                     u640:
  2885  0535                     l1278:
  2886  0535  3001               	movlw	1
  2887  0536                     u655:
  2888  0536  1003               	clrc
  2889  0537  0DF7               	rlf	___lwdiv@quotient,f
  2890  0538  0DF8               	rlf	___lwdiv@quotient+1,f
  2891  0539  3EFF               	addlw	-1
  2892  053A  1D03               	skipz
  2893  053B  2D36               	goto	u655
  2894  053C  0873               	movf	___lwdiv@divisor+1,w
  2895  053D  0275               	subwf	___lwdiv@dividend+1,w
  2896  053E  1D03               	skipz
  2897  053F  2D42               	goto	u665
  2898  0540  0872               	movf	___lwdiv@divisor,w
  2899  0541  0274               	subwf	___lwdiv@dividend,w
  2900  0542                     u665:
  2901  0542  1C03               	skipc
  2902  0543  2D45               	goto	u661
  2903  0544  2D46               	goto	u660
  2904  0545                     u661:
  2905  0545  2D4D               	goto	l1284
  2906  0546                     u660:
  2907  0546                     l1280:
  2908  0546  0872               	movf	___lwdiv@divisor,w
  2909  0547  02F4               	subwf	___lwdiv@dividend,f
  2910  0548  0873               	movf	___lwdiv@divisor+1,w
  2911  0549  1C03               	skipc
  2912  054A  03F5               	decf	___lwdiv@dividend+1,f
  2913  054B  02F5               	subwf	___lwdiv@dividend+1,f
  2914  054C                     l1282:
  2915  054C  1477               	bsf	___lwdiv@quotient,0
  2916  054D                     l1284:
  2917  054D  3001               	movlw	1
  2918  054E                     u675:
  2919  054E  1003               	clrc
  2920  054F  0CF3               	rrf	___lwdiv@divisor+1,f
  2921  0550  0CF2               	rrf	___lwdiv@divisor,f
  2922  0551  3EFF               	addlw	-1
  2923  0552  1D03               	skipz
  2924  0553  2D4E               	goto	u675
  2925  0554                     l1286:
  2926  0554  3001               	movlw	1
  2927  0555  02F9               	subwf	___lwdiv@counter,f
  2928  0556  1D03               	btfss	3,2
  2929  0557  2D59               	goto	u681
  2930  0558  2D5A               	goto	u680
  2931  0559                     u681:
  2932  0559  2D35               	goto	l1278
  2933  055A                     u680:
  2934  055A                     l1288:
  2935  055A  0878               	movf	___lwdiv@quotient+1,w
  2936  055B  00F3               	movwf	?___lwdiv+1
  2937  055C  0877               	movf	___lwdiv@quotient,w
  2938  055D  00F2               	movwf	?___lwdiv
  2939  055E                     l594:
  2940  055E  0008               	return
  2941  055F                     __end_of___lwdiv:
  2942                           
  2943                           	psect	text10
  2944  061C                     __ptext10:	
  2945 ;; *************** function _UARTSendString *****************
  2946 ;; Defined at:
  2947 ;;		line 50 in file "UART.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  str             1    wreg     PTR const unsigned char 
  2950 ;;		 -> GY_Read@buf(50), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  str             1    6[COMMON] PTR const unsigned char 
  2953 ;;		 -> GY_Read@buf(50), 
  2954 ;;  i               2    4[COMMON] int 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         3       0       0       0       0
  2966 ;;      Temps:          1       0       0       0       0
  2967 ;;      Totals:         4       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    2
  2971 ;; This function calls:
  2972 ;;		_UARTSendChar
  2973 ;; This function is called by:
  2974 ;;		_GY_Read
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _UARTSendString
  2980  061C                     _UARTSendString:
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2984                           ;UARTSendString@str stored from wreg
  2985  061C  00F6               	movwf	UARTSendString@str
  2986  061D                     l1370:
  2987                           
  2988                           ;UART.c: 51:     int i = 0;
  2989  061D  01F4               	clrf	UARTSendString@i
  2990  061E  01F5               	clrf	UARTSendString@i+1
  2991                           
  2992                           ;UART.c: 55:         while(str[i] != '\0'){
  2993  061F  2E31               	goto	l1376
  2994  0620                     l1372:
  2995                           
  2996                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2997  0620  0874               	movf	UARTSendString@i,w
  2998  0621  0776               	addwf	UARTSendString@str,w
  2999  0622  00F3               	movwf	??_UARTSendString
  3000  0623  0873               	movf	??_UARTSendString,w
  3001  0624  0084               	movwf	4
  3002  0625  0800               	movf	0,w
  3003  0626  120A  118A  2660  120A  118A  	fcall	_UARTSendChar
  3004  062B                     l1374:
  3005  062B  3001               	movlw	1
  3006  062C  07F4               	addwf	UARTSendString@i,f
  3007  062D  1803               	skipnc
  3008  062E  0AF5               	incf	UARTSendString@i+1,f
  3009  062F  3000               	movlw	0
  3010  0630  07F5               	addwf	UARTSendString@i+1,f
  3011  0631                     l1376:
  3012                           
  3013                           ;UART.c: 55:         while(str[i] != '\0'){
  3014  0631  0874               	movf	UARTSendString@i,w
  3015  0632  0776               	addwf	UARTSendString@str,w
  3016  0633  00F3               	movwf	??_UARTSendString
  3017  0634  0873               	movf	??_UARTSendString,w
  3018  0635  0084               	movwf	4
  3019  0636  1383               	bcf	3,7	;select IRP bank0
  3020  0637  0800               	movf	0,w
  3021  0638  1D03               	btfss	3,2
  3022  0639  2E3B               	goto	u811
  3023  063A  2E3C               	goto	u810
  3024  063B                     u811:
  3025  063B  2E20               	goto	l1372
  3026  063C                     u810:
  3027  063C                     l168:
  3028  063C  0008               	return
  3029  063D                     __end_of_UARTSendString:
  3030                           
  3031                           	psect	text11
  3032  0660                     __ptext11:	
  3033 ;; *************** function _UARTSendChar *****************
  3034 ;; Defined at:
  3035 ;;		line 40 in file "UART.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  c               1    wreg     const unsigned char 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  c               1    2[COMMON] const unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3049 ;;      Params:         0       0       0       0       0
  3050 ;;      Locals:         1       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0
  3052 ;;      Totals:         1       0       0       0       0
  3053 ;;Total ram usage:        1 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_UARTSendString
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _UARTSendChar
  3065  0660                     _UARTSendChar:
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _UARTSendChar: [wreg]
  3069                           ;UARTSendChar@c stored from wreg
  3070  0660  00F2               	movwf	UARTSendChar@c
  3071  0661                     l1238:
  3072  0661                     l159:	
  3073                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  3074                           
  3075  0661  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0662  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0663  1C98               	btfss	24,1	;volatile
  3078  0664  2E66               	goto	u541
  3079  0665  2E67               	goto	u540
  3080  0666                     u541:
  3081  0666  2E61               	goto	l159
  3082  0667                     u540:
  3083  0667                     l1240:
  3084                           
  3085                           ;UART.c: 42:     TXREG = c;
  3086  0667  0872               	movf	UARTSendChar@c,w
  3087  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3089  066A  0099               	movwf	25	;volatile
  3090  066B                     l162:
  3091  066B  0008               	return
  3092  066C                     __end_of_UARTSendChar:
  3093                           
  3094                           	psect	text12
  3095  063D                     __ptext12:	
  3096 ;; *************** function _I2C_Start *****************
  3097 ;; Defined at:
  3098 ;;		line 108 in file "I2C.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  add             1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  add             1    6[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         1       0       0       0       0
  3114 ;;      Temps:          2       0       0       0       0
  3115 ;;      Totals:         3       0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    3
  3119 ;; This function calls:
  3120 ;;		_I2C_Master_Wait
  3121 ;;		_I2C_Master_Write
  3122 ;; This function is called by:
  3123 ;;		_GY_init
  3124 ;;		_GY_Read
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _I2C_Start
  3130  063D                     _I2C_Start:
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3134                           ;I2C_Start@add stored from wreg
  3135  063D  00F6               	movwf	I2C_Start@add
  3136  063E                     l1352:
  3137                           
  3138                           ;I2C.c: 109:     I2C_Master_Wait();
  3139  063E  120A  118A  2653  120A  118A  	fcall	_I2C_Master_Wait
  3140  0643                     l1354:
  3141                           
  3142                           ;I2C.c: 110:     SEN = 1;
  3143  0643  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0644  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0645  1411               	bsf	17,0	;volatile
  3146                           
  3147                           ;I2C.c: 111:     I2C_Master_Write(add);
  3148  0646  0876               	movf	I2C_Start@add,w
  3149  0647  00F4               	movwf	??_I2C_Start
  3150  0648  01F5               	clrf	??_I2C_Start+1
  3151  0649  0874               	movf	??_I2C_Start,w
  3152  064A  00F2               	movwf	I2C_Master_Write@d
  3153  064B  0875               	movf	??_I2C_Start+1,w
  3154  064C  00F3               	movwf	I2C_Master_Write@d+1
  3155  064D  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Write
  3156  0652                     l114:
  3157  0652  0008               	return
  3158  0653                     __end_of_I2C_Start:
  3159                           
  3160                           	psect	text13
  3161  066C                     __ptext13:	
  3162 ;; *************** function _I2C_Master_Write *****************
  3163 ;; Defined at:
  3164 ;;		line 66 in file "I2C.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  d               2    2[COMMON] unsigned int 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         2       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0
  3181 ;;      Totals:         2       0       0       0       0
  3182 ;;Total ram usage:        2 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    2
  3185 ;; This function calls:
  3186 ;;		_I2C_Master_Wait
  3187 ;; This function is called by:
  3188 ;;		_I2C_Start
  3189 ;;		_GY_init
  3190 ;;		_GY_Read
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _I2C_Master_Write
  3196  066C                     _I2C_Master_Write:
  3197  066C                     l1230:	
  3198                           ;incstack = 0
  3199                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3200                           
  3201                           
  3202                           ;I2C.c: 67:     I2C_Master_Wait();
  3203  066C  120A  118A  2653  120A  118A  	fcall	_I2C_Master_Wait
  3204  0671                     l1232:
  3205                           
  3206                           ;I2C.c: 68:     SSPBUF = d;
  3207  0671  0872               	movf	I2C_Master_Write@d,w
  3208  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0674  0093               	movwf	19	;volatile
  3211  0675                     l103:
  3212  0675  0008               	return
  3213  0676                     __end_of_I2C_Master_Write:
  3214                           
  3215                           	psect	text14
  3216  05D3                     __ptext14:	
  3217 ;; *************** function _I2C_Read *****************
  3218 ;; Defined at:
  3219 ;;		line 114 in file "I2C.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  ACK_NACK        1    wreg     unsigned char 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  ACK_NACK        1    3[COMMON] unsigned char 
  3224 ;;  Data            1    4[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      unsigned char 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         2       0       0       0       0
  3236 ;;      Temps:          1       0       0       0       0
  3237 ;;      Totals:         3       0       0       0       0
  3238 ;;Total ram usage:        3 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    2
  3241 ;; This function calls:
  3242 ;;		_I2C_ACK
  3243 ;;		_I2C_NACK
  3244 ;; This function is called by:
  3245 ;;		_GY_Read
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _I2C_Read
  3251  05D3                     _I2C_Read:
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3255                           ;I2C_Read@ACK_NACK stored from wreg
  3256  05D3  00F3               	movwf	I2C_Read@ACK_NACK
  3257  05D4                     l1356:
  3258                           
  3259                           ;I2C.c: 116:     unsigned char Data;;I2C.c: 117:     RCEN = 1;
  3260  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3261  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3262  05D6  1591               	bsf	17,3	;volatile
  3263  05D7                     l117:	
  3264                           ;I2C.c: 118:     while (!BF);
  3265                           
  3266  05D7  1C14               	btfss	20,0	;volatile
  3267  05D8  2DDA               	goto	u781
  3268  05D9  2DDB               	goto	u780
  3269  05DA                     u781:
  3270  05DA  2DD7               	goto	l117
  3271  05DB                     u780:
  3272  05DB                     l1358:
  3273                           
  3274                           ;I2C.c: 119:     Data = SSPBUF;
  3275  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3276  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3277  05DD  0813               	movf	19,w	;volatile
  3278  05DE  00F2               	movwf	??_I2C_Read
  3279  05DF  0872               	movf	??_I2C_Read,w
  3280  05E0  00F4               	movwf	I2C_Read@Data
  3281  05E1                     l1360:
  3282                           
  3283                           ;I2C.c: 120:     if (ACK_NACK == 0)
  3284  05E1  0873               	movf	I2C_Read@ACK_NACK,w
  3285  05E2  1D03               	btfss	3,2
  3286  05E3  2DE5               	goto	u791
  3287  05E4  2DE6               	goto	u790
  3288  05E5                     u791:
  3289  05E5  2DEC               	goto	l1364
  3290  05E6                     u790:
  3291  05E6                     l1362:
  3292                           
  3293                           ;I2C.c: 121:         I2C_ACK();
  3294  05E6  120A  118A  267F  120A  118A  	fcall	_I2C_ACK
  3295  05EB  2DF1               	goto	l122
  3296  05EC                     l1364:
  3297                           
  3298                           ;I2C.c: 123:         I2C_NACK();
  3299  05EC  120A  118A  2676  120A  118A  	fcall	_I2C_NACK
  3300  05F1                     l122:
  3301  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3302  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3303  05F3  1D8C               	btfss	12,3	;volatile
  3304  05F4  2DF6               	goto	u801
  3305  05F5  2DF7               	goto	u800
  3306  05F6                     u801:
  3307  05F6  2DF1               	goto	l122
  3308  05F7                     u800:
  3309  05F7                     l124:
  3310                           
  3311                           ;I2C.c: 125:     SSPIF = 0;
  3312  05F7  118C               	bcf	12,3	;volatile
  3313  05F8                     l1366:
  3314                           
  3315                           ;I2C.c: 126:     return Data;
  3316  05F8  0874               	movf	I2C_Read@Data,w
  3317  05F9                     l125:
  3318  05F9  0008               	return
  3319  05FA                     __end_of_I2C_Read:
  3320                           
  3321                           	psect	text15
  3322  0676                     __ptext15:	
  3323 ;; *************** function _I2C_NACK *****************
  3324 ;; Defined at:
  3325 ;;		line 135 in file "I2C.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		None
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_I2C_Read
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function _I2C_NACK
  3355  0676                     _I2C_NACK:
  3356  0676                     l1236:	
  3357                           ;incstack = 0
  3358                           ; Regs used in _I2C_NACK: []
  3359                           
  3360                           
  3361                           ;I2C.c: 136:     ACKDT = 1;
  3362  0676  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0677  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0678  1691               	bsf	17,5	;volatile
  3365                           
  3366                           ;I2C.c: 137:     ACKEN = 1;
  3367  0679  1611               	bsf	17,4	;volatile
  3368  067A                     l134:	
  3369                           ;I2C.c: 138:     while (ACKEN);
  3370                           
  3371  067A  1A11               	btfsc	17,4	;volatile
  3372  067B  2E7D               	goto	u531
  3373  067C  2E7E               	goto	u530
  3374  067D                     u531:
  3375  067D  2E7A               	goto	l134
  3376  067E                     u530:
  3377  067E                     l137:
  3378  067E  0008               	return
  3379  067F                     __end_of_I2C_NACK:
  3380                           
  3381                           	psect	text16
  3382  067F                     __ptext16:	
  3383 ;; *************** function _I2C_ACK *****************
  3384 ;; Defined at:
  3385 ;;		line 129 in file "I2C.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		None
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3399 ;;      Params:         0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_I2C_Read
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _I2C_ACK
  3415  067F                     _I2C_ACK:
  3416  067F                     l1234:	
  3417                           ;incstack = 0
  3418                           ; Regs used in _I2C_ACK: []
  3419                           
  3420                           
  3421                           ;I2C.c: 130:     ACKDT = 0;
  3422  067F  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0680  1303               	bcf	3,6	;RP1=0, select bank1
  3424  0681  1291               	bcf	17,5	;volatile
  3425                           
  3426                           ;I2C.c: 131:     ACKEN = 1;
  3427  0682  1611               	bsf	17,4	;volatile
  3428  0683                     l128:	
  3429                           ;I2C.c: 132:     while (ACKEN);
  3430                           
  3431  0683  1A11               	btfsc	17,4	;volatile
  3432  0684  2E86               	goto	u521
  3433  0685  2E87               	goto	u520
  3434  0686                     u521:
  3435  0686  2E83               	goto	l128
  3436  0687                     u520:
  3437  0687                     l131:
  3438  0687  0008               	return
  3439  0688                     __end_of_I2C_ACK:
  3440                           
  3441                           	psect	text17
  3442  0688                     __ptext17:	
  3443 ;; *************** function _I2C_Master_Stop *****************
  3444 ;; Defined at:
  3445 ;;		line 56 in file "I2C.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    2
  3466 ;; This function calls:
  3467 ;;		_I2C_Master_Wait
  3468 ;; This function is called by:
  3469 ;;		_GY_init
  3470 ;;		_GY_Read
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _I2C_Master_Stop
  3476  0688                     _I2C_Master_Stop:
  3477  0688                     l1348:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3480                           
  3481                           
  3482                           ;I2C.c: 57:     I2C_Master_Wait();
  3483  0688  120A  118A  2653  120A  118A  	fcall	_I2C_Master_Wait
  3484  068D                     l1350:
  3485                           
  3486                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3487  068D  1683               	bsf	3,5	;RP0=1, select bank1
  3488  068E  1303               	bcf	3,6	;RP1=0, select bank1
  3489  068F  1511               	bsf	17,2	;volatile
  3490  0690                     l100:
  3491  0690  0008               	return
  3492  0691                     __end_of_I2C_Master_Stop:
  3493                           
  3494                           	psect	text18
  3495  0691                     __ptext18:	
  3496 ;; *************** function _I2C_Master_RepeatedStart *****************
  3497 ;; Defined at:
  3498 ;;		line 48 in file "I2C.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0
  3515 ;;      Totals:         0       0       0       0       0
  3516 ;;Total ram usage:        0 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    2
  3519 ;; This function calls:
  3520 ;;		_I2C_Master_Wait
  3521 ;; This function is called by:
  3522 ;;		_GY_Read
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _I2C_Master_RepeatedStart
  3528  0691                     _I2C_Master_RepeatedStart:
  3529  0691                     l1344:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3532                           
  3533                           
  3534                           ;I2C.c: 49:     I2C_Master_Wait();
  3535  0691  120A  118A  2653  120A  118A  	fcall	_I2C_Master_Wait
  3536  0696                     l1346:
  3537                           
  3538                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3539  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3541  0698  1491               	bsf	17,1	;volatile
  3542  0699                     l97:
  3543  0699  0008               	return
  3544  069A                     __end_of_I2C_Master_RepeatedStart:
  3545                           
  3546                           	psect	text19
  3547  0653                     __ptext19:	
  3548 ;; *************** function _I2C_Master_Wait *****************
  3549 ;; Defined at:
  3550 ;;		line 33 in file "I2C.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         0       0       0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_I2C_Master_RepeatedStart
  3575 ;;		_I2C_Master_Stop
  3576 ;;		_I2C_Master_Write
  3577 ;;		_I2C_Start
  3578 ;;		_I2C_Master_Start
  3579 ;;		_I2C_Master_Read
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function _I2C_Master_Wait
  3585  0653                     _I2C_Master_Wait:
  3586  0653                     l1226:	
  3587                           ;incstack = 0
  3588                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3589                           
  3590  0653                     l88:	
  3591                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3592                           
  3593  0653  1683               	bsf	3,5	;RP0=1, select bank1
  3594  0654  1303               	bcf	3,6	;RP1=0, select bank1
  3595  0655  1914               	btfsc	20,2	;volatile
  3596  0656  2E58               	goto	u501
  3597  0657  2E59               	goto	u500
  3598  0658                     u501:
  3599  0658  2E53               	goto	l88
  3600  0659                     u500:
  3601  0659                     l1228:
  3602  0659  0811               	movf	17,w	;volatile
  3603  065A  391F               	andlw	31
  3604  065B  1D03               	btfss	3,2
  3605  065C  2E5E               	goto	u511
  3606  065D  2E5F               	goto	u510
  3607  065E                     u511:
  3608  065E  2E53               	goto	l88
  3609  065F                     u510:
  3610  065F                     l91:
  3611  065F  0008               	return
  3612  0660                     __end_of_I2C_Master_Wait:
  3613                           
  3614                           	psect	text20
  3615  069A                     __ptext20:	
  3616 ;; *************** function _ISR *****************
  3617 ;; Defined at:
  3618 ;;		line 47 in file "main.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		None
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0
  3634 ;;      Temps:          2       0       0       0       0
  3635 ;;      Totals:         2       0       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		Interrupt level 1
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _ISR
  3647  069A                     _ISR:
  3648  069A                     i1l31:
  3649  069A  0871               	movf	??_ISR+1,w
  3650  069B  008A               	movwf	10
  3651  069C  0E70               	swapf	??_ISR,w
  3652  069D  0083               	movwf	3
  3653  069E  0EFE               	swapf	btemp,f
  3654  069F  0E7E               	swapf	btemp,w
  3655  06A0  0009               	retfie
  3656  06A1                     __end_of_ISR:
  3657  007E                     btemp	set	126	;btemp
  3658  007E                     wtemp0	set	126
  3659                           
  3660                           	psect	intentry
  3661  0004                     __pintentry:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _ISR: []
  3664                           
  3665  0004                     interrupt_function:
  3666  007E                     saved_w	set	btemp
  3667  0004  00FE               	movwf	btemp
  3668  0005  0E03               	swapf	3,w
  3669  0006  00F0               	movwf	??_ISR
  3670  0007  080A               	movf	10,w
  3671  0008  00F1               	movwf	??_ISR+1
  3672  0009  120A  118A  2E9A   	ljmp	_ISR
  3673                           
  3674                           	psect	config
  3675                           
  3676                           ;Config register CONFIG1 @ 0x2007
  3677                           ;	Oscillator Selection bits
  3678                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3679                           ;	Watchdog Timer Enable bit
  3680                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3681                           ;	Power-up Timer Enable bit
  3682                           ;	PWRTE = OFF, PWRT disabled
  3683                           ;	RE3/MCLR pin function select bit
  3684                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3685                           ;	Code Protection bit
  3686                           ;	CP = OFF, Program memory code protection is disabled
  3687                           ;	Data Code Protection bit
  3688                           ;	CPD = OFF, Data memory code protection is disabled
  3689                           ;	Brown Out Reset Selection bits
  3690                           ;	BOREN = OFF, BOR disabled
  3691                           ;	Internal External Switchover bit
  3692                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3693                           ;	Fail-Safe Clock Monitor Enabled bit
  3694                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3695                           ;	Low Voltage Programming Enable bit
  3696                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3697                           ;	In-Circuit Debugger Mode bit
  3698                           ;	DEBUG = 0x1, unprogrammed default
  3699  2007                     	org	8199
  3700  2007  20D4               	dw	8404
  3701                           
  3702                           ;Config register CONFIG2 @ 0x2008
  3703                           ;	Brown-out Reset Selection bit
  3704                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3705                           ;	Flash Program Memory Self Write Enable bits
  3706                           ;	WRT = OFF, Write protection off
  3707  2008                     	org	8200
  3708  2008  3FFF               	dw	16383

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     24      24
    BANK1            80     80      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> GY_Read@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 50
		 -> GY_Read@buf(BANK1[50]), 


Critical Paths under _main in COMMON

    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv
    _GY_init->_I2C_Start
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UARTSendString->_UARTSendChar
    _I2C_Start->_I2C_Master_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GY_Read
    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv
    _GY_Read->_sprintf
    _sprintf->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_GY_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9413
                                             21 BANK0      3     3      0
                            _GY_Read
                            _GY_init
                    _I2C_Master_Init
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     836
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GY_init                                              0     0      0    2346
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (1) _GY_Read                                             84    84      0    5515
                                             17 BANK0      4     4      0
                                              0 BANK1     80    80      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                     _UARTSendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1865
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       4     4      0     343
                                              3 COMMON     4     4      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            3     3      0    1184
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1162
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              2 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GY_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UARTSendString
       _UARTSendChar
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _GY_init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _Setup
     _UARTInit
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 20:41:55 2021

                UARTInit@baud_rate 0025                                  pc 0002  
               __size_of_I2C_Start 0016                                 _BF 04A0  
                               l42 061B                                 l91 065F  
                               l85 05D2                                 l88 0653  
                               l97 0699                                 fsr 0004  
                              l100 0690                                l103 0675  
                              l122 05F1                                l114 0652  
                              l131 0687                                l203 0395  
                              l124 05F7                                l125 05F9  
                              l117 05D7                                l134 067A  
                              l128 0683                                l208 01FF  
                              l137 067E                                l162 066B  
                              l156 0404                                l318 02E9  
                              l159 0661                                l168 063C  
                              l604 059A                                l358 046C  
                              l594 055E                                _GIE 005F  
                              u500 0659                                u501 0658  
                              u510 065F                                u511 065E  
                              u520 0687                                u521 0686  
                              u530 067E                                u610 0464  
                              u531 067D                                u611 0463  
                              u540 0667                                u620 0523  
                              _ISR 069A                                u541 0666  
                              u621 0522                                u605 0456  
                              u710 0579                                u550 0417  
                              u711 0578                                u551 0416  
                              u800 05F7                                u640 0535  
                              u720 0583                                u801 05F6  
                              u641 0534                                u721 0582  
                              u705 056B                                u810 063C  
                              u570 042B                                u811 063B  
                              u635 0527                                u571 042A  
                              u660 0546                                u740 0596  
                              u820 020E                                u900 005C  
                              _SEN 0488                                u661 0545  
                              u741 0595                                u725 057F  
                              u821 020D                                u901 005B  
                              u565 041C                                u830 0248  
                              u590 0446                                u750 039D  
                              u910 0501                                u655 0536  
                              u735 058A                                u831 0247  
                              u591 0445                                u751 039C  
                              u911 04FD                                u680 055A  
                              u840 026E                                u760 03AB  
                              u681 0559                                u665 0542  
                              u841 026D                                u905 0058  
                              u585 042D                                u690 0567  
                              u850 0279                                u770 03D8  
                              u675 054E                                u691 0566  
                              u851 0278                                u595 0442  
                              u780 05DB                                u860 027F  
                              u924 0504                                u781 05DA  
                              u861 027E                                u845 026A  
                              u765 03A6                                u790 05E6  
                              u870 02D3                                u791 05E5  
                              u871 02D2                                u775 03D3  
                              u880 02E5                                u881 02E4  
                              u890 05B2                                u947 04DD  
                              u957 0511                                u895 05AD  
                  __end_of_I2C_ACK 0688                                fsr0 0004  
                              indf 0000                               ?_ISR 0070  
                             l1300 0575                               l1230 066C  
                             l1302 0579                               l1310 0596  
                             l1232 0671                               l1240 0667  
                             l1304 0583                               l1400 024C  
                             l1320 03CA                               l1226 0653  
                             l1234 067F                               l1306 0589  
                             l1402 0251                               l1250 042B  
                             l1242 0405                               l1330 03F9  
                             l1322 03F5                               l1314 0396  
                             l1228 0659                               l1236 0676  
                             l1308 0590                               l1420 028A  
                             l1412 026F                               l1500 0112  
                             l1260 045E                               l1252 0434  
                             l1244 0417                               l1340 0400  
                             l1332 03FC                               l1324 03F6  
                             l1316 039D                               l1350 068D  
                             l1238 0661                               l1270 0523  
                             l1422 028F                               l1414 0279  
                             l1430 02D3                               l1510 0169  
                             l1502 012D                               l1254 0446  
                             l1246 041A                               l1262 0464  
                             l1342 0403                               l1334 03FD  
                             l1326 03F7                               l1318 03C8  
                             l1344 0691                               l1360 05E1  
                             l1352 063E                               l1280 0546  
                             l1272 0526                               l1424 02BF  
                             l1416 027F                               l1408 0253  
                             l1432 02E5                               l1520 01BD  
                             l1512 0181                               l1504 0145  
                             l1256 0454                               l1248 0427  
                             l1336 03FE                               l1328 03F8  
                             l1440 05FA                               l1346 0696  
                             l1362 05E6                               l1354 0643  
                             l1370 061D                               l1282 054C  
                             l1274 052D                               l1266 051B  
                             l1426 02C6                               l1418 0286  
                             l1522 01C3                               l1514 0187  
                             l1506 014B                               l1258 0455  
                             l1338 03FF                               l1450 0617  
                             l1442 060B                               l1348 0688  
                             l1364 05EC                               l1356 05D4  
                             l1372 0620                               l1284 054D  
                             l1276 0531                               l1268 051D  
                             l1292 055F                               l1428 02CA  
                             l1380 0208                               l1524 01DB  
                             l1516 019F                               l1508 0163  
                             l1460 05A2                               l1452 061A  
                             l1444 060E                               l1540 04F5  
                             l1532 04D2                               l1366 05F8  
                             l1358 05DB                               l1374 062B  
                             l1286 0554                               l1278 0535  
                             l1294 0567                               l1390 021B  
                             l1382 020E                               l1526 01E1  
                             l1518 01A5                               l1462 05CF  
                             l1446 0611                               l1542 0504  
                             l1534 04D7                               l1376 0631  
                             l1288 055A                               l1296 056A  
                             l1392 0238                               l1384 0215  
                             l1528 01F9                               l1480 0034  
                             l1472 0013                               l1464 05D0  
                             l1456 059B                               l1448 0614  
                             l1544 0509                               l1536 04E1  
                             l1298 0571                               l1394 0240  
                             l1386 021A                               l1378 0203  
                             l1490 008B                               l1482 0047  
                             l1474 0030                               l1466 05D1  
                             l1458 059F                               l1538 04F0  
                             l1396 0244                               l1492 00A6  
                             l1484 004F                               l1468 02EA  
                             l1398 0248                               l1582 022D  
                             l1494 00C1                               l1486 005C  
                             l1496 00DC                               l1488 006E  
                             l1498 00F7                               STR_1 04B1  
                             STR_2 048A                               STR_3 04A4  
                             STR_4 04C8                               STR_5 047D  
                             STR_6 0497                               STR_7 04BD  
                             _PEIE 005E                               i1l31 069A  
                             _RCEN 048B                   __end_of_I2C_NACK 067F  
                  __end_of_GY_Read 0200   __end_of_I2C_Master_RepeatedStart 069A  
                             _main 04D2                   __end_of_I2C_Read 05FA  
                             btemp 007E                    __end_of_GY_init 0396  
                             start 000C                              ??_ISR 0070  
                 ?_I2C_Master_Init 0025                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                            _ANSEL 0188                    __end_of___lldiv 046D  
                  __end_of___lwdiv 055F                    __end_of___lwmod 059B  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTC 0007  
                            _TRISA 0085                              _TRISC 0087  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                   __end_of_UARTInit 0405  
                            _Setup 05FA                    __end_of_dpowers 047D  
                __end_of_I2C_Start 0653                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 02EA                    __initialization 000F  
                     __end_of_main 051B                          ??_I2C_ACK 0072  
                           ??_main 0035                  ?_I2C_Master_Write 0072  
                           ?_Setup 0070                 ??_I2C_Master_Write 0074  
                        ??_GY_Read 0031                          ??_GY_init 0077  
                           _ANSELH 0189                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0691                   I2C_Read@ACK_NACK 0073  
                        ??___lldiv 007A                          ??___lwdiv 0076  
                        ??___lwmod 007A            __size_of_UARTSendString 0021  
                        ?_I2C_NACK 0070                          ?_I2C_Read 0070  
                           saved_w 007E                          ??_sprintf 0027  
          __end_of__initialization 000F                     __pcstackCOMMON 0070  
                    __end_of_Setup 061C                          ?_UARTInit 0025  
                       ??_I2C_NACK 0072                         ??_I2C_Read 0072  
                          ??_Setup 007B                       I2C_Read@Data 0074  
                       __pmaintext 04D2                         ??_UARTInit 002A  
                       __pintentry 0004                            _I2C_ACK 067F  
                        GY_Read@Ax 00E0                          GY_Read@Ay 00E2  
                        GY_Read@Az 00E4                          GY_Read@Gx 00E6  
                        GY_Read@Gy 00E8                          GY_Read@Gz 00EA  
                          _GY_Read 0013                            _SSPCON2 0091  
                          _SSPSTAT 0094                            _GY_init 02EA  
                       __stringtab 046D                      ?_UARTSendChar 0070  
                     I2C_Start@add 0076                          _I2C_Start 063D  
                          ___lldiv 0405                            ___lwdiv 051B  
                          ___lwmod 055F                     _UARTSendString 061C  
                          __ptext1 05FA                            __ptext2 0396  
                          __ptext3 059B                            __ptext4 0405  
                          __ptext5 02EA                            __ptext6 0013  
                          __ptext7 0200                            __ptext8 055F  
                          __ptext9 051B                       __size_of_ISR 0007  
                          _dpowers 0473           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 0200               end_of_initialization 000F  
                   ??_UARTSendChar 0072         ??_I2C_Master_RepeatedStart 0072  
                       ?_I2C_Start 0070          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0072                    ___lldiv@counter 0024  
                        _RCSTAbits 0018             __end_of_UARTSendString 063D  
                 I2C_Master_Init@c 0025                          _PORTAbits 0005  
                __size_of_I2C_NACK 0009                          _TRISCbits 0087  
                __size_of_I2C_Read 0027                          _TXSTAbits 0098  
                  ?_UARTSendString 0070                  __size_of_UARTInit 006F  
              start_initialization 000F                        __end_of_ISR 06A1  
                ??_I2C_Master_Init 0029                  ??_I2C_Master_Wait 0072  
                ??_I2C_Master_Stop 0072                        ??_I2C_Start 0074  
                         ?_I2C_ACK 0070               __end_of_UARTSendChar 066C  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                           ?_GY_Read 0070  
                         ?_GY_init 0070                        sprintf@flag 002B  
                      sprintf@prec 002C                   _I2C_Master_Write 066C  
                 ___lwdiv@dividend 0074                      UARTSendChar@c 0072  
                         ?___lldiv 0072                           ?___lwdiv 0072  
                         ?___lwmod 0020                           GY_Read@T 00EC  
                         GY_Read@i 00EE                          __pstrings 046D  
                         _I2C_NACK 0676                           _I2C_Read 05D3  
                   __size_of_Setup 0022                   ___lwdiv@quotient 0077  
                         ?_sprintf 0024                  interrupt_function 0004  
                  UARTSendString@i 0074                           _PIR1bits 000C  
                       GY_Read@buf 00A0                           _UARTInit 0396  
                 __size_of_I2C_ACK 0009                        __stringbase 0472  
                 __size_of_GY_Read 01ED                   __size_of_GY_init 00AC  
                 ??_UARTSendString 0073              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 0029  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                   GY_Read@valores 00D2                   __size_of___lwdiv 0044  
                 __size_of___lwmod 003C                 __end_of__stringtab 0473  
                       sprintf@val 002D                    _I2C_Master_Init 059B  
                  _I2C_Master_Wait 0653                    _I2C_Master_Stop 0688  
                  ___lwdiv@divisor 0072                    ___lwdiv@counter 0079  
                         __ptext10 061C                           __ptext11 0660  
                         __ptext20 069A                           __ptext12 063D  
                         __ptext13 066C                           __ptext14 05D3  
                         __ptext15 0676                           __ptext16 067F  
                         __ptext17 0688                           __ptext18 0691  
                         __ptext19 0653                   __size_of_sprintf 00EA  
                     _UARTSendChar 0660                      __size_of_main 0049  
         __end_of_I2C_Master_Write 0676                  UARTSendString@str 0076  
                         intlevel1 0000                          sprintf@ap 002A  
                        sprintf@sp 002F                   ___lwmod@dividend 0022  
                 ___lldiv@dividend 0076                          stringcode 046D  
          __end_of_I2C_Master_Init 05D3            __end_of_I2C_Master_Wait 0660  
          __end_of_I2C_Master_Stop 0691                           sprintf@c 0030  
                         sprintf@f 0024                   ___lldiv@quotient 0020  
                I2C_Master_Write@d 0072                    ___lwmod@divisor 0020  
                  ___lwmod@counter 007B                           stringdir 046D  
                         stringtab 046D                        _SSPCON2bits 0091  
