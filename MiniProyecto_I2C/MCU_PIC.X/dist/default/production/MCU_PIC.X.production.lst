

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 10:49:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	strings
   460  0421                     __pstrings:
   461  0421                     stringtab:
   462  0421                     __stringtab:
   463  0421                     stringcode:	
   464                           ;	String table - string pointers are 1 byte each
   465                           
   466  0421                     stringdir:
   467  0421  3004               	movlw	high stringdir
   468  0422  008A               	movwf	10
   469  0423  0804               	movf	4,w
   470  0424  0A84               	incf	4,f
   471  0425  0782               	addwf	2,f
   472  0426                     __stringbase:
   473  0426  3400               	retlw	0
   474  0427                     __end_of__stringtab:
   475  0427                     _dpowers:
   476  0427  3401               	retlw	1
   477  0428  3400               	retlw	0
   478  0429  340A               	retlw	10
   479  042A  3400               	retlw	0
   480  042B  3464               	retlw	100
   481  042C  3400               	retlw	0
   482  042D  34E8               	retlw	232
   483  042E  3403               	retlw	3
   484  042F  3410               	retlw	16
   485  0430  3427               	retlw	39
   486  0431                     __end_of_dpowers:
   487  001A                     _RCREG	set	26
   488  000C                     _PIR1bits	set	12
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  0013                     _SSPBUF	set	19
   492  0014                     _SSPCON	set	20
   493  0007                     _PORTC	set	7
   494  0005                     _PORTA	set	5
   495  0005                     _PORTAbits	set	5
   496  0063                     _SSPIF	set	99
   497  005E                     _PEIE	set	94
   498  005F                     _GIE	set	95
   499  0098                     _TXSTAbits	set	152
   500  0099                     _SPBRG	set	153
   501  0091                     _SSPCON2bits	set	145
   502  0087                     _TRISCbits	set	135
   503  0094                     _SSPSTAT	set	148
   504  0093                     _SSPADD	set	147
   505  0091                     _SSPCON2	set	145
   506  0087                     _TRISC	set	135
   507  0085                     _TRISA	set	133
   508  048C                     _ACKEN	set	1164
   509  048D                     _ACKDT	set	1165
   510  04A0                     _BF	set	1184
   511  048B                     _RCEN	set	1163
   512  0488                     _SEN	set	1160
   513  0463                     _SSPIE	set	1123
   514  043C                     _TRISC4	set	1084
   515  043B                     _TRISC3	set	1083
   516  0189                     _ANSELH	set	393
   517  0188                     _ANSEL	set	392
   518  0431                     STR_5:
   519  0431  3420               	retlw	32	;' '
   520  0432  3447               	retlw	71	;'G'
   521  0433  3478               	retlw	120	;'x'
   522  0434  3420               	retlw	32	;' '
   523  0435  343D               	retlw	61	;'='
   524  0436  3420               	retlw	32	;' '
   525  0437  3425               	retlw	37	;'%'
   526  0438  3464               	retlw	100	;'d'
   527  0439  3420               	retlw	32	;' '
   528  043A  3420               	retlw	32	;' '
   529  043B  3420               	retlw	32	;' '
   530  043C  3420               	retlw	32	;' '
   531  043D  3400               	retlw	0
   532  043E                     STR_2:
   533  043E  3420               	retlw	32	;' '
   534  043F  3441               	retlw	65	;'A'
   535  0440  3479               	retlw	121	;'y'
   536  0441  3420               	retlw	32	;' '
   537  0442  343D               	retlw	61	;'='
   538  0443  3420               	retlw	32	;' '
   539  0444  3425               	retlw	37	;'%'
   540  0445  3464               	retlw	100	;'d'
   541  0446  3420               	retlw	32	;' '
   542  0447  3420               	retlw	32	;' '
   543  0448  3420               	retlw	32	;' '
   544  0449  3420               	retlw	32	;' '
   545  044A  3400               	retlw	0
   546  044B                     STR_6:
   547  044B  3420               	retlw	32	;' '
   548  044C  3447               	retlw	71	;'G'
   549  044D  3479               	retlw	121	;'y'
   550  044E  3420               	retlw	32	;' '
   551  044F  343D               	retlw	61	;'='
   552  0450  3420               	retlw	32	;' '
   553  0451  3425               	retlw	37	;'%'
   554  0452  3464               	retlw	100	;'d'
   555  0453  3420               	retlw	32	;' '
   556  0454  3420               	retlw	32	;' '
   557  0455  3420               	retlw	32	;' '
   558  0456  3420               	retlw	32	;' '
   559  0457  3400               	retlw	0
   560  0458                     STR_3:
   561  0458  3420               	retlw	32	;' '
   562  0459  3441               	retlw	65	;'A'
   563  045A  347A               	retlw	122	;'z'
   564  045B  3420               	retlw	32	;' '
   565  045C  343D               	retlw	61	;'='
   566  045D  3420               	retlw	32	;' '
   567  045E  3425               	retlw	37	;'%'
   568  045F  3464               	retlw	100	;'d'
   569  0460  3420               	retlw	32	;' '
   570  0461  3420               	retlw	32	;' '
   571  0462  3420               	retlw	32	;' '
   572  0463  3420               	retlw	32	;' '
   573  0464  3400               	retlw	0
   574  0465                     STR_1:
   575  0465  3441               	retlw	65	;'A'
   576  0466  3478               	retlw	120	;'x'
   577  0467  3420               	retlw	32	;' '
   578  0468  343D               	retlw	61	;'='
   579  0469  3420               	retlw	32	;' '
   580  046A  3425               	retlw	37	;'%'
   581  046B  3464               	retlw	100	;'d'
   582  046C  3420               	retlw	32	;' '
   583  046D  3420               	retlw	32	;' '
   584  046E  3420               	retlw	32	;' '
   585  046F  3420               	retlw	32	;' '
   586  0470  3400               	retlw	0
   587  0471                     STR_7:
   588  0471  3420               	retlw	32	;' '
   589  0472  3447               	retlw	71	;'G'
   590  0473  347A               	retlw	122	;'z'
   591  0474  3420               	retlw	32	;' '
   592  0475  343D               	retlw	61	;'='
   593  0476  3420               	retlw	32	;' '
   594  0477  3425               	retlw	37	;'%'
   595  0478  3464               	retlw	100	;'d'
   596  0479  340D               	retlw	13
   597  047A  340A               	retlw	10
   598  047B  3400               	retlw	0
   599  047C                     STR_4:
   600  047C  3420               	retlw	32	;' '
   601  047D  3454               	retlw	84	;'T'
   602  047E  3420               	retlw	32	;' '
   603  047F  343D               	retlw	61	;'='
   604  0480  3420               	retlw	32	;' '
   605  0481  3425               	retlw	37	;'%'
   606  0482  3464               	retlw	100	;'d'
   607  0483  3420               	retlw	32	;' '
   608  0484  3420               	retlw	32	;' '
   609  0485  3400               	retlw	0
   610                           
   611                           	psect	cinit
   612  000F                     start_initialization:	
   613                           ; #config settings
   614                           
   615  000F                     __initialization:
   616                           
   617                           ; Clear objects allocated to BANK0
   618  000F  1383               	bcf	3,7	;select IRP bank0
   619  0010  3020               	movlw	low __pbssBANK0
   620  0011  0084               	movwf	4
   621  0012  303C               	movlw	low (__pbssBANK0+28)
   622  0013  120A  118A  2605  120A  118A  	fcall	clear_ram0
   623                           
   624                           ; Clear objects allocated to BANK1
   625  0018  30A0               	movlw	low __pbssBANK1
   626  0019  0084               	movwf	4
   627  001A  30D2               	movlw	low (__pbssBANK1+50)
   628  001B  120A  118A  2605  120A  118A  	fcall	clear_ram0
   629  0020                     end_of_initialization:	
   630                           ;End of C runtime variable initialization code
   631                           
   632  0020                     __end_of__initialization:
   633  0020  0183               	clrf	3
   634  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   635                           
   636                           	psect	bssBANK0
   637  0020                     __pbssBANK0:
   638  0020                     _valores:
   639  0020                     	ds	14
   640  002E                     _T:
   641  002E                     	ds	2
   642  0030                     _Gz:
   643  0030                     	ds	2
   644  0032                     _Gy:
   645  0032                     	ds	2
   646  0034                     _Gx:
   647  0034                     	ds	2
   648  0036                     _Az:
   649  0036                     	ds	2
   650  0038                     _Ay:
   651  0038                     	ds	2
   652  003A                     _Ax:
   653  003A                     	ds	2
   654                           
   655                           	psect	bssBANK1
   656  00A0                     __pbssBANK1:
   657  00A0                     _buf:
   658  00A0                     	ds	50
   659                           
   660                           	psect	clrtext
   661  0605                     clear_ram0:	
   662                           ;	Called with FSR containing the base address, and
   663                           ;	W with the last address+1
   664                           
   665  0605  0064               	clrwdt	;clear the watchdog before getting into this loop
   666  0606                     clrloop0:
   667  0606  0180               	clrf	0	;clear RAM location pointed to by FSR
   668  0607  0A84               	incf	4,f	;increment pointer
   669  0608  0604               	xorwf	4,w	;XOR with final address
   670  0609  1903               	btfsc	3,2	;have we reached the end yet?
   671  060A  3400               	retlw	0	;all done for this memory range, return
   672  060B  0604               	xorwf	4,w	;XOR again to restore value
   673  060C  2E06               	goto	clrloop0	;do the next byte
   674                           
   675                           	psect	cstackCOMMON
   676  0070                     __pcstackCOMMON:
   677  0070                     ?_Setup:
   678  0070                     ?_I2C_Start:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_I2C_Master_Stop:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_I2C_Master_RepeatedStart:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_I2C_Read:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_UARTSendString:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_I2C_ACK:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_I2C_NACK:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_ISR:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_ISR:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_I2C_Master_Wait:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_UARTSendChar:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716  0070                     	ds	2
   717  0072                     ?_I2C_Master_Write:
   718  0072                     ??_I2C_Master_Stop:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_I2C_Master_RepeatedStart:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_I2C_Read:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_I2C_ACK:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_I2C_NACK:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_I2C_Master_Wait:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??_UARTSendChar:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ?___lwdiv:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ?___lldiv:	
   743                           ; 2 bytes @ 0x2
   744                           
   745  0072                     UARTSendChar@c:	
   746                           ; 4 bytes @ 0x2
   747                           
   748  0072                     I2C_Master_Write@d:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ___lwdiv@divisor:	
   752                           ; 2 bytes @ 0x2
   753                           
   754  0072                     ___lldiv@divisor:	
   755                           ; 2 bytes @ 0x2
   756                           
   757                           
   758                           ; 4 bytes @ 0x2
   759  0072                     	ds	1
   760  0073                     ??_UARTSendString:
   761  0073                     I2C_Read@ACK_NACK:	
   762                           ; 1 bytes @ 0x3
   763                           
   764                           
   765                           ; 1 bytes @ 0x3
   766  0073                     	ds	1
   767  0074                     ??_I2C_Start:
   768  0074                     ??_I2C_Master_Write:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     I2C_Read@Data:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     UARTSendString@i:	
   775                           ; 1 bytes @ 0x4
   776                           
   777  0074                     ___lwdiv@dividend:	
   778                           ; 2 bytes @ 0x4
   779                           
   780                           
   781                           ; 2 bytes @ 0x4
   782  0074                     	ds	2
   783  0076                     ??___lwdiv:
   784  0076                     I2C_Start@add:	
   785                           ; 1 bytes @ 0x6
   786                           
   787  0076                     UARTSendString@str:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0076                     ___lldiv@dividend:	
   791                           ; 1 bytes @ 0x6
   792                           
   793                           
   794                           ; 4 bytes @ 0x6
   795  0076                     	ds	1
   796  0077                     ___lwdiv@quotient:
   797                           
   798                           ; 2 bytes @ 0x7
   799  0077                     	ds	2
   800  0079                     ___lwdiv@counter:
   801                           
   802                           ; 1 bytes @ 0x9
   803  0079                     	ds	1
   804  007A                     ??___lldiv:
   805  007A                     ??___lwmod:	
   806                           ; 1 bytes @ 0xA
   807                           
   808                           
   809                           ; 1 bytes @ 0xA
   810  007A                     	ds	1
   811  007B                     ??_Setup:
   812  007B                     ___lwmod@counter:	
   813                           ; 1 bytes @ 0xB
   814                           
   815                           
   816                           ; 1 bytes @ 0xB
   817  007B                     	ds	1
   818                           
   819                           	psect	cstackBANK0
   820  003C                     __pcstackBANK0:
   821  003C                     ?___lwmod:
   822  003C                     ___lwmod@divisor:	
   823                           ; 2 bytes @ 0x0
   824                           
   825  003C                     ___lldiv@quotient:	
   826                           ; 2 bytes @ 0x0
   827                           
   828                           
   829                           ; 4 bytes @ 0x0
   830  003C                     	ds	2
   831  003E                     ___lwmod@dividend:
   832                           
   833                           ; 2 bytes @ 0x2
   834  003E                     	ds	2
   835  0040                     ?_sprintf:
   836  0040                     sprintf@f:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0040                     ___lldiv@counter:	
   840                           ; 1 bytes @ 0x4
   841                           
   842                           
   843                           ; 1 bytes @ 0x4
   844  0040                     	ds	1
   845  0041                     ?_I2C_Master_Init:
   846  0041                     ?_UARTInit:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0041                     I2C_Master_Init@c:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0041                     UARTInit@baud_rate:	
   853                           ; 4 bytes @ 0x5
   854                           
   855                           
   856                           ; 4 bytes @ 0x5
   857  0041                     	ds	2
   858  0043                     ??_sprintf:
   859                           
   860                           ; 1 bytes @ 0x7
   861  0043                     	ds	2
   862  0045                     ??_I2C_Master_Init:
   863  0045                     UARTInit@BRGH:	
   864                           ; 1 bytes @ 0x9
   865                           
   866                           
   867                           ; 1 bytes @ 0x9
   868  0045                     	ds	1
   869  0046                     ??_UARTInit:
   870  0046                     sprintf@ap:	
   871                           ; 1 bytes @ 0xA
   872                           
   873                           
   874                           ; 1 bytes @ 0xA
   875  0046                     	ds	1
   876  0047                     sprintf@flag:
   877                           
   878                           ; 1 bytes @ 0xB
   879  0047                     	ds	1
   880  0048                     sprintf@prec:
   881                           
   882                           ; 1 bytes @ 0xC
   883  0048                     	ds	1
   884  0049                     sprintf@val:
   885                           
   886                           ; 2 bytes @ 0xD
   887  0049                     	ds	2
   888  004B                     sprintf@sp:
   889                           
   890                           ; 1 bytes @ 0xF
   891  004B                     	ds	1
   892  004C                     sprintf@c:
   893                           
   894                           ; 1 bytes @ 0x10
   895  004C                     	ds	1
   896  004D                     ??_main:
   897                           
   898                           ; 1 bytes @ 0x11
   899  004D                     	ds	4
   900  0051                     main@i:
   901                           
   902                           ; 2 bytes @ 0x15
   903  0051                     	ds	2
   904                           
   905                           	psect	maintext
   906  0024                     __pmaintext:	
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 57 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  i               2   21[BANK0 ] int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       2       0       0       0
   928 ;;      Temps:          0       4       0       0       0
   929 ;;      Totals:         0       6       0       0       0
   930 ;;Total ram usage:        6 bytes
   931 ;; Hardware stack levels required when called:    4
   932 ;; This function calls:
   933 ;;		_I2C_Master_Init
   934 ;;		_I2C_Master_RepeatedStart
   935 ;;		_I2C_Master_Stop
   936 ;;		_I2C_Master_Write
   937 ;;		_I2C_Read
   938 ;;		_I2C_Start
   939 ;;		_Setup
   940 ;;		_UARTSendString
   941 ;;		_sprintf
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _main
   949  0024                     _main:
   950  0024                     l1525:	
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   953                           
   954                           
   955                           ;main.c: 58:     I2C_Start(0xD0);
   956  0024  120A  118A  2565  120A  118A  	fcall	_Setup
   957  0029                     l1527:
   958                           
   959                           ;main.c: 63: 
   960  0029  3082               	movlw	130
   961  002A  1283               	bcf	3,5	;RP0=0, select bank0
   962  002B  1303               	bcf	3,6	;RP1=0, select bank0
   963  002C  00CE               	movwf	??_main+1
   964  002D  30DD               	movlw	221
   965  002E  00CD               	movwf	??_main
   966  002F                     u947:
   967  002F  0BCD               	decfsz	??_main,f
   968  0030  282F               	goto	u947
   969  0031  0BCE               	decfsz	??_main+1,f
   970  0032  282F               	goto	u947
   971  0033                     l1529:
   972                           
   973                           ;main.c: 64:     I2C_Start(0xD0);
   974  0033  3000               	movlw	0
   975  0034  1283               	bcf	3,5	;RP0=0, select bank0
   976  0035  1303               	bcf	3,6	;RP1=0, select bank0
   977  0036  00C4               	movwf	I2C_Master_Init@c+3
   978  0037  3001               	movlw	1
   979  0038  00C3               	movwf	I2C_Master_Init@c+2
   980  0039  3086               	movlw	134
   981  003A  00C2               	movwf	I2C_Master_Init@c+1
   982  003B  30A0               	movlw	160
   983  003C  00C1               	movwf	I2C_Master_Init@c
   984  003D  120A  118A  2506  120A  118A  	fcall	_I2C_Master_Init
   985  0042                     l1531:
   986                           
   987                           ;main.c: 68: 
   988  0042  30D0               	movlw	208
   989  0043  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
   990  0048                     l1533:
   991                           
   992                           ;main.c: 69:     while (1) {
   993  0048  306B               	movlw	107
   994  0049  00F2               	movwf	I2C_Master_Write@d
   995  004A  3000               	movlw	0
   996  004B  00F3               	movwf	I2C_Master_Write@d+1
   997  004C  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
   998  0051                     l1535:
   999                           
  1000                           ;main.c: 70: 
  1001  0051  3001               	movlw	1
  1002  0052  00F2               	movwf	I2C_Master_Write@d
  1003  0053  3000               	movlw	0
  1004  0054  00F3               	movwf	I2C_Master_Write@d+1
  1005  0055  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1006  005A                     l1537:
  1007                           
  1008                           ;main.c: 71:         PORTAbits.RA0 = ~PORTAbits.RA0;
  1009  005A  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1010  005F                     l1539:
  1011                           
  1012                           ;main.c: 73:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1013  005F  30D0               	movlw	208
  1014  0060  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1015  0065                     l1541:
  1016                           
  1017                           ;main.c: 74: 
  1018  0065  3019               	movlw	25
  1019  0066  00F2               	movwf	I2C_Master_Write@d
  1020  0067  3000               	movlw	0
  1021  0068  00F3               	movwf	I2C_Master_Write@d+1
  1022  0069  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1023  006E                     l1543:
  1024                           
  1025                           ;main.c: 75:         I2C_Start(0xD0);
  1026  006E  3008               	movlw	8
  1027  006F  00F2               	movwf	I2C_Master_Write@d
  1028  0070  3000               	movlw	0
  1029  0071  00F3               	movwf	I2C_Master_Write@d+1
  1030  0072  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1031  0077                     l1545:
  1032                           
  1033                           ;main.c: 76:         I2C_Master_Write(0x3B);
  1034  0077  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1035  007C                     l1547:
  1036                           
  1037                           ;main.c: 79: 
  1038  007C  30D0               	movlw	208
  1039  007D  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1040  0082                     l1549:
  1041                           
  1042                           ;main.c: 80:         I2C_Master_Write(0xD1);
  1043  0082  301A               	movlw	26
  1044  0083  00F2               	movwf	I2C_Master_Write@d
  1045  0084  3000               	movlw	0
  1046  0085  00F3               	movwf	I2C_Master_Write@d+1
  1047  0086  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1048  008B                     l1551:
  1049  008B  3000               	movlw	0
  1050  008C  00F2               	movwf	I2C_Master_Write@d
  1051  008D  00F3               	movwf	I2C_Master_Write@d+1
  1052  008E  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1053  0093                     l1553:
  1054  0093  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1055  0098                     l1555:
  1056  0098  30D0               	movlw	208
  1057  0099  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1058  009E                     l1557:
  1059  009E  301B               	movlw	27
  1060  009F  00F2               	movwf	I2C_Master_Write@d
  1061  00A0  3000               	movlw	0
  1062  00A1  00F3               	movwf	I2C_Master_Write@d+1
  1063  00A2  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1064  00A7                     l1559:
  1065  00A7  3018               	movlw	24
  1066  00A8  00F2               	movwf	I2C_Master_Write@d
  1067  00A9  3000               	movlw	0
  1068  00AA  00F3               	movwf	I2C_Master_Write@d+1
  1069  00AB  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1070  00B0                     l1561:
  1071  00B0  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1072  00B5                     l1563:
  1073  00B5  30D0               	movlw	208
  1074  00B6  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1075  00BB                     l1565:
  1076  00BB  301C               	movlw	28
  1077  00BC  00F2               	movwf	I2C_Master_Write@d
  1078  00BD  3000               	movlw	0
  1079  00BE  00F3               	movwf	I2C_Master_Write@d+1
  1080  00BF  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1081  00C4                     l1567:
  1082  00C4  3000               	movlw	0
  1083  00C5  00F2               	movwf	I2C_Master_Write@d
  1084  00C6  00F3               	movwf	I2C_Master_Write@d+1
  1085  00C7  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1086  00CC                     l1569:
  1087  00CC  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1088  00D1                     l1571:
  1089  00D1  30D0               	movlw	208
  1090  00D2  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1091  00D7                     l1573:
  1092  00D7  3038               	movlw	56
  1093  00D8  00F2               	movwf	I2C_Master_Write@d
  1094  00D9  3000               	movlw	0
  1095  00DA  00F3               	movwf	I2C_Master_Write@d+1
  1096  00DB  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1097  00E0                     l1575:
  1098  00E0  3000               	movlw	0
  1099  00E1  00F2               	movwf	I2C_Master_Write@d
  1100  00E2  00F3               	movwf	I2C_Master_Write@d+1
  1101  00E3  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1102  00E8                     l1577:
  1103  00E8  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1104  00ED                     l1579:
  1105  00ED  1003               	clrc
  1106  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1107  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1108  00F0  1C05               	btfss	5,0	;volatile
  1109  00F1  1403               	setc
  1110  00F2  1803               	btfsc	3,0
  1111  00F3  28F5               	goto	u901
  1112  00F4  28F9               	goto	u900
  1113  00F5                     u901:
  1114  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1115  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1116  00F7  1405               	bsf	5,0	;volatile
  1117  00F8  28FC               	goto	u914
  1118  00F9                     u900:
  1119  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1120  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1121  00FB  1005               	bcf	5,0	;volatile
  1122  00FC                     u914:
  1123  00FC                     l1581:
  1124  00FC  3082               	movlw	130
  1125  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00FF  00CE               	movwf	??_main+1
  1128  0100  30DD               	movlw	221
  1129  0101  00CD               	movwf	??_main
  1130  0102                     u957:
  1131  0102  0BCD               	decfsz	??_main,f
  1132  0103  2902               	goto	u957
  1133  0104  0BCE               	decfsz	??_main+1,f
  1134  0105  2902               	goto	u957
  1135  0106                     l1583:
  1136  0106  30D0               	movlw	208
  1137  0107  120A  118A  25A8  120A  118A  	fcall	_I2C_Start
  1138  010C                     l1585:
  1139  010C  303B               	movlw	59
  1140  010D  00F2               	movwf	I2C_Master_Write@d
  1141  010E  3000               	movlw	0
  1142  010F  00F3               	movwf	I2C_Master_Write@d+1
  1143  0110  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1144  0115                     l1587:
  1145  0115  120A  118A  25FC  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1146  011A                     l1589:
  1147  011A  30D1               	movlw	209
  1148  011B  00F2               	movwf	I2C_Master_Write@d
  1149  011C  3000               	movlw	0
  1150  011D  00F3               	movwf	I2C_Master_Write@d+1
  1151  011E  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1152  0123                     l1591:
  1153                           
  1154                           ;main.c: 122:         for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  1155  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0125  01D1               	clrf	main@i
  1158  0126  01D2               	clrf	main@i+1
  1159  0127                     l1597:
  1160  0127  3000               	movlw	0
  1161  0128  120A  118A  253E  120A  118A  	fcall	_I2C_Read
  1162  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1163  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1164  012F  00CD               	movwf	??_main
  1165  0130  0851               	movf	main@i,w
  1166  0131  3E20               	addlw	(low (_valores| 0))& (0+255)
  1167  0132  0084               	movwf	4
  1168  0133  084D               	movf	??_main,w
  1169  0134  1383               	bcf	3,7	;select IRP bank0
  1170  0135  0080               	movwf	0
  1171  0136                     l1599:
  1172  0136  3001               	movlw	1
  1173  0137  07D1               	addwf	main@i,f
  1174  0138  1803               	skipnc
  1175  0139  0AD2               	incf	main@i+1,f
  1176  013A  3000               	movlw	0
  1177  013B  07D2               	addwf	main@i+1,f
  1178  013C                     l1601:
  1179  013C  0852               	movf	main@i+1,w
  1180  013D  3A80               	xorlw	128
  1181  013E  00FF               	movwf	btemp+1
  1182  013F  3080               	movlw	128
  1183  0140  027F               	subwf	btemp+1,w
  1184  0141  1D03               	skipz
  1185  0142  2945               	goto	u925
  1186  0143  300D               	movlw	13
  1187  0144  0251               	subwf	main@i,w
  1188  0145                     u925:
  1189  0145  1C03               	skipc
  1190  0146  2948               	goto	u921
  1191  0147  2949               	goto	u920
  1192  0148                     u921:
  1193  0148  2927               	goto	l1597
  1194  0149                     u920:
  1195  0149                     l1603:
  1196                           
  1197                           ;main.c: 123:         valores[13] = I2C_Read(1);
  1198  0149  3001               	movlw	1
  1199  014A  120A  118A  253E  120A  118A  	fcall	_I2C_Read
  1200  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0151  00CD               	movwf	??_main
  1203  0152  084D               	movf	??_main,w
  1204  0153  00AD               	movwf	_valores+13
  1205                           
  1206                           ;main.c: 124:         I2C_Master_Stop();
  1207  0154  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_Stop
  1208  0159                     l1605:
  1209                           
  1210                           ;main.c: 126:         Ax = ((int) valores[0] << 8) | ((int) valores[1]);
  1211  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1212  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1213  015B  0821               	movf	_valores+1,w
  1214  015C  00CD               	movwf	??_main
  1215  015D  01CE               	clrf	??_main+1
  1216  015E  0820               	movf	_valores,w
  1217  015F  00CF               	movwf	??_main+2
  1218  0160  01D0               	clrf	??_main+3
  1219  0161  084F               	movf	??_main+2,w
  1220  0162  00D0               	movwf	??_main+3
  1221  0163  01CF               	clrf	??_main+2
  1222  0164  084D               	movf	??_main,w
  1223  0165  044F               	iorwf	??_main+2,w
  1224  0166  00BA               	movwf	_Ax
  1225  0167  084E               	movf	??_main+1,w
  1226  0168  0450               	iorwf	??_main+3,w
  1227  0169  00BB               	movwf	_Ax+1
  1228  016A                     l1607:
  1229                           
  1230                           ;main.c: 127:         Ay = ((int) valores[2] << 8) | ((int) valores[3]);
  1231  016A  0823               	movf	_valores+3,w
  1232  016B  00CD               	movwf	??_main
  1233  016C  01CE               	clrf	??_main+1
  1234  016D  0822               	movf	_valores+2,w
  1235  016E  00CF               	movwf	??_main+2
  1236  016F  01D0               	clrf	??_main+3
  1237  0170  084F               	movf	??_main+2,w
  1238  0171  00D0               	movwf	??_main+3
  1239  0172  01CF               	clrf	??_main+2
  1240  0173  084D               	movf	??_main,w
  1241  0174  044F               	iorwf	??_main+2,w
  1242  0175  00B8               	movwf	_Ay
  1243  0176  084E               	movf	??_main+1,w
  1244  0177  0450               	iorwf	??_main+3,w
  1245  0178  00B9               	movwf	_Ay+1
  1246  0179                     l1609:
  1247                           
  1248                           ;main.c: 128:         Az = ((int) valores[4] << 8) | ((int) valores[5]);
  1249  0179  0825               	movf	_valores+5,w
  1250  017A  00CD               	movwf	??_main
  1251  017B  01CE               	clrf	??_main+1
  1252  017C  0824               	movf	_valores+4,w
  1253  017D  00CF               	movwf	??_main+2
  1254  017E  01D0               	clrf	??_main+3
  1255  017F  084F               	movf	??_main+2,w
  1256  0180  00D0               	movwf	??_main+3
  1257  0181  01CF               	clrf	??_main+2
  1258  0182  084D               	movf	??_main,w
  1259  0183  044F               	iorwf	??_main+2,w
  1260  0184  00B6               	movwf	_Az
  1261  0185  084E               	movf	??_main+1,w
  1262  0186  0450               	iorwf	??_main+3,w
  1263  0187  00B7               	movwf	_Az+1
  1264  0188                     l1611:
  1265                           
  1266                           ;main.c: 129:         T = ((int) valores[6] << 8) | ((int) valores[7]);
  1267  0188  0827               	movf	_valores+7,w
  1268  0189  00CD               	movwf	??_main
  1269  018A  01CE               	clrf	??_main+1
  1270  018B  0826               	movf	_valores+6,w
  1271  018C  00CF               	movwf	??_main+2
  1272  018D  01D0               	clrf	??_main+3
  1273  018E  084F               	movf	??_main+2,w
  1274  018F  00D0               	movwf	??_main+3
  1275  0190  01CF               	clrf	??_main+2
  1276  0191  084D               	movf	??_main,w
  1277  0192  044F               	iorwf	??_main+2,w
  1278  0193  00AE               	movwf	_T
  1279  0194  084E               	movf	??_main+1,w
  1280  0195  0450               	iorwf	??_main+3,w
  1281  0196  00AF               	movwf	_T+1
  1282  0197                     l1613:
  1283                           
  1284                           ;main.c: 130:         Gx = ((int) valores[8] << 8) | ((int) valores[9]);
  1285  0197  0829               	movf	_valores+9,w
  1286  0198  00CD               	movwf	??_main
  1287  0199  01CE               	clrf	??_main+1
  1288  019A  0828               	movf	_valores+8,w
  1289  019B  00CF               	movwf	??_main+2
  1290  019C  01D0               	clrf	??_main+3
  1291  019D  084F               	movf	??_main+2,w
  1292  019E  00D0               	movwf	??_main+3
  1293  019F  01CF               	clrf	??_main+2
  1294  01A0  084D               	movf	??_main,w
  1295  01A1  044F               	iorwf	??_main+2,w
  1296  01A2  00B4               	movwf	_Gx
  1297  01A3  084E               	movf	??_main+1,w
  1298  01A4  0450               	iorwf	??_main+3,w
  1299  01A5  00B5               	movwf	_Gx+1
  1300  01A6                     l1615:
  1301                           
  1302                           ;main.c: 131:         Gy = ((int) valores[10] << 8) | ((int) valores[11]);
  1303  01A6  082B               	movf	_valores+11,w
  1304  01A7  00CD               	movwf	??_main
  1305  01A8  01CE               	clrf	??_main+1
  1306  01A9  082A               	movf	_valores+10,w
  1307  01AA  00CF               	movwf	??_main+2
  1308  01AB  01D0               	clrf	??_main+3
  1309  01AC  084F               	movf	??_main+2,w
  1310  01AD  00D0               	movwf	??_main+3
  1311  01AE  01CF               	clrf	??_main+2
  1312  01AF  084D               	movf	??_main,w
  1313  01B0  044F               	iorwf	??_main+2,w
  1314  01B1  00B2               	movwf	_Gy
  1315  01B2  084E               	movf	??_main+1,w
  1316  01B3  0450               	iorwf	??_main+3,w
  1317  01B4  00B3               	movwf	_Gy+1
  1318  01B5                     l1617:
  1319                           
  1320                           ;main.c: 132:         Gz = ((int) valores[12] << 8) | ((int) valores[13]);
  1321  01B5  082D               	movf	_valores+13,w
  1322  01B6  00CD               	movwf	??_main
  1323  01B7  01CE               	clrf	??_main+1
  1324  01B8  082C               	movf	_valores+12,w
  1325  01B9  00CF               	movwf	??_main+2
  1326  01BA  01D0               	clrf	??_main+3
  1327  01BB  084F               	movf	??_main+2,w
  1328  01BC  00D0               	movwf	??_main+3
  1329  01BD  01CF               	clrf	??_main+2
  1330  01BE  084D               	movf	??_main,w
  1331  01BF  044F               	iorwf	??_main+2,w
  1332  01C0  00B0               	movwf	_Gz
  1333  01C1  084E               	movf	??_main+1,w
  1334  01C2  0450               	iorwf	??_main+3,w
  1335  01C3  00B1               	movwf	_Gz+1
  1336  01C4                     l1619:
  1337                           
  1338                           ;main.c: 136:         sprintf(buf, "Ax = %d    ", Ax);
  1339  01C4  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1340  01C5  00CD               	movwf	??_main
  1341  01C6  084D               	movf	??_main,w
  1342  01C7  00C0               	movwf	sprintf@f
  1343  01C8  083B               	movf	_Ax+1,w
  1344  01C9  00C2               	movwf	?_sprintf+2
  1345  01CA  083A               	movf	_Ax,w
  1346  01CB  00C1               	movwf	?_sprintf+1
  1347  01CC  30A0               	movlw	(low (_buf| 0))& (0+255)
  1348  01CD  120A  118A  2260  120A  118A  	fcall	_sprintf
  1349  01D2                     l1621:
  1350                           
  1351                           ;main.c: 137:         UARTSendString(buf);
  1352  01D2  30A0               	movlw	(low (_buf| 0))& (0+255)
  1353  01D3  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1354  01D8                     l1623:
  1355                           
  1356                           ;main.c: 139:         sprintf(buf, " Ay = %d    ", Ay);
  1357  01D8  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1358  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1359  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1360  01DB  00CD               	movwf	??_main
  1361  01DC  084D               	movf	??_main,w
  1362  01DD  00C0               	movwf	sprintf@f
  1363  01DE  0839               	movf	_Ay+1,w
  1364  01DF  00C2               	movwf	?_sprintf+2
  1365  01E0  0838               	movf	_Ay,w
  1366  01E1  00C1               	movwf	?_sprintf+1
  1367  01E2  30A0               	movlw	(low (_buf| 0))& (0+255)
  1368  01E3  120A  118A  2260  120A  118A  	fcall	_sprintf
  1369  01E8                     l1625:
  1370                           
  1371                           ;main.c: 140:         UARTSendString(buf);
  1372  01E8  30A0               	movlw	(low (_buf| 0))& (0+255)
  1373  01E9  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1374  01EE                     l1627:
  1375                           
  1376                           ;main.c: 142:         sprintf(buf, " Az = %d    ", Az);
  1377  01EE  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1378  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01F1  00CD               	movwf	??_main
  1381  01F2  084D               	movf	??_main,w
  1382  01F3  00C0               	movwf	sprintf@f
  1383  01F4  0837               	movf	_Az+1,w
  1384  01F5  00C2               	movwf	?_sprintf+2
  1385  01F6  0836               	movf	_Az,w
  1386  01F7  00C1               	movwf	?_sprintf+1
  1387  01F8  30A0               	movlw	(low (_buf| 0))& (0+255)
  1388  01F9  120A  118A  2260  120A  118A  	fcall	_sprintf
  1389  01FE                     l1629:
  1390                           
  1391                           ;main.c: 143:         UARTSendString(buf);
  1392  01FE  30A0               	movlw	(low (_buf| 0))& (0+255)
  1393  01FF  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1394  0204                     l1631:
  1395                           
  1396                           ;main.c: 145:         sprintf(buf, " T = %d  ", T);
  1397  0204  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1398  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0207  00CD               	movwf	??_main
  1401  0208  084D               	movf	??_main,w
  1402  0209  00C0               	movwf	sprintf@f
  1403  020A  082F               	movf	_T+1,w
  1404  020B  00C2               	movwf	?_sprintf+2
  1405  020C  082E               	movf	_T,w
  1406  020D  00C1               	movwf	?_sprintf+1
  1407  020E  30A0               	movlw	(low (_buf| 0))& (0+255)
  1408  020F  120A  118A  2260  120A  118A  	fcall	_sprintf
  1409  0214                     l1633:
  1410                           
  1411                           ;main.c: 146:         UARTSendString(buf);
  1412  0214  30A0               	movlw	(low (_buf| 0))& (0+255)
  1413  0215  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1414  021A                     l1635:
  1415                           
  1416                           ;main.c: 148:         sprintf(buf, " Gx = %d    ", Gx);
  1417  021A  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1418  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1419  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1420  021D  00CD               	movwf	??_main
  1421  021E  084D               	movf	??_main,w
  1422  021F  00C0               	movwf	sprintf@f
  1423  0220  0835               	movf	_Gx+1,w
  1424  0221  00C2               	movwf	?_sprintf+2
  1425  0222  0834               	movf	_Gx,w
  1426  0223  00C1               	movwf	?_sprintf+1
  1427  0224  30A0               	movlw	(low (_buf| 0))& (0+255)
  1428  0225  120A  118A  2260  120A  118A  	fcall	_sprintf
  1429  022A                     l1637:
  1430                           
  1431                           ;main.c: 149:         UARTSendString(buf);
  1432  022A  30A0               	movlw	(low (_buf| 0))& (0+255)
  1433  022B  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1434  0230                     l1639:
  1435                           
  1436                           ;main.c: 151:         sprintf(buf, " Gy = %d    ", Gy);
  1437  0230  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1438  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0233  00CD               	movwf	??_main
  1441  0234  084D               	movf	??_main,w
  1442  0235  00C0               	movwf	sprintf@f
  1443  0236  0833               	movf	_Gy+1,w
  1444  0237  00C2               	movwf	?_sprintf+2
  1445  0238  0832               	movf	_Gy,w
  1446  0239  00C1               	movwf	?_sprintf+1
  1447  023A  30A0               	movlw	(low (_buf| 0))& (0+255)
  1448  023B  120A  118A  2260  120A  118A  	fcall	_sprintf
  1449  0240                     l1641:
  1450                           
  1451                           ;main.c: 152:         UARTSendString(buf);
  1452  0240  30A0               	movlw	(low (_buf| 0))& (0+255)
  1453  0241  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1454  0246                     l1643:
  1455                           
  1456                           ;main.c: 154:         sprintf(buf, " Gz = %d\r\n", Gz);
  1457  0246  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1458  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0249  00CD               	movwf	??_main
  1461  024A  084D               	movf	??_main,w
  1462  024B  00C0               	movwf	sprintf@f
  1463  024C  0831               	movf	_Gz+1,w
  1464  024D  00C2               	movwf	?_sprintf+2
  1465  024E  0830               	movf	_Gz,w
  1466  024F  00C1               	movwf	?_sprintf+1
  1467  0250  30A0               	movlw	(low (_buf| 0))& (0+255)
  1468  0251  120A  118A  2260  120A  118A  	fcall	_sprintf
  1469  0256                     l1645:
  1470                           
  1471                           ;main.c: 155:         UARTSendString(buf);
  1472  0256  30A0               	movlw	(low (_buf| 0))& (0+255)
  1473  0257  120A  118A  2587  120A  118A  	fcall	_UARTSendString
  1474  025C  28ED               	goto	l1579
  1475  025D  120A  118A  280C   	ljmp	start
  1476  0260                     __end_of_main:
  1477                           
  1478                           	psect	text1
  1479  0260                     __ptext1:	
  1480 ;; *************** function _sprintf *****************
  1481 ;; Defined at:
  1482 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  sp              1    wreg     PTR unsigned char 
  1485 ;;		 -> buf(50), 
  1486 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1487 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1488 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1491 ;;		 -> buf(50), 
  1492 ;;  tmpval          4    0        struct .
  1493 ;;  val             2   13[BANK0 ] unsigned int 
  1494 ;;  cp              2    0        PTR const unsigned char 
  1495 ;;  len             2    0        unsigned int 
  1496 ;;  c               1   16[BANK0 ] unsigned char 
  1497 ;;  prec            1   12[BANK0 ] char 
  1498 ;;  flag            1   11[BANK0 ] unsigned char 
  1499 ;;  ap              1   10[BANK0 ] PTR void [1]
  1500 ;;		 -> ?_sprintf(2), 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    4[BANK0 ] int 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       3       0       0       0
  1511 ;;      Locals:         0       7       0       0       0
  1512 ;;      Temps:          0       3       0       0       0
  1513 ;;      Totals:         0      13       0       0       0
  1514 ;;Total ram usage:       13 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    2
  1517 ;; This function calls:
  1518 ;;		___lwdiv
  1519 ;;		___lwmod
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _sprintf
  1527  0260                     _sprintf:
  1528                           
  1529                           ;incstack = 0
  1530                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1531                           ;sprintf@sp stored from wreg
  1532  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0262  00CB               	movwf	sprintf@sp
  1535  0263                     l1455:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1538  0263  3041               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1539  0264  00C3               	movwf	??_sprintf
  1540  0265  0843               	movf	??_sprintf,w
  1541  0266  00C6               	movwf	sprintf@ap
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1544  0267  2B33               	goto	l1507
  1545  0268                     l1457:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1548  0268  3025               	movlw	37
  1549  0269  064C               	xorwf	sprintf@c,w
  1550  026A  1903               	btfsc	3,2
  1551  026B  2A6D               	goto	u821
  1552  026C  2A6E               	goto	u820
  1553  026D                     u821:
  1554  026D  2A7A               	goto	l1463
  1555  026E                     u820:
  1556  026E                     l1459:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1559  026E  084C               	movf	sprintf@c,w
  1560  026F  00C3               	movwf	??_sprintf
  1561  0270  084B               	movf	sprintf@sp,w
  1562  0271  0084               	movwf	4
  1563  0272  0843               	movf	??_sprintf,w
  1564  0273  1383               	bcf	3,7	;select IRP bank0
  1565  0274  0080               	movwf	0
  1566  0275                     l1461:
  1567  0275  3001               	movlw	1
  1568  0276  00C3               	movwf	??_sprintf
  1569  0277  0843               	movf	??_sprintf,w
  1570  0278  07CB               	addwf	sprintf@sp,f
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1573  0279  2B33               	goto	l1507
  1574  027A                     l1463:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1577  027A  01C7               	clrf	sprintf@flag
  1578  027B                     l1467:	
  1579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1580                           
  1581  027B  3001               	movlw	1
  1582  027C  07C0               	addwf	sprintf@f,f
  1583  027D  30FF               	movlw	-1
  1584  027E  0740               	addwf	sprintf@f,w
  1585  027F  0084               	movwf	4
  1586  0280  120A  118A  2421  120A  118A  	fcall	stringdir
  1587  0285  00CC               	movwf	sprintf@c
  1588  0286  00C3               	movwf	??_sprintf
  1589  0287  01C4               	clrf	??_sprintf+1
  1590                           
  1591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 1, Range of values is 0 to 0
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte            4     3 (average)
  1597                           ; direct_byte           11     8 (fixed)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ;	Chosen strategy is simple_byte
  1600  0288  0844               	movf	??_sprintf+1,w
  1601  0289  3A00               	xorlw	0	; case 0
  1602  028A  1903               	skipnz
  1603  028B  2A8D               	goto	l1683
  1604  028C  2B33               	goto	l1507
  1605  028D                     l1683:
  1606                           
  1607                           ; Switch size 1, requested type "simple"
  1608                           ; Number of cases is 3, Range of values is 0 to 105
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte           10     6 (average)
  1612                           ; jumptable            260     6 (fixed)
  1613                           ;	Chosen strategy is simple_byte
  1614  028D  0843               	movf	??_sprintf,w
  1615  028E  3A00               	xorlw	0	; case 0
  1616  028F  1903               	skipnz
  1617  0290  2B45               	goto	l1509
  1618  0291  3A64               	xorlw	100	; case 100
  1619  0292  1903               	skipnz
  1620  0293  2A98               	goto	l1469
  1621  0294  3A0D               	xorlw	13	; case 105
  1622  0295  1903               	skipnz
  1623  0296  2A98               	goto	l1469
  1624  0297  2B33               	goto	l1507
  1625  0298                     l1469:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1628  0298  0846               	movf	sprintf@ap,w
  1629  0299  0084               	movwf	4
  1630  029A  1383               	bcf	3,7	;select IRP bank0
  1631  029B  0800               	movf	0,w
  1632  029C  00C9               	movwf	sprintf@val
  1633  029D  0A84               	incf	4,f
  1634  029E  0800               	movf	0,w
  1635  029F  00CA               	movwf	sprintf@val+1
  1636  02A0                     l1471:
  1637  02A0  3002               	movlw	2
  1638  02A1  00C3               	movwf	??_sprintf
  1639  02A2  0843               	movf	??_sprintf,w
  1640  02A3  07C6               	addwf	sprintf@ap,f
  1641  02A4                     l1473:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1644  02A4  1FCA               	btfss	sprintf@val+1,7
  1645  02A5  2AA7               	goto	u831
  1646  02A6  2AA8               	goto	u830
  1647  02A7                     u831:
  1648  02A7  2AB1               	goto	l1479
  1649  02A8                     u830:
  1650  02A8                     l1475:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1653  02A8  3003               	movlw	3
  1654  02A9  00C3               	movwf	??_sprintf
  1655  02AA  0843               	movf	??_sprintf,w
  1656  02AB  04C7               	iorwf	sprintf@flag,f
  1657  02AC                     l1477:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1660  02AC  09C9               	comf	sprintf@val,f
  1661  02AD  09CA               	comf	sprintf@val+1,f
  1662  02AE  0AC9               	incf	sprintf@val,f
  1663  02AF  1903               	skipnz
  1664  02B0  0ACA               	incf	sprintf@val+1,f
  1665  02B1                     l1479:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1668  02B1  01CC               	clrf	sprintf@c
  1669  02B2  0ACC               	incf	sprintf@c,f
  1670  02B3                     l1485:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1673  02B3  084C               	movf	sprintf@c,w
  1674  02B4  00C3               	movwf	??_sprintf
  1675  02B5  0743               	addwf	??_sprintf,w
  1676  02B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1677  02B7  0084               	movwf	4
  1678  02B8  120A  118A  2421  120A  118A  	fcall	stringdir
  1679  02BD  00C4               	movwf	??_sprintf+1
  1680  02BE  120A  118A  2421  120A  118A  	fcall	stringdir
  1681  02C3  00C5               	movwf	??_sprintf+2
  1682  02C4  0845               	movf	??_sprintf+2,w
  1683  02C5  024A               	subwf	sprintf@val+1,w
  1684  02C6  1D03               	skipz
  1685  02C7  2ACA               	goto	u845
  1686  02C8  0844               	movf	??_sprintf+1,w
  1687  02C9  0249               	subwf	sprintf@val,w
  1688  02CA                     u845:
  1689  02CA  1803               	skipnc
  1690  02CB  2ACD               	goto	u841
  1691  02CC  2ACE               	goto	u840
  1692  02CD                     u841:
  1693  02CD  2ACF               	goto	l1489
  1694  02CE                     u840:
  1695  02CE  2AD9               	goto	l1491
  1696  02CF                     l1489:
  1697  02CF  3001               	movlw	1
  1698  02D0  00C3               	movwf	??_sprintf
  1699  02D1  0843               	movf	??_sprintf,w
  1700  02D2  07CC               	addwf	sprintf@c,f
  1701  02D3  3005               	movlw	5
  1702  02D4  064C               	xorwf	sprintf@c,w
  1703  02D5  1D03               	btfss	3,2
  1704  02D6  2AD8               	goto	u851
  1705  02D7  2AD9               	goto	u850
  1706  02D8                     u851:
  1707  02D8  2AB3               	goto	l1485
  1708  02D9                     u850:
  1709  02D9                     l1491:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1712  02D9  0847               	movf	sprintf@flag,w
  1713  02DA  3903               	andlw	3
  1714  02DB  1903               	btfsc	3,2
  1715  02DC  2ADE               	goto	u861
  1716  02DD  2ADF               	goto	u860
  1717  02DE                     u861:
  1718  02DE  2AEA               	goto	l1497
  1719  02DF                     u860:
  1720  02DF                     l1493:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1723  02DF  302D               	movlw	45
  1724  02E0  00C3               	movwf	??_sprintf
  1725  02E1  084B               	movf	sprintf@sp,w
  1726  02E2  0084               	movwf	4
  1727  02E3  0843               	movf	??_sprintf,w
  1728  02E4  1383               	bcf	3,7	;select IRP bank0
  1729  02E5  0080               	movwf	0
  1730  02E6                     l1495:
  1731  02E6  3001               	movlw	1
  1732  02E7  00C3               	movwf	??_sprintf
  1733  02E8  0843               	movf	??_sprintf,w
  1734  02E9  07CB               	addwf	sprintf@sp,f
  1735  02EA                     l1497:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1738  02EA  084C               	movf	sprintf@c,w
  1739  02EB  00C3               	movwf	??_sprintf
  1740  02EC  0843               	movf	??_sprintf,w
  1741  02ED  00C8               	movwf	sprintf@prec
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1744  02EE  2B2A               	goto	l1505
  1745  02EF                     l1499:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1748  02EF  300A               	movlw	10
  1749  02F0  00BC               	movwf	___lwmod@divisor
  1750  02F1  3000               	movlw	0
  1751  02F2  00BD               	movwf	___lwmod@divisor+1
  1752  02F3  0848               	movf	sprintf@prec,w
  1753  02F4  00C3               	movwf	??_sprintf
  1754  02F5  0743               	addwf	??_sprintf,w
  1755  02F6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1756  02F7  0084               	movwf	4
  1757  02F8  120A  118A  2421  120A  118A  	fcall	stringdir
  1758  02FD  00F2               	movwf	___lwdiv@divisor
  1759  02FE  120A  118A  2421  120A  118A  	fcall	stringdir
  1760  0303  00F3               	movwf	___lwdiv@divisor+1
  1761  0304  084A               	movf	sprintf@val+1,w
  1762  0305  00F5               	movwf	___lwdiv@dividend+1
  1763  0306  0849               	movf	sprintf@val,w
  1764  0307  00F4               	movwf	___lwdiv@dividend
  1765  0308  120A  118A  2486  120A  118A  	fcall	___lwdiv
  1766  030D  0873               	movf	?___lwdiv+1,w
  1767  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1768  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0310  00BF               	movwf	___lwmod@dividend+1
  1770  0311  0872               	movf	?___lwdiv,w
  1771  0312  00BE               	movwf	___lwmod@dividend
  1772  0313  120A  118A  24CA  120A  118A  	fcall	___lwmod
  1773  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1775  031A  083C               	movf	?___lwmod,w
  1776  031B  3E30               	addlw	48
  1777  031C  00C4               	movwf	??_sprintf+1
  1778  031D  0844               	movf	??_sprintf+1,w
  1779  031E  00CC               	movwf	sprintf@c
  1780  031F                     l1501:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1783  031F  084C               	movf	sprintf@c,w
  1784  0320  00C3               	movwf	??_sprintf
  1785  0321  084B               	movf	sprintf@sp,w
  1786  0322  0084               	movwf	4
  1787  0323  0843               	movf	??_sprintf,w
  1788  0324  1383               	bcf	3,7	;select IRP bank0
  1789  0325  0080               	movwf	0
  1790  0326                     l1503:
  1791  0326  3001               	movlw	1
  1792  0327  00C3               	movwf	??_sprintf
  1793  0328  0843               	movf	??_sprintf,w
  1794  0329  07CB               	addwf	sprintf@sp,f
  1795  032A                     l1505:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1798  032A  30FF               	movlw	255
  1799  032B  00C3               	movwf	??_sprintf
  1800  032C  0843               	movf	??_sprintf,w
  1801  032D  07C8               	addwf	sprintf@prec,f
  1802  032E  0A48               	incf	sprintf@prec,w
  1803  032F  1D03               	btfss	3,2
  1804  0330  2B32               	goto	u871
  1805  0331  2B33               	goto	u870
  1806  0332                     u871:
  1807  0332  2AEF               	goto	l1499
  1808  0333                     u870:
  1809  0333                     l1507:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1812  0333  3001               	movlw	1
  1813  0334  07C0               	addwf	sprintf@f,f
  1814  0335  30FF               	movlw	-1
  1815  0336  0740               	addwf	sprintf@f,w
  1816  0337  0084               	movwf	4
  1817  0338  120A  118A  2421  120A  118A  	fcall	stringdir
  1818  033D  00C3               	movwf	??_sprintf
  1819  033E  0843               	movf	??_sprintf,w
  1820  033F  00CC               	movwf	sprintf@c
  1821  0340  084C               	movf	sprintf@c,w
  1822  0341  1D03               	btfss	3,2
  1823  0342  2B44               	goto	u881
  1824  0343  2B45               	goto	u880
  1825  0344                     u881:
  1826  0344  2A68               	goto	l1457
  1827  0345                     u880:
  1828  0345                     l1509:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1831  0345  084B               	movf	sprintf@sp,w
  1832  0346  0084               	movwf	4
  1833  0347  1383               	bcf	3,7	;select IRP bank0
  1834  0348  0180               	clrf	0
  1835  0349                     l329:
  1836  0349  0008               	return
  1837  034A                     __end_of_sprintf:
  1838                           
  1839                           	psect	text2
  1840  04CA                     __ptext2:	
  1841 ;; *************** function ___lwmod *****************
  1842 ;; Defined at:
  1843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  divisor         2    0[BANK0 ] unsigned int 
  1846 ;;  dividend        2    2[BANK0 ] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  counter         1   11[COMMON] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2    0[BANK0 ] unsigned int 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       4       0       0       0
  1859 ;;      Locals:         1       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0
  1861 ;;      Totals:         2       4       0       0       0
  1862 ;;Total ram usage:        6 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_sprintf
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function ___lwmod
  1874  04CA                     ___lwmod:
  1875  04CA                     l1379:	
  1876                           ;incstack = 0
  1877                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1878                           
  1879  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1880  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1881  04CC  083C               	movf	___lwmod@divisor,w
  1882  04CD  043D               	iorwf	___lwmod@divisor+1,w
  1883  04CE  1903               	btfsc	3,2
  1884  04CF  2CD1               	goto	u721
  1885  04D0  2CD2               	goto	u720
  1886  04D1                     u721:
  1887  04D1  2D01               	goto	l1397
  1888  04D2                     u720:
  1889  04D2                     l1381:
  1890  04D2  01FB               	clrf	___lwmod@counter
  1891  04D3  0AFB               	incf	___lwmod@counter,f
  1892  04D4  2CE0               	goto	l1387
  1893  04D5                     l1383:
  1894  04D5  3001               	movlw	1
  1895  04D6                     u735:
  1896  04D6  1003               	clrc
  1897  04D7  0DBC               	rlf	___lwmod@divisor,f
  1898  04D8  0DBD               	rlf	___lwmod@divisor+1,f
  1899  04D9  3EFF               	addlw	-1
  1900  04DA  1D03               	skipz
  1901  04DB  2CD6               	goto	u735
  1902  04DC                     l1385:
  1903  04DC  3001               	movlw	1
  1904  04DD  00FA               	movwf	??___lwmod
  1905  04DE  087A               	movf	??___lwmod,w
  1906  04DF  07FB               	addwf	___lwmod@counter,f
  1907  04E0                     l1387:
  1908  04E0  1FBD               	btfss	___lwmod@divisor+1,7
  1909  04E1  2CE3               	goto	u741
  1910  04E2  2CE4               	goto	u740
  1911  04E3                     u741:
  1912  04E3  2CD5               	goto	l1383
  1913  04E4                     u740:
  1914  04E4                     l1389:
  1915  04E4  083D               	movf	___lwmod@divisor+1,w
  1916  04E5  023F               	subwf	___lwmod@dividend+1,w
  1917  04E6  1D03               	skipz
  1918  04E7  2CEA               	goto	u755
  1919  04E8  083C               	movf	___lwmod@divisor,w
  1920  04E9  023E               	subwf	___lwmod@dividend,w
  1921  04EA                     u755:
  1922  04EA  1C03               	skipc
  1923  04EB  2CED               	goto	u751
  1924  04EC  2CEE               	goto	u750
  1925  04ED                     u751:
  1926  04ED  2CF4               	goto	l1393
  1927  04EE                     u750:
  1928  04EE                     l1391:
  1929  04EE  083C               	movf	___lwmod@divisor,w
  1930  04EF  02BE               	subwf	___lwmod@dividend,f
  1931  04F0  083D               	movf	___lwmod@divisor+1,w
  1932  04F1  1C03               	skipc
  1933  04F2  03BF               	decf	___lwmod@dividend+1,f
  1934  04F3  02BF               	subwf	___lwmod@dividend+1,f
  1935  04F4                     l1393:
  1936  04F4  3001               	movlw	1
  1937  04F5                     u765:
  1938  04F5  1003               	clrc
  1939  04F6  0CBD               	rrf	___lwmod@divisor+1,f
  1940  04F7  0CBC               	rrf	___lwmod@divisor,f
  1941  04F8  3EFF               	addlw	-1
  1942  04F9  1D03               	skipz
  1943  04FA  2CF5               	goto	u765
  1944  04FB                     l1395:
  1945  04FB  3001               	movlw	1
  1946  04FC  02FB               	subwf	___lwmod@counter,f
  1947  04FD  1D03               	btfss	3,2
  1948  04FE  2D00               	goto	u771
  1949  04FF  2D01               	goto	u770
  1950  0500                     u771:
  1951  0500  2CE4               	goto	l1389
  1952  0501                     u770:
  1953  0501                     l1397:
  1954  0501  083F               	movf	___lwmod@dividend+1,w
  1955  0502  00BD               	movwf	?___lwmod+1
  1956  0503  083E               	movf	___lwmod@dividend,w
  1957  0504  00BC               	movwf	?___lwmod
  1958  0505                     l615:
  1959  0505  0008               	return
  1960  0506                     __end_of___lwmod:
  1961                           
  1962                           	psect	text3
  1963  0486                     __ptext3:	
  1964 ;; *************** function ___lwdiv *****************
  1965 ;; Defined at:
  1966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  divisor         2    2[COMMON] unsigned int 
  1969 ;;  dividend        2    4[COMMON] unsigned int 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  quotient        2    7[COMMON] unsigned int 
  1972 ;;  counter         1    9[COMMON] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    2[COMMON] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         4       0       0       0       0
  1983 ;;      Locals:         3       0       0       0       0
  1984 ;;      Temps:          1       0       0       0       0
  1985 ;;      Totals:         8       0       0       0       0
  1986 ;;Total ram usage:        8 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_sprintf
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function ___lwdiv
  1998  0486                     ___lwdiv:
  1999  0486                     l1353:	
  2000                           ;incstack = 0
  2001                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2002                           
  2003  0486  01F7               	clrf	___lwdiv@quotient
  2004  0487  01F8               	clrf	___lwdiv@quotient+1
  2005  0488                     l1355:
  2006  0488  0872               	movf	___lwdiv@divisor,w
  2007  0489  0473               	iorwf	___lwdiv@divisor+1,w
  2008  048A  1903               	btfsc	3,2
  2009  048B  2C8D               	goto	u651
  2010  048C  2C8E               	goto	u650
  2011  048D                     u651:
  2012  048D  2CC5               	goto	l1375
  2013  048E                     u650:
  2014  048E                     l1357:
  2015  048E  01F9               	clrf	___lwdiv@counter
  2016  048F  0AF9               	incf	___lwdiv@counter,f
  2017  0490  2C9C               	goto	l1363
  2018  0491                     l1359:
  2019  0491  3001               	movlw	1
  2020  0492                     u665:
  2021  0492  1003               	clrc
  2022  0493  0DF2               	rlf	___lwdiv@divisor,f
  2023  0494  0DF3               	rlf	___lwdiv@divisor+1,f
  2024  0495  3EFF               	addlw	-1
  2025  0496  1D03               	skipz
  2026  0497  2C92               	goto	u665
  2027  0498                     l1361:
  2028  0498  3001               	movlw	1
  2029  0499  00F6               	movwf	??___lwdiv
  2030  049A  0876               	movf	??___lwdiv,w
  2031  049B  07F9               	addwf	___lwdiv@counter,f
  2032  049C                     l1363:
  2033  049C  1FF3               	btfss	___lwdiv@divisor+1,7
  2034  049D  2C9F               	goto	u671
  2035  049E  2CA0               	goto	u670
  2036  049F                     u671:
  2037  049F  2C91               	goto	l1359
  2038  04A0                     u670:
  2039  04A0                     l1365:
  2040  04A0  3001               	movlw	1
  2041  04A1                     u685:
  2042  04A1  1003               	clrc
  2043  04A2  0DF7               	rlf	___lwdiv@quotient,f
  2044  04A3  0DF8               	rlf	___lwdiv@quotient+1,f
  2045  04A4  3EFF               	addlw	-1
  2046  04A5  1D03               	skipz
  2047  04A6  2CA1               	goto	u685
  2048  04A7  0873               	movf	___lwdiv@divisor+1,w
  2049  04A8  0275               	subwf	___lwdiv@dividend+1,w
  2050  04A9  1D03               	skipz
  2051  04AA  2CAD               	goto	u695
  2052  04AB  0872               	movf	___lwdiv@divisor,w
  2053  04AC  0274               	subwf	___lwdiv@dividend,w
  2054  04AD                     u695:
  2055  04AD  1C03               	skipc
  2056  04AE  2CB0               	goto	u691
  2057  04AF  2CB1               	goto	u690
  2058  04B0                     u691:
  2059  04B0  2CB8               	goto	l1371
  2060  04B1                     u690:
  2061  04B1                     l1367:
  2062  04B1  0872               	movf	___lwdiv@divisor,w
  2063  04B2  02F4               	subwf	___lwdiv@dividend,f
  2064  04B3  0873               	movf	___lwdiv@divisor+1,w
  2065  04B4  1C03               	skipc
  2066  04B5  03F5               	decf	___lwdiv@dividend+1,f
  2067  04B6  02F5               	subwf	___lwdiv@dividend+1,f
  2068  04B7                     l1369:
  2069  04B7  1477               	bsf	___lwdiv@quotient,0
  2070  04B8                     l1371:
  2071  04B8  3001               	movlw	1
  2072  04B9                     u705:
  2073  04B9  1003               	clrc
  2074  04BA  0CF3               	rrf	___lwdiv@divisor+1,f
  2075  04BB  0CF2               	rrf	___lwdiv@divisor,f
  2076  04BC  3EFF               	addlw	-1
  2077  04BD  1D03               	skipz
  2078  04BE  2CB9               	goto	u705
  2079  04BF                     l1373:
  2080  04BF  3001               	movlw	1
  2081  04C0  02F9               	subwf	___lwdiv@counter,f
  2082  04C1  1D03               	btfss	3,2
  2083  04C2  2CC4               	goto	u711
  2084  04C3  2CC5               	goto	u710
  2085  04C4                     u711:
  2086  04C4  2CA0               	goto	l1365
  2087  04C5                     u710:
  2088  04C5                     l1375:
  2089  04C5  0878               	movf	___lwdiv@quotient+1,w
  2090  04C6  00F3               	movwf	?___lwdiv+1
  2091  04C7  0877               	movf	___lwdiv@quotient,w
  2092  04C8  00F2               	movwf	?___lwdiv
  2093  04C9                     l605:
  2094  04C9  0008               	return
  2095  04CA                     __end_of___lwdiv:
  2096                           
  2097                           	psect	text4
  2098  0587                     __ptext4:	
  2099 ;; *************** function _UARTSendString *****************
  2100 ;; Defined at:
  2101 ;;		line 50 in file "UART.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  str             1    wreg     PTR const unsigned char 
  2104 ;;		 -> buf(50), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  str             1    6[COMMON] PTR const unsigned char 
  2107 ;;		 -> buf(50), 
  2108 ;;  i               2    4[COMMON] int 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         3       0       0       0       0
  2120 ;;      Temps:          1       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		_UARTSendChar
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function _UARTSendString
  2134  0587                     _UARTSendString:
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2138                           ;UARTSendString@str stored from wreg
  2139  0587  00F6               	movwf	UARTSendString@str
  2140  0588                     l1517:
  2141                           
  2142                           ;UART.c: 51:     int i = 0;
  2143  0588  01F4               	clrf	UARTSendString@i
  2144  0589  01F5               	clrf	UARTSendString@i+1
  2145                           
  2146                           ;UART.c: 55:         while(str[i] != '\0'){
  2147  058A  2D9C               	goto	l1523
  2148  058B                     l1519:
  2149                           
  2150                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2151  058B  0874               	movf	UARTSendString@i,w
  2152  058C  0776               	addwf	UARTSendString@str,w
  2153  058D  00F3               	movwf	??_UARTSendString
  2154  058E  0873               	movf	??_UARTSendString,w
  2155  058F  0084               	movwf	4
  2156  0590  0800               	movf	0,w
  2157  0591  120A  118A  25CB  120A  118A  	fcall	_UARTSendChar
  2158  0596                     l1521:
  2159  0596  3001               	movlw	1
  2160  0597  07F4               	addwf	UARTSendString@i,f
  2161  0598  1803               	skipnc
  2162  0599  0AF5               	incf	UARTSendString@i+1,f
  2163  059A  3000               	movlw	0
  2164  059B  07F5               	addwf	UARTSendString@i+1,f
  2165  059C                     l1523:
  2166                           
  2167                           ;UART.c: 55:         while(str[i] != '\0'){
  2168  059C  0874               	movf	UARTSendString@i,w
  2169  059D  0776               	addwf	UARTSendString@str,w
  2170  059E  00F3               	movwf	??_UARTSendString
  2171  059F  0873               	movf	??_UARTSendString,w
  2172  05A0  0084               	movwf	4
  2173  05A1  1383               	bcf	3,7	;select IRP bank0
  2174  05A2  0800               	movf	0,w
  2175  05A3  1D03               	btfss	3,2
  2176  05A4  2DA6               	goto	u891
  2177  05A5  2DA7               	goto	u890
  2178  05A6                     u891:
  2179  05A6  2D8B               	goto	l1519
  2180  05A7                     u890:
  2181  05A7                     l198:
  2182  05A7  0008               	return
  2183  05A8                     __end_of_UARTSendString:
  2184                           
  2185                           	psect	text5
  2186  05CB                     __ptext5:	
  2187 ;; *************** function _UARTSendChar *****************
  2188 ;; Defined at:
  2189 ;;		line 40 in file "UART.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  c               1    wreg     const unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  c               1    2[COMMON] const unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         1       0       0       0       0
  2207 ;;Total ram usage:        1 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_UARTSendString
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _UARTSendChar
  2219  05CB                     _UARTSendChar:
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _UARTSendChar: [wreg]
  2223                           ;UARTSendChar@c stored from wreg
  2224  05CB  00F2               	movwf	UARTSendChar@c
  2225  05CC                     l1349:
  2226  05CC                     l189:	
  2227                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  2228                           
  2229  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  2230  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  2231  05CE  1C98               	btfss	24,1	;volatile
  2232  05CF  2DD1               	goto	u641
  2233  05D0  2DD2               	goto	u640
  2234  05D1                     u641:
  2235  05D1  2DCC               	goto	l189
  2236  05D2                     u640:
  2237  05D2                     l1351:
  2238                           
  2239                           ;UART.c: 42:     TXREG = c;
  2240  05D2  0872               	movf	UARTSendChar@c,w
  2241  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2242  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2243  05D5  0099               	movwf	25	;volatile
  2244  05D6                     l192:
  2245  05D6  0008               	return
  2246  05D7                     __end_of_UARTSendChar:
  2247                           
  2248                           	psect	text6
  2249  0565                     __ptext6:	
  2250 ;; *************** function _Setup *****************
  2251 ;; Defined at:
  2252 ;;		line 165 in file "main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		_UARTInit
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _Setup
  2282  0565                     _Setup:
  2283  0565                     l1401:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  2286                           
  2287                           
  2288                           ;main.c: 167:     UARTInit(9600, 1);
  2289  0565  3000               	movlw	0
  2290  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0568  00C4               	movwf	UARTInit@baud_rate+3
  2293  0569  3000               	movlw	0
  2294  056A  00C3               	movwf	UARTInit@baud_rate+2
  2295  056B  3025               	movlw	37
  2296  056C  00C2               	movwf	UARTInit@baud_rate+1
  2297  056D  3080               	movlw	128
  2298  056E  00C1               	movwf	UARTInit@baud_rate
  2299  056F  01C5               	clrf	UARTInit@BRGH
  2300  0570  0AC5               	incf	UARTInit@BRGH,f
  2301  0571  120A  118A  234A  120A  118A  	fcall	_UARTInit
  2302  0576                     l1403:
  2303                           
  2304                           ;main.c: 170:     TRISA = 0;
  2305  0576  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0577  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0578  0185               	clrf	5	;volatile
  2308  0579                     l1405:
  2309                           
  2310                           ;main.c: 171:     PORTA = 0;
  2311  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2312  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2313  057B  0185               	clrf	5	;volatile
  2314  057C                     l1407:
  2315                           
  2316                           ;main.c: 172:     TRISC = 0;
  2317  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2318  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2319  057E  0187               	clrf	7	;volatile
  2320  057F                     l1409:
  2321                           
  2322                           ;main.c: 173:     PORTC = 0;
  2323  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0581  0187               	clrf	7	;volatile
  2326  0582                     l1411:
  2327                           
  2328                           ;main.c: 174:     ANSEL = 0;
  2329  0582  1683               	bsf	3,5	;RP0=1, select bank3
  2330  0583  1703               	bsf	3,6	;RP1=1, select bank3
  2331  0584  0188               	clrf	8	;volatile
  2332  0585                     l1413:
  2333                           
  2334                           ;main.c: 175:     ANSELH = 0;
  2335  0585  0189               	clrf	9	;volatile
  2336  0586                     l72:
  2337  0586  0008               	return
  2338  0587                     __end_of_Setup:
  2339                           
  2340                           	psect	text7
  2341  034A                     __ptext7:	
  2342 ;; *************** function _UARTInit *****************
  2343 ;; Defined at:
  2344 ;;		line 9 in file "UART.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  2347 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       5       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       4       0       0       0
  2362 ;;      Totals:         0       9       0       0       0
  2363 ;;Total ram usage:        9 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    2
  2366 ;; This function calls:
  2367 ;;		___lldiv
  2368 ;; This function is called by:
  2369 ;;		_Setup
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _UARTInit
  2375  034A                     _UARTInit:
  2376  034A                     l1315:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  2379                           
  2380                           
  2381                           ;UART.c: 11:     if (BRGH == 0) {
  2382  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2383  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2384  034C  0845               	movf	UARTInit@BRGH,w
  2385  034D  1D03               	btfss	3,2
  2386  034E  2B50               	goto	u591
  2387  034F  2B51               	goto	u590
  2388  0350                     u591:
  2389  0350  2B7E               	goto	l1321
  2390  0351                     u590:
  2391  0351                     l1317:
  2392                           
  2393                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  2394  0351  0841               	movf	UARTInit@baud_rate,w
  2395  0352  00C6               	movwf	??_UARTInit
  2396  0353  0842               	movf	UARTInit@baud_rate+1,w
  2397  0354  00C7               	movwf	??_UARTInit+1
  2398  0355  0843               	movf	UARTInit@baud_rate+2,w
  2399  0356  00C8               	movwf	??_UARTInit+2
  2400  0357  0844               	movf	UARTInit@baud_rate+3,w
  2401  0358  00C9               	movwf	??_UARTInit+3
  2402  0359  3006               	movlw	6
  2403  035A                     u605:
  2404  035A  1003               	clrc
  2405  035B  0DC6               	rlf	??_UARTInit,f
  2406  035C  0DC7               	rlf	??_UARTInit+1,f
  2407  035D  0DC8               	rlf	??_UARTInit+2,f
  2408  035E  0DC9               	rlf	??_UARTInit+3,f
  2409  035F                     u600:
  2410  035F  3EFF               	addlw	-1
  2411  0360  1D03               	skipz
  2412  0361  2B5A               	goto	u605
  2413  0362  0849               	movf	??_UARTInit+3,w
  2414  0363  00F5               	movwf	___lldiv@divisor+3
  2415  0364  0848               	movf	??_UARTInit+2,w
  2416  0365  00F4               	movwf	___lldiv@divisor+2
  2417  0366  0847               	movf	??_UARTInit+1,w
  2418  0367  00F3               	movwf	___lldiv@divisor+1
  2419  0368  0846               	movf	??_UARTInit,w
  2420  0369  00F2               	movwf	___lldiv@divisor
  2421  036A  3000               	movlw	0
  2422  036B  00F9               	movwf	___lldiv@dividend+3
  2423  036C  303D               	movlw	61
  2424  036D  00F8               	movwf	___lldiv@dividend+2
  2425  036E  3009               	movlw	9
  2426  036F  00F7               	movwf	___lldiv@dividend+1
  2427  0370  3000               	movlw	0
  2428  0371  00F6               	movwf	___lldiv@dividend
  2429  0372  120A  118A  23B9  120A  118A  	fcall	___lldiv
  2430  0377  0872               	movf	?___lldiv,w
  2431  0378  3EFF               	addlw	255
  2432  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2433  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2434  037B  0099               	movwf	25	;volatile
  2435  037C                     l1319:
  2436                           
  2437                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  2438  037C  1118               	bcf	24,2	;volatile
  2439                           
  2440                           ;UART.c: 14:     } else {
  2441  037D  2BAA               	goto	l1325
  2442  037E                     l1321:
  2443                           
  2444                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  2445  037E  0841               	movf	UARTInit@baud_rate,w
  2446  037F  00C6               	movwf	??_UARTInit
  2447  0380  0842               	movf	UARTInit@baud_rate+1,w
  2448  0381  00C7               	movwf	??_UARTInit+1
  2449  0382  0843               	movf	UARTInit@baud_rate+2,w
  2450  0383  00C8               	movwf	??_UARTInit+2
  2451  0384  0844               	movf	UARTInit@baud_rate+3,w
  2452  0385  00C9               	movwf	??_UARTInit+3
  2453  0386  3004               	movlw	4
  2454  0387                     u615:
  2455  0387  1003               	clrc
  2456  0388  0DC6               	rlf	??_UARTInit,f
  2457  0389  0DC7               	rlf	??_UARTInit+1,f
  2458  038A  0DC8               	rlf	??_UARTInit+2,f
  2459  038B  0DC9               	rlf	??_UARTInit+3,f
  2460  038C                     u610:
  2461  038C  3EFF               	addlw	-1
  2462  038D  1D03               	skipz
  2463  038E  2B87               	goto	u615
  2464  038F  0849               	movf	??_UARTInit+3,w
  2465  0390  00F5               	movwf	___lldiv@divisor+3
  2466  0391  0848               	movf	??_UARTInit+2,w
  2467  0392  00F4               	movwf	___lldiv@divisor+2
  2468  0393  0847               	movf	??_UARTInit+1,w
  2469  0394  00F3               	movwf	___lldiv@divisor+1
  2470  0395  0846               	movf	??_UARTInit,w
  2471  0396  00F2               	movwf	___lldiv@divisor
  2472  0397  3000               	movlw	0
  2473  0398  00F9               	movwf	___lldiv@dividend+3
  2474  0399  303D               	movlw	61
  2475  039A  00F8               	movwf	___lldiv@dividend+2
  2476  039B  3009               	movlw	9
  2477  039C  00F7               	movwf	___lldiv@dividend+1
  2478  039D  3000               	movlw	0
  2479  039E  00F6               	movwf	___lldiv@dividend
  2480  039F  120A  118A  23B9  120A  118A  	fcall	___lldiv
  2481  03A4  0872               	movf	?___lldiv,w
  2482  03A5  3EFF               	addlw	255
  2483  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2484  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2485  03A8  0099               	movwf	25	;volatile
  2486  03A9                     l1323:
  2487                           
  2488                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2489  03A9  1518               	bsf	24,2	;volatile
  2490  03AA                     l1325:
  2491                           
  2492                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  2493  03AA  1318               	bcf	24,6	;volatile
  2494  03AB                     l1327:
  2495                           
  2496                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  2497  03AB  1698               	bsf	24,5	;volatile
  2498  03AC                     l1329:
  2499                           
  2500                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  2501  03AC  1218               	bcf	24,4	;volatile
  2502  03AD                     l1331:
  2503                           
  2504                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  2505  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2506  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2507  03AF  1798               	bsf	24,7	;volatile
  2508  03B0                     l1333:
  2509                           
  2510                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  2511  03B0  1318               	bcf	24,6	;volatile
  2512  03B1                     l1335:
  2513                           
  2514                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  2515  03B1  1618               	bsf	24,4	;volatile
  2516  03B2                     l1337:
  2517                           
  2518                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  2519  03B2  1118               	bcf	24,2	;volatile
  2520  03B3                     l1339:
  2521                           
  2522                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  2523  03B3  1098               	bcf	24,1	;volatile
  2524  03B4                     l1341:
  2525                           
  2526                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  2527  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2528  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2529  03B6  1787               	bsf	7,7	;volatile
  2530  03B7                     l1343:
  2531                           
  2532                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  2533  03B7  1307               	bcf	7,6	;volatile
  2534  03B8                     l186:
  2535  03B8  0008               	return
  2536  03B9                     __end_of_UARTInit:
  2537                           
  2538                           	psect	text8
  2539  05A8                     __ptext8:	
  2540 ;; *************** function _I2C_Start *****************
  2541 ;; Defined at:
  2542 ;;		line 108 in file "I2C.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  add             1    wreg     unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  add             1    6[COMMON] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         1       0       0       0       0
  2558 ;;      Temps:          2       0       0       0       0
  2559 ;;      Totals:         3       0       0       0       0
  2560 ;;Total ram usage:        3 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    3
  2563 ;; This function calls:
  2564 ;;		_I2C_Master_Wait
  2565 ;;		_I2C_Master_Write
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function _I2C_Start
  2573  05A8                     _I2C_Start:
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2577                           ;I2C_Start@add stored from wreg
  2578  05A8  00F6               	movwf	I2C_Start@add
  2579  05A9                     l1429:
  2580                           
  2581                           ;I2C.c: 109:     I2C_Master_Wait();
  2582  05A9  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  2583  05AE                     l1431:
  2584                           
  2585                           ;I2C.c: 110:     SEN = 1;
  2586  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2587  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2588  05B0  1411               	bsf	17,0	;volatile
  2589                           
  2590                           ;I2C.c: 111:     I2C_Master_Write(add);
  2591  05B1  0876               	movf	I2C_Start@add,w
  2592  05B2  00F4               	movwf	??_I2C_Start
  2593  05B3  01F5               	clrf	??_I2C_Start+1
  2594  05B4  0874               	movf	??_I2C_Start,w
  2595  05B5  00F2               	movwf	I2C_Master_Write@d
  2596  05B6  0875               	movf	??_I2C_Start+1,w
  2597  05B7  00F3               	movwf	I2C_Master_Write@d+1
  2598  05B8  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2599  05BD                     l144:
  2600  05BD  0008               	return
  2601  05BE                     __end_of_I2C_Start:
  2602                           
  2603                           	psect	text9
  2604  05D7                     __ptext9:	
  2605 ;; *************** function _I2C_Master_Write *****************
  2606 ;; Defined at:
  2607 ;;		line 66 in file "I2C.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  d               2    2[COMMON] unsigned int 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         2       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0
  2624 ;;      Totals:         2       0       0       0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		_I2C_Master_Wait
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;;		_I2C_Start
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _I2C_Master_Write
  2638  05D7                     _I2C_Master_Write:
  2639  05D7                     l1311:	
  2640                           ;incstack = 0
  2641                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2642                           
  2643                           
  2644                           ;I2C.c: 67:     I2C_Master_Wait();
  2645  05D7  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  2646  05DC                     l1313:
  2647                           
  2648                           ;I2C.c: 68:     SSPBUF = d;
  2649  05DC  0872               	movf	I2C_Master_Write@d,w
  2650  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2651  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2652  05DF  0093               	movwf	19	;volatile
  2653  05E0                     l133:
  2654  05E0  0008               	return
  2655  05E1                     __end_of_I2C_Master_Write:
  2656                           
  2657                           	psect	text10
  2658  053E                     __ptext10:	
  2659 ;; *************** function _I2C_Read *****************
  2660 ;; Defined at:
  2661 ;;		line 114 in file "I2C.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  ACK_NACK        1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  ACK_NACK        1    3[COMMON] unsigned char 
  2666 ;;  Data            1    4[COMMON] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      unsigned char 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       0       0       0       0
  2677 ;;      Locals:         2       0       0       0       0
  2678 ;;      Temps:          1       0       0       0       0
  2679 ;;      Totals:         3       0       0       0       0
  2680 ;;Total ram usage:        3 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    2
  2683 ;; This function calls:
  2684 ;;		_I2C_ACK
  2685 ;;		_I2C_NACK
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _I2C_Read
  2693  053E                     _I2C_Read:
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2697                           ;I2C_Read@ACK_NACK stored from wreg
  2698  053E  00F3               	movwf	I2C_Read@ACK_NACK
  2699  053F                     l1441:
  2700                           
  2701                           ;I2C.c: 116:     unsigned char Data;;I2C.c: 117:     RCEN = 1;
  2702  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2704  0541  1591               	bsf	17,3	;volatile
  2705  0542                     l147:	
  2706                           ;I2C.c: 118:     while (!BF);
  2707                           
  2708  0542  1C14               	btfss	20,0	;volatile
  2709  0543  2D45               	goto	u791
  2710  0544  2D46               	goto	u790
  2711  0545                     u791:
  2712  0545  2D42               	goto	l147
  2713  0546                     u790:
  2714  0546                     l1443:
  2715                           
  2716                           ;I2C.c: 119:     Data = SSPBUF;
  2717  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0548  0813               	movf	19,w	;volatile
  2720  0549  00F2               	movwf	??_I2C_Read
  2721  054A  0872               	movf	??_I2C_Read,w
  2722  054B  00F4               	movwf	I2C_Read@Data
  2723  054C                     l1445:
  2724                           
  2725                           ;I2C.c: 120:     if (ACK_NACK == 0)
  2726  054C  0873               	movf	I2C_Read@ACK_NACK,w
  2727  054D  1D03               	btfss	3,2
  2728  054E  2D50               	goto	u801
  2729  054F  2D51               	goto	u800
  2730  0550                     u801:
  2731  0550  2D57               	goto	l1449
  2732  0551                     u800:
  2733  0551                     l1447:
  2734                           
  2735                           ;I2C.c: 121:         I2C_ACK();
  2736  0551  120A  118A  25EA  120A  118A  	fcall	_I2C_ACK
  2737  0556  2D5C               	goto	l152
  2738  0557                     l1449:
  2739                           
  2740                           ;I2C.c: 123:         I2C_NACK();
  2741  0557  120A  118A  25E1  120A  118A  	fcall	_I2C_NACK
  2742  055C                     l152:
  2743  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2744  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2745  055E  1D8C               	btfss	12,3	;volatile
  2746  055F  2D61               	goto	u811
  2747  0560  2D62               	goto	u810
  2748  0561                     u811:
  2749  0561  2D5C               	goto	l152
  2750  0562                     u810:
  2751  0562                     l154:
  2752                           
  2753                           ;I2C.c: 125:     SSPIF = 0;
  2754  0562  118C               	bcf	12,3	;volatile
  2755  0563                     l1451:
  2756                           
  2757                           ;I2C.c: 126:     return Data;
  2758  0563  0874               	movf	I2C_Read@Data,w
  2759  0564                     l155:
  2760  0564  0008               	return
  2761  0565                     __end_of_I2C_Read:
  2762                           
  2763                           	psect	text11
  2764  05E1                     __ptext11:	
  2765 ;; *************** function _I2C_NACK *****************
  2766 ;; Defined at:
  2767 ;;		line 135 in file "I2C.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		None
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2781 ;;      Params:         0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_I2C_Read
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _I2C_NACK
  2797  05E1                     _I2C_NACK:
  2798  05E1                     l1347:	
  2799                           ;incstack = 0
  2800                           ; Regs used in _I2C_NACK: []
  2801                           
  2802                           
  2803                           ;I2C.c: 136:     ACKDT = 1;
  2804  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2805  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2806  05E3  1691               	bsf	17,5	;volatile
  2807                           
  2808                           ;I2C.c: 137:     ACKEN = 1;
  2809  05E4  1611               	bsf	17,4	;volatile
  2810  05E5                     l164:	
  2811                           ;I2C.c: 138:     while (ACKEN);
  2812                           
  2813  05E5  1A11               	btfsc	17,4	;volatile
  2814  05E6  2DE8               	goto	u631
  2815  05E7  2DE9               	goto	u630
  2816  05E8                     u631:
  2817  05E8  2DE5               	goto	l164
  2818  05E9                     u630:
  2819  05E9                     l167:
  2820  05E9  0008               	return
  2821  05EA                     __end_of_I2C_NACK:
  2822                           
  2823                           	psect	text12
  2824  05EA                     __ptext12:	
  2825 ;; *************** function _I2C_ACK *****************
  2826 ;; Defined at:
  2827 ;;		line 129 in file "I2C.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		None
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_I2C_Read
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _I2C_ACK
  2857  05EA                     _I2C_ACK:
  2858  05EA                     l1345:	
  2859                           ;incstack = 0
  2860                           ; Regs used in _I2C_ACK: []
  2861                           
  2862                           
  2863                           ;I2C.c: 130:     ACKDT = 0;
  2864  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  2865  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  2866  05EC  1291               	bcf	17,5	;volatile
  2867                           
  2868                           ;I2C.c: 131:     ACKEN = 1;
  2869  05ED  1611               	bsf	17,4	;volatile
  2870  05EE                     l158:	
  2871                           ;I2C.c: 132:     while (ACKEN);
  2872                           
  2873  05EE  1A11               	btfsc	17,4	;volatile
  2874  05EF  2DF1               	goto	u621
  2875  05F0  2DF2               	goto	u620
  2876  05F1                     u621:
  2877  05F1  2DEE               	goto	l158
  2878  05F2                     u620:
  2879  05F2                     l161:
  2880  05F2  0008               	return
  2881  05F3                     __end_of_I2C_ACK:
  2882                           
  2883                           	psect	text13
  2884  05F3                     __ptext13:	
  2885 ;; *************** function _I2C_Master_Stop *****************
  2886 ;; Defined at:
  2887 ;;		line 56 in file "I2C.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0
  2904 ;;      Totals:         0       0       0       0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    2
  2908 ;; This function calls:
  2909 ;;		_I2C_Master_Wait
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _I2C_Master_Stop
  2917  05F3                     _I2C_Master_Stop:
  2918  05F3                     l1433:	
  2919                           ;incstack = 0
  2920                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2921                           
  2922                           
  2923                           ;I2C.c: 57:     I2C_Master_Wait();
  2924  05F3  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  2925  05F8                     l1435:
  2926                           
  2927                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2928  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  2929  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  2930  05FA  1511               	bsf	17,2	;volatile
  2931  05FB                     l130:
  2932  05FB  0008               	return
  2933  05FC                     __end_of_I2C_Master_Stop:
  2934                           
  2935                           	psect	text14
  2936  05FC                     __ptext14:	
  2937 ;; *************** function _I2C_Master_RepeatedStart *****************
  2938 ;; Defined at:
  2939 ;;		line 48 in file "I2C.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    2
  2960 ;; This function calls:
  2961 ;;		_I2C_Master_Wait
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _I2C_Master_RepeatedStart
  2969  05FC                     _I2C_Master_RepeatedStart:
  2970  05FC                     l1437:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2973                           
  2974                           
  2975                           ;I2C.c: 49:     I2C_Master_Wait();
  2976  05FC  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  2977  0601                     l1439:
  2978                           
  2979                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2980  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0603  1491               	bsf	17,1	;volatile
  2983  0604                     l127:
  2984  0604  0008               	return
  2985  0605                     __end_of_I2C_Master_RepeatedStart:
  2986                           
  2987                           	psect	text15
  2988  05BE                     __ptext15:	
  2989 ;; *************** function _I2C_Master_Wait *****************
  2990 ;; Defined at:
  2991 ;;		line 33 in file "I2C.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_I2C_Master_RepeatedStart
  3016 ;;		_I2C_Master_Stop
  3017 ;;		_I2C_Master_Write
  3018 ;;		_I2C_Start
  3019 ;;		_I2C_Master_Start
  3020 ;;		_I2C_Master_Read
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _I2C_Master_Wait
  3026  05BE                     _I2C_Master_Wait:
  3027  05BE                     l1283:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3030                           
  3031  05BE                     l118:	
  3032                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3033                           
  3034  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3035  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3036  05C0  1914               	btfsc	20,2	;volatile
  3037  05C1  2DC3               	goto	u501
  3038  05C2  2DC4               	goto	u500
  3039  05C3                     u501:
  3040  05C3  2DBE               	goto	l118
  3041  05C4                     u500:
  3042  05C4                     l1285:
  3043  05C4  0811               	movf	17,w	;volatile
  3044  05C5  391F               	andlw	31
  3045  05C6  1D03               	btfss	3,2
  3046  05C7  2DC9               	goto	u511
  3047  05C8  2DCA               	goto	u510
  3048  05C9                     u511:
  3049  05C9  2DBE               	goto	l118
  3050  05CA                     u510:
  3051  05CA                     l121:
  3052  05CA  0008               	return
  3053  05CB                     __end_of_I2C_Master_Wait:
  3054                           
  3055                           	psect	text16
  3056  0506                     __ptext16:	
  3057 ;; *************** function _I2C_Master_Init *****************
  3058 ;; Defined at:
  3059 ;;		line 17 in file "I2C.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  c               4    5[BANK0 ] const unsigned long 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       4       0       0       0
  3074 ;;      Locals:         0       0       0       0       0
  3075 ;;      Temps:          0       4       0       0       0
  3076 ;;      Totals:         0       8       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    2
  3080 ;; This function calls:
  3081 ;;		___lldiv
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _I2C_Master_Init
  3089  0506                     _I2C_Master_Init:
  3090  0506                     l1417:	
  3091                           ;incstack = 0
  3092                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3093                           
  3094                           
  3095                           ;I2C.c: 18:     SSPCON = 0b00101000;
  3096  0506  3028               	movlw	40
  3097  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0509  0094               	movwf	20	;volatile
  3100  050A                     l1419:
  3101                           
  3102                           ;I2C.c: 19:     SSPCON2 = 0;
  3103  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3104  050B  1303               	bcf	3,6	;RP1=0, select bank1
  3105  050C  0191               	clrf	17	;volatile
  3106  050D                     l1421:
  3107                           
  3108                           ;I2C.c: 20:     SSPADD = (4000000 / (4 * c)) - 1;
  3109  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3110  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3111  050F  0841               	movf	I2C_Master_Init@c,w
  3112  0510  00C5               	movwf	??_I2C_Master_Init
  3113  0511  0842               	movf	I2C_Master_Init@c+1,w
  3114  0512  00C6               	movwf	??_I2C_Master_Init+1
  3115  0513  0843               	movf	I2C_Master_Init@c+2,w
  3116  0514  00C7               	movwf	??_I2C_Master_Init+2
  3117  0515  0844               	movf	I2C_Master_Init@c+3,w
  3118  0516  00C8               	movwf	??_I2C_Master_Init+3
  3119  0517  3002               	movlw	2
  3120  0518                     u785:
  3121  0518  1003               	clrc
  3122  0519  0DC5               	rlf	??_I2C_Master_Init,f
  3123  051A  0DC6               	rlf	??_I2C_Master_Init+1,f
  3124  051B  0DC7               	rlf	??_I2C_Master_Init+2,f
  3125  051C  0DC8               	rlf	??_I2C_Master_Init+3,f
  3126  051D                     u780:
  3127  051D  3EFF               	addlw	-1
  3128  051E  1D03               	skipz
  3129  051F  2D18               	goto	u785
  3130  0520  0848               	movf	??_I2C_Master_Init+3,w
  3131  0521  00F5               	movwf	___lldiv@divisor+3
  3132  0522  0847               	movf	??_I2C_Master_Init+2,w
  3133  0523  00F4               	movwf	___lldiv@divisor+2
  3134  0524  0846               	movf	??_I2C_Master_Init+1,w
  3135  0525  00F3               	movwf	___lldiv@divisor+1
  3136  0526  0845               	movf	??_I2C_Master_Init,w
  3137  0527  00F2               	movwf	___lldiv@divisor
  3138  0528  3000               	movlw	0
  3139  0529  00F9               	movwf	___lldiv@dividend+3
  3140  052A  303D               	movlw	61
  3141  052B  00F8               	movwf	___lldiv@dividend+2
  3142  052C  3009               	movlw	9
  3143  052D  00F7               	movwf	___lldiv@dividend+1
  3144  052E  3000               	movlw	0
  3145  052F  00F6               	movwf	___lldiv@dividend
  3146  0530  120A  118A  23B9  120A  118A  	fcall	___lldiv
  3147  0535  0872               	movf	?___lldiv,w
  3148  0536  3EFF               	addlw	255
  3149  0537  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0538  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0539  0093               	movwf	19	;volatile
  3152  053A                     l1423:
  3153                           
  3154                           ;I2C.c: 21:     SSPSTAT = 0;
  3155  053A  0194               	clrf	20	;volatile
  3156  053B                     l1425:
  3157                           
  3158                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3159  053B  1587               	bsf	7,3	;volatile
  3160  053C                     l1427:
  3161                           
  3162                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3163  053C  1607               	bsf	7,4	;volatile
  3164  053D                     l115:
  3165  053D  0008               	return
  3166  053E                     __end_of_I2C_Master_Init:
  3167                           
  3168                           	psect	text17
  3169  03B9                     __ptext17:	
  3170 ;; *************** function ___lldiv *****************
  3171 ;; Defined at:
  3172 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  divisor         4    2[COMMON] unsigned long 
  3175 ;;  dividend        4    6[COMMON] unsigned long 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  quotient        4    0[BANK0 ] unsigned long 
  3178 ;;  counter         1    4[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  4    2[COMMON] unsigned long 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         8       0       0       0       0
  3189 ;;      Locals:         0       5       0       0       0
  3190 ;;      Temps:          1       0       0       0       0
  3191 ;;      Totals:         9       5       0       0       0
  3192 ;;Total ram usage:       14 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_I2C_Master_Init
  3199 ;;		_UARTInit
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function ___lldiv
  3205  03B9                     ___lldiv:
  3206  03B9                     l1287:	
  3207                           ;incstack = 0
  3208                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3209                           
  3210  03B9  3000               	movlw	0
  3211  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3212  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3213  03BC  00BF               	movwf	___lldiv@quotient+3
  3214  03BD  3000               	movlw	0
  3215  03BE  00BE               	movwf	___lldiv@quotient+2
  3216  03BF  3000               	movlw	0
  3217  03C0  00BD               	movwf	___lldiv@quotient+1
  3218  03C1  3000               	movlw	0
  3219  03C2  00BC               	movwf	___lldiv@quotient
  3220  03C3  0875               	movf	___lldiv@divisor+3,w
  3221  03C4  0474               	iorwf	___lldiv@divisor+2,w
  3222  03C5  0473               	iorwf	___lldiv@divisor+1,w
  3223  03C6  0472               	iorwf	___lldiv@divisor,w
  3224  03C7  1903               	skipnz
  3225  03C8  2BCA               	goto	u521
  3226  03C9  2BCB               	goto	u520
  3227  03CA                     u521:
  3228  03CA  2C18               	goto	l1307
  3229  03CB                     u520:
  3230  03CB                     l1289:
  3231  03CB  01C0               	clrf	___lldiv@counter
  3232  03CC  0AC0               	incf	___lldiv@counter,f
  3233  03CD  2BDB               	goto	l1293
  3234  03CE                     l1291:
  3235  03CE  3001               	movlw	1
  3236  03CF  00FA               	movwf	??___lldiv
  3237  03D0                     u535:
  3238  03D0  1003               	clrc
  3239  03D1  0DF2               	rlf	___lldiv@divisor,f
  3240  03D2  0DF3               	rlf	___lldiv@divisor+1,f
  3241  03D3  0DF4               	rlf	___lldiv@divisor+2,f
  3242  03D4  0DF5               	rlf	___lldiv@divisor+3,f
  3243  03D5  0BFA               	decfsz	??___lldiv,f
  3244  03D6  2BD0               	goto	u535
  3245  03D7  3001               	movlw	1
  3246  03D8  00FA               	movwf	??___lldiv
  3247  03D9  087A               	movf	??___lldiv,w
  3248  03DA  07C0               	addwf	___lldiv@counter,f
  3249  03DB                     l1293:
  3250  03DB  1FF5               	btfss	___lldiv@divisor+3,7
  3251  03DC  2BDE               	goto	u541
  3252  03DD  2BDF               	goto	u540
  3253  03DE                     u541:
  3254  03DE  2BCE               	goto	l1291
  3255  03DF                     u540:
  3256  03DF                     l1295:
  3257  03DF  3001               	movlw	1
  3258  03E0  00FA               	movwf	??___lldiv
  3259  03E1                     u555:
  3260  03E1  1003               	clrc
  3261  03E2  0DBC               	rlf	___lldiv@quotient,f
  3262  03E3  0DBD               	rlf	___lldiv@quotient+1,f
  3263  03E4  0DBE               	rlf	___lldiv@quotient+2,f
  3264  03E5  0DBF               	rlf	___lldiv@quotient+3,f
  3265  03E6  0BFA               	decfsz	??___lldiv,f
  3266  03E7  2BE1               	goto	u555
  3267  03E8                     l1297:
  3268  03E8  0875               	movf	___lldiv@divisor+3,w
  3269  03E9  0279               	subwf	___lldiv@dividend+3,w
  3270  03EA  1D03               	skipz
  3271  03EB  2BF6               	goto	u565
  3272  03EC  0874               	movf	___lldiv@divisor+2,w
  3273  03ED  0278               	subwf	___lldiv@dividend+2,w
  3274  03EE  1D03               	skipz
  3275  03EF  2BF6               	goto	u565
  3276  03F0  0873               	movf	___lldiv@divisor+1,w
  3277  03F1  0277               	subwf	___lldiv@dividend+1,w
  3278  03F2  1D03               	skipz
  3279  03F3  2BF6               	goto	u565
  3280  03F4  0872               	movf	___lldiv@divisor,w
  3281  03F5  0276               	subwf	___lldiv@dividend,w
  3282  03F6                     u565:
  3283  03F6  1C03               	skipc
  3284  03F7  2BF9               	goto	u561
  3285  03F8  2BFA               	goto	u560
  3286  03F9                     u561:
  3287  03F9  2C09               	goto	l1303
  3288  03FA                     u560:
  3289  03FA                     l1299:
  3290  03FA  0872               	movf	___lldiv@divisor,w
  3291  03FB  02F6               	subwf	___lldiv@dividend,f
  3292  03FC  0873               	movf	___lldiv@divisor+1,w
  3293  03FD  1C03               	skipc
  3294  03FE  0F73               	incfsz	___lldiv@divisor+1,w
  3295  03FF  02F7               	subwf	___lldiv@dividend+1,f
  3296  0400  0874               	movf	___lldiv@divisor+2,w
  3297  0401  1C03               	skipc
  3298  0402  0F74               	incfsz	___lldiv@divisor+2,w
  3299  0403  02F8               	subwf	___lldiv@dividend+2,f
  3300  0404  0875               	movf	___lldiv@divisor+3,w
  3301  0405  1C03               	skipc
  3302  0406  0F75               	incfsz	___lldiv@divisor+3,w
  3303  0407  02F9               	subwf	___lldiv@dividend+3,f
  3304  0408                     l1301:
  3305  0408  143C               	bsf	___lldiv@quotient,0
  3306  0409                     l1303:
  3307  0409  3001               	movlw	1
  3308  040A                     u575:
  3309  040A  1003               	clrc
  3310  040B  0CF5               	rrf	___lldiv@divisor+3,f
  3311  040C  0CF4               	rrf	___lldiv@divisor+2,f
  3312  040D  0CF3               	rrf	___lldiv@divisor+1,f
  3313  040E  0CF2               	rrf	___lldiv@divisor,f
  3314  040F  3EFF               	addlw	-1
  3315  0410  1D03               	skipz
  3316  0411  2C0A               	goto	u575
  3317  0412                     l1305:
  3318  0412  3001               	movlw	1
  3319  0413  02C0               	subwf	___lldiv@counter,f
  3320  0414  1D03               	btfss	3,2
  3321  0415  2C17               	goto	u581
  3322  0416  2C18               	goto	u580
  3323  0417                     u581:
  3324  0417  2BDF               	goto	l1295
  3325  0418                     u580:
  3326  0418                     l1307:
  3327  0418  083F               	movf	___lldiv@quotient+3,w
  3328  0419  00F5               	movwf	?___lldiv+3
  3329  041A  083E               	movf	___lldiv@quotient+2,w
  3330  041B  00F4               	movwf	?___lldiv+2
  3331  041C  083D               	movf	___lldiv@quotient+1,w
  3332  041D  00F3               	movwf	?___lldiv+1
  3333  041E  083C               	movf	___lldiv@quotient,w
  3334  041F  00F2               	movwf	?___lldiv
  3335  0420                     l369:
  3336  0420  0008               	return
  3337  0421                     __end_of___lldiv:
  3338                           
  3339                           	psect	text18
  3340  060D                     __ptext18:	
  3341 ;; *************** function _ISR *****************
  3342 ;; Defined at:
  3343 ;;		line 52 in file "main.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		None
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0
  3359 ;;      Temps:          2       0       0       0       0
  3360 ;;      Totals:         2       0       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		Interrupt level 1
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _ISR
  3372  060D                     _ISR:
  3373  060D                     i1l59:
  3374  060D  0871               	movf	??_ISR+1,w
  3375  060E  008A               	movwf	10
  3376  060F  0E70               	swapf	??_ISR,w
  3377  0610  0083               	movwf	3
  3378  0611  0EFE               	swapf	btemp,f
  3379  0612  0E7E               	swapf	btemp,w
  3380  0613  0009               	retfie
  3381  0614                     __end_of_ISR:
  3382  007E                     btemp	set	126	;btemp
  3383  007E                     wtemp0	set	126
  3384                           
  3385                           	psect	intentry
  3386  0004                     __pintentry:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _ISR: []
  3389                           
  3390  0004                     interrupt_function:
  3391  007E                     saved_w	set	btemp
  3392  0004  00FE               	movwf	btemp
  3393  0005  0E03               	swapf	3,w
  3394  0006  00F0               	movwf	??_ISR
  3395  0007  080A               	movf	10,w
  3396  0008  00F1               	movwf	??_ISR+1
  3397  0009  120A  118A  2E0D   	ljmp	_ISR
  3398                           
  3399                           	psect	config
  3400                           
  3401                           ;Config register CONFIG1 @ 0x2007
  3402                           ;	Oscillator Selection bits
  3403                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3404                           ;	Watchdog Timer Enable bit
  3405                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3406                           ;	Power-up Timer Enable bit
  3407                           ;	PWRTE = OFF, PWRT disabled
  3408                           ;	RE3/MCLR pin function select bit
  3409                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3410                           ;	Code Protection bit
  3411                           ;	CP = OFF, Program memory code protection is disabled
  3412                           ;	Data Code Protection bit
  3413                           ;	CPD = OFF, Data memory code protection is disabled
  3414                           ;	Brown Out Reset Selection bits
  3415                           ;	BOREN = OFF, BOR disabled
  3416                           ;	Internal External Switchover bit
  3417                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3418                           ;	Fail-Safe Clock Monitor Enabled bit
  3419                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3420                           ;	Low Voltage Programming Enable bit
  3421                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3422                           ;	In-Circuit Debugger Mode bit
  3423                           ;	DEBUG = 0x1, unprogrammed default
  3424  2007                     	org	8199
  3425  2007  20D4               	dw	8404
  3426                           
  3427                           ;Config register CONFIG2 @ 0x2008
  3428                           ;	Brown-out Reset Selection bit
  3429                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3430                           ;	Flash Program Memory Self Write Enable bits
  3431                           ;	WRT = OFF, Write protection off
  3432  2008                     	org	8200
  3433  2008  3FFF               	dw	16383

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     23      51
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6219
                                             17 BANK0      6     6      0
                    _I2C_Master_Init
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                              _Setup
                     _UARTSendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1865
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     4      0     343
                                              3 COMMON     4     4      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     836
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            3     3      0    1184
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1162
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              2 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read
     _I2C_ACK
     _I2C_NACK
   _I2C_Start
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Setup
     _UARTInit
       ___lldiv
   _UARTSendString
     _UARTSendChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      71       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      71      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 10:49:41 2021

                UARTInit@baud_rate 0041                                  _T 002E  
                                pc 0002                 __size_of_I2C_Start 0016  
                               _BF 04A0                                 l72 0586  
                               _Ax 003A                                 _Ay 0038  
                               _Az 0036                                 _Gx 0034  
                               _Gy 0032                                 _Gz 0030  
                               fsr 0004                                l121 05CA  
                              l130 05FB                                l115 053D  
                              l133 05E0                                l118 05BE  
                              l127 0604                                l152 055C  
                              l144 05BD                                l161 05F2  
                              l154 0562                                l155 0564  
                              l147 0542                                l164 05E5  
                              l158 05EE                                l167 05E9  
                              l192 05D6                                l329 0349  
                              l186 03B8                                l189 05CC  
                              l605 04C9                                l198 05A7  
                              l615 0505                                l369 0420  
                              _GIE 005F                                u500 05C4  
                              u501 05C3                                u510 05CA  
                              u511 05C9                                u520 03CB  
                              u600 035F                                u521 03CA  
                              u610 038C                                u540 03DF  
                              u620 05F2                                _ISR 060D  
                              u541 03DE                                u621 05F1  
                              u605 035A                                u630 05E9  
                              u710 04C5                                u535 03D0  
                              u631 05E8                                u615 0387  
                              u711 04C4                                u560 03FA  
                              u800 0551                                u640 05D2  
                              u720 04D2                                u561 03F9  
                              u801 0550                                u641 05D1  
                              u705 04B9                                u721 04D1  
                              u810 0562                                u650 048E  
                              u555 03E1                                u811 0561  
                              u651 048D                                u580 0418  
                              u740 04E4                                u820 026E  
                              u900 00F9                                _SEN 0488  
                              u581 0417                                u565 03F6  
                              u741 04E3                                u821 026D  
                              u901 00F5                                u590 0351  
                              u670 04A0                                u750 04EE  
                              u830 02A8                                u575 040A  
                              u591 0350                                u671 049F  
                              u751 04ED                                u735 04D6  
                              u831 02A7                                u840 02CE  
                              u920 0149                                u665 0492  
                              u841 02CD                                u921 0148  
                              u690 04B1                                u770 0501  
                              u850 02D9                                u914 00FC  
                              u691 04B0                                u771 0500  
                              u755 04EA                                u851 02D8  
                              u780 051D                                u860 02DF  
                              u685 04A1                                u765 04F5  
                              u861 02DE                                u845 02CA  
                              u925 0145                                u790 0546  
                              u870 0333                                u791 0545  
                              u695 04AD                                u871 0332  
                              u880 0345                                u785 0518  
                              u881 0344                                u890 05A7  
                              u891 05A6                                u947 002F  
                              u957 0102                    __end_of_I2C_ACK 05F3  
                              _buf 00A0                                fsr0 0004  
                              indf 0000                               ?_ISR 0070  
                             l1301 0408                               l1303 0409  
                             l1311 05D7                               l1305 0412  
                             l1313 05DC                               l1321 037E  
                             l1401 0565                               l1307 0418  
                             l1331 03AD                               l1323 03A9  
                             l1315 034A                               l1411 0582  
                             l1403 0576                               l1421 050D  
                             l1341 03B4                               l1333 03B0  
                             l1325 03AA                               l1317 0351  
                             l1413 0585                               l1405 0579  
                             l1501 031F                               l1423 053A  
                             l1431 05AE                               l1343 03B7  
                             l1335 03B1                               l1327 03AB  
                             l1319 037C                               l1407 057C  
                             l1351 05D2                               l1503 0326  
                             l1425 053B                               l1417 0506  
                             l1433 05F3                               l1345 05EA  
                             l1441 053F                               l1337 03B2  
                             l1329 03AC                               l1409 057F  
                             l1521 0596                               l1361 0498  
                             l1353 0486                               l1505 032A  
                             l1601 013C                               l1291 03CE  
                             l1427 053C                               l1419 050A  
                             l1283 05BE                               l1435 05F8  
                             l1347 05E1                               l1451 0563  
                             l1443 0546                               l1339 03B3  
                             l1523 059C                               l1371 04B8  
                             l1363 049C                               l1355 0488  
                             l1507 0333                               l1611 0188  
                             l1603 0149                               l1531 0042  
                             l1293 03DB                               l1285 05C4  
                             l1437 05FC                               l1445 054C  
                             l1429 05A9                               l1349 05CC  
                             l1517 0588                               l1373 04BF  
                             l1365 04A0                               l1357 048E  
                             l1381 04D2                               l1509 0345  
                             l1461 0275                               l1621 01D2  
                             l1613 0197                               l1605 0159  
                             l1541 0065                               l1533 0048  
                             l1525 0024                               l1295 03DF  
                             l1287 03B9                               l1439 0601  
                             l1447 0551                               l1519 058B  
                             l1367 04B1                               l1359 0491  
                             l1375 04C5                               l1391 04EE  
                             l1383 04D5                               l1471 02A0  
                             l1463 027A                               l1455 0263  
                             l1631 0204                               l1623 01D8  
                             l1615 01A6                               l1607 016A  
                             l1551 008B                               l1543 006E  
                             l1535 0051                               l1527 0029  
                             l1297 03E8                               l1289 03CB  
                             l1449 0557                               l1369 04B7  
                             l1393 04F4                               l1385 04DC  
                             l1473 02A4                               l1457 0268  
                             l1641 0240                               l1633 0214  
                             l1625 01E8                               l1617 01B5  
                             l1609 0179                               l1561 00B0  
                             l1553 0093                               l1545 0077  
                             l1537 005A                               l1529 0033  
                             l1299 03FA                               l1395 04FB  
                             l1387 04E0                               l1379 04CA  
                             l1491 02D9                               l1475 02A8  
                             l1467 027B                               l1459 026E  
                             l1643 0246                               l1635 021A  
                             l1627 01EE                               l1619 01C4  
                             l1571 00D1                               l1563 00B5  
                             l1555 0098                               l1547 007C  
                             l1539 005F                               l1389 04E4  
                             l1397 0501                               l1493 02DF  
                             l1485 02B3                               l1477 02AC  
                             l1469 0298                               l1645 0256  
                             l1637 022A                               l1629 01FE  
                             l1581 00FC                               l1573 00D7  
                             l1565 00BB                               l1557 009E  
                             l1549 0082                               l1495 02E6  
                             l1479 02B1                               l1639 0230  
                             l1591 0123                               l1583 0106  
                             l1575 00E0                               l1567 00C4  
                             l1559 00A7                               l1497 02EA  
                             l1489 02CF                               l1585 010C  
                             l1577 00E8                               l1569 00CC  
                             l1499 02EF                               l1683 028D  
                             l1587 0115                               l1579 00ED  
                             l1597 0127                               l1589 011A  
                             l1599 0136                               STR_1 0465  
                             STR_2 043E                               STR_3 0458  
                             STR_4 047C                               STR_5 0431  
                             STR_6 044B                               STR_7 0471  
                             _PEIE 005E                               _RCEN 048B  
                             i1l59 060D                   __end_of_I2C_NACK 05EA  
 __end_of_I2C_Master_RepeatedStart 0605                               _main 0024  
                 __end_of_I2C_Read 0565                               btemp 007E  
                             start 000C                              ??_ISR 0070  
                 ?_I2C_Master_Init 0041                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                            _ANSEL 0188                    __end_of___lldiv 0421  
                  __end_of___lwdiv 04CA                    __end_of___lwmod 0506  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTC 0007  
                            _TRISA 0085                              _TRISC 0087  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                   __end_of_UARTInit 03B9  
                            _Setup 0565                    __end_of_dpowers 0431  
                            main@i 0051                  __end_of_I2C_Start 05BE  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 034A  
                  __initialization 000F                       __end_of_main 0260  
                        ??_I2C_ACK 0072                             ??_main 004D  
                ?_I2C_Master_Write 0072                             ?_Setup 0070  
               ??_I2C_Master_Write 0074                             _ANSELH 0189  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 05FC  
                 I2C_Read@ACK_NACK 0073                          ??___lldiv 007A  
                        ??___lwdiv 0076                          ??___lwmod 007A  
          __size_of_UARTSendString 0021                          ?_I2C_NACK 0070  
                        ?_I2C_Read 0070                             saved_w 007E  
                        ??_sprintf 0043            __end_of__initialization 0020  
                   __pcstackCOMMON 0070                      __end_of_Setup 0587  
                        ?_UARTInit 0041                         ??_I2C_NACK 0072  
                       ??_I2C_Read 0072                            ??_Setup 007B  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                     I2C_Read@Data 0074                         __pmaintext 0024  
                       ??_UARTInit 0046                         __pintentry 0004  
                          _I2C_ACK 05EA                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0421  
                    ?_UARTSendChar 0070                       I2C_Start@add 0076  
                        _I2C_Start 05A8                            ___lldiv 03B9  
                          ___lwdiv 0486                            ___lwmod 04CA  
                   _UARTSendString 0587                            __ptext1 0260  
                          __ptext2 04CA                            __ptext3 0486  
                          __ptext4 0587                            __ptext5 05CB  
                          __ptext6 0565                            __ptext7 034A  
                          __ptext8 05A8                            __ptext9 05D7  
                     __size_of_ISR 0007                            _dpowers 0427  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Wait 000D  
                          _valores 0020           __size_of_I2C_Master_Stop 0009  
                          _sprintf 0260                            clrloop0 0606  
             end_of_initialization 0020                     ??_UARTSendChar 0072  
       ??_I2C_Master_RepeatedStart 0072                         ?_I2C_Start 0070  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0072  
                  ___lldiv@counter 0040                          _RCSTAbits 0018  
           __end_of_UARTSendString 05A8                   I2C_Master_Init@c 0041  
                        _PORTAbits 0005                  __size_of_I2C_NACK 0009  
                        _TRISCbits 0087                  __size_of_I2C_Read 0027  
                        _TXSTAbits 0098                    ?_UARTSendString 0070  
                __size_of_UARTInit 006F                start_initialization 000F  
                      __end_of_ISR 0614                  ??_I2C_Master_Init 0045  
                ??_I2C_Master_Wait 0072                  ??_I2C_Master_Stop 0072  
                      ??_I2C_Start 0074                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 05D7                          ___latbits 0002  
                    __pcstackBANK0 003C                        sprintf@flag 0047  
                      sprintf@prec 0048                   _I2C_Master_Write 05D7  
                 ___lwdiv@dividend 0074                      UARTSendChar@c 0072  
                         ?___lldiv 0072                           ?___lwdiv 0072  
                         ?___lwmod 003C                          __pstrings 0421  
                         _I2C_NACK 05E1                           _I2C_Read 053E  
                   __size_of_Setup 0022                   ___lwdiv@quotient 0077  
                         ?_sprintf 0040                  interrupt_function 0004  
                        clear_ram0 0605                    UARTSendString@i 0074  
                         _PIR1bits 000C                           _UARTInit 034A  
                 __size_of_I2C_ACK 0009                        __stringbase 0426  
                 ??_UARTSendString 0073              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 0045  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                 __size_of___lwdiv 0044                   __size_of___lwmod 003C  
               __end_of__stringtab 0427                         sprintf@val 0049  
                  _I2C_Master_Init 0506                    _I2C_Master_Wait 05BE  
                  _I2C_Master_Stop 05F3                    ___lwdiv@divisor 0072  
                  ___lwdiv@counter 0079                           __ptext10 053E  
                         __ptext11 05E1                           __ptext12 05EA  
                         __ptext13 05F3                           __ptext14 05FC  
                         __ptext15 05BE                           __ptext16 0506  
                         __ptext17 03B9                           __ptext18 060D  
                 __size_of_sprintf 00EA                       _UARTSendChar 05CB  
                    __size_of_main 023C           __end_of_I2C_Master_Write 05E1  
                UARTSendString@str 0076                           intlevel1 0000  
                        sprintf@ap 0046                          sprintf@sp 004B  
                 ___lwmod@dividend 003E                   ___lldiv@dividend 0076  
                        stringcode 0421            __end_of_I2C_Master_Init 053E  
          __end_of_I2C_Master_Wait 05CB            __end_of_I2C_Master_Stop 05FC  
                         sprintf@c 004C                           sprintf@f 0040  
                 ___lldiv@quotient 003C                  I2C_Master_Write@d 0072  
                  ___lwmod@divisor 003C                    ___lwmod@counter 007B  
                         stringdir 0421                           stringtab 0421  
                      _SSPCON2bits 0091  
