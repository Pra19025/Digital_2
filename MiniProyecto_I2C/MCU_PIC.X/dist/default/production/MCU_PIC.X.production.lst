

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 01 22:10:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456                           
   457                           	psect	strings
   458  0431                     __pstrings:
   459  0431                     stringtab:
   460  0431                     __stringtab:
   461  0431                     stringcode:	
   462                           ;	String table - string pointers are 1 byte each
   463                           
   464  0431                     stringdir:
   465  0431  3004               	movlw	high stringdir
   466  0432  008A               	movwf	10
   467  0433  0804               	movf	4,w
   468  0434  0A84               	incf	4,f
   469  0435  0782               	addwf	2,f
   470  0436                     __stringbase:
   471  0436  3400               	retlw	0
   472  0437                     __end_of__stringtab:
   473  0437                     _dpowers:
   474  0437  3401               	retlw	1
   475  0438  3400               	retlw	0
   476  0439  340A               	retlw	10
   477  043A  3400               	retlw	0
   478  043B  3464               	retlw	100
   479  043C  3400               	retlw	0
   480  043D  34E8               	retlw	232
   481  043E  3403               	retlw	3
   482  043F  3410               	retlw	16
   483  0440  3427               	retlw	39
   484  0441                     __end_of_dpowers:
   485  001A                     _RCREG	set	26
   486  000C                     _PIR1bits	set	12
   487  0019                     _TXREG	set	25
   488  0018                     _RCSTAbits	set	24
   489  0013                     _SSPBUF	set	19
   490  0014                     _SSPCON	set	20
   491  0007                     _PORTC	set	7
   492  0005                     _PORTA	set	5
   493  0005                     _PORTAbits	set	5
   494  0063                     _SSPIF	set	99
   495  005E                     _PEIE	set	94
   496  005F                     _GIE	set	95
   497  0098                     _TXSTAbits	set	152
   498  0099                     _SPBRG	set	153
   499  0091                     _SSPCON2bits	set	145
   500  0087                     _TRISCbits	set	135
   501  0094                     _SSPSTAT	set	148
   502  0093                     _SSPADD	set	147
   503  0091                     _SSPCON2	set	145
   504  0087                     _TRISC	set	135
   505  0085                     _TRISA	set	133
   506  048C                     _ACKEN	set	1164
   507  048D                     _ACKDT	set	1165
   508  04A0                     _BF	set	1184
   509  048B                     _RCEN	set	1163
   510  0488                     _SEN	set	1160
   511  0463                     _SSPIE	set	1123
   512  043C                     _TRISC4	set	1084
   513  043B                     _TRISC3	set	1083
   514  0189                     _ANSELH	set	393
   515  0188                     _ANSEL	set	392
   516  0441                     STR_5:
   517  0441  3420               	retlw	32	;' '
   518  0442  3447               	retlw	71	;'G'
   519  0443  3478               	retlw	120	;'x'
   520  0444  3420               	retlw	32	;' '
   521  0445  343D               	retlw	61	;'='
   522  0446  3420               	retlw	32	;' '
   523  0447  3425               	retlw	37	;'%'
   524  0448  3464               	retlw	100	;'d'
   525  0449  3420               	retlw	32	;' '
   526  044A  3420               	retlw	32	;' '
   527  044B  3420               	retlw	32	;' '
   528  044C  3420               	retlw	32	;' '
   529  044D  3400               	retlw	0
   530  044E                     STR_2:
   531  044E  3420               	retlw	32	;' '
   532  044F  3441               	retlw	65	;'A'
   533  0450  3479               	retlw	121	;'y'
   534  0451  3420               	retlw	32	;' '
   535  0452  343D               	retlw	61	;'='
   536  0453  3420               	retlw	32	;' '
   537  0454  3425               	retlw	37	;'%'
   538  0455  3464               	retlw	100	;'d'
   539  0456  3420               	retlw	32	;' '
   540  0457  3420               	retlw	32	;' '
   541  0458  3420               	retlw	32	;' '
   542  0459  3420               	retlw	32	;' '
   543  045A  3400               	retlw	0
   544  045B                     STR_6:
   545  045B  3420               	retlw	32	;' '
   546  045C  3447               	retlw	71	;'G'
   547  045D  3479               	retlw	121	;'y'
   548  045E  3420               	retlw	32	;' '
   549  045F  343D               	retlw	61	;'='
   550  0460  3420               	retlw	32	;' '
   551  0461  3425               	retlw	37	;'%'
   552  0462  3464               	retlw	100	;'d'
   553  0463  3420               	retlw	32	;' '
   554  0464  3420               	retlw	32	;' '
   555  0465  3420               	retlw	32	;' '
   556  0466  3420               	retlw	32	;' '
   557  0467  3400               	retlw	0
   558  0468                     STR_3:
   559  0468  3420               	retlw	32	;' '
   560  0469  3441               	retlw	65	;'A'
   561  046A  347A               	retlw	122	;'z'
   562  046B  3420               	retlw	32	;' '
   563  046C  343D               	retlw	61	;'='
   564  046D  3420               	retlw	32	;' '
   565  046E  3425               	retlw	37	;'%'
   566  046F  3464               	retlw	100	;'d'
   567  0470  3420               	retlw	32	;' '
   568  0471  3420               	retlw	32	;' '
   569  0472  3420               	retlw	32	;' '
   570  0473  3420               	retlw	32	;' '
   571  0474  3400               	retlw	0
   572  0475                     STR_1:
   573  0475  3441               	retlw	65	;'A'
   574  0476  3478               	retlw	120	;'x'
   575  0477  3420               	retlw	32	;' '
   576  0478  343D               	retlw	61	;'='
   577  0479  3420               	retlw	32	;' '
   578  047A  3425               	retlw	37	;'%'
   579  047B  3464               	retlw	100	;'d'
   580  047C  3420               	retlw	32	;' '
   581  047D  3420               	retlw	32	;' '
   582  047E  3420               	retlw	32	;' '
   583  047F  3420               	retlw	32	;' '
   584  0480  3400               	retlw	0
   585  0481                     STR_7:
   586  0481  3420               	retlw	32	;' '
   587  0482  3447               	retlw	71	;'G'
   588  0483  347A               	retlw	122	;'z'
   589  0484  3420               	retlw	32	;' '
   590  0485  343D               	retlw	61	;'='
   591  0486  3420               	retlw	32	;' '
   592  0487  3425               	retlw	37	;'%'
   593  0488  3464               	retlw	100	;'d'
   594  0489  340D               	retlw	13
   595  048A  340A               	retlw	10
   596  048B  3400               	retlw	0
   597  048C                     STR_4:
   598  048C  3420               	retlw	32	;' '
   599  048D  3454               	retlw	84	;'T'
   600  048E  3420               	retlw	32	;' '
   601  048F  343D               	retlw	61	;'='
   602  0490  3420               	retlw	32	;' '
   603  0491  3425               	retlw	37	;'%'
   604  0492  3464               	retlw	100	;'d'
   605  0493  3420               	retlw	32	;' '
   606  0494  3420               	retlw	32	;' '
   607  0495  3400               	retlw	0
   608                           
   609                           	psect	cinit
   610  000F                     start_initialization:	
   611                           ; #config settings
   612                           
   613  000F                     __initialization:
   614                           
   615                           ; Clear objects allocated to BANK0
   616  000F  1383               	bcf	3,7	;select IRP bank0
   617  0010  3020               	movlw	low __pbssBANK0
   618  0011  0084               	movwf	4
   619  0012  3056               	movlw	low (__pbssBANK0+54)
   620  0013  120A  118A  260C  120A  118A  	fcall	clear_ram0
   621  0018                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624  0018                     __end_of__initialization:
   625  0018  0183               	clrf	3
   626  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	bssBANK0
   629  0020                     __pbssBANK0:
   630  0020                     _T:
   631  0020                     	ds	2
   632  0022                     _Gz:
   633  0022                     	ds	2
   634  0024                     _Gy:
   635  0024                     	ds	2
   636  0026                     _Gx:
   637  0026                     	ds	2
   638  0028                     _Az:
   639  0028                     	ds	2
   640  002A                     _Ay:
   641  002A                     	ds	2
   642  002C                     _Ax:
   643  002C                     	ds	2
   644  002E                     _buf:
   645  002E                     	ds	40
   646                           
   647                           	psect	clrtext
   648  060C                     clear_ram0:	
   649                           ;	Called with FSR containing the base address, and
   650                           ;	W with the last address+1
   651                           
   652  060C  0064               	clrwdt	;clear the watchdog before getting into this loop
   653  060D                     clrloop0:
   654  060D  0180               	clrf	0	;clear RAM location pointed to by FSR
   655  060E  0A84               	incf	4,f	;increment pointer
   656  060F  0604               	xorwf	4,w	;XOR with final address
   657  0610  1903               	btfsc	3,2	;have we reached the end yet?
   658  0611  3400               	retlw	0	;all done for this memory range, return
   659  0612  0604               	xorwf	4,w	;XOR again to restore value
   660  0613  2E0D               	goto	clrloop0	;do the next byte
   661                           
   662                           	psect	cstackCOMMON
   663  0070                     __pcstackCOMMON:
   664  0070                     ?_Setup:
   665  0070                     ?_I2C_Start:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Master_Stop:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Read:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_Master_Wait:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_UARTSendString:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_I2C_ACK:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_NACK:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_ISR:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ??_ISR:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_main:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_UARTSendChar:	
   696                           ; 1 bytes @ 0x0
   697                           
   698                           
   699                           ; 1 bytes @ 0x0
   700  0070                     	ds	2
   701  0072                     ?_I2C_Master_Write:
   702  0072                     ??_I2C_Master_Stop:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0072                     ??_I2C_Read:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ??_I2C_Master_Wait:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0072                     ??_I2C_ACK:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     ??_I2C_NACK:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     ??_UARTSendChar:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ?___lwdiv:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ?___lldiv:	
   724                           ; 2 bytes @ 0x2
   725                           
   726  0072                     UARTSendChar@c:	
   727                           ; 4 bytes @ 0x2
   728                           
   729  0072                     I2C_Master_Write@d:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     ___lwdiv@divisor:	
   733                           ; 2 bytes @ 0x2
   734                           
   735  0072                     ___lldiv@divisor:	
   736                           ; 2 bytes @ 0x2
   737                           
   738                           
   739                           ; 4 bytes @ 0x2
   740  0072                     	ds	1
   741  0073                     ??_UARTSendString:
   742  0073                     I2C_Read@ACK_NACK:	
   743                           ; 1 bytes @ 0x3
   744                           
   745                           
   746                           ; 1 bytes @ 0x3
   747  0073                     	ds	1
   748  0074                     ??_I2C_Start:
   749  0074                     ??_I2C_Master_Write:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     I2C_Read@Data:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     UARTSendString@i:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ___lwdiv@dividend:	
   759                           ; 2 bytes @ 0x4
   760                           
   761                           
   762                           ; 2 bytes @ 0x4
   763  0074                     	ds	2
   764  0076                     ??___lwdiv:
   765  0076                     I2C_Start@add:	
   766                           ; 1 bytes @ 0x6
   767                           
   768  0076                     UARTSendString@str:	
   769                           ; 1 bytes @ 0x6
   770                           
   771  0076                     ___lldiv@dividend:	
   772                           ; 1 bytes @ 0x6
   773                           
   774                           
   775                           ; 4 bytes @ 0x6
   776  0076                     	ds	1
   777  0077                     ___lwdiv@quotient:
   778                           
   779                           ; 2 bytes @ 0x7
   780  0077                     	ds	2
   781  0079                     ___lwdiv@counter:
   782                           
   783                           ; 1 bytes @ 0x9
   784  0079                     	ds	1
   785  007A                     ??___lldiv:
   786  007A                     ??___lwmod:	
   787                           ; 1 bytes @ 0xA
   788                           
   789                           
   790                           ; 1 bytes @ 0xA
   791  007A                     	ds	1
   792  007B                     ??_Setup:
   793  007B                     ___lwmod@counter:	
   794                           ; 1 bytes @ 0xB
   795                           
   796                           
   797                           ; 1 bytes @ 0xB
   798  007B                     	ds	1
   799                           
   800                           	psect	cstackBANK0
   801  0056                     __pcstackBANK0:
   802  0056                     ?___lwmod:
   803  0056                     ___lwmod@divisor:	
   804                           ; 2 bytes @ 0x0
   805                           
   806  0056                     ___lldiv@quotient:	
   807                           ; 2 bytes @ 0x0
   808                           
   809                           
   810                           ; 4 bytes @ 0x0
   811  0056                     	ds	2
   812  0058                     ___lwmod@dividend:
   813                           
   814                           ; 2 bytes @ 0x2
   815  0058                     	ds	2
   816  005A                     ?_sprintf:
   817  005A                     sprintf@f:	
   818                           ; 2 bytes @ 0x4
   819                           
   820  005A                     ___lldiv@counter:	
   821                           ; 1 bytes @ 0x4
   822                           
   823                           
   824                           ; 1 bytes @ 0x4
   825  005A                     	ds	1
   826  005B                     ?_I2C_Master_Init:
   827  005B                     ?_UARTInit:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  005B                     I2C_Master_Init@c:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  005B                     UARTInit@baud_rate:	
   834                           ; 4 bytes @ 0x5
   835                           
   836                           
   837                           ; 4 bytes @ 0x5
   838  005B                     	ds	2
   839  005D                     ??_sprintf:
   840                           
   841                           ; 1 bytes @ 0x7
   842  005D                     	ds	2
   843  005F                     ??_I2C_Master_Init:
   844  005F                     UARTInit@BRGH:	
   845                           ; 1 bytes @ 0x9
   846                           
   847                           
   848                           ; 1 bytes @ 0x9
   849  005F                     	ds	1
   850  0060                     ??_UARTInit:
   851  0060                     sprintf@ap:	
   852                           ; 1 bytes @ 0xA
   853                           
   854                           
   855                           ; 1 bytes @ 0xA
   856  0060                     	ds	1
   857  0061                     sprintf@flag:
   858                           
   859                           ; 1 bytes @ 0xB
   860  0061                     	ds	1
   861  0062                     sprintf@prec:
   862                           
   863                           ; 1 bytes @ 0xC
   864  0062                     	ds	1
   865  0063                     sprintf@val:
   866                           
   867                           ; 2 bytes @ 0xD
   868  0063                     	ds	2
   869  0065                     sprintf@sp:
   870                           
   871                           ; 1 bytes @ 0xF
   872  0065                     	ds	1
   873  0066                     sprintf@c:
   874                           
   875                           ; 1 bytes @ 0x10
   876  0066                     	ds	1
   877  0067                     ??_main:
   878                           
   879                           ; 1 bytes @ 0x11
   880  0067                     	ds	4
   881                           
   882                           	psect	maintext
   883  001C                     __pmaintext:	
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 54 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : B00/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          0       4       0       0       0
   906 ;;      Totals:         0       4       0       0       0
   907 ;;Total ram usage:        4 bytes
   908 ;; Hardware stack levels required when called:    4
   909 ;; This function calls:
   910 ;;		_I2C_Master_Init
   911 ;;		_I2C_Master_Stop
   912 ;;		_I2C_Master_Wait
   913 ;;		_I2C_Master_Write
   914 ;;		_I2C_Read
   915 ;;		_I2C_Start
   916 ;;		_Setup
   917 ;;		_UARTSendString
   918 ;;		_sprintf
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _main
   926  001C                     _main:
   927  001C                     l1516:	
   928                           ;incstack = 0
   929                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   930                           
   931                           
   932                           ;main.c: 55:     I2C_Start(0xD0);
   933  001C  120A  118A  2575  120A  118A  	fcall	_Setup
   934  0021                     l1518:
   935                           
   936                           ;main.c: 60: 
   937  0021  3082               	movlw	130
   938  0022  1283               	bcf	3,5	;RP0=0, select bank0
   939  0023  1303               	bcf	3,6	;RP1=0, select bank0
   940  0024  00E8               	movwf	??_main+1
   941  0025  30DD               	movlw	221
   942  0026  00E7               	movwf	??_main
   943  0027                     u927:
   944  0027  0BE7               	decfsz	??_main,f
   945  0028  2827               	goto	u927
   946  0029  0BE8               	decfsz	??_main+1,f
   947  002A  2827               	goto	u927
   948  002B                     l1520:
   949                           
   950                           ;main.c: 61:     while (1) {
   951  002B  3000               	movlw	0
   952  002C  1283               	bcf	3,5	;RP0=0, select bank0
   953  002D  1303               	bcf	3,6	;RP1=0, select bank0
   954  002E  00DE               	movwf	I2C_Master_Init@c+3
   955  002F  3001               	movlw	1
   956  0030  00DD               	movwf	I2C_Master_Init@c+2
   957  0031  3086               	movlw	134
   958  0032  00DC               	movwf	I2C_Master_Init@c+1
   959  0033  30A0               	movlw	160
   960  0034  00DB               	movwf	I2C_Master_Init@c
   961  0035  120A  118A  2516  120A  118A  	fcall	_I2C_Master_Init
   962  003A                     l1522:
   963                           
   964                           ;main.c: 63:         PORTAbits.RA0 = ~PORTAbits.RA0;
   965  003A  30D0               	movlw	208
   966  003B  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
   967  0040                     l1524:
   968                           
   969                           ;main.c: 64: 
   970  0040  3019               	movlw	25
   971  0041  00F2               	movwf	I2C_Master_Write@d
   972  0042  3000               	movlw	0
   973  0043  00F3               	movwf	I2C_Master_Write@d+1
   974  0044  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
   975  0049                     l1526:
   976                           
   977                           ;main.c: 65:         _delay((unsigned long)((50)*(4000000/4000.0)));
   978  0049  3007               	movlw	7
   979  004A  00F2               	movwf	I2C_Master_Write@d
   980  004B  3000               	movlw	0
   981  004C  00F3               	movwf	I2C_Master_Write@d+1
   982  004D  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
   983  0052                     l1528:
   984                           
   985                           ;main.c: 66: 
   986  0052  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
   987  0057                     l1530:
   988                           
   989                           ;main.c: 69:         I2C_Master_Stop();
   990  0057  30D0               	movlw	208
   991  0058  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
   992  005D                     l1532:
   993                           
   994                           ;main.c: 70:         I2C_Start(0xD1);
   995  005D  306B               	movlw	107
   996  005E  00F2               	movwf	I2C_Master_Write@d
   997  005F  3000               	movlw	0
   998  0060  00F3               	movwf	I2C_Master_Write@d+1
   999  0061  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1000  0066                     l1534:
  1001                           
  1002                           ;main.c: 71: 
  1003  0066  3001               	movlw	1
  1004  0067  00F2               	movwf	I2C_Master_Write@d
  1005  0068  3000               	movlw	0
  1006  0069  00F3               	movwf	I2C_Master_Write@d+1
  1007  006A  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1008  006F                     l1536:
  1009                           
  1010                           ;main.c: 72:         Ax = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1011  006F  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1012  0074                     l1538:
  1013                           
  1014                           ;main.c: 75:         Az = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1015  0074  30D0               	movlw	208
  1016  0075  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
  1017  007A                     l1540:
  1018                           
  1019                           ;main.c: 76:         T = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1020  007A  301A               	movlw	26
  1021  007B  00F2               	movwf	I2C_Master_Write@d
  1022  007C  3000               	movlw	0
  1023  007D  00F3               	movwf	I2C_Master_Write@d+1
  1024  007E  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1025  0083                     l1542:
  1026                           
  1027                           ;main.c: 77:         Gx = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1028  0083  3000               	movlw	0
  1029  0084  00F2               	movwf	I2C_Master_Write@d
  1030  0085  00F3               	movwf	I2C_Master_Write@d+1
  1031  0086  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1032  008B                     l1544:
  1033                           
  1034                           ;main.c: 78:         Gy = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1035  008B  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1036  0090                     l1546:
  1037                           
  1038                           ;main.c: 81:         I2C_Master_Stop();
  1039  0090  30D0               	movlw	208
  1040  0091  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
  1041  0096                     l1548:
  1042                           
  1043                           ;main.c: 82:         sprintf(buf, "Ax = %d    ", Ax);
  1044  0096  301C               	movlw	28
  1045  0097  00F2               	movwf	I2C_Master_Write@d
  1046  0098  3000               	movlw	0
  1047  0099  00F3               	movwf	I2C_Master_Write@d+1
  1048  009A  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1049  009F                     l1550:
  1050                           
  1051                           ;main.c: 83:         UARTSendString(buf);
  1052  009F  3000               	movlw	0
  1053  00A0  00F2               	movwf	I2C_Master_Write@d
  1054  00A1  00F3               	movwf	I2C_Master_Write@d+1
  1055  00A2  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1056  00A7                     l1552:
  1057                           
  1058                           ;main.c: 84: 
  1059  00A7  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1060  00AC                     l1554:
  1061                           
  1062                           ;main.c: 87: 
  1063  00AC  30D0               	movlw	208
  1064  00AD  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
  1065  00B2                     l1556:
  1066                           
  1067                           ;main.c: 88:         sprintf(buf, " Az = %d    ", Az);
  1068  00B2  301B               	movlw	27
  1069  00B3  00F2               	movwf	I2C_Master_Write@d
  1070  00B4  3000               	movlw	0
  1071  00B5  00F3               	movwf	I2C_Master_Write@d+1
  1072  00B6  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1073  00BB                     l1558:
  1074                           
  1075                           ;main.c: 89:         UARTSendString(buf);
  1076  00BB  3018               	movlw	24
  1077  00BC  00F2               	movwf	I2C_Master_Write@d
  1078  00BD  3000               	movlw	0
  1079  00BE  00F3               	movwf	I2C_Master_Write@d+1
  1080  00BF  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1081  00C4                     l1560:
  1082                           
  1083                           ;main.c: 90: 
  1084  00C4  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1085  00C9                     l1562:
  1086                           
  1087                           ;main.c: 95:         UARTSendString(buf);
  1088  00C9  1003               	clrc
  1089  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1090  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1091  00CC  1C05               	btfss	5,0	;volatile
  1092  00CD  1403               	setc
  1093  00CE  1803               	btfsc	3,0
  1094  00CF  28D1               	goto	u891
  1095  00D0  28D5               	goto	u890
  1096  00D1                     u891:
  1097  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1098  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1099  00D3  1405               	bsf	5,0	;volatile
  1100  00D4  28D8               	goto	u904
  1101  00D5                     u890:
  1102  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00D7  1005               	bcf	5,0	;volatile
  1105  00D8                     u904:
  1106  00D8                     l1564:
  1107                           
  1108                           ;main.c: 97:         sprintf(buf, " Gy = %d    ", Gy);
  1109  00D8  3041               	movlw	65
  1110  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00DB  00E8               	movwf	??_main+1
  1113  00DC  30ED               	movlw	237
  1114  00DD  00E7               	movwf	??_main
  1115  00DE                     u937:
  1116  00DE  0BE7               	decfsz	??_main,f
  1117  00DF  28DE               	goto	u937
  1118  00E0  0BE8               	decfsz	??_main+1,f
  1119  00E1  28DE               	goto	u937
  1120  00E2  28E3               	nop2
  1121  00E3                     l1566:
  1122                           
  1123                           ;main.c: 99: 
  1124  00E3  30D0               	movlw	208
  1125  00E4  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
  1126  00E9                     l1568:
  1127                           
  1128                           ;main.c: 100:         sprintf(buf, " Gz = %d\r\n", Gz);
  1129  00E9  303B               	movlw	59
  1130  00EA  00F2               	movwf	I2C_Master_Write@d
  1131  00EB  3000               	movlw	0
  1132  00EC  00F3               	movwf	I2C_Master_Write@d+1
  1133  00ED  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  1134  00F2                     l1570:
  1135                           
  1136                           ;main.c: 101:         UARTSendString(buf);
  1137  00F2  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1138  00F7                     l1572:
  1139                           
  1140                           ;main.c: 102: 
  1141  00F7  30D1               	movlw	209
  1142  00F8  120A  118A  25B8  120A  118A  	fcall	_I2C_Start
  1143  00FD                     l1574:
  1144                           
  1145                           ;main.c: 104:     }
  1146  00FD  3000               	movlw	0
  1147  00FE  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1148  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0105  00E7               	movwf	??_main
  1151  0106  01E8               	clrf	??_main+1
  1152  0107  3000               	movlw	0
  1153  0108  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1154  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1155  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1156  010F  00E9               	movwf	??_main+2
  1157  0110  01EA               	clrf	??_main+3
  1158  0111  0869               	movf	??_main+2,w
  1159  0112  00EA               	movwf	??_main+3
  1160  0113  01E9               	clrf	??_main+2
  1161  0114  0867               	movf	??_main,w
  1162  0115  0469               	iorwf	??_main+2,w
  1163  0116  00AC               	movwf	_Ax
  1164  0117  0868               	movf	??_main+1,w
  1165  0118  046A               	iorwf	??_main+3,w
  1166  0119  00AD               	movwf	_Ax+1
  1167  011A                     l1576:
  1168                           
  1169                           ;main.c: 105: 
  1170  011A  120A  118A  25CE  120A  118A  	fcall	_I2C_Master_Wait
  1171  011F                     l1578:
  1172                           
  1173                           ;main.c: 106: 
  1174  011F  3000               	movlw	0
  1175  0120  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1176  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0127  00E7               	movwf	??_main
  1179  0128  01E8               	clrf	??_main+1
  1180  0129  3000               	movlw	0
  1181  012A  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1182  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0131  00E9               	movwf	??_main+2
  1185  0132  01EA               	clrf	??_main+3
  1186  0133  0869               	movf	??_main+2,w
  1187  0134  00EA               	movwf	??_main+3
  1188  0135  01E9               	clrf	??_main+2
  1189  0136  0867               	movf	??_main,w
  1190  0137  0469               	iorwf	??_main+2,w
  1191  0138  00AA               	movwf	_Ay
  1192  0139  0868               	movf	??_main+1,w
  1193  013A  046A               	iorwf	??_main+3,w
  1194  013B  00AB               	movwf	_Ay+1
  1195  013C                     l1580:
  1196                           
  1197                           ;main.c: 107:     return;
  1198  013C  3000               	movlw	0
  1199  013D  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1200  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0144  00E7               	movwf	??_main
  1203  0145  01E8               	clrf	??_main+1
  1204  0146  3000               	movlw	0
  1205  0147  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1206  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1207  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1208  014E  00E9               	movwf	??_main+2
  1209  014F  01EA               	clrf	??_main+3
  1210  0150  0869               	movf	??_main+2,w
  1211  0151  00EA               	movwf	??_main+3
  1212  0152  01E9               	clrf	??_main+2
  1213  0153  0867               	movf	??_main,w
  1214  0154  0469               	iorwf	??_main+2,w
  1215  0155  00A8               	movwf	_Az
  1216  0156  0868               	movf	??_main+1,w
  1217  0157  046A               	iorwf	??_main+3,w
  1218  0158  00A9               	movwf	_Az+1
  1219  0159                     l1582:
  1220                           
  1221                           ;main.c: 108: }
  1222  0159  3000               	movlw	0
  1223  015A  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1224  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0161  00E7               	movwf	??_main
  1227  0162  01E8               	clrf	??_main+1
  1228  0163  3000               	movlw	0
  1229  0164  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1230  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1231  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1232  016B  00E9               	movwf	??_main+2
  1233  016C  01EA               	clrf	??_main+3
  1234  016D  0869               	movf	??_main+2,w
  1235  016E  00EA               	movwf	??_main+3
  1236  016F  01E9               	clrf	??_main+2
  1237  0170  0867               	movf	??_main,w
  1238  0171  0469               	iorwf	??_main+2,w
  1239  0172  00A0               	movwf	_T
  1240  0173  0868               	movf	??_main+1,w
  1241  0174  046A               	iorwf	??_main+3,w
  1242  0175  00A1               	movwf	_T+1
  1243  0176                     l1584:
  1244                           
  1245                           ;main.c: 109: 
  1246  0176  3000               	movlw	0
  1247  0177  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1248  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1249  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1250  017E  00E7               	movwf	??_main
  1251  017F  01E8               	clrf	??_main+1
  1252  0180  3000               	movlw	0
  1253  0181  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1254  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0188  00E9               	movwf	??_main+2
  1257  0189  01EA               	clrf	??_main+3
  1258  018A  0869               	movf	??_main+2,w
  1259  018B  00EA               	movwf	??_main+3
  1260  018C  01E9               	clrf	??_main+2
  1261  018D  0867               	movf	??_main,w
  1262  018E  0469               	iorwf	??_main+2,w
  1263  018F  00A6               	movwf	_Gx
  1264  0190  0868               	movf	??_main+1,w
  1265  0191  046A               	iorwf	??_main+3,w
  1266  0192  00A7               	movwf	_Gx+1
  1267  0193                     l1586:
  1268                           
  1269                           ;main.c: 110: void Setup(void) {
  1270  0193  3000               	movlw	0
  1271  0194  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1272  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1273  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1274  019B  00E7               	movwf	??_main
  1275  019C  01E8               	clrf	??_main+1
  1276  019D  3000               	movlw	0
  1277  019E  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1278  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1279  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1280  01A5  00E9               	movwf	??_main+2
  1281  01A6  01EA               	clrf	??_main+3
  1282  01A7  0869               	movf	??_main+2,w
  1283  01A8  00EA               	movwf	??_main+3
  1284  01A9  01E9               	clrf	??_main+2
  1285  01AA  0867               	movf	??_main,w
  1286  01AB  0469               	iorwf	??_main+2,w
  1287  01AC  00A4               	movwf	_Gy
  1288  01AD  0868               	movf	??_main+1,w
  1289  01AE  046A               	iorwf	??_main+3,w
  1290  01AF  00A5               	movwf	_Gy+1
  1291  01B0                     l1588:
  1292                           
  1293                           ;main.c: 111: 
  1294  01B0  3001               	movlw	1
  1295  01B1  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1296  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01B8  00E7               	movwf	??_main
  1299  01B9  01E8               	clrf	??_main+1
  1300  01BA  3000               	movlw	0
  1301  01BB  120A  118A  254E  120A  118A  	fcall	_I2C_Read
  1302  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1303  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1304  01C2  00E9               	movwf	??_main+2
  1305  01C3  01EA               	clrf	??_main+3
  1306  01C4  0869               	movf	??_main+2,w
  1307  01C5  00EA               	movwf	??_main+3
  1308  01C6  01E9               	clrf	??_main+2
  1309  01C7  0867               	movf	??_main,w
  1310  01C8  0469               	iorwf	??_main+2,w
  1311  01C9  00A2               	movwf	_Gz
  1312  01CA  0868               	movf	??_main+1,w
  1313  01CB  046A               	iorwf	??_main+3,w
  1314  01CC  00A3               	movwf	_Gz+1
  1315  01CD                     l1590:
  1316                           
  1317                           ;main.c: 113: 
  1318  01CD  120A  118A  2603  120A  118A  	fcall	_I2C_Master_Stop
  1319  01D2                     l1592:
  1320                           
  1321                           ;main.c: 114: 
  1322  01D2  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1323  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1324  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1325  01D5  00E7               	movwf	??_main
  1326  01D6  0867               	movf	??_main,w
  1327  01D7  00DA               	movwf	sprintf@f
  1328  01D8  082D               	movf	_Ax+1,w
  1329  01D9  00DC               	movwf	?_sprintf+2
  1330  01DA  082C               	movf	_Ax,w
  1331  01DB  00DB               	movwf	?_sprintf+1
  1332  01DC  302E               	movlw	(low (_buf| 0))& (0+255)
  1333  01DD  120A  118A  2270  120A  118A  	fcall	_sprintf
  1334  01E2                     l1594:
  1335                           
  1336                           ;main.c: 115:     TRISA = 0;
  1337  01E2  302E               	movlw	(low (_buf| 0))& (0+255)
  1338  01E3  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1339  01E8                     l1596:
  1340                           
  1341                           ;main.c: 117:     TRISC = 0;
  1342  01E8  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1343  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1344  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1345  01EB  00E7               	movwf	??_main
  1346  01EC  0867               	movf	??_main,w
  1347  01ED  00DA               	movwf	sprintf@f
  1348  01EE  082B               	movf	_Ay+1,w
  1349  01EF  00DC               	movwf	?_sprintf+2
  1350  01F0  082A               	movf	_Ay,w
  1351  01F1  00DB               	movwf	?_sprintf+1
  1352  01F2  302E               	movlw	(low (_buf| 0))& (0+255)
  1353  01F3  120A  118A  2270  120A  118A  	fcall	_sprintf
  1354  01F8                     l1598:
  1355                           
  1356                           ;main.c: 118:     PORTC = 0;
  1357  01F8  302E               	movlw	(low (_buf| 0))& (0+255)
  1358  01F9  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1359  01FE                     l1600:
  1360                           
  1361                           ;main.c: 120:     ANSELH = 0;
  1362  01FE  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1363  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0201  00E7               	movwf	??_main
  1366  0202  0867               	movf	??_main,w
  1367  0203  00DA               	movwf	sprintf@f
  1368  0204  0829               	movf	_Az+1,w
  1369  0205  00DC               	movwf	?_sprintf+2
  1370  0206  0828               	movf	_Az,w
  1371  0207  00DB               	movwf	?_sprintf+1
  1372  0208  302E               	movlw	(low (_buf| 0))& (0+255)
  1373  0209  120A  118A  2270  120A  118A  	fcall	_sprintf
  1374  020E                     l1602:
  1375                           
  1376                           ;main.c: 121: 
  1377  020E  302E               	movlw	(low (_buf| 0))& (0+255)
  1378  020F  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1379  0214                     l1604:
  1380                           
  1381                           ;main.c: 123: 
  1382  0214  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1383  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0217  00E7               	movwf	??_main
  1386  0218  0867               	movf	??_main,w
  1387  0219  00DA               	movwf	sprintf@f
  1388  021A  0821               	movf	_T+1,w
  1389  021B  00DC               	movwf	?_sprintf+2
  1390  021C  0820               	movf	_T,w
  1391  021D  00DB               	movwf	?_sprintf+1
  1392  021E  302E               	movlw	(low (_buf| 0))& (0+255)
  1393  021F  120A  118A  2270  120A  118A  	fcall	_sprintf
  1394  0224                     l1606:
  1395                           
  1396                           ;main.c: 124: 
  1397  0224  302E               	movlw	(low (_buf| 0))& (0+255)
  1398  0225  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1399  022A                     l1608:
  1400                           
  1401                           ;main.c: 126: 
  1402  022A  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1403  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1404  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1405  022D  00E7               	movwf	??_main
  1406  022E  0867               	movf	??_main,w
  1407  022F  00DA               	movwf	sprintf@f
  1408  0230  0827               	movf	_Gx+1,w
  1409  0231  00DC               	movwf	?_sprintf+2
  1410  0232  0826               	movf	_Gx,w
  1411  0233  00DB               	movwf	?_sprintf+1
  1412  0234  302E               	movlw	(low (_buf| 0))& (0+255)
  1413  0235  120A  118A  2270  120A  118A  	fcall	_sprintf
  1414  023A                     l1610:
  1415                           
  1416                           ;main.c: 127: 
  1417  023A  302E               	movlw	(low (_buf| 0))& (0+255)
  1418  023B  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1419  0240                     l1612:
  1420                           
  1421                           ;main.c: 129: }
  1422  0240  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1423  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0243  00E7               	movwf	??_main
  1426  0244  0867               	movf	??_main,w
  1427  0245  00DA               	movwf	sprintf@f
  1428  0246  0825               	movf	_Gy+1,w
  1429  0247  00DC               	movwf	?_sprintf+2
  1430  0248  0824               	movf	_Gy,w
  1431  0249  00DB               	movwf	?_sprintf+1
  1432  024A  302E               	movlw	(low (_buf| 0))& (0+255)
  1433  024B  120A  118A  2270  120A  118A  	fcall	_sprintf
  1434  0250                     l1614:
  1435                           
  1436                           ;main.c: 130: 
  1437  0250  302E               	movlw	(low (_buf| 0))& (0+255)
  1438  0251  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1439  0256                     l1616:
  1440                           
  1441                           ;main.c: 132:     char valor[4];
  1442  0256  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1443  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0259  00E7               	movwf	??_main
  1446  025A  0867               	movf	??_main,w
  1447  025B  00DA               	movwf	sprintf@f
  1448  025C  0823               	movf	_Gz+1,w
  1449  025D  00DC               	movwf	?_sprintf+2
  1450  025E  0822               	movf	_Gz,w
  1451  025F  00DB               	movwf	?_sprintf+1
  1452  0260  302E               	movlw	(low (_buf| 0))& (0+255)
  1453  0261  120A  118A  2270  120A  118A  	fcall	_sprintf
  1454  0266                     l1618:
  1455                           
  1456                           ;main.c: 133: 
  1457  0266  302E               	movlw	(low (_buf| 0))& (0+255)
  1458  0267  120A  118A  2597  120A  118A  	fcall	_UARTSendString
  1459  026C  28C9               	goto	l1562
  1460  026D  120A  118A  280C   	ljmp	start
  1461  0270                     __end_of_main:
  1462                           
  1463                           	psect	text1
  1464  0270                     __ptext1:	
  1465 ;; *************** function _sprintf *****************
  1466 ;; Defined at:
  1467 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  sp              1    wreg     PTR unsigned char 
  1470 ;;		 -> buf(40), 
  1471 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1472 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1473 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1476 ;;		 -> buf(40), 
  1477 ;;  tmpval          4    0        struct .
  1478 ;;  val             2   13[BANK0 ] unsigned int 
  1479 ;;  cp              2    0        PTR const unsigned char 
  1480 ;;  len             2    0        unsigned int 
  1481 ;;  c               1   16[BANK0 ] unsigned char 
  1482 ;;  prec            1   12[BANK0 ] char 
  1483 ;;  flag            1   11[BANK0 ] unsigned char 
  1484 ;;  ap              1   10[BANK0 ] PTR void [1]
  1485 ;;		 -> ?_sprintf(2), 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    4[BANK0 ] int 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       3       0       0       0
  1496 ;;      Locals:         0       7       0       0       0
  1497 ;;      Temps:          0       3       0       0       0
  1498 ;;      Totals:         0      13       0       0       0
  1499 ;;Total ram usage:       13 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    2
  1502 ;; This function calls:
  1503 ;;		___lwdiv
  1504 ;;		___lwmod
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _sprintf
  1512  0270                     _sprintf:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1516                           ;sprintf@sp stored from wreg
  1517  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0272  00E5               	movwf	sprintf@sp
  1520  0273                     l1446:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1523  0273  305B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1524  0274  00DD               	movwf	??_sprintf
  1525  0275  085D               	movf	??_sprintf,w
  1526  0276  00E0               	movwf	sprintf@ap
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1529  0277  2B43               	goto	l1498
  1530  0278                     l1448:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1533  0278  3025               	movlw	37
  1534  0279  0666               	xorwf	sprintf@c,w
  1535  027A  1903               	btfsc	3,2
  1536  027B  2A7D               	goto	u811
  1537  027C  2A7E               	goto	u810
  1538  027D                     u811:
  1539  027D  2A8A               	goto	l1454
  1540  027E                     u810:
  1541  027E                     l1450:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1544  027E  0866               	movf	sprintf@c,w
  1545  027F  00DD               	movwf	??_sprintf
  1546  0280  0865               	movf	sprintf@sp,w
  1547  0281  0084               	movwf	4
  1548  0282  085D               	movf	??_sprintf,w
  1549  0283  1383               	bcf	3,7	;select IRP bank0
  1550  0284  0080               	movwf	0
  1551  0285                     l1452:
  1552  0285  3001               	movlw	1
  1553  0286  00DD               	movwf	??_sprintf
  1554  0287  085D               	movf	??_sprintf,w
  1555  0288  07E5               	addwf	sprintf@sp,f
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1558  0289  2B43               	goto	l1498
  1559  028A                     l1454:
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1562  028A  01E1               	clrf	sprintf@flag
  1563  028B                     l1458:	
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1565                           
  1566  028B  3001               	movlw	1
  1567  028C  07DA               	addwf	sprintf@f,f
  1568  028D  30FF               	movlw	-1
  1569  028E  075A               	addwf	sprintf@f,w
  1570  028F  0084               	movwf	4
  1571  0290  120A  118A  2431  120A  118A  	fcall	stringdir
  1572  0295  00E6               	movwf	sprintf@c
  1573  0296  00DD               	movwf	??_sprintf
  1574  0297  01DE               	clrf	??_sprintf+1
  1575                           
  1576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1577                           ; Switch size 1, requested type "simple"
  1578                           ; Number of cases is 1, Range of values is 0 to 0
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte            4     3 (average)
  1582                           ; direct_byte           11     8 (fixed)
  1583                           ; jumptable            260     6 (fixed)
  1584                           ;	Chosen strategy is simple_byte
  1585  0298  085E               	movf	??_sprintf+1,w
  1586  0299  3A00               	xorlw	0	; case 0
  1587  029A  1903               	skipnz
  1588  029B  2A9D               	goto	l1660
  1589  029C  2B43               	goto	l1498
  1590  029D                     l1660:
  1591                           
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 3, Range of values is 0 to 105
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte           10     6 (average)
  1597                           ; jumptable            260     6 (fixed)
  1598                           ;	Chosen strategy is simple_byte
  1599  029D  085D               	movf	??_sprintf,w
  1600  029E  3A00               	xorlw	0	; case 0
  1601  029F  1903               	skipnz
  1602  02A0  2B55               	goto	l1500
  1603  02A1  3A64               	xorlw	100	; case 100
  1604  02A2  1903               	skipnz
  1605  02A3  2AA8               	goto	l1460
  1606  02A4  3A0D               	xorlw	13	; case 105
  1607  02A5  1903               	skipnz
  1608  02A6  2AA8               	goto	l1460
  1609  02A7  2B43               	goto	l1498
  1610  02A8                     l1460:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1613  02A8  0860               	movf	sprintf@ap,w
  1614  02A9  0084               	movwf	4
  1615  02AA  1383               	bcf	3,7	;select IRP bank0
  1616  02AB  0800               	movf	0,w
  1617  02AC  00E3               	movwf	sprintf@val
  1618  02AD  0A84               	incf	4,f
  1619  02AE  0800               	movf	0,w
  1620  02AF  00E4               	movwf	sprintf@val+1
  1621  02B0                     l1462:
  1622  02B0  3002               	movlw	2
  1623  02B1  00DD               	movwf	??_sprintf
  1624  02B2  085D               	movf	??_sprintf,w
  1625  02B3  07E0               	addwf	sprintf@ap,f
  1626  02B4                     l1464:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1629  02B4  1FE4               	btfss	sprintf@val+1,7
  1630  02B5  2AB7               	goto	u821
  1631  02B6  2AB8               	goto	u820
  1632  02B7                     u821:
  1633  02B7  2AC1               	goto	l1470
  1634  02B8                     u820:
  1635  02B8                     l1466:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1638  02B8  3003               	movlw	3
  1639  02B9  00DD               	movwf	??_sprintf
  1640  02BA  085D               	movf	??_sprintf,w
  1641  02BB  04E1               	iorwf	sprintf@flag,f
  1642  02BC                     l1468:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1645  02BC  09E3               	comf	sprintf@val,f
  1646  02BD  09E4               	comf	sprintf@val+1,f
  1647  02BE  0AE3               	incf	sprintf@val,f
  1648  02BF  1903               	skipnz
  1649  02C0  0AE4               	incf	sprintf@val+1,f
  1650  02C1                     l1470:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1653  02C1  01E6               	clrf	sprintf@c
  1654  02C2  0AE6               	incf	sprintf@c,f
  1655  02C3                     l1476:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1658  02C3  0866               	movf	sprintf@c,w
  1659  02C4  00DD               	movwf	??_sprintf
  1660  02C5  075D               	addwf	??_sprintf,w
  1661  02C6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1662  02C7  0084               	movwf	4
  1663  02C8  120A  118A  2431  120A  118A  	fcall	stringdir
  1664  02CD  00DE               	movwf	??_sprintf+1
  1665  02CE  120A  118A  2431  120A  118A  	fcall	stringdir
  1666  02D3  00DF               	movwf	??_sprintf+2
  1667  02D4  085F               	movf	??_sprintf+2,w
  1668  02D5  0264               	subwf	sprintf@val+1,w
  1669  02D6  1D03               	skipz
  1670  02D7  2ADA               	goto	u835
  1671  02D8  085E               	movf	??_sprintf+1,w
  1672  02D9  0263               	subwf	sprintf@val,w
  1673  02DA                     u835:
  1674  02DA  1803               	skipnc
  1675  02DB  2ADD               	goto	u831
  1676  02DC  2ADE               	goto	u830
  1677  02DD                     u831:
  1678  02DD  2ADF               	goto	l1480
  1679  02DE                     u830:
  1680  02DE  2AE9               	goto	l1482
  1681  02DF                     l1480:
  1682  02DF  3001               	movlw	1
  1683  02E0  00DD               	movwf	??_sprintf
  1684  02E1  085D               	movf	??_sprintf,w
  1685  02E2  07E6               	addwf	sprintf@c,f
  1686  02E3  3005               	movlw	5
  1687  02E4  0666               	xorwf	sprintf@c,w
  1688  02E5  1D03               	btfss	3,2
  1689  02E6  2AE8               	goto	u841
  1690  02E7  2AE9               	goto	u840
  1691  02E8                     u841:
  1692  02E8  2AC3               	goto	l1476
  1693  02E9                     u840:
  1694  02E9                     l1482:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1697  02E9  0861               	movf	sprintf@flag,w
  1698  02EA  3903               	andlw	3
  1699  02EB  1903               	btfsc	3,2
  1700  02EC  2AEE               	goto	u851
  1701  02ED  2AEF               	goto	u850
  1702  02EE                     u851:
  1703  02EE  2AFA               	goto	l1488
  1704  02EF                     u850:
  1705  02EF                     l1484:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1708  02EF  302D               	movlw	45
  1709  02F0  00DD               	movwf	??_sprintf
  1710  02F1  0865               	movf	sprintf@sp,w
  1711  02F2  0084               	movwf	4
  1712  02F3  085D               	movf	??_sprintf,w
  1713  02F4  1383               	bcf	3,7	;select IRP bank0
  1714  02F5  0080               	movwf	0
  1715  02F6                     l1486:
  1716  02F6  3001               	movlw	1
  1717  02F7  00DD               	movwf	??_sprintf
  1718  02F8  085D               	movf	??_sprintf,w
  1719  02F9  07E5               	addwf	sprintf@sp,f
  1720  02FA                     l1488:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1723  02FA  0866               	movf	sprintf@c,w
  1724  02FB  00DD               	movwf	??_sprintf
  1725  02FC  085D               	movf	??_sprintf,w
  1726  02FD  00E2               	movwf	sprintf@prec
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1729  02FE  2B3A               	goto	l1496
  1730  02FF                     l1490:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1733  02FF  300A               	movlw	10
  1734  0300  00D6               	movwf	___lwmod@divisor
  1735  0301  3000               	movlw	0
  1736  0302  00D7               	movwf	___lwmod@divisor+1
  1737  0303  0862               	movf	sprintf@prec,w
  1738  0304  00DD               	movwf	??_sprintf
  1739  0305  075D               	addwf	??_sprintf,w
  1740  0306  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1741  0307  0084               	movwf	4
  1742  0308  120A  118A  2431  120A  118A  	fcall	stringdir
  1743  030D  00F2               	movwf	___lwdiv@divisor
  1744  030E  120A  118A  2431  120A  118A  	fcall	stringdir
  1745  0313  00F3               	movwf	___lwdiv@divisor+1
  1746  0314  0864               	movf	sprintf@val+1,w
  1747  0315  00F5               	movwf	___lwdiv@dividend+1
  1748  0316  0863               	movf	sprintf@val,w
  1749  0317  00F4               	movwf	___lwdiv@dividend
  1750  0318  120A  118A  2496  120A  118A  	fcall	___lwdiv
  1751  031D  0873               	movf	?___lwdiv+1,w
  1752  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1753  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0320  00D9               	movwf	___lwmod@dividend+1
  1755  0321  0872               	movf	?___lwdiv,w
  1756  0322  00D8               	movwf	___lwmod@dividend
  1757  0323  120A  118A  24DA  120A  118A  	fcall	___lwmod
  1758  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1760  032A  0856               	movf	?___lwmod,w
  1761  032B  3E30               	addlw	48
  1762  032C  00DE               	movwf	??_sprintf+1
  1763  032D  085E               	movf	??_sprintf+1,w
  1764  032E  00E6               	movwf	sprintf@c
  1765  032F                     l1492:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1768  032F  0866               	movf	sprintf@c,w
  1769  0330  00DD               	movwf	??_sprintf
  1770  0331  0865               	movf	sprintf@sp,w
  1771  0332  0084               	movwf	4
  1772  0333  085D               	movf	??_sprintf,w
  1773  0334  1383               	bcf	3,7	;select IRP bank0
  1774  0335  0080               	movwf	0
  1775  0336                     l1494:
  1776  0336  3001               	movlw	1
  1777  0337  00DD               	movwf	??_sprintf
  1778  0338  085D               	movf	??_sprintf,w
  1779  0339  07E5               	addwf	sprintf@sp,f
  1780  033A                     l1496:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1783  033A  30FF               	movlw	255
  1784  033B  00DD               	movwf	??_sprintf
  1785  033C  085D               	movf	??_sprintf,w
  1786  033D  07E2               	addwf	sprintf@prec,f
  1787  033E  0A62               	incf	sprintf@prec,w
  1788  033F  1D03               	btfss	3,2
  1789  0340  2B42               	goto	u861
  1790  0341  2B43               	goto	u860
  1791  0342                     u861:
  1792  0342  2AFF               	goto	l1490
  1793  0343                     u860:
  1794  0343                     l1498:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1797  0343  3001               	movlw	1
  1798  0344  07DA               	addwf	sprintf@f,f
  1799  0345  30FF               	movlw	-1
  1800  0346  075A               	addwf	sprintf@f,w
  1801  0347  0084               	movwf	4
  1802  0348  120A  118A  2431  120A  118A  	fcall	stringdir
  1803  034D  00DD               	movwf	??_sprintf
  1804  034E  085D               	movf	??_sprintf,w
  1805  034F  00E6               	movwf	sprintf@c
  1806  0350  0866               	movf	sprintf@c,w
  1807  0351  1D03               	btfss	3,2
  1808  0352  2B54               	goto	u871
  1809  0353  2B55               	goto	u870
  1810  0354                     u871:
  1811  0354  2A78               	goto	l1448
  1812  0355                     u870:
  1813  0355                     l1500:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1816  0355  0865               	movf	sprintf@sp,w
  1817  0356  0084               	movwf	4
  1818  0357  1383               	bcf	3,7	;select IRP bank0
  1819  0358  0180               	clrf	0
  1820  0359                     l328:
  1821  0359  0008               	return
  1822  035A                     __end_of_sprintf:
  1823                           
  1824                           	psect	text2
  1825  04DA                     __ptext2:	
  1826 ;; *************** function ___lwmod *****************
  1827 ;; Defined at:
  1828 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  divisor         2    0[BANK0 ] unsigned int 
  1831 ;;  dividend        2    2[BANK0 ] unsigned int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  counter         1   11[COMMON] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    0[BANK0 ] unsigned int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       4       0       0       0
  1844 ;;      Locals:         1       0       0       0       0
  1845 ;;      Temps:          1       0       0       0       0
  1846 ;;      Totals:         2       4       0       0       0
  1847 ;;Total ram usage:        6 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_sprintf
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function ___lwmod
  1859  04DA                     ___lwmod:
  1860  04DA                     l1374:	
  1861                           ;incstack = 0
  1862                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1863                           
  1864  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1865  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1866  04DC  0856               	movf	___lwmod@divisor,w
  1867  04DD  0457               	iorwf	___lwmod@divisor+1,w
  1868  04DE  1903               	btfsc	3,2
  1869  04DF  2CE1               	goto	u711
  1870  04E0  2CE2               	goto	u710
  1871  04E1                     u711:
  1872  04E1  2D11               	goto	l1392
  1873  04E2                     u710:
  1874  04E2                     l1376:
  1875  04E2  01FB               	clrf	___lwmod@counter
  1876  04E3  0AFB               	incf	___lwmod@counter,f
  1877  04E4  2CF0               	goto	l1382
  1878  04E5                     l1378:
  1879  04E5  3001               	movlw	1
  1880  04E6                     u725:
  1881  04E6  1003               	clrc
  1882  04E7  0DD6               	rlf	___lwmod@divisor,f
  1883  04E8  0DD7               	rlf	___lwmod@divisor+1,f
  1884  04E9  3EFF               	addlw	-1
  1885  04EA  1D03               	skipz
  1886  04EB  2CE6               	goto	u725
  1887  04EC                     l1380:
  1888  04EC  3001               	movlw	1
  1889  04ED  00FA               	movwf	??___lwmod
  1890  04EE  087A               	movf	??___lwmod,w
  1891  04EF  07FB               	addwf	___lwmod@counter,f
  1892  04F0                     l1382:
  1893  04F0  1FD7               	btfss	___lwmod@divisor+1,7
  1894  04F1  2CF3               	goto	u731
  1895  04F2  2CF4               	goto	u730
  1896  04F3                     u731:
  1897  04F3  2CE5               	goto	l1378
  1898  04F4                     u730:
  1899  04F4                     l1384:
  1900  04F4  0857               	movf	___lwmod@divisor+1,w
  1901  04F5  0259               	subwf	___lwmod@dividend+1,w
  1902  04F6  1D03               	skipz
  1903  04F7  2CFA               	goto	u745
  1904  04F8  0856               	movf	___lwmod@divisor,w
  1905  04F9  0258               	subwf	___lwmod@dividend,w
  1906  04FA                     u745:
  1907  04FA  1C03               	skipc
  1908  04FB  2CFD               	goto	u741
  1909  04FC  2CFE               	goto	u740
  1910  04FD                     u741:
  1911  04FD  2D04               	goto	l1388
  1912  04FE                     u740:
  1913  04FE                     l1386:
  1914  04FE  0856               	movf	___lwmod@divisor,w
  1915  04FF  02D8               	subwf	___lwmod@dividend,f
  1916  0500  0857               	movf	___lwmod@divisor+1,w
  1917  0501  1C03               	skipc
  1918  0502  03D9               	decf	___lwmod@dividend+1,f
  1919  0503  02D9               	subwf	___lwmod@dividend+1,f
  1920  0504                     l1388:
  1921  0504  3001               	movlw	1
  1922  0505                     u755:
  1923  0505  1003               	clrc
  1924  0506  0CD7               	rrf	___lwmod@divisor+1,f
  1925  0507  0CD6               	rrf	___lwmod@divisor,f
  1926  0508  3EFF               	addlw	-1
  1927  0509  1D03               	skipz
  1928  050A  2D05               	goto	u755
  1929  050B                     l1390:
  1930  050B  3001               	movlw	1
  1931  050C  02FB               	subwf	___lwmod@counter,f
  1932  050D  1D03               	btfss	3,2
  1933  050E  2D10               	goto	u761
  1934  050F  2D11               	goto	u760
  1935  0510                     u761:
  1936  0510  2CF4               	goto	l1384
  1937  0511                     u760:
  1938  0511                     l1392:
  1939  0511  0859               	movf	___lwmod@dividend+1,w
  1940  0512  00D7               	movwf	?___lwmod+1
  1941  0513  0858               	movf	___lwmod@dividend,w
  1942  0514  00D6               	movwf	?___lwmod
  1943  0515                     l614:
  1944  0515  0008               	return
  1945  0516                     __end_of___lwmod:
  1946                           
  1947                           	psect	text3
  1948  0496                     __ptext3:	
  1949 ;; *************** function ___lwdiv *****************
  1950 ;; Defined at:
  1951 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  divisor         2    2[COMMON] unsigned int 
  1954 ;;  dividend        2    4[COMMON] unsigned int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  quotient        2    7[COMMON] unsigned int 
  1957 ;;  counter         1    9[COMMON] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    2[COMMON] unsigned int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         4       0       0       0       0
  1968 ;;      Locals:         3       0       0       0       0
  1969 ;;      Temps:          1       0       0       0       0
  1970 ;;      Totals:         8       0       0       0       0
  1971 ;;Total ram usage:        8 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_sprintf
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function ___lwdiv
  1983  0496                     ___lwdiv:
  1984  0496                     l1348:	
  1985                           ;incstack = 0
  1986                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1987                           
  1988  0496  01F7               	clrf	___lwdiv@quotient
  1989  0497  01F8               	clrf	___lwdiv@quotient+1
  1990  0498                     l1350:
  1991  0498  0872               	movf	___lwdiv@divisor,w
  1992  0499  0473               	iorwf	___lwdiv@divisor+1,w
  1993  049A  1903               	btfsc	3,2
  1994  049B  2C9D               	goto	u641
  1995  049C  2C9E               	goto	u640
  1996  049D                     u641:
  1997  049D  2CD5               	goto	l1370
  1998  049E                     u640:
  1999  049E                     l1352:
  2000  049E  01F9               	clrf	___lwdiv@counter
  2001  049F  0AF9               	incf	___lwdiv@counter,f
  2002  04A0  2CAC               	goto	l1358
  2003  04A1                     l1354:
  2004  04A1  3001               	movlw	1
  2005  04A2                     u655:
  2006  04A2  1003               	clrc
  2007  04A3  0DF2               	rlf	___lwdiv@divisor,f
  2008  04A4  0DF3               	rlf	___lwdiv@divisor+1,f
  2009  04A5  3EFF               	addlw	-1
  2010  04A6  1D03               	skipz
  2011  04A7  2CA2               	goto	u655
  2012  04A8                     l1356:
  2013  04A8  3001               	movlw	1
  2014  04A9  00F6               	movwf	??___lwdiv
  2015  04AA  0876               	movf	??___lwdiv,w
  2016  04AB  07F9               	addwf	___lwdiv@counter,f
  2017  04AC                     l1358:
  2018  04AC  1FF3               	btfss	___lwdiv@divisor+1,7
  2019  04AD  2CAF               	goto	u661
  2020  04AE  2CB0               	goto	u660
  2021  04AF                     u661:
  2022  04AF  2CA1               	goto	l1354
  2023  04B0                     u660:
  2024  04B0                     l1360:
  2025  04B0  3001               	movlw	1
  2026  04B1                     u675:
  2027  04B1  1003               	clrc
  2028  04B2  0DF7               	rlf	___lwdiv@quotient,f
  2029  04B3  0DF8               	rlf	___lwdiv@quotient+1,f
  2030  04B4  3EFF               	addlw	-1
  2031  04B5  1D03               	skipz
  2032  04B6  2CB1               	goto	u675
  2033  04B7  0873               	movf	___lwdiv@divisor+1,w
  2034  04B8  0275               	subwf	___lwdiv@dividend+1,w
  2035  04B9  1D03               	skipz
  2036  04BA  2CBD               	goto	u685
  2037  04BB  0872               	movf	___lwdiv@divisor,w
  2038  04BC  0274               	subwf	___lwdiv@dividend,w
  2039  04BD                     u685:
  2040  04BD  1C03               	skipc
  2041  04BE  2CC0               	goto	u681
  2042  04BF  2CC1               	goto	u680
  2043  04C0                     u681:
  2044  04C0  2CC8               	goto	l1366
  2045  04C1                     u680:
  2046  04C1                     l1362:
  2047  04C1  0872               	movf	___lwdiv@divisor,w
  2048  04C2  02F4               	subwf	___lwdiv@dividend,f
  2049  04C3  0873               	movf	___lwdiv@divisor+1,w
  2050  04C4  1C03               	skipc
  2051  04C5  03F5               	decf	___lwdiv@dividend+1,f
  2052  04C6  02F5               	subwf	___lwdiv@dividend+1,f
  2053  04C7                     l1364:
  2054  04C7  1477               	bsf	___lwdiv@quotient,0
  2055  04C8                     l1366:
  2056  04C8  3001               	movlw	1
  2057  04C9                     u695:
  2058  04C9  1003               	clrc
  2059  04CA  0CF3               	rrf	___lwdiv@divisor+1,f
  2060  04CB  0CF2               	rrf	___lwdiv@divisor,f
  2061  04CC  3EFF               	addlw	-1
  2062  04CD  1D03               	skipz
  2063  04CE  2CC9               	goto	u695
  2064  04CF                     l1368:
  2065  04CF  3001               	movlw	1
  2066  04D0  02F9               	subwf	___lwdiv@counter,f
  2067  04D1  1D03               	btfss	3,2
  2068  04D2  2CD4               	goto	u701
  2069  04D3  2CD5               	goto	u700
  2070  04D4                     u701:
  2071  04D4  2CB0               	goto	l1360
  2072  04D5                     u700:
  2073  04D5                     l1370:
  2074  04D5  0878               	movf	___lwdiv@quotient+1,w
  2075  04D6  00F3               	movwf	?___lwdiv+1
  2076  04D7  0877               	movf	___lwdiv@quotient,w
  2077  04D8  00F2               	movwf	?___lwdiv
  2078  04D9                     l604:
  2079  04D9  0008               	return
  2080  04DA                     __end_of___lwdiv:
  2081                           
  2082                           	psect	text4
  2083  0597                     __ptext4:	
  2084 ;; *************** function _UARTSendString *****************
  2085 ;; Defined at:
  2086 ;;		line 50 in file "UART.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  str             1    wreg     PTR const unsigned char 
  2089 ;;		 -> buf(40), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  str             1    6[COMMON] PTR const unsigned char 
  2092 ;;		 -> buf(40), 
  2093 ;;  i               2    4[COMMON] int 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         3       0       0       0       0
  2105 ;;      Temps:          1       0       0       0       0
  2106 ;;      Totals:         4       0       0       0       0
  2107 ;;Total ram usage:        4 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    2
  2110 ;; This function calls:
  2111 ;;		_UARTSendChar
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _UARTSendString
  2119  0597                     _UARTSendString:
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2123                           ;UARTSendString@str stored from wreg
  2124  0597  00F6               	movwf	UARTSendString@str
  2125  0598                     l1508:
  2126                           
  2127                           ;UART.c: 51:     int i = 0;
  2128  0598  01F4               	clrf	UARTSendString@i
  2129  0599  01F5               	clrf	UARTSendString@i+1
  2130                           
  2131                           ;UART.c: 55:         while(str[i] != '\0'){
  2132  059A  2DAC               	goto	l1514
  2133  059B                     l1510:
  2134                           
  2135                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2136  059B  0874               	movf	UARTSendString@i,w
  2137  059C  0776               	addwf	UARTSendString@str,w
  2138  059D  00F3               	movwf	??_UARTSendString
  2139  059E  0873               	movf	??_UARTSendString,w
  2140  059F  0084               	movwf	4
  2141  05A0  0800               	movf	0,w
  2142  05A1  120A  118A  25DB  120A  118A  	fcall	_UARTSendChar
  2143  05A6                     l1512:
  2144  05A6  3001               	movlw	1
  2145  05A7  07F4               	addwf	UARTSendString@i,f
  2146  05A8  1803               	skipnc
  2147  05A9  0AF5               	incf	UARTSendString@i+1,f
  2148  05AA  3000               	movlw	0
  2149  05AB  07F5               	addwf	UARTSendString@i+1,f
  2150  05AC                     l1514:
  2151                           
  2152                           ;UART.c: 55:         while(str[i] != '\0'){
  2153  05AC  0874               	movf	UARTSendString@i,w
  2154  05AD  0776               	addwf	UARTSendString@str,w
  2155  05AE  00F3               	movwf	??_UARTSendString
  2156  05AF  0873               	movf	??_UARTSendString,w
  2157  05B0  0084               	movwf	4
  2158  05B1  1383               	bcf	3,7	;select IRP bank0
  2159  05B2  0800               	movf	0,w
  2160  05B3  1D03               	btfss	3,2
  2161  05B4  2DB6               	goto	u881
  2162  05B5  2DB7               	goto	u880
  2163  05B6                     u881:
  2164  05B6  2D9B               	goto	l1510
  2165  05B7                     u880:
  2166  05B7                     l197:
  2167  05B7  0008               	return
  2168  05B8                     __end_of_UARTSendString:
  2169                           
  2170                           	psect	text5
  2171  05DB                     __ptext5:	
  2172 ;; *************** function _UARTSendChar *****************
  2173 ;; Defined at:
  2174 ;;		line 40 in file "UART.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  c               1    wreg     const unsigned char 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  c               1    2[COMMON] const unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0
  2191 ;;      Totals:         1       0       0       0       0
  2192 ;;Total ram usage:        1 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_UARTSendString
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _UARTSendChar
  2204  05DB                     _UARTSendChar:
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _UARTSendChar: [wreg]
  2208                           ;UARTSendChar@c stored from wreg
  2209  05DB  00F2               	movwf	UARTSendChar@c
  2210  05DC                     l1344:
  2211  05DC                     l188:	
  2212                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  2213                           
  2214  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2215  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2216  05DE  1C98               	btfss	24,1	;volatile
  2217  05DF  2DE1               	goto	u631
  2218  05E0  2DE2               	goto	u630
  2219  05E1                     u631:
  2220  05E1  2DDC               	goto	l188
  2221  05E2                     u630:
  2222  05E2                     l1346:
  2223                           
  2224                           ;UART.c: 42:     TXREG = c;
  2225  05E2  0872               	movf	UARTSendChar@c,w
  2226  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2227  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2228  05E5  0099               	movwf	25	;volatile
  2229  05E6                     l191:
  2230  05E6  0008               	return
  2231  05E7                     __end_of_UARTSendChar:
  2232                           
  2233                           	psect	text6
  2234  0575                     __ptext6:	
  2235 ;; *************** function _Setup *****************
  2236 ;; Defined at:
  2237 ;;		line 142 in file "main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    3
  2258 ;; This function calls:
  2259 ;;		_UARTInit
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _Setup
  2267  0575                     _Setup:
  2268  0575                     l1396:	
  2269                           ;incstack = 0
  2270                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  2271                           
  2272                           
  2273                           ;main.c: 144: 
  2274  0575  3000               	movlw	0
  2275  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0578  00DE               	movwf	UARTInit@baud_rate+3
  2278  0579  3000               	movlw	0
  2279  057A  00DD               	movwf	UARTInit@baud_rate+2
  2280  057B  3025               	movlw	37
  2281  057C  00DC               	movwf	UARTInit@baud_rate+1
  2282  057D  3080               	movlw	128
  2283  057E  00DB               	movwf	UARTInit@baud_rate
  2284  057F  01DF               	clrf	UARTInit@BRGH
  2285  0580  0ADF               	incf	UARTInit@BRGH,f
  2286  0581  120A  118A  235A  120A  118A  	fcall	_UARTInit
  2287  0586                     l1398:
  2288  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0588  0185               	clrf	5	;volatile
  2291  0589                     l1400:
  2292  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2293  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2294  058B  0185               	clrf	5	;volatile
  2295  058C                     l1402:
  2296  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2297  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2298  058E  0187               	clrf	7	;volatile
  2299  058F                     l1404:
  2300  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0591  0187               	clrf	7	;volatile
  2303  0592                     l1406:
  2304  0592  1683               	bsf	3,5	;RP0=1, select bank3
  2305  0593  1703               	bsf	3,6	;RP1=1, select bank3
  2306  0594  0188               	clrf	8	;volatile
  2307  0595                     l1408:
  2308  0595  0189               	clrf	9	;volatile
  2309  0596                     l68:
  2310  0596  0008               	return
  2311  0597                     __end_of_Setup:
  2312                           
  2313                           	psect	text7
  2314  035A                     __ptext7:	
  2315 ;; *************** function _UARTInit *****************
  2316 ;; Defined at:
  2317 ;;		line 9 in file "UART.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  2320 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       5       0       0       0
  2333 ;;      Locals:         0       0       0       0       0
  2334 ;;      Temps:          0       4       0       0       0
  2335 ;;      Totals:         0       9       0       0       0
  2336 ;;Total ram usage:        9 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    2
  2339 ;; This function calls:
  2340 ;;		___lldiv
  2341 ;; This function is called by:
  2342 ;;		_Setup
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _UARTInit
  2348  035A                     _UARTInit:
  2349  035A                     l1310:	
  2350                           ;incstack = 0
  2351                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  2352                           
  2353                           
  2354                           ;UART.c: 11:     if (BRGH == 0) {
  2355  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2356  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2357  035C  085F               	movf	UARTInit@BRGH,w
  2358  035D  1D03               	btfss	3,2
  2359  035E  2B60               	goto	u581
  2360  035F  2B61               	goto	u580
  2361  0360                     u581:
  2362  0360  2B8E               	goto	l1316
  2363  0361                     u580:
  2364  0361                     l1312:
  2365                           
  2366                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  2367  0361  085B               	movf	UARTInit@baud_rate,w
  2368  0362  00E0               	movwf	??_UARTInit
  2369  0363  085C               	movf	UARTInit@baud_rate+1,w
  2370  0364  00E1               	movwf	??_UARTInit+1
  2371  0365  085D               	movf	UARTInit@baud_rate+2,w
  2372  0366  00E2               	movwf	??_UARTInit+2
  2373  0367  085E               	movf	UARTInit@baud_rate+3,w
  2374  0368  00E3               	movwf	??_UARTInit+3
  2375  0369  3006               	movlw	6
  2376  036A                     u595:
  2377  036A  1003               	clrc
  2378  036B  0DE0               	rlf	??_UARTInit,f
  2379  036C  0DE1               	rlf	??_UARTInit+1,f
  2380  036D  0DE2               	rlf	??_UARTInit+2,f
  2381  036E  0DE3               	rlf	??_UARTInit+3,f
  2382  036F                     u590:
  2383  036F  3EFF               	addlw	-1
  2384  0370  1D03               	skipz
  2385  0371  2B6A               	goto	u595
  2386  0372  0863               	movf	??_UARTInit+3,w
  2387  0373  00F5               	movwf	___lldiv@divisor+3
  2388  0374  0862               	movf	??_UARTInit+2,w
  2389  0375  00F4               	movwf	___lldiv@divisor+2
  2390  0376  0861               	movf	??_UARTInit+1,w
  2391  0377  00F3               	movwf	___lldiv@divisor+1
  2392  0378  0860               	movf	??_UARTInit,w
  2393  0379  00F2               	movwf	___lldiv@divisor
  2394  037A  3000               	movlw	0
  2395  037B  00F9               	movwf	___lldiv@dividend+3
  2396  037C  303D               	movlw	61
  2397  037D  00F8               	movwf	___lldiv@dividend+2
  2398  037E  3009               	movlw	9
  2399  037F  00F7               	movwf	___lldiv@dividend+1
  2400  0380  3000               	movlw	0
  2401  0381  00F6               	movwf	___lldiv@dividend
  2402  0382  120A  118A  23C9  120A  118A  	fcall	___lldiv
  2403  0387  0872               	movf	?___lldiv,w
  2404  0388  3EFF               	addlw	255
  2405  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2406  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2407  038B  0099               	movwf	25	;volatile
  2408  038C                     l1314:
  2409                           
  2410                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  2411  038C  1118               	bcf	24,2	;volatile
  2412                           
  2413                           ;UART.c: 14:     } else {
  2414  038D  2BBA               	goto	l1320
  2415  038E                     l1316:
  2416                           
  2417                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  2418  038E  085B               	movf	UARTInit@baud_rate,w
  2419  038F  00E0               	movwf	??_UARTInit
  2420  0390  085C               	movf	UARTInit@baud_rate+1,w
  2421  0391  00E1               	movwf	??_UARTInit+1
  2422  0392  085D               	movf	UARTInit@baud_rate+2,w
  2423  0393  00E2               	movwf	??_UARTInit+2
  2424  0394  085E               	movf	UARTInit@baud_rate+3,w
  2425  0395  00E3               	movwf	??_UARTInit+3
  2426  0396  3004               	movlw	4
  2427  0397                     u605:
  2428  0397  1003               	clrc
  2429  0398  0DE0               	rlf	??_UARTInit,f
  2430  0399  0DE1               	rlf	??_UARTInit+1,f
  2431  039A  0DE2               	rlf	??_UARTInit+2,f
  2432  039B  0DE3               	rlf	??_UARTInit+3,f
  2433  039C                     u600:
  2434  039C  3EFF               	addlw	-1
  2435  039D  1D03               	skipz
  2436  039E  2B97               	goto	u605
  2437  039F  0863               	movf	??_UARTInit+3,w
  2438  03A0  00F5               	movwf	___lldiv@divisor+3
  2439  03A1  0862               	movf	??_UARTInit+2,w
  2440  03A2  00F4               	movwf	___lldiv@divisor+2
  2441  03A3  0861               	movf	??_UARTInit+1,w
  2442  03A4  00F3               	movwf	___lldiv@divisor+1
  2443  03A5  0860               	movf	??_UARTInit,w
  2444  03A6  00F2               	movwf	___lldiv@divisor
  2445  03A7  3000               	movlw	0
  2446  03A8  00F9               	movwf	___lldiv@dividend+3
  2447  03A9  303D               	movlw	61
  2448  03AA  00F8               	movwf	___lldiv@dividend+2
  2449  03AB  3009               	movlw	9
  2450  03AC  00F7               	movwf	___lldiv@dividend+1
  2451  03AD  3000               	movlw	0
  2452  03AE  00F6               	movwf	___lldiv@dividend
  2453  03AF  120A  118A  23C9  120A  118A  	fcall	___lldiv
  2454  03B4  0872               	movf	?___lldiv,w
  2455  03B5  3EFF               	addlw	255
  2456  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2457  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2458  03B8  0099               	movwf	25	;volatile
  2459  03B9                     l1318:
  2460                           
  2461                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2462  03B9  1518               	bsf	24,2	;volatile
  2463  03BA                     l1320:
  2464                           
  2465                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  2466  03BA  1318               	bcf	24,6	;volatile
  2467  03BB                     l1322:
  2468                           
  2469                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  2470  03BB  1698               	bsf	24,5	;volatile
  2471  03BC                     l1324:
  2472                           
  2473                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  2474  03BC  1218               	bcf	24,4	;volatile
  2475  03BD                     l1326:
  2476                           
  2477                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  2478  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2479  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2480  03BF  1798               	bsf	24,7	;volatile
  2481  03C0                     l1328:
  2482                           
  2483                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  2484  03C0  1318               	bcf	24,6	;volatile
  2485  03C1                     l1330:
  2486                           
  2487                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  2488  03C1  1618               	bsf	24,4	;volatile
  2489  03C2                     l1332:
  2490                           
  2491                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  2492  03C2  1118               	bcf	24,2	;volatile
  2493  03C3                     l1334:
  2494                           
  2495                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  2496  03C3  1098               	bcf	24,1	;volatile
  2497  03C4                     l1336:
  2498                           
  2499                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  2500  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2501  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2502  03C6  1787               	bsf	7,7	;volatile
  2503  03C7                     l1338:
  2504                           
  2505                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  2506  03C7  1307               	bcf	7,6	;volatile
  2507  03C8                     l185:
  2508  03C8  0008               	return
  2509  03C9                     __end_of_UARTInit:
  2510                           
  2511                           	psect	text8
  2512  05B8                     __ptext8:	
  2513 ;; *************** function _I2C_Start *****************
  2514 ;; Defined at:
  2515 ;;		line 108 in file "I2C.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  add             1    wreg     unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  add             1    6[COMMON] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       0       0       0       0
  2530 ;;      Locals:         1       0       0       0       0
  2531 ;;      Temps:          2       0       0       0       0
  2532 ;;      Totals:         3       0       0       0       0
  2533 ;;Total ram usage:        3 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		_I2C_Master_Wait
  2538 ;;		_I2C_Master_Write
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _I2C_Start
  2546  05B8                     _I2C_Start:
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2550                           ;I2C_Start@add stored from wreg
  2551  05B8  00F6               	movwf	I2C_Start@add
  2552  05B9                     l1424:
  2553                           
  2554                           ;I2C.c: 109:     I2C_Master_Wait();
  2555  05B9  120A  118A  25CE  120A  118A  	fcall	_I2C_Master_Wait
  2556  05BE                     l1426:
  2557                           
  2558                           ;I2C.c: 110:     SEN = 1;
  2559  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  2560  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  2561  05C0  1411               	bsf	17,0	;volatile
  2562                           
  2563                           ;I2C.c: 111:     I2C_Master_Write(add);
  2564  05C1  0876               	movf	I2C_Start@add,w
  2565  05C2  00F4               	movwf	??_I2C_Start
  2566  05C3  01F5               	clrf	??_I2C_Start+1
  2567  05C4  0874               	movf	??_I2C_Start,w
  2568  05C5  00F2               	movwf	I2C_Master_Write@d
  2569  05C6  0875               	movf	??_I2C_Start+1,w
  2570  05C7  00F3               	movwf	I2C_Master_Write@d+1
  2571  05C8  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Write
  2572  05CD                     l143:
  2573  05CD  0008               	return
  2574  05CE                     __end_of_I2C_Start:
  2575                           
  2576                           	psect	text9
  2577  05E7                     __ptext9:	
  2578 ;; *************** function _I2C_Master_Write *****************
  2579 ;; Defined at:
  2580 ;;		line 66 in file "I2C.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  d               2    2[COMMON] unsigned int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         2       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    2
  2601 ;; This function calls:
  2602 ;;		_I2C_Master_Wait
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;;		_I2C_Start
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _I2C_Master_Write
  2611  05E7                     _I2C_Master_Write:
  2612  05E7                     l1306:	
  2613                           ;incstack = 0
  2614                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2615                           
  2616                           
  2617                           ;I2C.c: 67:     I2C_Master_Wait();
  2618  05E7  120A  118A  25CE  120A  118A  	fcall	_I2C_Master_Wait
  2619  05EC                     l1308:
  2620                           
  2621                           ;I2C.c: 68:     SSPBUF = d;
  2622  05EC  0872               	movf	I2C_Master_Write@d,w
  2623  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2624  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2625  05EF  0093               	movwf	19	;volatile
  2626  05F0                     l132:
  2627  05F0  0008               	return
  2628  05F1                     __end_of_I2C_Master_Write:
  2629                           
  2630                           	psect	text10
  2631  054E                     __ptext10:	
  2632 ;; *************** function _I2C_Read *****************
  2633 ;; Defined at:
  2634 ;;		line 114 in file "I2C.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  ACK_NACK        1    wreg     unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  ACK_NACK        1    3[COMMON] unsigned char 
  2639 ;;  Data            1    4[COMMON] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      unsigned char 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0
  2652 ;;      Totals:         3       0       0       0       0
  2653 ;;Total ram usage:        3 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		_I2C_ACK
  2658 ;;		_I2C_NACK
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _I2C_Read
  2666  054E                     _I2C_Read:
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2670                           ;I2C_Read@ACK_NACK stored from wreg
  2671  054E  00F3               	movwf	I2C_Read@ACK_NACK
  2672  054F                     l1432:
  2673                           
  2674                           ;I2C.c: 116:     unsigned char Data;;I2C.c: 117:     RCEN = 1;
  2675  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0551  1591               	bsf	17,3	;volatile
  2678  0552                     l146:	
  2679                           ;I2C.c: 118:     while (!BF);
  2680                           
  2681  0552  1C14               	btfss	20,0	;volatile
  2682  0553  2D55               	goto	u781
  2683  0554  2D56               	goto	u780
  2684  0555                     u781:
  2685  0555  2D52               	goto	l146
  2686  0556                     u780:
  2687  0556                     l1434:
  2688                           
  2689                           ;I2C.c: 119:     Data = SSPBUF;
  2690  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0558  0813               	movf	19,w	;volatile
  2693  0559  00F2               	movwf	??_I2C_Read
  2694  055A  0872               	movf	??_I2C_Read,w
  2695  055B  00F4               	movwf	I2C_Read@Data
  2696  055C                     l1436:
  2697                           
  2698                           ;I2C.c: 120:     if (ACK_NACK == 0)
  2699  055C  0873               	movf	I2C_Read@ACK_NACK,w
  2700  055D  1D03               	btfss	3,2
  2701  055E  2D60               	goto	u791
  2702  055F  2D61               	goto	u790
  2703  0560                     u791:
  2704  0560  2D67               	goto	l1440
  2705  0561                     u790:
  2706  0561                     l1438:
  2707                           
  2708                           ;I2C.c: 121:         I2C_ACK();
  2709  0561  120A  118A  25FA  120A  118A  	fcall	_I2C_ACK
  2710  0566  2D6C               	goto	l151
  2711  0567                     l1440:
  2712                           
  2713                           ;I2C.c: 123:         I2C_NACK();
  2714  0567  120A  118A  25F1  120A  118A  	fcall	_I2C_NACK
  2715  056C                     l151:
  2716  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2717  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2718  056E  1D8C               	btfss	12,3	;volatile
  2719  056F  2D71               	goto	u801
  2720  0570  2D72               	goto	u800
  2721  0571                     u801:
  2722  0571  2D6C               	goto	l151
  2723  0572                     u800:
  2724  0572                     l153:
  2725                           
  2726                           ;I2C.c: 125:     SSPIF = 0;
  2727  0572  118C               	bcf	12,3	;volatile
  2728  0573                     l1442:
  2729                           
  2730                           ;I2C.c: 126:     return Data;
  2731  0573  0874               	movf	I2C_Read@Data,w
  2732  0574                     l154:
  2733  0574  0008               	return
  2734  0575                     __end_of_I2C_Read:
  2735                           
  2736                           	psect	text11
  2737  05F1                     __ptext11:	
  2738 ;; *************** function _I2C_NACK *****************
  2739 ;; Defined at:
  2740 ;;		line 135 in file "I2C.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		None
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_I2C_Read
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function _I2C_NACK
  2770  05F1                     _I2C_NACK:
  2771  05F1                     l1342:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _I2C_NACK: []
  2774                           
  2775                           
  2776                           ;I2C.c: 136:     ACKDT = 1;
  2777  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  2778  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  2779  05F3  1691               	bsf	17,5	;volatile
  2780                           
  2781                           ;I2C.c: 137:     ACKEN = 1;
  2782  05F4  1611               	bsf	17,4	;volatile
  2783  05F5                     l163:	
  2784                           ;I2C.c: 138:     while (ACKEN);
  2785                           
  2786  05F5  1A11               	btfsc	17,4	;volatile
  2787  05F6  2DF8               	goto	u621
  2788  05F7  2DF9               	goto	u620
  2789  05F8                     u621:
  2790  05F8  2DF5               	goto	l163
  2791  05F9                     u620:
  2792  05F9                     l166:
  2793  05F9  0008               	return
  2794  05FA                     __end_of_I2C_NACK:
  2795                           
  2796                           	psect	text12
  2797  05FA                     __ptext12:	
  2798 ;; *************** function _I2C_ACK *****************
  2799 ;; Defined at:
  2800 ;;		line 129 in file "I2C.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		None
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    1
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_I2C_Read
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           
  2829                           ;psect for function _I2C_ACK
  2830  05FA                     _I2C_ACK:
  2831  05FA                     l1340:	
  2832                           ;incstack = 0
  2833                           ; Regs used in _I2C_ACK: []
  2834                           
  2835                           
  2836                           ;I2C.c: 130:     ACKDT = 0;
  2837  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2838  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2839  05FC  1291               	bcf	17,5	;volatile
  2840                           
  2841                           ;I2C.c: 131:     ACKEN = 1;
  2842  05FD  1611               	bsf	17,4	;volatile
  2843  05FE                     l157:	
  2844                           ;I2C.c: 132:     while (ACKEN);
  2845                           
  2846  05FE  1A11               	btfsc	17,4	;volatile
  2847  05FF  2E01               	goto	u611
  2848  0600  2E02               	goto	u610
  2849  0601                     u611:
  2850  0601  2DFE               	goto	l157
  2851  0602                     u610:
  2852  0602                     l160:
  2853  0602  0008               	return
  2854  0603                     __end_of_I2C_ACK:
  2855                           
  2856                           	psect	text13
  2857  0603                     __ptext13:	
  2858 ;; *************** function _I2C_Master_Stop *****************
  2859 ;; Defined at:
  2860 ;;		line 56 in file "I2C.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    2
  2881 ;; This function calls:
  2882 ;;		_I2C_Master_Wait
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _I2C_Master_Stop
  2890  0603                     _I2C_Master_Stop:
  2891  0603                     l1428:	
  2892                           ;incstack = 0
  2893                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2894                           
  2895                           
  2896                           ;I2C.c: 57:     I2C_Master_Wait();
  2897  0603  120A  118A  25CE  120A  118A  	fcall	_I2C_Master_Wait
  2898  0608                     l1430:
  2899                           
  2900                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2901  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2902  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2903  060A  1511               	bsf	17,2	;volatile
  2904  060B                     l129:
  2905  060B  0008               	return
  2906  060C                     __end_of_I2C_Master_Stop:
  2907                           
  2908                           	psect	text14
  2909  05CE                     __ptext14:	
  2910 ;; *************** function _I2C_Master_Wait *****************
  2911 ;; Defined at:
  2912 ;;		line 33 in file "I2C.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2926 ;;      Params:         0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;;		_I2C_Master_Stop
  2938 ;;		_I2C_Master_Write
  2939 ;;		_I2C_Start
  2940 ;;		_I2C_Master_Start
  2941 ;;		_I2C_Master_RepeatedStart
  2942 ;;		_I2C_Master_Read
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _I2C_Master_Wait
  2948  05CE                     _I2C_Master_Wait:
  2949  05CE                     l1278:	
  2950                           ;incstack = 0
  2951                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2952                           
  2953  05CE                     l117:	
  2954                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2955                           
  2956  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  2957  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  2958  05D0  1914               	btfsc	20,2	;volatile
  2959  05D1  2DD3               	goto	u491
  2960  05D2  2DD4               	goto	u490
  2961  05D3                     u491:
  2962  05D3  2DCE               	goto	l117
  2963  05D4                     u490:
  2964  05D4                     l1280:
  2965  05D4  0811               	movf	17,w	;volatile
  2966  05D5  391F               	andlw	31
  2967  05D6  1D03               	btfss	3,2
  2968  05D7  2DD9               	goto	u501
  2969  05D8  2DDA               	goto	u500
  2970  05D9                     u501:
  2971  05D9  2DCE               	goto	l117
  2972  05DA                     u500:
  2973  05DA                     l120:
  2974  05DA  0008               	return
  2975  05DB                     __end_of_I2C_Master_Wait:
  2976                           
  2977                           	psect	text15
  2978  0516                     __ptext15:	
  2979 ;; *************** function _I2C_Master_Init *****************
  2980 ;; Defined at:
  2981 ;;		line 17 in file "I2C.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  c               4    5[BANK0 ] const unsigned long 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       4       0       0       0
  2996 ;;      Locals:         0       0       0       0       0
  2997 ;;      Temps:          0       4       0       0       0
  2998 ;;      Totals:         0       8       0       0       0
  2999 ;;Total ram usage:        8 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    2
  3002 ;; This function calls:
  3003 ;;		___lldiv
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _I2C_Master_Init
  3011  0516                     _I2C_Master_Init:
  3012  0516                     l1412:	
  3013                           ;incstack = 0
  3014                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3015                           
  3016                           
  3017                           ;I2C.c: 18:     SSPCON = 0b00101000;
  3018  0516  3028               	movlw	40
  3019  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0519  0094               	movwf	20	;volatile
  3022  051A                     l1414:
  3023                           
  3024                           ;I2C.c: 19:     SSPCON2 = 0;
  3025  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3026  051B  1303               	bcf	3,6	;RP1=0, select bank1
  3027  051C  0191               	clrf	17	;volatile
  3028  051D                     l1416:
  3029                           
  3030                           ;I2C.c: 20:     SSPADD = (4000000 / (4 * c)) - 1;
  3031  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3032  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3033  051F  085B               	movf	I2C_Master_Init@c,w
  3034  0520  00DF               	movwf	??_I2C_Master_Init
  3035  0521  085C               	movf	I2C_Master_Init@c+1,w
  3036  0522  00E0               	movwf	??_I2C_Master_Init+1
  3037  0523  085D               	movf	I2C_Master_Init@c+2,w
  3038  0524  00E1               	movwf	??_I2C_Master_Init+2
  3039  0525  085E               	movf	I2C_Master_Init@c+3,w
  3040  0526  00E2               	movwf	??_I2C_Master_Init+3
  3041  0527  3002               	movlw	2
  3042  0528                     u775:
  3043  0528  1003               	clrc
  3044  0529  0DDF               	rlf	??_I2C_Master_Init,f
  3045  052A  0DE0               	rlf	??_I2C_Master_Init+1,f
  3046  052B  0DE1               	rlf	??_I2C_Master_Init+2,f
  3047  052C  0DE2               	rlf	??_I2C_Master_Init+3,f
  3048  052D                     u770:
  3049  052D  3EFF               	addlw	-1
  3050  052E  1D03               	skipz
  3051  052F  2D28               	goto	u775
  3052  0530  0862               	movf	??_I2C_Master_Init+3,w
  3053  0531  00F5               	movwf	___lldiv@divisor+3
  3054  0532  0861               	movf	??_I2C_Master_Init+2,w
  3055  0533  00F4               	movwf	___lldiv@divisor+2
  3056  0534  0860               	movf	??_I2C_Master_Init+1,w
  3057  0535  00F3               	movwf	___lldiv@divisor+1
  3058  0536  085F               	movf	??_I2C_Master_Init,w
  3059  0537  00F2               	movwf	___lldiv@divisor
  3060  0538  3000               	movlw	0
  3061  0539  00F9               	movwf	___lldiv@dividend+3
  3062  053A  303D               	movlw	61
  3063  053B  00F8               	movwf	___lldiv@dividend+2
  3064  053C  3009               	movlw	9
  3065  053D  00F7               	movwf	___lldiv@dividend+1
  3066  053E  3000               	movlw	0
  3067  053F  00F6               	movwf	___lldiv@dividend
  3068  0540  120A  118A  23C9  120A  118A  	fcall	___lldiv
  3069  0545  0872               	movf	?___lldiv,w
  3070  0546  3EFF               	addlw	255
  3071  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3073  0549  0093               	movwf	19	;volatile
  3074  054A                     l1418:
  3075                           
  3076                           ;I2C.c: 21:     SSPSTAT = 0;
  3077  054A  0194               	clrf	20	;volatile
  3078  054B                     l1420:
  3079                           
  3080                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3081  054B  1587               	bsf	7,3	;volatile
  3082  054C                     l1422:
  3083                           
  3084                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3085  054C  1607               	bsf	7,4	;volatile
  3086  054D                     l114:
  3087  054D  0008               	return
  3088  054E                     __end_of_I2C_Master_Init:
  3089                           
  3090                           	psect	text16
  3091  03C9                     __ptext16:	
  3092 ;; *************** function ___lldiv *****************
  3093 ;; Defined at:
  3094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  divisor         4    2[COMMON] unsigned long 
  3097 ;;  dividend        4    6[COMMON] unsigned long 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  quotient        4    0[BANK0 ] unsigned long 
  3100 ;;  counter         1    4[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  4    2[COMMON] unsigned long 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         8       0       0       0       0
  3111 ;;      Locals:         0       5       0       0       0
  3112 ;;      Temps:          1       0       0       0       0
  3113 ;;      Totals:         9       5       0       0       0
  3114 ;;Total ram usage:       14 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_I2C_Master_Init
  3121 ;;		_UARTInit
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function ___lldiv
  3127  03C9                     ___lldiv:
  3128  03C9                     l1282:	
  3129                           ;incstack = 0
  3130                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3131                           
  3132  03C9  3000               	movlw	0
  3133  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3134  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3135  03CC  00D9               	movwf	___lldiv@quotient+3
  3136  03CD  3000               	movlw	0
  3137  03CE  00D8               	movwf	___lldiv@quotient+2
  3138  03CF  3000               	movlw	0
  3139  03D0  00D7               	movwf	___lldiv@quotient+1
  3140  03D1  3000               	movlw	0
  3141  03D2  00D6               	movwf	___lldiv@quotient
  3142  03D3  0875               	movf	___lldiv@divisor+3,w
  3143  03D4  0474               	iorwf	___lldiv@divisor+2,w
  3144  03D5  0473               	iorwf	___lldiv@divisor+1,w
  3145  03D6  0472               	iorwf	___lldiv@divisor,w
  3146  03D7  1903               	skipnz
  3147  03D8  2BDA               	goto	u511
  3148  03D9  2BDB               	goto	u510
  3149  03DA                     u511:
  3150  03DA  2C28               	goto	l1302
  3151  03DB                     u510:
  3152  03DB                     l1284:
  3153  03DB  01DA               	clrf	___lldiv@counter
  3154  03DC  0ADA               	incf	___lldiv@counter,f
  3155  03DD  2BEB               	goto	l1288
  3156  03DE                     l1286:
  3157  03DE  3001               	movlw	1
  3158  03DF  00FA               	movwf	??___lldiv
  3159  03E0                     u525:
  3160  03E0  1003               	clrc
  3161  03E1  0DF2               	rlf	___lldiv@divisor,f
  3162  03E2  0DF3               	rlf	___lldiv@divisor+1,f
  3163  03E3  0DF4               	rlf	___lldiv@divisor+2,f
  3164  03E4  0DF5               	rlf	___lldiv@divisor+3,f
  3165  03E5  0BFA               	decfsz	??___lldiv,f
  3166  03E6  2BE0               	goto	u525
  3167  03E7  3001               	movlw	1
  3168  03E8  00FA               	movwf	??___lldiv
  3169  03E9  087A               	movf	??___lldiv,w
  3170  03EA  07DA               	addwf	___lldiv@counter,f
  3171  03EB                     l1288:
  3172  03EB  1FF5               	btfss	___lldiv@divisor+3,7
  3173  03EC  2BEE               	goto	u531
  3174  03ED  2BEF               	goto	u530
  3175  03EE                     u531:
  3176  03EE  2BDE               	goto	l1286
  3177  03EF                     u530:
  3178  03EF                     l1290:
  3179  03EF  3001               	movlw	1
  3180  03F0  00FA               	movwf	??___lldiv
  3181  03F1                     u545:
  3182  03F1  1003               	clrc
  3183  03F2  0DD6               	rlf	___lldiv@quotient,f
  3184  03F3  0DD7               	rlf	___lldiv@quotient+1,f
  3185  03F4  0DD8               	rlf	___lldiv@quotient+2,f
  3186  03F5  0DD9               	rlf	___lldiv@quotient+3,f
  3187  03F6  0BFA               	decfsz	??___lldiv,f
  3188  03F7  2BF1               	goto	u545
  3189  03F8                     l1292:
  3190  03F8  0875               	movf	___lldiv@divisor+3,w
  3191  03F9  0279               	subwf	___lldiv@dividend+3,w
  3192  03FA  1D03               	skipz
  3193  03FB  2C06               	goto	u555
  3194  03FC  0874               	movf	___lldiv@divisor+2,w
  3195  03FD  0278               	subwf	___lldiv@dividend+2,w
  3196  03FE  1D03               	skipz
  3197  03FF  2C06               	goto	u555
  3198  0400  0873               	movf	___lldiv@divisor+1,w
  3199  0401  0277               	subwf	___lldiv@dividend+1,w
  3200  0402  1D03               	skipz
  3201  0403  2C06               	goto	u555
  3202  0404  0872               	movf	___lldiv@divisor,w
  3203  0405  0276               	subwf	___lldiv@dividend,w
  3204  0406                     u555:
  3205  0406  1C03               	skipc
  3206  0407  2C09               	goto	u551
  3207  0408  2C0A               	goto	u550
  3208  0409                     u551:
  3209  0409  2C19               	goto	l1298
  3210  040A                     u550:
  3211  040A                     l1294:
  3212  040A  0872               	movf	___lldiv@divisor,w
  3213  040B  02F6               	subwf	___lldiv@dividend,f
  3214  040C  0873               	movf	___lldiv@divisor+1,w
  3215  040D  1C03               	skipc
  3216  040E  0F73               	incfsz	___lldiv@divisor+1,w
  3217  040F  02F7               	subwf	___lldiv@dividend+1,f
  3218  0410  0874               	movf	___lldiv@divisor+2,w
  3219  0411  1C03               	skipc
  3220  0412  0F74               	incfsz	___lldiv@divisor+2,w
  3221  0413  02F8               	subwf	___lldiv@dividend+2,f
  3222  0414  0875               	movf	___lldiv@divisor+3,w
  3223  0415  1C03               	skipc
  3224  0416  0F75               	incfsz	___lldiv@divisor+3,w
  3225  0417  02F9               	subwf	___lldiv@dividend+3,f
  3226  0418                     l1296:
  3227  0418  1456               	bsf	___lldiv@quotient,0
  3228  0419                     l1298:
  3229  0419  3001               	movlw	1
  3230  041A                     u565:
  3231  041A  1003               	clrc
  3232  041B  0CF5               	rrf	___lldiv@divisor+3,f
  3233  041C  0CF4               	rrf	___lldiv@divisor+2,f
  3234  041D  0CF3               	rrf	___lldiv@divisor+1,f
  3235  041E  0CF2               	rrf	___lldiv@divisor,f
  3236  041F  3EFF               	addlw	-1
  3237  0420  1D03               	skipz
  3238  0421  2C1A               	goto	u565
  3239  0422                     l1300:
  3240  0422  3001               	movlw	1
  3241  0423  02DA               	subwf	___lldiv@counter,f
  3242  0424  1D03               	btfss	3,2
  3243  0425  2C27               	goto	u571
  3244  0426  2C28               	goto	u570
  3245  0427                     u571:
  3246  0427  2BEF               	goto	l1290
  3247  0428                     u570:
  3248  0428                     l1302:
  3249  0428  0859               	movf	___lldiv@quotient+3,w
  3250  0429  00F5               	movwf	?___lldiv+3
  3251  042A  0858               	movf	___lldiv@quotient+2,w
  3252  042B  00F4               	movwf	?___lldiv+2
  3253  042C  0857               	movf	___lldiv@quotient+1,w
  3254  042D  00F3               	movwf	?___lldiv+1
  3255  042E  0856               	movf	___lldiv@quotient,w
  3256  042F  00F2               	movwf	?___lldiv
  3257  0430                     l368:
  3258  0430  0008               	return
  3259  0431                     __end_of___lldiv:
  3260                           
  3261                           	psect	text17
  3262  0614                     __ptext17:	
  3263 ;; *************** function _ISR *****************
  3264 ;; Defined at:
  3265 ;;		line 49 in file "main.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		None
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0
  3281 ;;      Temps:          2       0       0       0       0
  3282 ;;      Totals:         2       0       0       0       0
  3283 ;;Total ram usage:        2 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		Interrupt level 1
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _ISR
  3294  0614                     _ISR:
  3295  0614                     i1l57:
  3296  0614  0871               	movf	??_ISR+1,w
  3297  0615  008A               	movwf	10
  3298  0616  0E70               	swapf	??_ISR,w
  3299  0617  0083               	movwf	3
  3300  0618  0EFE               	swapf	btemp,f
  3301  0619  0E7E               	swapf	btemp,w
  3302  061A  0009               	retfie
  3303  061B                     __end_of_ISR:
  3304  007E                     btemp	set	126	;btemp
  3305  007E                     wtemp0	set	126
  3306                           
  3307                           	psect	intentry
  3308  0004                     __pintentry:	
  3309                           ;incstack = 0
  3310                           ; Regs used in _ISR: []
  3311                           
  3312  0004                     interrupt_function:
  3313  007E                     saved_w	set	btemp
  3314  0004  00FE               	movwf	btemp
  3315  0005  0E03               	swapf	3,w
  3316  0006  00F0               	movwf	??_ISR
  3317  0007  080A               	movf	10,w
  3318  0008  00F1               	movwf	??_ISR+1
  3319  0009  120A  118A  2E14   	ljmp	_ISR
  3320                           
  3321                           	psect	config
  3322                           
  3323                           ;Config register CONFIG1 @ 0x2007
  3324                           ;	Oscillator Selection bits
  3325                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3326                           ;	Watchdog Timer Enable bit
  3327                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3328                           ;	Power-up Timer Enable bit
  3329                           ;	PWRTE = OFF, PWRT disabled
  3330                           ;	RE3/MCLR pin function select bit
  3331                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3332                           ;	Code Protection bit
  3333                           ;	CP = OFF, Program memory code protection is disabled
  3334                           ;	Data Code Protection bit
  3335                           ;	CPD = OFF, Data memory code protection is disabled
  3336                           ;	Brown Out Reset Selection bits
  3337                           ;	BOREN = OFF, BOR disabled
  3338                           ;	Internal External Switchover bit
  3339                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3340                           ;	Fail-Safe Clock Monitor Enabled bit
  3341                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3342                           ;	Low Voltage Programming Enable bit
  3343                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3344                           ;	In-Circuit Debugger Mode bit
  3345                           ;	DEBUG = 0x1, unprogrammed default
  3346  2007                     	org	8199
  3347  2007  20D4               	dw	8404
  3348                           
  3349                           ;Config register CONFIG2 @ 0x2008
  3350                           ;	Brown-out Reset Selection bit
  3351                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3352                           ;	Flash Program Memory Self Write Enable bits
  3353                           ;	WRT = OFF, Write protection off
  3354  2008                     	org	8200
  3355  2008  3FFF               	dw	16383

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     21      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> buf(BANK0[40]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(COMMON[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5695
                                             17 BANK0      4     4      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                    _I2C_Master_Wait
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                              _Setup
                     _UARTSendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1865
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     4      0     343
                                              3 COMMON     4     4      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     836
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            3     3      0     956
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              2 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read
     _I2C_ACK
     _I2C_NACK
   _I2C_Start
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Setup
     _UARTInit
       ___lldiv
   _UARTSendString
     _UARTSendChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      57       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      57      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 01 22:10:42 2021

        UARTInit@baud_rate 005B                          _T 0020                          pc 0002  
       __size_of_I2C_Start 0016                         _BF 04A0                         l68 0596  
                       _Ax 002C                         _Ay 002A                         _Az 0028  
                       _Gx 0026                         _Gy 0024                         _Gz 0022  
                       fsr 0004                        l120 05DA                        l114 054D  
                      l132 05F0                        l117 05CE                        l151 056C  
                      l143 05CD                        l160 0602                        l129 060B  
                      l153 0572                        l154 0574                        l146 0552  
                      l163 05F5                        l157 05FE                        l166 05F9  
                      l191 05E6                        l328 0359                        l185 03C8  
                      l188 05DC                        l604 04D9                        l197 05B7  
                      l614 0515                        l368 0430                        _GIE 005F  
                      u500 05DA                        u501 05D9                        u510 03DB  
                      u511 03DA                        u600 039C                        u530 03EF  
                      u610 0602                        u531 03EE                        u611 0601  
                      u620 05F9                        u700 04D5                        _ISR 0614  
                      u525 03E0                        u621 05F8                        u605 0397  
                      u701 04D4                        u550 040A                        u630 05E2  
                      u710 04E2                        u551 0409                        u631 05E1  
                      u711 04E1                        u800 0572                        u640 049E  
                      u545 03F1                        u801 0571                        u641 049D  
                      u570 0428                        u490 05D4                        u730 04F4  
                      u810 027E                        u571 0427                        u555 0406  
                      u491 05D3                        u731 04F3                        u811 027D  
                      u580 0361                        u660 04B0                        u740 04FE  
                      u820 02B8                        _SEN 0488                        u565 041A  
                      u581 0360                        u661 04AF                        u741 04FD  
                      u725 04E6                        u821 02B7                        u590 036F  
                      u830 02DE                        u655 04A2                        u831 02DD  
                      u680 04C1                        u760 0511                        u840 02E9  
                      u904 00D8                        u681 04C0                        u761 0510  
                      u745 04FA                        u841 02E8                        u770 052D  
                      u850 02EF                        u595 036A                        u675 04B1  
                      u755 0505                        u851 02EE                        u835 02DA  
                      u780 0556                        u860 0343                        u781 0555  
                      u685 04BD                        u861 0342                        u790 0561  
                      u870 0355                        u775 0528                        u791 0560  
                      u695 04C9                        u871 0354                        u927 0027  
                      u880 05B7                        u881 05B6                        u937 00DE  
                      u890 00D5                        u891 00D1            __end_of_I2C_ACK 0603  
                      _buf 002E                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1300 0422                       l1302 0428  
                     l1310 035A                       l1320 03BA                       l1312 0361  
                     l1400 0589                       l1306 05E7                       l1330 03C1  
                     l1322 03BB                       l1314 038C                       l1402 058C  
                     l1420 054B                       l1412 0516                       l1340 05FA  
                     l1308 05EC                       l1332 03C2                       l1324 03BC  
                     l1316 038E                       l1404 058F                       l1500 0355  
                     l1422 054C                       l1414 051A                       l1430 0608  
                     l1342 05F1                       l1334 03C3                       l1326 03BD  
                     l1318 03B9                       l1406 0592                       l1510 059B  
                     l1350 0498                       l1416 051D                       l1280 05D4  
                     l1440 0567                       l1432 054F                       l1424 05B9  
                     l1336 03C4                       l1328 03C0                       l1408 0595  
                     l1344 05DC                       l1512 05A6                       l1360 04B0  
                     l1352 049E                       l1600 01FE                       l1520 002B  
                     l1290 03EF                       l1282 03C9                       l1418 054A  
                     l1442 0573                       l1434 0556                       l1426 05BE  
                     l1338 03C7                       l1346 05E2                       l1514 05AC  
                     l1362 04C1                       l1354 04A1                       l1370 04D5  
                     l1450 027E                       l1610 023A                       l1602 020E  
                     l1530 0057                       l1522 003A                       l1292 03F8  
                     l1284 03DB                       l1428 0603                       l1436 055C  
                     l1508 0598                       l1364 04C7                       l1356 04A8  
                     l1348 0496                       l1380 04EC                       l1460 02A8  
                     l1452 0285                       l1612 0240                       l1604 0214  
                     l1540 007A                       l1532 005D                       l1524 0040  
                     l1516 001C                       l1294 040A                       l1286 03DE  
                     l1278 05CE                       l1438 0561                       l1366 04C8  
                     l1358 04AC                       l1390 050B                       l1382 04F0  
                     l1374 04DA                       l1470 02C1                       l1462 02B0  
                     l1454 028A                       l1446 0273                       l1614 0250  
                     l1606 0224                       l1550 009F                       l1542 0083  
                     l1534 0066                       l1526 0049                       l1518 0021  
                     l1296 0418                       l1288 03EB                       l1368 04CF  
                     l1384 04F4                       l1376 04E2                       l1392 0511  
                     l1480 02DF                       l1464 02B4                       l1448 0278  
                     l1616 0256                       l1608 022A                       l1560 00C4  
                     l1552 00A7                       l1544 008B                       l1536 006F  
                     l1528 0052                       l1298 0419                       l1386 04FE  
                     l1378 04E5                       l1490 02FF                       l1482 02E9  
                     l1466 02B8                       l1458 028B                       l1618 0266  
                     l1570 00F2                       l1562 00C9                       l1554 00AC  
                     l1546 0090                       l1538 0074                       l1396 0575  
                     l1388 0504                       l1492 032F                       l1484 02EF  
                     l1476 02C3                       l1468 02BC                       l1660 029D  
                     l1580 013C                       l1572 00F7                       l1564 00D8  
                     l1556 00B2                       l1548 0096                       l1398 0586  
                     l1494 0336                       l1486 02F6                       l1590 01CD  
                     l1582 0159                       l1574 00FD                       l1566 00E3  
                     l1558 00BB                       l1496 033A                       l1488 02FA  
                     l1592 01D2                       l1584 0176                       l1576 011A  
                     l1568 00E9                       l1498 0343                       l1594 01E2  
                     l1586 0193                       l1578 011F                       l1596 01E8  
                     l1588 01B0                       l1598 01F8                       STR_1 0475  
                     STR_2 044E                       STR_3 0468                       STR_4 048C  
                     STR_5 0441                       STR_6 045B                       STR_7 0481  
                     _PEIE 005E                       _RCEN 048B                       i1l57 0614  
         __end_of_I2C_NACK 05FA                       _main 001C           __end_of_I2C_Read 0575  
                     btemp 007E                       start 000C                      ??_ISR 0070  
         ?_I2C_Master_Init 005B           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
                    _ANSEL 0188            __end_of___lldiv 0431            __end_of___lwdiv 04DA  
          __end_of___lwmod 0516                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTC 0007                      _TRISA 0085  
                    _TRISC 0087                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019           __end_of_UARTInit 03C9                      _Setup 0575  
          __end_of_dpowers 0441          __end_of_I2C_Start 05CE                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 035A  
          __initialization 000F               __end_of_main 0270                  ??_I2C_ACK 0072  
                   ??_main 0067          ?_I2C_Master_Write 0072                     ?_Setup 0070  
       ??_I2C_Master_Write 0074                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           I2C_Read@ACK_NACK 0073                  ??___lldiv 007A  
                ??___lwdiv 0076                  ??___lwmod 007A    __size_of_UARTSendString 0021  
                ?_I2C_NACK 0070                  ?_I2C_Read 0070                     saved_w 007E  
                ??_sprintf 005D    __end_of__initialization 0018             __pcstackCOMMON 0070  
            __end_of_Setup 0597                  ?_UARTInit 005B                 ??_I2C_NACK 0072  
               ??_I2C_Read 0072                    ??_Setup 007B                 __pbssBANK0 0020  
             I2C_Read@Data 0074                 __pmaintext 001C                 ??_UARTInit 0060  
               __pintentry 0004                    _I2C_ACK 05FA                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0431              ?_UARTSendChar 0070  
             I2C_Start@add 0076                  _I2C_Start 05B8                    ___lldiv 03C9  
                  ___lwdiv 0496                    ___lwmod 04DA             _UARTSendString 0597  
                  __ptext1 0270                    __ptext2 04DA                    __ptext3 0496  
                  __ptext4 0597                    __ptext5 05DB                    __ptext6 0575  
                  __ptext7 035A                    __ptext8 05B8                    __ptext9 05E7  
             __size_of_ISR 0007                    _dpowers 0437   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 0270  
                  clrloop0 060D       end_of_initialization 0018             ??_UARTSendChar 0072  
               ?_I2C_Start 0070  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072  
          ___lldiv@counter 005A                  _RCSTAbits 0018     __end_of_UARTSendString 05B8  
         I2C_Master_Init@c 005B                  _PORTAbits 0005          __size_of_I2C_NACK 0009  
                _TRISCbits 0087          __size_of_I2C_Read 0027                  _TXSTAbits 0098  
          ?_UARTSendString 0070          __size_of_UARTInit 006F        start_initialization 000F  
              __end_of_ISR 061B          ??_I2C_Master_Init 005F          ??_I2C_Master_Wait 0072  
        ??_I2C_Master_Stop 0072                ??_I2C_Start 0074                   ?_I2C_ACK 0070  
     __end_of_UARTSendChar 05E7                  ___latbits 0002              __pcstackBANK0 0056  
              sprintf@flag 0061                sprintf@prec 0062           _I2C_Master_Write 05E7  
         ___lwdiv@dividend 0074              UARTSendChar@c 0072                   ?___lldiv 0072  
                 ?___lwdiv 0072                   ?___lwmod 0056                  __pstrings 0431  
                 _I2C_NACK 05F1                   _I2C_Read 054E             __size_of_Setup 0022  
         ___lwdiv@quotient 0077                   ?_sprintf 005A          interrupt_function 0004  
                clear_ram0 060C            UARTSendString@i 0074                   _PIR1bits 000C  
                 _UARTInit 035A           __size_of_I2C_ACK 0009                __stringbase 0436  
         ??_UARTSendString 0073      __size_of_UARTSendChar 000C               UARTInit@BRGH 005F  
         __size_of___lldiv 0068           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 0437                 sprintf@val 0063            _I2C_Master_Init 0516  
          _I2C_Master_Wait 05CE            _I2C_Master_Stop 0603            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 054E                   __ptext11 05F1  
                 __ptext12 05FA                   __ptext13 0603                   __ptext14 05CE  
                 __ptext15 0516                   __ptext16 03C9                   __ptext17 0614  
         __size_of_sprintf 00EA               _UARTSendChar 05DB              __size_of_main 0254  
 __end_of_I2C_Master_Write 05F1          UARTSendString@str 0076                   intlevel1 0000  
                sprintf@ap 0060                  sprintf@sp 0065           ___lwmod@dividend 0058  
         ___lldiv@dividend 0076                  stringcode 0431    __end_of_I2C_Master_Init 054E  
  __end_of_I2C_Master_Wait 05DB    __end_of_I2C_Master_Stop 060C                   sprintf@c 0066  
                 sprintf@f 005A           ___lldiv@quotient 0056          I2C_Master_Write@d 0072  
          ___lwmod@divisor 0056            ___lwmod@counter 007B                   stringdir 0431  
                 stringtab 0431                _SSPCON2bits 0091  
