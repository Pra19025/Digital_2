

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 25 19:23:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	strings,global,class=STRING,delta=2,noexec
    28                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  001A                     _RCREG	set	26
   457  000C                     _PIR1bits	set	12
   458  0019                     _TXREG	set	25
   459  0018                     _RCSTAbits	set	24
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  0005                     _PORTA	set	5
   463  0005                     _PORTAbits	set	5
   464  0063                     _SSPIF	set	99
   465  005E                     _PEIE	set	94
   466  005F                     _GIE	set	95
   467  0098                     _TXSTAbits	set	152
   468  0099                     _SPBRG	set	153
   469  0091                     _SSPCON2bits	set	145
   470  0087                     _TRISCbits	set	135
   471  0094                     _SSPSTAT	set	148
   472  0093                     _SSPADD	set	147
   473  0091                     _SSPCON2	set	145
   474  0085                     _TRISA	set	133
   475  0463                     _SSPIE	set	1123
   476  043C                     _TRISC4	set	1084
   477  043B                     _TRISC3	set	1083
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	cinit
   482  000F                     start_initialization:	
   483                           ; #config settings
   484                           
   485  000F                     __initialization:
   486                           
   487                           ; Clear objects allocated to COMMON
   488  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   489  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   490  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493  0012  1283               	bcf	3,5	;RP0=0, select bank0
   494  0013  1303               	bcf	3,6	;RP1=0, select bank0
   495  0014  01B5               	clrf	__pbssBANK0& (0+127)
   496  0015  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   497  0016  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   498  0017  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   499  0018  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   500  0019  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   501  001A  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   502  001B  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   503  001C  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   504  001D  01BE               	clrf	(__pbssBANK0+9)& (0+127)
   505  001E  01BF               	clrf	(__pbssBANK0+10)& (0+127)
   506  001F  01C0               	clrf	(__pbssBANK0+11)& (0+127)
   507  0020  01C1               	clrf	(__pbssBANK0+12)& (0+127)
   508  0021  01C2               	clrf	(__pbssBANK0+13)& (0+127)
   509  0022                     end_of_initialization:	
   510                           ;End of C runtime variable initialization code
   511                           
   512  0022                     __end_of__initialization:
   513  0022  0183               	clrf	3
   514  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssCOMMON
   517  0079                     __pbssCOMMON:
   518  0079                     _Ayenvio:
   519  0079                     	ds	2
   520  007B                     _bandera:
   521  007B                     	ds	1
   522                           
   523                           	psect	bssBANK0
   524  0035                     __pbssBANK0:
   525  0035                     _Tenvio:
   526  0035                     	ds	2
   527  0037                     _Gzenvio:
   528  0037                     	ds	2
   529  0039                     _Gyenvio:
   530  0039                     	ds	2
   531  003B                     _Gxenvio:
   532  003B                     	ds	2
   533  003D                     _Azenvio:
   534  003D                     	ds	2
   535  003F                     _Axenvio:
   536  003F                     	ds	2
   537  0041                     _Ax:
   538  0041                     	ds	2
   539                           
   540                           	psect	cstackCOMMON
   541  0070                     __pcstackCOMMON:
   542  0070                     ?_Setup:
   543  0070                     ?_I2C_Master_Start:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_I2C_Master_Stop:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_intToString:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ISR:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ??_ISR:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_I2C_Master_Wait:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_UARTSendChar:	
   565                           ; 1 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569  0070                     	ds	2
   570  0072                     ??_I2C_Master_Start:
   571  0072                     ?_I2C_Master_Write:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ??_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ??_I2C_Master_Wait:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0072                     ??_UARTSendChar:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     ?___bmul:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     ??___lldiv:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     ?_I2C_Master_Read:	
   590                           ; 1 bytes @ 0x2
   591                           
   592  0072                     ?___awdiv:	
   593                           ; 2 bytes @ 0x2
   594                           
   595  0072                     ?___awmod:	
   596                           ; 2 bytes @ 0x2
   597                           
   598  0072                     UARTSendChar@c:	
   599                           ; 2 bytes @ 0x2
   600                           
   601  0072                     ___bmul@multiplicand:	
   602                           ; 1 bytes @ 0x2
   603                           
   604  0072                     I2C_Master_Write@d:	
   605                           ; 1 bytes @ 0x2
   606                           
   607  0072                     I2C_Master_Read@a:	
   608                           ; 2 bytes @ 0x2
   609                           
   610  0072                     ___awdiv@divisor:	
   611                           ; 2 bytes @ 0x2
   612                           
   613  0072                     ___awmod@divisor:	
   614                           ; 2 bytes @ 0x2
   615                           
   616                           
   617                           ; 2 bytes @ 0x2
   618  0072                     	ds	1
   619  0073                     ?_UARTSendString:
   620  0073                     ??___bmul:	
   621                           ; 1 bytes @ 0x3
   622                           
   623  0073                     UARTSendString@str:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ___lldiv@quotient:	
   627                           ; 2 bytes @ 0x3
   628                           
   629                           
   630                           ; 4 bytes @ 0x3
   631  0073                     	ds	1
   632  0074                     ??_I2C_Master_Write:
   633  0074                     ??_I2C_Master_Read:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ___bmul@product:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ___awdiv@dividend:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ___awmod@dividend:	
   643                           ; 2 bytes @ 0x4
   644                           
   645                           
   646                           ; 2 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ??_UARTSendString:
   649  0075                     ___bmul@multiplier:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     UARTSendString@i:	
   653                           ; 1 bytes @ 0x5
   654                           
   655                           
   656                           ; 2 bytes @ 0x5
   657  0075                     	ds	1
   658  0076                     ??___awdiv:
   659  0076                     ??___awmod:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0076                     I2C_Master_Read@temp:	
   663                           ; 1 bytes @ 0x6
   664                           
   665                           
   666                           ; 2 bytes @ 0x6
   667  0076                     	ds	1
   668  0077                     ___lldiv@counter:
   669  0077                     ___awmod@counter:	
   670                           ; 1 bytes @ 0x7
   671                           
   672                           
   673                           ; 1 bytes @ 0x7
   674  0077                     	ds	1
   675  0078                     ___awmod@sign:
   676                           
   677                           ; 1 bytes @ 0x8
   678  0078                     	ds	1
   679                           
   680                           	psect	cstackBANK0
   681  0020                     __pcstackBANK0:
   682  0020                     ?___lldiv:
   683  0020                     ___awdiv@counter:	
   684                           ; 4 bytes @ 0x0
   685                           
   686  0020                     ___lldiv@divisor:	
   687                           ; 1 bytes @ 0x0
   688                           
   689                           
   690                           ; 4 bytes @ 0x0
   691  0020                     	ds	1
   692  0021                     ___awdiv@sign:
   693                           
   694                           ; 1 bytes @ 0x1
   695  0021                     	ds	1
   696  0022                     ___awdiv@quotient:
   697                           
   698                           ; 2 bytes @ 0x2
   699  0022                     	ds	2
   700  0024                     ??_intToString:
   701  0024                     ___lldiv@dividend:	
   702                           ; 1 bytes @ 0x4
   703                           
   704                           
   705                           ; 4 bytes @ 0x4
   706  0024                     	ds	3
   707  0027                     intToString@valor:
   708                           
   709                           ; 4 bytes @ 0x7
   710  0027                     	ds	1
   711  0028                     ?_UARTInit:
   712  0028                     ?_I2C_Master_Init:	
   713                           ; 1 bytes @ 0x8
   714                           
   715  0028                     I2C_Master_Init@c:	
   716                           ; 1 bytes @ 0x8
   717                           
   718  0028                     UARTInit@baud_rate:	
   719                           ; 4 bytes @ 0x8
   720                           
   721                           
   722                           ; 4 bytes @ 0x8
   723  0028                     	ds	3
   724  002B                     intToString@entero:
   725                           
   726                           ; 1 bytes @ 0xB
   727  002B                     	ds	1
   728  002C                     ??_I2C_Master_Init:
   729  002C                     intToString@value:	
   730                           ; 1 bytes @ 0xC
   731                           
   732  002C                     UARTInit@BRGH:	
   733                           ; 1 bytes @ 0xC
   734                           
   735                           
   736                           ; 1 bytes @ 0xC
   737  002C                     	ds	1
   738  002D                     ??_UARTInit:
   739                           
   740                           ; 1 bytes @ 0xD
   741  002D                     	ds	4
   742  0031                     ??_Setup:
   743                           
   744                           ; 1 bytes @ 0x11
   745  0031                     	ds	2
   746  0033                     ??_main:
   747                           
   748                           ; 1 bytes @ 0x13
   749  0033                     	ds	2
   750                           
   751                           	psect	maintext
   752  0026                     __pmaintext:	
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 53 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : B00/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       2       0       0       0
   775 ;;      Totals:         0       2       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels required when called:    4
   778 ;; This function calls:
   779 ;;		_I2C_Master_Read
   780 ;;		_I2C_Master_Start
   781 ;;		_I2C_Master_Stop
   782 ;;		_I2C_Master_Write
   783 ;;		_Setup
   784 ;;		_UARTSendString
   785 ;;		_intToString
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _main
   793  0026                     _main:
   794  0026                     l1525:	
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   797                           
   798                           
   799                           ;main.c: 54:     I2C_Master_Write(0x1B);
   800  0026  120A  118A  2355  120A  118A  	fcall	_Setup
   801                           
   802                           ;main.c: 60: 
   803  002B  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   804                           
   805                           ;main.c: 61:         PORTAbits.RA0 = ~PORTAbits.RA0;
   806  0030  3019               	movlw	25
   807  0031  00F2               	movwf	I2C_Master_Write@d
   808  0032  3000               	movlw	0
   809  0033  00F3               	movwf	I2C_Master_Write@d+1
   810  0034  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   811                           
   812                           ;main.c: 62: 
   813  0039  3007               	movlw	7
   814  003A  00F2               	movwf	I2C_Master_Write@d
   815  003B  3000               	movlw	0
   816  003C  00F3               	movwf	I2C_Master_Write@d+1
   817  003D  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   818                           
   819                           ;main.c: 63:         _delay((unsigned long)((50)*(4000000/4000.0)));
   820  0042  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   821                           
   822                           ;main.c: 66: 
   823  0047  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   824                           
   825                           ;main.c: 67:         I2C_Master_Start();
   826  004C  306B               	movlw	107
   827  004D  00F2               	movwf	I2C_Master_Write@d
   828  004E  3000               	movlw	0
   829  004F  00F3               	movwf	I2C_Master_Write@d+1
   830  0050  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   831                           
   832                           ;main.c: 68:         I2C_Master_Write(0x3C);
   833  0055  3001               	movlw	1
   834  0056  00F2               	movwf	I2C_Master_Write@d
   835  0057  3000               	movlw	0
   836  0058  00F3               	movwf	I2C_Master_Write@d+1
   837  0059  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   838                           
   839                           ;main.c: 69:         I2C_Master_Stop();
   840  005E  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   841                           
   842                           ;main.c: 72:         I2C_Master_Write(0xD1);
   843  0063  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   844                           
   845                           ;main.c: 73:         I2C_Master_Write(0x3B);
   846  0068  301A               	movlw	26
   847  0069  00F2               	movwf	I2C_Master_Write@d
   848  006A  3000               	movlw	0
   849  006B  00F3               	movwf	I2C_Master_Write@d+1
   850  006C  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   851                           
   852                           ;main.c: 74:         Ax = I2C_Master_Read(0);
   853  0071  3000               	movlw	0
   854  0072  00F2               	movwf	I2C_Master_Write@d
   855  0073  00F3               	movwf	I2C_Master_Write@d+1
   856  0074  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   857                           
   858                           ;main.c: 75: 
   859  0079  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   860                           
   861                           ;main.c: 78: 
   862  007E  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   863                           
   864                           ;main.c: 79: 
   865  0083  301C               	movlw	28
   866  0084  00F2               	movwf	I2C_Master_Write@d
   867  0085  3000               	movlw	0
   868  0086  00F3               	movwf	I2C_Master_Write@d+1
   869  0087  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   870                           
   871                           ;main.c: 80: 
   872  008C  3000               	movlw	0
   873  008D  00F2               	movwf	I2C_Master_Write@d
   874  008E  00F3               	movwf	I2C_Master_Write@d+1
   875  008F  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   876                           
   877                           ;main.c: 81: 
   878  0094  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   879                           
   880                           ;main.c: 84: 
   881  0099  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   882                           
   883                           ;main.c: 85:         UARTSendString(Axenvio);
   884  009E  301B               	movlw	27
   885  009F  00F2               	movwf	I2C_Master_Write@d
   886  00A0  3000               	movlw	0
   887  00A1  00F3               	movwf	I2C_Master_Write@d+1
   888  00A2  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   889  00A7  3018               	movlw	24
   890  00A8  00F2               	movwf	I2C_Master_Write@d
   891  00A9  3000               	movlw	0
   892  00AA  00F3               	movwf	I2C_Master_Write@d+1
   893  00AB  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   894  00B0  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   895  00B5                     l1527:
   896  00B5  1003               	clrc
   897  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   898  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   899  00B8  1C05               	btfss	5,0	;volatile
   900  00B9  1403               	setc
   901  00BA  1803               	btfsc	3,0
   902  00BB  28BD               	goto	u1051
   903  00BC  28C1               	goto	u1050
   904  00BD                     u1051:
   905  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   906  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   907  00BF  1405               	bsf	5,0	;volatile
   908  00C0  28C4               	goto	u1064
   909  00C1                     u1050:
   910  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   911  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   912  00C3  1005               	bcf	5,0	;volatile
   913  00C4                     u1064:
   914  00C4                     l1529:
   915  00C4  3041               	movlw	65
   916  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   917  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   918  00C7  00B4               	movwf	??_main+1
   919  00C8  30ED               	movlw	237
   920  00C9  00B3               	movwf	??_main
   921  00CA                     u1077:
   922  00CA  0BB3               	decfsz	??_main,f
   923  00CB  28CA               	goto	u1077
   924  00CC  0BB4               	decfsz	??_main+1,f
   925  00CD  28CA               	goto	u1077
   926  00CE  28CF               	nop2
   927  00CF                     l1531:
   928  00CF  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   929  00D4                     l1533:
   930  00D4  303C               	movlw	60
   931  00D5  00F2               	movwf	I2C_Master_Write@d
   932  00D6  3000               	movlw	0
   933  00D7  00F3               	movwf	I2C_Master_Write@d+1
   934  00D8  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   935  00DD                     l1535:
   936  00DD  120A  118A  2435  120A  118A  	fcall	_I2C_Master_Stop
   937  00E2                     l1537:
   938  00E2  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Start
   939  00E7                     l1539:
   940  00E7  30D1               	movlw	209
   941  00E8  00F2               	movwf	I2C_Master_Write@d
   942  00E9  3000               	movlw	0
   943  00EA  00F3               	movwf	I2C_Master_Write@d+1
   944  00EB  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   945  00F0                     l1541:
   946  00F0  303B               	movlw	59
   947  00F1  00F2               	movwf	I2C_Master_Write@d
   948  00F2  3000               	movlw	0
   949  00F3  00F3               	movwf	I2C_Master_Write@d+1
   950  00F4  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
   951  00F9                     l1543:
   952  00F9  3000               	movlw	0
   953  00FA  00F2               	movwf	I2C_Master_Read@a
   954  00FB  00F3               	movwf	I2C_Master_Read@a+1
   955  00FC  120A  118A  23BA  120A  118A  	fcall	_I2C_Master_Read
   956  0101  0873               	movf	?_I2C_Master_Read+1,w
   957  0102  1283               	bcf	3,5	;RP0=0, select bank0
   958  0103  1303               	bcf	3,6	;RP1=0, select bank0
   959  0104  00C2               	movwf	_Ax+1
   960  0105  0872               	movf	?_I2C_Master_Read,w
   961  0106  00C1               	movwf	_Ax
   962  0107                     l1545:
   963  0107  0841               	movf	_Ax,w
   964  0108  120A  118A  2263  120A  118A  	fcall	_intToString
   965  010D  1283               	bcf	3,5	;RP0=0, select bank0
   966  010E  1303               	bcf	3,6	;RP1=0, select bank0
   967  010F  00BF               	movwf	_Axenvio
   968  0110  3000               	movlw	0
   969  0111  00C0               	movwf	_Axenvio+1
   970  0112                     l1547:
   971  0112  083F               	movf	_Axenvio,w
   972  0113  00F3               	movwf	UARTSendString@str
   973  0114  0840               	movf	_Axenvio+1,w
   974  0115  00F4               	movwf	UARTSendString@str+1
   975  0116  120A  118A  238A  120A  118A  	fcall	_UARTSendString
   976  011B  28B5               	goto	l1527
   977  011C  120A  118A  280C   	ljmp	start
   978  011F                     __end_of_main:
   979                           
   980                           	psect	text1
   981  0263                     __ptext1:	
   982 ;; *************** function _intToString *****************
   983 ;; Defined at:
   984 ;;		line 150 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  value           1    wreg     unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  value           1   12[BANK0 ] unsigned char 
   989 ;;  valor           4    7[BANK0 ] unsigned char [4]
   990 ;;  entero          1   11[BANK0 ] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      PTR unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       6       0       0       0
  1002 ;;      Temps:          0       3       0       0       0
  1003 ;;      Totals:         0       9       0       0       0
  1004 ;;Total ram usage:        9 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    2
  1007 ;; This function calls:
  1008 ;;		___awdiv
  1009 ;;		___awmod
  1010 ;;		___bmul
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _intToString
  1018  0263                     _intToString:
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _intToString: [wreg+status,2+status,0+pclath+cstack]
  1022                           ;intToString@value stored from wreg
  1023  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0265  00AC               	movwf	intToString@value
  1026  0266                     l1509:
  1027                           
  1028                           ;main.c: 151:     char valor[4];;main.c: 153:     uint8_t entero = value / 100;
  1029  0266  3064               	movlw	100
  1030  0267  00F2               	movwf	___awdiv@divisor
  1031  0268  3000               	movlw	0
  1032  0269  00F3               	movwf	___awdiv@divisor+1
  1033  026A  082C               	movf	intToString@value,w
  1034  026B  00A4               	movwf	??_intToString
  1035  026C  01A5               	clrf	??_intToString+1
  1036  026D  0824               	movf	??_intToString,w
  1037  026E  00F4               	movwf	___awdiv@dividend
  1038  026F  0825               	movf	??_intToString+1,w
  1039  0270  00F5               	movwf	___awdiv@dividend+1
  1040  0271  120A  118A  2192  120A  118A  	fcall	___awdiv
  1041  0276  0872               	movf	?___awdiv,w
  1042  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0279  00A6               	movwf	??_intToString+2
  1045  027A  0826               	movf	??_intToString+2,w
  1046  027B  00AB               	movwf	intToString@entero
  1047  027C                     l1511:
  1048                           
  1049                           ;main.c: 154:     valor[0] = entero + 48;
  1050  027C  082B               	movf	intToString@entero,w
  1051  027D  3E30               	addlw	48
  1052  027E  00A4               	movwf	??_intToString
  1053  027F  0824               	movf	??_intToString,w
  1054  0280  00A7               	movwf	intToString@valor
  1055  0281                     l1513:
  1056                           
  1057                           ;main.c: 156:     value = value - (100 * entero);
  1058  0281  309C               	movlw	156
  1059  0282  00A4               	movwf	??_intToString
  1060  0283  0824               	movf	??_intToString,w
  1061  0284  00F2               	movwf	___bmul@multiplicand
  1062  0285  082B               	movf	intToString@entero,w
  1063  0286  120A  118A  23E8  120A  118A  	fcall	___bmul
  1064  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1065  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1066  028D  072C               	addwf	intToString@value,w
  1067  028E  00A5               	movwf	??_intToString+1
  1068  028F  0825               	movf	??_intToString+1,w
  1069  0290  00AC               	movwf	intToString@value
  1070  0291                     l1515:
  1071                           
  1072                           ;main.c: 158:     valor[1] = value / 10 + 48;
  1073  0291  300A               	movlw	10
  1074  0292  00F2               	movwf	___awdiv@divisor
  1075  0293  3000               	movlw	0
  1076  0294  00F3               	movwf	___awdiv@divisor+1
  1077  0295  082C               	movf	intToString@value,w
  1078  0296  00A4               	movwf	??_intToString
  1079  0297  01A5               	clrf	??_intToString+1
  1080  0298  0824               	movf	??_intToString,w
  1081  0299  00F4               	movwf	___awdiv@dividend
  1082  029A  0825               	movf	??_intToString+1,w
  1083  029B  00F5               	movwf	___awdiv@dividend+1
  1084  029C  120A  118A  2192  120A  118A  	fcall	___awdiv
  1085  02A1  0872               	movf	?___awdiv,w
  1086  02A2  3E30               	addlw	48
  1087  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1088  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1089  02A5  00A6               	movwf	??_intToString+2
  1090  02A6  0826               	movf	??_intToString+2,w
  1091  02A7  00A8               	movwf	intToString@valor+1
  1092  02A8                     l1517:
  1093                           
  1094                           ;main.c: 159:     valor[2] = value % 10 + 48;
  1095  02A8  300A               	movlw	10
  1096  02A9  00F2               	movwf	___awmod@divisor
  1097  02AA  3000               	movlw	0
  1098  02AB  00F3               	movwf	___awmod@divisor+1
  1099  02AC  082C               	movf	intToString@value,w
  1100  02AD  00A4               	movwf	??_intToString
  1101  02AE  01A5               	clrf	??_intToString+1
  1102  02AF  0824               	movf	??_intToString,w
  1103  02B0  00F4               	movwf	___awmod@dividend
  1104  02B1  0825               	movf	??_intToString+1,w
  1105  02B2  00F5               	movwf	___awmod@dividend+1
  1106  02B3  120A  118A  22C2  120A  118A  	fcall	___awmod
  1107  02B8  0872               	movf	?___awmod,w
  1108  02B9  3E30               	addlw	48
  1109  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1110  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1111  02BC  00A6               	movwf	??_intToString+2
  1112  02BD  0826               	movf	??_intToString+2,w
  1113  02BE  00A9               	movwf	intToString@valor+2
  1114  02BF                     l1519:
  1115                           
  1116                           ;main.c: 160:     valor[3] = '\0';
  1117  02BF  01AA               	clrf	intToString@valor+3
  1118  02C0                     l1521:
  1119                           
  1120                           ;main.c: 162:     return valor;
  1121  02C0  3027               	movlw	(low (intToString@valor| 0))& (0+255)
  1122  02C1                     l67:
  1123  02C1  0008               	return
  1124  02C2                     __end_of_intToString:
  1125                           
  1126                           	psect	text2
  1127  03E8                     __ptext2:	
  1128 ;; *************** function ___bmul *****************
  1129 ;; Defined at:
  1130 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  multiplier      1    wreg     unsigned char 
  1133 ;;  multiplicand    1    2[COMMON] unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  multiplier      1    5[COMMON] unsigned char 
  1136 ;;  product         1    4[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      unsigned char 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         1       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         4       0       0       0       0
  1150 ;;Total ram usage:        4 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    1
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_intToString
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function ___bmul
  1162  03E8                     ___bmul:
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1166                           ;___bmul@multiplier stored from wreg
  1167  03E8  00F5               	movwf	___bmul@multiplier
  1168  03E9                     l1175:
  1169  03E9  01F4               	clrf	___bmul@product
  1170  03EA                     l1177:
  1171  03EA  1C75               	btfss	___bmul@multiplier,0
  1172  03EB  2BED               	goto	u591
  1173  03EC  2BEE               	goto	u590
  1174  03ED                     u591:
  1175  03ED  2BF2               	goto	l1181
  1176  03EE                     u590:
  1177  03EE                     l1179:
  1178  03EE  0872               	movf	___bmul@multiplicand,w
  1179  03EF  00F3               	movwf	??___bmul
  1180  03F0  0873               	movf	??___bmul,w
  1181  03F1  07F4               	addwf	___bmul@product,f
  1182  03F2                     l1181:
  1183  03F2  1003               	clrc
  1184  03F3  0DF2               	rlf	___bmul@multiplicand,f
  1185  03F4                     l1183:
  1186  03F4  1003               	clrc
  1187  03F5  0CF5               	rrf	___bmul@multiplier,f
  1188  03F6  0875               	movf	___bmul@multiplier,w
  1189  03F7  1D03               	btfss	3,2
  1190  03F8  2BFA               	goto	u601
  1191  03F9  2BFB               	goto	u600
  1192  03FA                     u601:
  1193  03FA  2BEA               	goto	l1177
  1194  03FB                     u600:
  1195  03FB                     l1185:
  1196  03FB  0874               	movf	___bmul@product,w
  1197  03FC                     l297:
  1198  03FC  0008               	return
  1199  03FD                     __end_of___bmul:
  1200                           
  1201                           	psect	text3
  1202  02C2                     __ptext3:	
  1203 ;; *************** function ___awmod *****************
  1204 ;; Defined at:
  1205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  divisor         2    2[COMMON] int 
  1208 ;;  dividend        2    4[COMMON] int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  sign            1    8[COMMON] unsigned char 
  1211 ;;  counter         1    7[COMMON] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    2[COMMON] int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         4       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0
  1224 ;;      Totals:         7       0       0       0       0
  1225 ;;Total ram usage:        7 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_intToString
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function ___awmod
  1237  02C2                     ___awmod:
  1238  02C2                     l1233:	
  1239                           ;incstack = 0
  1240                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1241                           
  1242  02C2  01F8               	clrf	___awmod@sign
  1243  02C3                     l1235:
  1244  02C3  1FF5               	btfss	___awmod@dividend+1,7
  1245  02C4  2AC6               	goto	u711
  1246  02C5  2AC7               	goto	u710
  1247  02C6                     u711:
  1248  02C6  2ACE               	goto	l1241
  1249  02C7                     u710:
  1250  02C7                     l1237:
  1251  02C7  09F4               	comf	___awmod@dividend,f
  1252  02C8  09F5               	comf	___awmod@dividend+1,f
  1253  02C9  0AF4               	incf	___awmod@dividend,f
  1254  02CA  1903               	skipnz
  1255  02CB  0AF5               	incf	___awmod@dividend+1,f
  1256  02CC                     l1239:
  1257  02CC  01F8               	clrf	___awmod@sign
  1258  02CD  0AF8               	incf	___awmod@sign,f
  1259  02CE                     l1241:
  1260  02CE  1FF3               	btfss	___awmod@divisor+1,7
  1261  02CF  2AD1               	goto	u721
  1262  02D0  2AD2               	goto	u720
  1263  02D1                     u721:
  1264  02D1  2AD7               	goto	l1245
  1265  02D2                     u720:
  1266  02D2                     l1243:
  1267  02D2  09F2               	comf	___awmod@divisor,f
  1268  02D3  09F3               	comf	___awmod@divisor+1,f
  1269  02D4  0AF2               	incf	___awmod@divisor,f
  1270  02D5  1903               	skipnz
  1271  02D6  0AF3               	incf	___awmod@divisor+1,f
  1272  02D7                     l1245:
  1273  02D7  0872               	movf	___awmod@divisor,w
  1274  02D8  0473               	iorwf	___awmod@divisor+1,w
  1275  02D9  1903               	btfsc	3,2
  1276  02DA  2ADC               	goto	u731
  1277  02DB  2ADD               	goto	u730
  1278  02DC                     u731:
  1279  02DC  2B0C               	goto	l1263
  1280  02DD                     u730:
  1281  02DD                     l1247:
  1282  02DD  01F7               	clrf	___awmod@counter
  1283  02DE  0AF7               	incf	___awmod@counter,f
  1284  02DF  2AEB               	goto	l1253
  1285  02E0                     l1249:
  1286  02E0  3001               	movlw	1
  1287  02E1                     u745:
  1288  02E1  1003               	clrc
  1289  02E2  0DF2               	rlf	___awmod@divisor,f
  1290  02E3  0DF3               	rlf	___awmod@divisor+1,f
  1291  02E4  3EFF               	addlw	-1
  1292  02E5  1D03               	skipz
  1293  02E6  2AE1               	goto	u745
  1294  02E7                     l1251:
  1295  02E7  3001               	movlw	1
  1296  02E8  00F6               	movwf	??___awmod
  1297  02E9  0876               	movf	??___awmod,w
  1298  02EA  07F7               	addwf	___awmod@counter,f
  1299  02EB                     l1253:
  1300  02EB  1FF3               	btfss	___awmod@divisor+1,7
  1301  02EC  2AEE               	goto	u751
  1302  02ED  2AEF               	goto	u750
  1303  02EE                     u751:
  1304  02EE  2AE0               	goto	l1249
  1305  02EF                     u750:
  1306  02EF                     l1255:
  1307  02EF  0873               	movf	___awmod@divisor+1,w
  1308  02F0  0275               	subwf	___awmod@dividend+1,w
  1309  02F1  1D03               	skipz
  1310  02F2  2AF5               	goto	u765
  1311  02F3  0872               	movf	___awmod@divisor,w
  1312  02F4  0274               	subwf	___awmod@dividend,w
  1313  02F5                     u765:
  1314  02F5  1C03               	skipc
  1315  02F6  2AF8               	goto	u761
  1316  02F7  2AF9               	goto	u760
  1317  02F8                     u761:
  1318  02F8  2AFF               	goto	l1259
  1319  02F9                     u760:
  1320  02F9                     l1257:
  1321  02F9  0872               	movf	___awmod@divisor,w
  1322  02FA  02F4               	subwf	___awmod@dividend,f
  1323  02FB  0873               	movf	___awmod@divisor+1,w
  1324  02FC  1C03               	skipc
  1325  02FD  03F5               	decf	___awmod@dividend+1,f
  1326  02FE  02F5               	subwf	___awmod@dividend+1,f
  1327  02FF                     l1259:
  1328  02FF  3001               	movlw	1
  1329  0300                     u775:
  1330  0300  1003               	clrc
  1331  0301  0CF3               	rrf	___awmod@divisor+1,f
  1332  0302  0CF2               	rrf	___awmod@divisor,f
  1333  0303  3EFF               	addlw	-1
  1334  0304  1D03               	skipz
  1335  0305  2B00               	goto	u775
  1336  0306                     l1261:
  1337  0306  3001               	movlw	1
  1338  0307  02F7               	subwf	___awmod@counter,f
  1339  0308  1D03               	btfss	3,2
  1340  0309  2B0B               	goto	u781
  1341  030A  2B0C               	goto	u780
  1342  030B                     u781:
  1343  030B  2AEF               	goto	l1255
  1344  030C                     u780:
  1345  030C                     l1263:
  1346  030C  0878               	movf	___awmod@sign,w
  1347  030D  1903               	btfsc	3,2
  1348  030E  2B10               	goto	u791
  1349  030F  2B11               	goto	u790
  1350  0310                     u791:
  1351  0310  2B16               	goto	l1267
  1352  0311                     u790:
  1353  0311                     l1265:
  1354  0311  09F4               	comf	___awmod@dividend,f
  1355  0312  09F5               	comf	___awmod@dividend+1,f
  1356  0313  0AF4               	incf	___awmod@dividend,f
  1357  0314  1903               	skipnz
  1358  0315  0AF5               	incf	___awmod@dividend+1,f
  1359  0316                     l1267:
  1360  0316  0875               	movf	___awmod@dividend+1,w
  1361  0317  00F3               	movwf	?___awmod+1
  1362  0318  0874               	movf	___awmod@dividend,w
  1363  0319  00F2               	movwf	?___awmod
  1364  031A                     l437:
  1365  031A  0008               	return
  1366  031B                     __end_of___awmod:
  1367                           
  1368                           	psect	text4
  1369  0192                     __ptext4:	
  1370 ;; *************** function ___awdiv *****************
  1371 ;; Defined at:
  1372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  divisor         2    2[COMMON] int 
  1375 ;;  dividend        2    4[COMMON] int 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  quotient        2    2[BANK0 ] int 
  1378 ;;  sign            1    1[BANK0 ] unsigned char 
  1379 ;;  counter         1    0[BANK0 ] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2    2[COMMON] int 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         4       0       0       0       0
  1390 ;;      Locals:         0       4       0       0       0
  1391 ;;      Temps:          1       0       0       0       0
  1392 ;;      Totals:         5       4       0       0       0
  1393 ;;Total ram usage:        9 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_intToString
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function ___awdiv
  1405  0192                     ___awdiv:
  1406  0192                     l1449:	
  1407                           ;incstack = 0
  1408                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1409                           
  1410  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0194  01A1               	clrf	___awdiv@sign
  1413  0195                     l1451:
  1414  0195  1FF3               	btfss	___awdiv@divisor+1,7
  1415  0196  2998               	goto	u951
  1416  0197  2999               	goto	u950
  1417  0198                     u951:
  1418  0198  29A0               	goto	l1457
  1419  0199                     u950:
  1420  0199                     l1453:
  1421  0199  09F2               	comf	___awdiv@divisor,f
  1422  019A  09F3               	comf	___awdiv@divisor+1,f
  1423  019B  0AF2               	incf	___awdiv@divisor,f
  1424  019C  1903               	skipnz
  1425  019D  0AF3               	incf	___awdiv@divisor+1,f
  1426  019E                     l1455:
  1427  019E  01A1               	clrf	___awdiv@sign
  1428  019F  0AA1               	incf	___awdiv@sign,f
  1429  01A0                     l1457:
  1430  01A0  1FF5               	btfss	___awdiv@dividend+1,7
  1431  01A1  29A3               	goto	u961
  1432  01A2  29A4               	goto	u960
  1433  01A3                     u961:
  1434  01A3  29AD               	goto	l1463
  1435  01A4                     u960:
  1436  01A4                     l1459:
  1437  01A4  09F4               	comf	___awdiv@dividend,f
  1438  01A5  09F5               	comf	___awdiv@dividend+1,f
  1439  01A6  0AF4               	incf	___awdiv@dividend,f
  1440  01A7  1903               	skipnz
  1441  01A8  0AF5               	incf	___awdiv@dividend+1,f
  1442  01A9                     l1461:
  1443  01A9  3001               	movlw	1
  1444  01AA  00F6               	movwf	??___awdiv
  1445  01AB  0876               	movf	??___awdiv,w
  1446  01AC  06A1               	xorwf	___awdiv@sign,f
  1447  01AD                     l1463:
  1448  01AD  01A2               	clrf	___awdiv@quotient
  1449  01AE  01A3               	clrf	___awdiv@quotient+1
  1450  01AF                     l1465:
  1451  01AF  0872               	movf	___awdiv@divisor,w
  1452  01B0  0473               	iorwf	___awdiv@divisor+1,w
  1453  01B1  1903               	btfsc	3,2
  1454  01B2  29B4               	goto	u971
  1455  01B3  29B5               	goto	u970
  1456  01B4                     u971:
  1457  01B4  29EC               	goto	l1485
  1458  01B5                     u970:
  1459  01B5                     l1467:
  1460  01B5  01A0               	clrf	___awdiv@counter
  1461  01B6  0AA0               	incf	___awdiv@counter,f
  1462  01B7  29C3               	goto	l1473
  1463  01B8                     l1469:
  1464  01B8  3001               	movlw	1
  1465  01B9                     u985:
  1466  01B9  1003               	clrc
  1467  01BA  0DF2               	rlf	___awdiv@divisor,f
  1468  01BB  0DF3               	rlf	___awdiv@divisor+1,f
  1469  01BC  3EFF               	addlw	-1
  1470  01BD  1D03               	skipz
  1471  01BE  29B9               	goto	u985
  1472  01BF                     l1471:
  1473  01BF  3001               	movlw	1
  1474  01C0  00F6               	movwf	??___awdiv
  1475  01C1  0876               	movf	??___awdiv,w
  1476  01C2  07A0               	addwf	___awdiv@counter,f
  1477  01C3                     l1473:
  1478  01C3  1FF3               	btfss	___awdiv@divisor+1,7
  1479  01C4  29C6               	goto	u991
  1480  01C5  29C7               	goto	u990
  1481  01C6                     u991:
  1482  01C6  29B8               	goto	l1469
  1483  01C7                     u990:
  1484  01C7                     l1475:
  1485  01C7  3001               	movlw	1
  1486  01C8                     u1005:
  1487  01C8  1003               	clrc
  1488  01C9  0DA2               	rlf	___awdiv@quotient,f
  1489  01CA  0DA3               	rlf	___awdiv@quotient+1,f
  1490  01CB  3EFF               	addlw	-1
  1491  01CC  1D03               	skipz
  1492  01CD  29C8               	goto	u1005
  1493  01CE  0873               	movf	___awdiv@divisor+1,w
  1494  01CF  0275               	subwf	___awdiv@dividend+1,w
  1495  01D0  1D03               	skipz
  1496  01D1  29D4               	goto	u1015
  1497  01D2  0872               	movf	___awdiv@divisor,w
  1498  01D3  0274               	subwf	___awdiv@dividend,w
  1499  01D4                     u1015:
  1500  01D4  1C03               	skipc
  1501  01D5  29D7               	goto	u1011
  1502  01D6  29D8               	goto	u1010
  1503  01D7                     u1011:
  1504  01D7  29DF               	goto	l1481
  1505  01D8                     u1010:
  1506  01D8                     l1477:
  1507  01D8  0872               	movf	___awdiv@divisor,w
  1508  01D9  02F4               	subwf	___awdiv@dividend,f
  1509  01DA  0873               	movf	___awdiv@divisor+1,w
  1510  01DB  1C03               	skipc
  1511  01DC  03F5               	decf	___awdiv@dividend+1,f
  1512  01DD  02F5               	subwf	___awdiv@dividend+1,f
  1513  01DE                     l1479:
  1514  01DE  1422               	bsf	___awdiv@quotient,0
  1515  01DF                     l1481:
  1516  01DF  3001               	movlw	1
  1517  01E0                     u1025:
  1518  01E0  1003               	clrc
  1519  01E1  0CF3               	rrf	___awdiv@divisor+1,f
  1520  01E2  0CF2               	rrf	___awdiv@divisor,f
  1521  01E3  3EFF               	addlw	-1
  1522  01E4  1D03               	skipz
  1523  01E5  29E0               	goto	u1025
  1524  01E6                     l1483:
  1525  01E6  3001               	movlw	1
  1526  01E7  02A0               	subwf	___awdiv@counter,f
  1527  01E8  1D03               	btfss	3,2
  1528  01E9  29EB               	goto	u1031
  1529  01EA  29EC               	goto	u1030
  1530  01EB                     u1031:
  1531  01EB  29C7               	goto	l1475
  1532  01EC                     u1030:
  1533  01EC                     l1485:
  1534  01EC  0821               	movf	___awdiv@sign,w
  1535  01ED  1903               	btfsc	3,2
  1536  01EE  29F0               	goto	u1041
  1537  01EF  29F1               	goto	u1040
  1538  01F0                     u1041:
  1539  01F0  29F6               	goto	l1489
  1540  01F1                     u1040:
  1541  01F1                     l1487:
  1542  01F1  09A2               	comf	___awdiv@quotient,f
  1543  01F2  09A3               	comf	___awdiv@quotient+1,f
  1544  01F3  0AA2               	incf	___awdiv@quotient,f
  1545  01F4  1903               	skipnz
  1546  01F5  0AA3               	incf	___awdiv@quotient+1,f
  1547  01F6                     l1489:
  1548  01F6  0823               	movf	___awdiv@quotient+1,w
  1549  01F7  00F3               	movwf	?___awdiv+1
  1550  01F8  0822               	movf	___awdiv@quotient,w
  1551  01F9  00F2               	movwf	?___awdiv
  1552  01FA                     l424:
  1553  01FA  0008               	return
  1554  01FB                     __end_of___awdiv:
  1555                           
  1556                           	psect	text5
  1557  038A                     __ptext5:	
  1558 ;; *************** function _UARTSendString *****************
  1559 ;; Defined at:
  1560 ;;		line 50 in file "UART.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  str             2    3[COMMON] PTR const unsigned char 
  1563 ;;		 -> ROM(8192), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  i               2    5[COMMON] int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         2       0       0       0       0
  1576 ;;      Locals:         2       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         4       0       0       0       0
  1579 ;;Total ram usage:        4 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    2
  1582 ;; This function calls:
  1583 ;;		_UARTSendChar
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _UARTSendString
  1591  038A                     _UARTSendString:
  1592  038A                     l1331:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1595                           
  1596                           
  1597                           ;UART.c: 51:     int i = 0;
  1598  038A  01F5               	clrf	UARTSendString@i
  1599  038B  01F6               	clrf	UARTSendString@i+1
  1600                           
  1601                           ;UART.c: 55:         while(str[i] != '\0'){
  1602  038C  2BA5               	goto	l1337
  1603  038D                     l1333:
  1604                           
  1605                           ;UART.c: 56:         UARTSendChar(str[i++]);
  1606  038D  0875               	movf	UARTSendString@i,w
  1607  038E  0773               	addwf	UARTSendString@str,w
  1608  038F  0084               	movwf	4
  1609  0390  0876               	movf	UARTSendString@i+1,w
  1610  0391  1803               	skipnc
  1611  0392  0A76               	incf	UARTSendString@i+1,w
  1612  0393  0774               	addwf	UARTSendString@str+1,w
  1613  0394  00FF               	movwf	btemp+1
  1614  0395  120A  118A  2400  120A  118A  	fcall	stringtab
  1615  039A  120A  118A  241F  120A  118A  	fcall	_UARTSendChar
  1616  039F                     l1335:
  1617  039F  3001               	movlw	1
  1618  03A0  07F5               	addwf	UARTSendString@i,f
  1619  03A1  1803               	skipnc
  1620  03A2  0AF6               	incf	UARTSendString@i+1,f
  1621  03A3  3000               	movlw	0
  1622  03A4  07F6               	addwf	UARTSendString@i+1,f
  1623  03A5                     l1337:
  1624                           
  1625                           ;UART.c: 55:         while(str[i] != '\0'){
  1626  03A5  0875               	movf	UARTSendString@i,w
  1627  03A6  0773               	addwf	UARTSendString@str,w
  1628  03A7  0084               	movwf	4
  1629  03A8  0876               	movf	UARTSendString@i+1,w
  1630  03A9  1803               	skipnc
  1631  03AA  0A76               	incf	UARTSendString@i+1,w
  1632  03AB  0774               	addwf	UARTSendString@str+1,w
  1633  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1634  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1635  03AE  00FF               	movwf	btemp+1
  1636  03AF  120A  118A  2400  120A  118A  	fcall	stringtab
  1637  03B4  3A00               	xorlw	0
  1638  03B5  1D03               	skipz
  1639  03B6  2BB8               	goto	u811
  1640  03B7  2BB9               	goto	u810
  1641  03B8                     u811:
  1642  03B8  2B8D               	goto	l1333
  1643  03B9                     u810:
  1644  03B9                     l153:
  1645  03B9  0008               	return
  1646  03BA                     __end_of_UARTSendString:
  1647                           
  1648                           	psect	text6
  1649  041F                     __ptext6:	
  1650 ;; *************** function _UARTSendChar *****************
  1651 ;; Defined at:
  1652 ;;		line 40 in file "UART.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  c               1    wreg     const unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  c               1    2[COMMON] const unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       0       0       0       0
  1667 ;;      Locals:         1       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0
  1669 ;;      Totals:         1       0       0       0       0
  1670 ;;Total ram usage:        1 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    1
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_UARTSendString
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _UARTSendChar
  1682  041F                     _UARTSendChar:
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _UARTSendChar: [wreg]
  1686                           ;UARTSendChar@c stored from wreg
  1687  041F  00F2               	movwf	UARTSendChar@c
  1688  0420                     l1171:
  1689  0420                     l144:	
  1690                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  1691                           
  1692  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1693  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0422  1C98               	btfss	24,1	;volatile
  1695  0423  2C25               	goto	u581
  1696  0424  2C26               	goto	u580
  1697  0425                     u581:
  1698  0425  2C20               	goto	l144
  1699  0426                     u580:
  1700  0426                     l1173:
  1701                           
  1702                           ;UART.c: 42:     TXREG = c;
  1703  0426  0872               	movf	UARTSendChar@c,w
  1704  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0429  0099               	movwf	25	;volatile
  1707  042A                     l147:
  1708  042A  0008               	return
  1709  042B                     __end_of_UARTSendChar:
  1710                           
  1711                           	psect	text7
  1712  0355                     __ptext7:	
  1713 ;; *************** function _Setup *****************
  1714 ;; Defined at:
  1715 ;;		line 132 in file "main.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       2       0       0       0
  1732 ;;      Totals:         0       2       0       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    3
  1736 ;; This function calls:
  1737 ;;		_I2C_Master_Init
  1738 ;;		_UARTInit
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _Setup
  1746  0355                     _Setup:
  1747  0355                     l1493:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;main.c: 135:     UARTInit(9600, 1);
  1753  0355  3000               	movlw	0
  1754  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0358  00AB               	movwf	UARTInit@baud_rate+3
  1757  0359  3000               	movlw	0
  1758  035A  00AA               	movwf	UARTInit@baud_rate+2
  1759  035B  3025               	movlw	37
  1760  035C  00A9               	movwf	UARTInit@baud_rate+1
  1761  035D  3080               	movlw	128
  1762  035E  00A8               	movwf	UARTInit@baud_rate
  1763  035F  01AC               	clrf	UARTInit@BRGH
  1764  0360  0AAC               	incf	UARTInit@BRGH,f
  1765  0361  120A  118A  211F  120A  118A  	fcall	_UARTInit
  1766  0366                     l1495:
  1767                           
  1768                           ;main.c: 136:     TRISA = 0;
  1769  0366  1683               	bsf	3,5	;RP0=1, select bank1
  1770  0367  1303               	bcf	3,6	;RP1=0, select bank1
  1771  0368  0185               	clrf	5	;volatile
  1772  0369                     l1497:
  1773                           
  1774                           ;main.c: 137:     PORTA = 0;
  1775  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1776  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1777  036B  0185               	clrf	5	;volatile
  1778  036C                     l1499:
  1779                           
  1780                           ;main.c: 138:     ANSEL = 0;
  1781  036C  1683               	bsf	3,5	;RP0=1, select bank3
  1782  036D  1703               	bsf	3,6	;RP1=1, select bank3
  1783  036E  0188               	clrf	8	;volatile
  1784  036F                     l1501:
  1785                           
  1786                           ;main.c: 139:     ANSELH = 0;
  1787  036F  0189               	clrf	9	;volatile
  1788  0370                     l1503:
  1789                           
  1790                           ;main.c: 141:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1791  0370  3082               	movlw	130
  1792  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0373  00B2               	movwf	??_Setup+1
  1795  0374  30DD               	movlw	221
  1796  0375  00B1               	movwf	??_Setup
  1797  0376                     u1087:
  1798  0376  0BB1               	decfsz	??_Setup,f
  1799  0377  2B76               	goto	u1087
  1800  0378  0BB2               	decfsz	??_Setup+1,f
  1801  0379  2B76               	goto	u1087
  1802  037A                     l1505:
  1803                           
  1804                           ;main.c: 142:     I2C_Master_Init(100000);
  1805  037A  3000               	movlw	0
  1806  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1807  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1808  037D  00AB               	movwf	I2C_Master_Init@c+3
  1809  037E  3001               	movlw	1
  1810  037F  00AA               	movwf	I2C_Master_Init@c+2
  1811  0380  3086               	movlw	134
  1812  0381  00A9               	movwf	I2C_Master_Init@c+1
  1813  0382  30A0               	movlw	160
  1814  0383  00A8               	movwf	I2C_Master_Init@c
  1815  0384  120A  118A  231B  120A  118A  	fcall	_I2C_Master_Init
  1816  0389                     l64:
  1817  0389  0008               	return
  1818  038A                     __end_of_Setup:
  1819                           
  1820                           	psect	text8
  1821  011F                     __ptext8:	
  1822 ;; *************** function _UARTInit *****************
  1823 ;; Defined at:
  1824 ;;		line 9 in file "UART.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  1827 ;;  BRGH            1   12[BANK0 ] const unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       5       0       0       0
  1840 ;;      Locals:         0       0       0       0       0
  1841 ;;      Temps:          0       4       0       0       0
  1842 ;;      Totals:         0       9       0       0       0
  1843 ;;Total ram usage:        9 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		___lldiv
  1848 ;; This function is called by:
  1849 ;;		_Setup
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _UARTInit
  1855  011F                     _UARTInit:
  1856  011F                     l1407:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1859                           
  1860                           
  1861                           ;UART.c: 11:     if (BRGH == 0) {
  1862  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0121  082C               	movf	UARTInit@BRGH,w
  1865  0122  1D03               	btfss	3,2
  1866  0123  2925               	goto	u911
  1867  0124  2926               	goto	u910
  1868  0125                     u911:
  1869  0125  2955               	goto	l1413
  1870  0126                     u910:
  1871  0126                     l1409:
  1872                           
  1873                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  1874  0126  0828               	movf	UARTInit@baud_rate,w
  1875  0127  00AD               	movwf	??_UARTInit
  1876  0128  0829               	movf	UARTInit@baud_rate+1,w
  1877  0129  00AE               	movwf	??_UARTInit+1
  1878  012A  082A               	movf	UARTInit@baud_rate+2,w
  1879  012B  00AF               	movwf	??_UARTInit+2
  1880  012C  082B               	movf	UARTInit@baud_rate+3,w
  1881  012D  00B0               	movwf	??_UARTInit+3
  1882  012E  3006               	movlw	6
  1883  012F                     u925:
  1884  012F  1003               	clrc
  1885  0130  0DAD               	rlf	??_UARTInit,f
  1886  0131  0DAE               	rlf	??_UARTInit+1,f
  1887  0132  0DAF               	rlf	??_UARTInit+2,f
  1888  0133  0DB0               	rlf	??_UARTInit+3,f
  1889  0134                     u920:
  1890  0134  3EFF               	addlw	-1
  1891  0135  1D03               	skipz
  1892  0136  292F               	goto	u925
  1893  0137  0830               	movf	??_UARTInit+3,w
  1894  0138  00A3               	movwf	___lldiv@divisor+3
  1895  0139  082F               	movf	??_UARTInit+2,w
  1896  013A  00A2               	movwf	___lldiv@divisor+2
  1897  013B  082E               	movf	??_UARTInit+1,w
  1898  013C  00A1               	movwf	___lldiv@divisor+1
  1899  013D  082D               	movf	??_UARTInit,w
  1900  013E  00A0               	movwf	___lldiv@divisor
  1901  013F  3000               	movlw	0
  1902  0140  00A7               	movwf	___lldiv@dividend+3
  1903  0141  303D               	movlw	61
  1904  0142  00A6               	movwf	___lldiv@dividend+2
  1905  0143  3009               	movlw	9
  1906  0144  00A5               	movwf	___lldiv@dividend+1
  1907  0145  3000               	movlw	0
  1908  0146  00A4               	movwf	___lldiv@dividend
  1909  0147  120A  118A  21FB  120A  118A  	fcall	___lldiv
  1910  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1911  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1912  014E  0820               	movf	?___lldiv,w
  1913  014F  3EFF               	addlw	255
  1914  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0152  0099               	movwf	25	;volatile
  1917  0153                     l1411:
  1918                           
  1919                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  1920  0153  1118               	bcf	24,2	;volatile
  1921                           
  1922                           ;UART.c: 14:     } else {
  1923  0154  2983               	goto	l1417
  1924  0155                     l1413:
  1925                           
  1926                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  1927  0155  0828               	movf	UARTInit@baud_rate,w
  1928  0156  00AD               	movwf	??_UARTInit
  1929  0157  0829               	movf	UARTInit@baud_rate+1,w
  1930  0158  00AE               	movwf	??_UARTInit+1
  1931  0159  082A               	movf	UARTInit@baud_rate+2,w
  1932  015A  00AF               	movwf	??_UARTInit+2
  1933  015B  082B               	movf	UARTInit@baud_rate+3,w
  1934  015C  00B0               	movwf	??_UARTInit+3
  1935  015D  3004               	movlw	4
  1936  015E                     u935:
  1937  015E  1003               	clrc
  1938  015F  0DAD               	rlf	??_UARTInit,f
  1939  0160  0DAE               	rlf	??_UARTInit+1,f
  1940  0161  0DAF               	rlf	??_UARTInit+2,f
  1941  0162  0DB0               	rlf	??_UARTInit+3,f
  1942  0163                     u930:
  1943  0163  3EFF               	addlw	-1
  1944  0164  1D03               	skipz
  1945  0165  295E               	goto	u935
  1946  0166  0830               	movf	??_UARTInit+3,w
  1947  0167  00A3               	movwf	___lldiv@divisor+3
  1948  0168  082F               	movf	??_UARTInit+2,w
  1949  0169  00A2               	movwf	___lldiv@divisor+2
  1950  016A  082E               	movf	??_UARTInit+1,w
  1951  016B  00A1               	movwf	___lldiv@divisor+1
  1952  016C  082D               	movf	??_UARTInit,w
  1953  016D  00A0               	movwf	___lldiv@divisor
  1954  016E  3000               	movlw	0
  1955  016F  00A7               	movwf	___lldiv@dividend+3
  1956  0170  303D               	movlw	61
  1957  0171  00A6               	movwf	___lldiv@dividend+2
  1958  0172  3009               	movlw	9
  1959  0173  00A5               	movwf	___lldiv@dividend+1
  1960  0174  3000               	movlw	0
  1961  0175  00A4               	movwf	___lldiv@dividend
  1962  0176  120A  118A  21FB  120A  118A  	fcall	___lldiv
  1963  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1964  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1965  017D  0820               	movf	?___lldiv,w
  1966  017E  3EFF               	addlw	255
  1967  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0181  0099               	movwf	25	;volatile
  1970  0182                     l1415:
  1971                           
  1972                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  1973  0182  1518               	bsf	24,2	;volatile
  1974  0183                     l1417:
  1975                           
  1976                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  1977  0183  1318               	bcf	24,6	;volatile
  1978  0184                     l1419:
  1979                           
  1980                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  1981  0184  1698               	bsf	24,5	;volatile
  1982  0185                     l1421:
  1983                           
  1984                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  1985  0185  1218               	bcf	24,4	;volatile
  1986  0186                     l1423:
  1987                           
  1988                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  1989  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0188  1798               	bsf	24,7	;volatile
  1992  0189                     l1425:
  1993                           
  1994                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1995  0189  1318               	bcf	24,6	;volatile
  1996  018A                     l1427:
  1997                           
  1998                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  1999  018A  1618               	bsf	24,4	;volatile
  2000  018B                     l1429:
  2001                           
  2002                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  2003  018B  1118               	bcf	24,2	;volatile
  2004  018C                     l1431:
  2005                           
  2006                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  2007  018C  1098               	bcf	24,1	;volatile
  2008  018D                     l1433:
  2009                           
  2010                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  2011  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2012  018E  1303               	bcf	3,6	;RP1=0, select bank1
  2013  018F  1787               	bsf	7,7	;volatile
  2014  0190                     l1435:
  2015                           
  2016                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  2017  0190  1307               	bcf	7,6	;volatile
  2018  0191                     l141:
  2019  0191  0008               	return
  2020  0192                     __end_of_UARTInit:
  2021                           
  2022                           	psect	text9
  2023  031B                     __ptext9:	
  2024 ;; *************** function _I2C_Master_Init *****************
  2025 ;; Defined at:
  2026 ;;		line 16 in file "I2C.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  c               4    8[BANK0 ] const unsigned long 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       4       0       0       0
  2041 ;;      Locals:         0       0       0       0       0
  2042 ;;      Temps:          0       4       0       0       0
  2043 ;;      Totals:         0       8       0       0       0
  2044 ;;Total ram usage:        8 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    2
  2047 ;; This function calls:
  2048 ;;		___lldiv
  2049 ;; This function is called by:
  2050 ;;		_Setup
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _I2C_Master_Init
  2056  031B                     _I2C_Master_Init:
  2057  031B                     l1437:	
  2058                           ;incstack = 0
  2059                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2060                           
  2061                           
  2062                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2063  031B  3028               	movlw	40
  2064  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2065  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2066  031E  0094               	movwf	20	;volatile
  2067  031F                     l1439:
  2068                           
  2069                           ;I2C.c: 19:     SSPCON2 = 0;
  2070  031F  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0320  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0321  0191               	clrf	17	;volatile
  2073  0322                     l1441:
  2074                           
  2075                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2076  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0324  0828               	movf	I2C_Master_Init@c,w
  2079  0325  00AC               	movwf	??_I2C_Master_Init
  2080  0326  0829               	movf	I2C_Master_Init@c+1,w
  2081  0327  00AD               	movwf	??_I2C_Master_Init+1
  2082  0328  082A               	movf	I2C_Master_Init@c+2,w
  2083  0329  00AE               	movwf	??_I2C_Master_Init+2
  2084  032A  082B               	movf	I2C_Master_Init@c+3,w
  2085  032B  00AF               	movwf	??_I2C_Master_Init+3
  2086  032C  3002               	movlw	2
  2087  032D                     u945:
  2088  032D  1003               	clrc
  2089  032E  0DAC               	rlf	??_I2C_Master_Init,f
  2090  032F  0DAD               	rlf	??_I2C_Master_Init+1,f
  2091  0330  0DAE               	rlf	??_I2C_Master_Init+2,f
  2092  0331  0DAF               	rlf	??_I2C_Master_Init+3,f
  2093  0332                     u940:
  2094  0332  3EFF               	addlw	-1
  2095  0333  1D03               	skipz
  2096  0334  2B2D               	goto	u945
  2097  0335  082F               	movf	??_I2C_Master_Init+3,w
  2098  0336  00A3               	movwf	___lldiv@divisor+3
  2099  0337  082E               	movf	??_I2C_Master_Init+2,w
  2100  0338  00A2               	movwf	___lldiv@divisor+2
  2101  0339  082D               	movf	??_I2C_Master_Init+1,w
  2102  033A  00A1               	movwf	___lldiv@divisor+1
  2103  033B  082C               	movf	??_I2C_Master_Init,w
  2104  033C  00A0               	movwf	___lldiv@divisor
  2105  033D  3000               	movlw	0
  2106  033E  00A7               	movwf	___lldiv@dividend+3
  2107  033F  303D               	movlw	61
  2108  0340  00A6               	movwf	___lldiv@dividend+2
  2109  0341  3009               	movlw	9
  2110  0342  00A5               	movwf	___lldiv@dividend+1
  2111  0343  3000               	movlw	0
  2112  0344  00A4               	movwf	___lldiv@dividend
  2113  0345  120A  118A  21FB  120A  118A  	fcall	___lldiv
  2114  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2115  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2116  034C  0820               	movf	?___lldiv,w
  2117  034D  3EFF               	addlw	255
  2118  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2119  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2120  0350  0093               	movwf	19	;volatile
  2121  0351                     l1443:
  2122                           
  2123                           ;I2C.c: 21:     SSPSTAT = 0;
  2124  0351  0194               	clrf	20	;volatile
  2125  0352                     l1445:
  2126                           
  2127                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2128  0352  1587               	bsf	7,3	;volatile
  2129  0353                     l1447:
  2130                           
  2131                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2132  0353  1607               	bsf	7,4	;volatile
  2133  0354                     l96:
  2134  0354  0008               	return
  2135  0355                     __end_of_I2C_Master_Init:
  2136                           
  2137                           	psect	text10
  2138  01FB                     __ptext10:	
  2139 ;; *************** function ___lldiv *****************
  2140 ;; Defined at:
  2141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  divisor         4    0[BANK0 ] unsigned long 
  2144 ;;  dividend        4    4[BANK0 ] unsigned long 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        4    3[COMMON] unsigned long 
  2147 ;;  counter         1    7[COMMON] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  4    0[BANK0 ] unsigned long 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       8       0       0       0
  2158 ;;      Locals:         5       0       0       0       0
  2159 ;;      Temps:          1       0       0       0       0
  2160 ;;      Totals:         6       8       0       0       0
  2161 ;;Total ram usage:       14 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_I2C_Master_Init
  2168 ;;		_UARTInit
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function ___lldiv
  2174  01FB                     ___lldiv:
  2175  01FB                     l1383:	
  2176                           ;incstack = 0
  2177                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2178                           
  2179  01FB  3000               	movlw	0
  2180  01FC  00F6               	movwf	___lldiv@quotient+3
  2181  01FD  3000               	movlw	0
  2182  01FE  00F5               	movwf	___lldiv@quotient+2
  2183  01FF  3000               	movlw	0
  2184  0200  00F4               	movwf	___lldiv@quotient+1
  2185  0201  3000               	movlw	0
  2186  0202  00F3               	movwf	___lldiv@quotient
  2187  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0205  0823               	movf	___lldiv@divisor+3,w
  2190  0206  0422               	iorwf	___lldiv@divisor+2,w
  2191  0207  0421               	iorwf	___lldiv@divisor+1,w
  2192  0208  0420               	iorwf	___lldiv@divisor,w
  2193  0209  1903               	skipnz
  2194  020A  2A0C               	goto	u841
  2195  020B  2A0D               	goto	u840
  2196  020C                     u841:
  2197  020C  2A5A               	goto	l1403
  2198  020D                     u840:
  2199  020D                     l1385:
  2200  020D  01F7               	clrf	___lldiv@counter
  2201  020E  0AF7               	incf	___lldiv@counter,f
  2202  020F  2A1D               	goto	l1389
  2203  0210                     l1387:
  2204  0210  3001               	movlw	1
  2205  0211  00F2               	movwf	??___lldiv
  2206  0212                     u855:
  2207  0212  1003               	clrc
  2208  0213  0DA0               	rlf	___lldiv@divisor,f
  2209  0214  0DA1               	rlf	___lldiv@divisor+1,f
  2210  0215  0DA2               	rlf	___lldiv@divisor+2,f
  2211  0216  0DA3               	rlf	___lldiv@divisor+3,f
  2212  0217  0BF2               	decfsz	??___lldiv,f
  2213  0218  2A12               	goto	u855
  2214  0219  3001               	movlw	1
  2215  021A  00F2               	movwf	??___lldiv
  2216  021B  0872               	movf	??___lldiv,w
  2217  021C  07F7               	addwf	___lldiv@counter,f
  2218  021D                     l1389:
  2219  021D  1FA3               	btfss	___lldiv@divisor+3,7
  2220  021E  2A20               	goto	u861
  2221  021F  2A21               	goto	u860
  2222  0220                     u861:
  2223  0220  2A10               	goto	l1387
  2224  0221                     u860:
  2225  0221                     l1391:
  2226  0221  3001               	movlw	1
  2227  0222  00F2               	movwf	??___lldiv
  2228  0223                     u875:
  2229  0223  1003               	clrc
  2230  0224  0DF3               	rlf	___lldiv@quotient,f
  2231  0225  0DF4               	rlf	___lldiv@quotient+1,f
  2232  0226  0DF5               	rlf	___lldiv@quotient+2,f
  2233  0227  0DF6               	rlf	___lldiv@quotient+3,f
  2234  0228  0BF2               	decfsz	??___lldiv,f
  2235  0229  2A23               	goto	u875
  2236  022A                     l1393:
  2237  022A  0823               	movf	___lldiv@divisor+3,w
  2238  022B  0227               	subwf	___lldiv@dividend+3,w
  2239  022C  1D03               	skipz
  2240  022D  2A38               	goto	u885
  2241  022E  0822               	movf	___lldiv@divisor+2,w
  2242  022F  0226               	subwf	___lldiv@dividend+2,w
  2243  0230  1D03               	skipz
  2244  0231  2A38               	goto	u885
  2245  0232  0821               	movf	___lldiv@divisor+1,w
  2246  0233  0225               	subwf	___lldiv@dividend+1,w
  2247  0234  1D03               	skipz
  2248  0235  2A38               	goto	u885
  2249  0236  0820               	movf	___lldiv@divisor,w
  2250  0237  0224               	subwf	___lldiv@dividend,w
  2251  0238                     u885:
  2252  0238  1C03               	skipc
  2253  0239  2A3B               	goto	u881
  2254  023A  2A3C               	goto	u880
  2255  023B                     u881:
  2256  023B  2A4B               	goto	l1399
  2257  023C                     u880:
  2258  023C                     l1395:
  2259  023C  0820               	movf	___lldiv@divisor,w
  2260  023D  02A4               	subwf	___lldiv@dividend,f
  2261  023E  0821               	movf	___lldiv@divisor+1,w
  2262  023F  1C03               	skipc
  2263  0240  0F21               	incfsz	___lldiv@divisor+1,w
  2264  0241  02A5               	subwf	___lldiv@dividend+1,f
  2265  0242  0822               	movf	___lldiv@divisor+2,w
  2266  0243  1C03               	skipc
  2267  0244  0F22               	incfsz	___lldiv@divisor+2,w
  2268  0245  02A6               	subwf	___lldiv@dividend+2,f
  2269  0246  0823               	movf	___lldiv@divisor+3,w
  2270  0247  1C03               	skipc
  2271  0248  0F23               	incfsz	___lldiv@divisor+3,w
  2272  0249  02A7               	subwf	___lldiv@dividend+3,f
  2273  024A                     l1397:
  2274  024A  1473               	bsf	___lldiv@quotient,0
  2275  024B                     l1399:
  2276  024B  3001               	movlw	1
  2277  024C                     u895:
  2278  024C  1003               	clrc
  2279  024D  0CA3               	rrf	___lldiv@divisor+3,f
  2280  024E  0CA2               	rrf	___lldiv@divisor+2,f
  2281  024F  0CA1               	rrf	___lldiv@divisor+1,f
  2282  0250  0CA0               	rrf	___lldiv@divisor,f
  2283  0251  3EFF               	addlw	-1
  2284  0252  1D03               	skipz
  2285  0253  2A4C               	goto	u895
  2286  0254                     l1401:
  2287  0254  3001               	movlw	1
  2288  0255  02F7               	subwf	___lldiv@counter,f
  2289  0256  1D03               	btfss	3,2
  2290  0257  2A59               	goto	u901
  2291  0258  2A5A               	goto	u900
  2292  0259                     u901:
  2293  0259  2A21               	goto	l1391
  2294  025A                     u900:
  2295  025A                     l1403:
  2296  025A  0876               	movf	___lldiv@quotient+3,w
  2297  025B  00A3               	movwf	?___lldiv+3
  2298  025C  0875               	movf	___lldiv@quotient+2,w
  2299  025D  00A2               	movwf	?___lldiv+2
  2300  025E  0874               	movf	___lldiv@quotient+1,w
  2301  025F  00A1               	movwf	?___lldiv+1
  2302  0260  0873               	movf	___lldiv@quotient,w
  2303  0261  00A0               	movwf	?___lldiv
  2304  0262                     l307:
  2305  0262  0008               	return
  2306  0263                     __end_of___lldiv:
  2307                           
  2308                           	psect	text11
  2309  042B                     __ptext11:	
  2310 ;; *************** function _I2C_Master_Write *****************
  2311 ;; Defined at:
  2312 ;;		line 65 in file "I2C.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  d               2    2[COMMON] unsigned int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         2       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0
  2329 ;;      Totals:         2       0       0       0       0
  2330 ;;Total ram usage:        2 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    2
  2333 ;; This function calls:
  2334 ;;		_I2C_Master_Wait
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;;		_GY_init
  2338 ;;		_GY_Read
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _I2C_Master_Write
  2344  042B                     _I2C_Master_Write:
  2345  042B                     l1291:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2348                           
  2349                           
  2350                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2351  042B  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2352  0430                     l1293:
  2353                           
  2354                           ;I2C.c: 68:     SSPBUF = d;
  2355  0430  0872               	movf	I2C_Master_Write@d,w
  2356  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0433  0093               	movwf	19	;volatile
  2359  0434                     l114:
  2360  0434  0008               	return
  2361  0435                     __end_of_I2C_Master_Write:
  2362                           
  2363                           	psect	text12
  2364  0435                     __ptext12:	
  2365 ;; *************** function _I2C_Master_Stop *****************
  2366 ;; Defined at:
  2367 ;;		line 55 in file "I2C.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    2
  2388 ;; This function calls:
  2389 ;;		_I2C_Master_Wait
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;;		_GY_init
  2393 ;;		_GY_Read
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _I2C_Master_Stop
  2399  0435                     _I2C_Master_Stop:
  2400  0435                     l1295:	
  2401                           ;incstack = 0
  2402                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2403                           
  2404                           
  2405                           ;I2C.c: 57:     I2C_Master_Wait();
  2406  0435  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2407  043A                     l1297:
  2408                           
  2409                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2410  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2411  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2412  043C  1511               	bsf	17,2	;volatile
  2413  043D                     l111:
  2414  043D  0008               	return
  2415  043E                     __end_of_I2C_Master_Stop:
  2416                           
  2417                           	psect	text13
  2418  043E                     __ptext13:	
  2419 ;; *************** function _I2C_Master_Start *****************
  2420 ;; Defined at:
  2421 ;;		line 39 in file "I2C.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    2
  2442 ;; This function calls:
  2443 ;;		_I2C_Master_Wait
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;;		_GY_init
  2447 ;;		_GY_Read
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _I2C_Master_Start
  2453  043E                     _I2C_Master_Start:
  2454  043E                     l1287:	
  2455                           ;incstack = 0
  2456                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2457                           
  2458                           
  2459                           ;I2C.c: 41:     I2C_Master_Wait();
  2460  043E  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2461  0443                     l1289:
  2462                           
  2463                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2464  0443  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0444  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0445  1411               	bsf	17,0	;volatile
  2467  0446                     l105:
  2468  0446  0008               	return
  2469  0447                     __end_of_I2C_Master_Start:
  2470                           
  2471                           	psect	text14
  2472  03BA                     __ptext14:	
  2473 ;; *************** function _I2C_Master_Read *****************
  2474 ;; Defined at:
  2475 ;;		line 74 in file "I2C.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  a               2    2[COMMON] unsigned short 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  temp            2    6[COMMON] unsigned short 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2    2[COMMON] unsigned short 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         2       0       0       0       0
  2490 ;;      Locals:         2       0       0       0       0
  2491 ;;      Temps:          2       0       0       0       0
  2492 ;;      Totals:         6       0       0       0       0
  2493 ;;Total ram usage:        6 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    2
  2496 ;; This function calls:
  2497 ;;		_I2C_Master_Wait
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;;		_GY_Read
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _I2C_Master_Read
  2506  03BA                     _I2C_Master_Read:
  2507  03BA                     l1299:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2510                           
  2511                           
  2512                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2513  03BA  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2514  03BF                     l1301:
  2515                           
  2516                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2517  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2518  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2519  03C1  1591               	bsf	17,3	;volatile
  2520                           
  2521                           ;I2C.c: 79:     I2C_Master_Wait();
  2522  03C2  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2523  03C7                     l1303:
  2524                           
  2525                           ;I2C.c: 80:     temp = SSPBUF;
  2526  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2527  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2528  03C9  0813               	movf	19,w	;volatile
  2529  03CA  00F4               	movwf	??_I2C_Master_Read
  2530  03CB  01F5               	clrf	??_I2C_Master_Read+1
  2531  03CC  0874               	movf	??_I2C_Master_Read,w
  2532  03CD  00F6               	movwf	I2C_Master_Read@temp
  2533  03CE  0875               	movf	??_I2C_Master_Read+1,w
  2534  03CF  00F7               	movwf	I2C_Master_Read@temp+1
  2535  03D0                     l1305:
  2536                           
  2537                           ;I2C.c: 81:     I2C_Master_Wait();
  2538  03D0  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2539  03D5                     l1307:
  2540                           
  2541                           ;I2C.c: 82:     if(a == 1){
  2542  03D5  0372               	decf	I2C_Master_Read@a,w
  2543  03D6  0473               	iorwf	I2C_Master_Read@a+1,w
  2544  03D7  1D03               	btfss	3,2
  2545  03D8  2BDA               	goto	u801
  2546  03D9  2BDB               	goto	u800
  2547  03DA                     u801:
  2548  03DA  2BDF               	goto	l117
  2549  03DB                     u800:
  2550  03DB                     l1309:
  2551                           
  2552                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2553  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2554  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2555  03DD  1291               	bcf	17,5	;volatile
  2556                           
  2557                           ;I2C.c: 84:     }else{
  2558  03DE  2BE2               	goto	l118
  2559  03DF                     l117:
  2560                           
  2561                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2562  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2563  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2564  03E1  1691               	bsf	17,5	;volatile
  2565  03E2                     l118:	
  2566                           ;I2C.c: 86:     }
  2567                           
  2568                           
  2569                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2570  03E2  1611               	bsf	17,4	;volatile
  2571  03E3                     l1311:
  2572                           
  2573                           ;I2C.c: 88:     return temp;
  2574  03E3  0877               	movf	I2C_Master_Read@temp+1,w
  2575  03E4  00F3               	movwf	?_I2C_Master_Read+1
  2576  03E5  0876               	movf	I2C_Master_Read@temp,w
  2577  03E6  00F2               	movwf	?_I2C_Master_Read
  2578  03E7                     l119:
  2579  03E7  0008               	return
  2580  03E8                     __end_of_I2C_Master_Read:
  2581                           
  2582                           	psect	text15
  2583  0412                     __ptext15:	
  2584 ;; *************** function _I2C_Master_Wait *****************
  2585 ;; Defined at:
  2586 ;;		line 32 in file "I2C.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_I2C_Master_Start
  2611 ;;		_I2C_Master_Stop
  2612 ;;		_I2C_Master_Write
  2613 ;;		_I2C_Master_Read
  2614 ;;		_I2C_Master_RepeatedStart
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _I2C_Master_Wait
  2620  0412                     _I2C_Master_Wait:
  2621  0412                     l1167:	
  2622                           ;incstack = 0
  2623                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2624                           
  2625  0412                     l99:	
  2626                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2627                           
  2628  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0414  1914               	btfsc	20,2	;volatile
  2631  0415  2C17               	goto	u561
  2632  0416  2C18               	goto	u560
  2633  0417                     u561:
  2634  0417  2C12               	goto	l99
  2635  0418                     u560:
  2636  0418                     l1169:
  2637  0418  0811               	movf	17,w	;volatile
  2638  0419  391F               	andlw	31
  2639  041A  1D03               	btfss	3,2
  2640  041B  2C1D               	goto	u571
  2641  041C  2C1E               	goto	u570
  2642  041D                     u571:
  2643  041D  2C12               	goto	l99
  2644  041E                     u570:
  2645  041E                     l102:
  2646  041E  0008               	return
  2647  041F                     __end_of_I2C_Master_Wait:
  2648                           
  2649                           	psect	text16
  2650  0447                     __ptext16:	
  2651 ;; *************** function _ISR *****************
  2652 ;; Defined at:
  2653 ;;		line 48 in file "main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		None
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          2       0       0       0       0
  2670 ;;      Totals:         2       0       0       0       0
  2671 ;;Total ram usage:        2 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		Interrupt level 1
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _ISR
  2682  0447                     _ISR:
  2683  0447                     i1l53:
  2684  0447  0871               	movf	??_ISR+1,w
  2685  0448  008A               	movwf	10
  2686  0449  0E70               	swapf	??_ISR,w
  2687  044A  0083               	movwf	3
  2688  044B  0EFE               	swapf	btemp,f
  2689  044C  0E7E               	swapf	btemp,w
  2690  044D  0009               	retfie
  2691  044E                     __end_of_ISR:
  2692  0002                     
  2693                           	psect	intentry
  2694  0004                     __pintentry:	
  2695                           ;incstack = 0
  2696                           ; Regs used in _ISR: []
  2697                           
  2698  0004                     interrupt_function:
  2699  007E                     saved_w	set	btemp
  2700  0004  00FE               	movwf	btemp
  2701  0005  0E03               	swapf	3,w
  2702  0006  00F0               	movwf	??_ISR
  2703  0007  080A               	movf	10,w
  2704  0008  00F1               	movwf	??_ISR+1
  2705  0009  120A  118A  2C47   	ljmp	_ISR
  2706                           
  2707                           	psect	strings
  2708  0400                     __pstrings:
  2709  0400                     stringtab:
  2710  0400                     __stringtab:
  2711                           
  2712                           ;	String table - string pointers are 2 bytes each
  2713  0400  1BFF               	btfsc	btemp+1,7
  2714  0401  2C0A               	ljmp	stringcode
  2715  0402  1383               	bcf	3,7
  2716  0403  187F               	btfsc	btemp+1,0
  2717  0404  1783               	bsf	3,7
  2718  0405  0800               	movf	0,w
  2719  0406  0A84               	incf	4,f
  2720  0407  1903               	skipnz
  2721  0408  0AFF               	incf	btemp+1,f
  2722  0409  0008               	return
  2723  040A                     stringcode:
  2724  040A  087F               	movf	btemp+1,w
  2725  040B  397F               	andlw	127
  2726  040C  008A               	movwf	10
  2727  040D  0804               	movf	4,w
  2728  040E  0A84               	incf	4,f
  2729  040F  1903               	skipnz
  2730  0410  0AFF               	incf	btemp+1,f
  2731  0411  0082               	movwf	2
  2732  0412                     __stringbase:
  2733  0412                     __end_of__stringtab:
  2734                           
  2735                           	psect	stringtext
  2736  0000                     __pstringtext:
  2737  007E                     btemp	set	126	;btemp
  2738  007E                     wtemp0	set	126
  2739                           
  2740                           	psect	config
  2741                           
  2742                           ;Config register CONFIG1 @ 0x2007
  2743                           ;	Oscillator Selection bits
  2744                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2745                           ;	Watchdog Timer Enable bit
  2746                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2747                           ;	Power-up Timer Enable bit
  2748                           ;	PWRTE = OFF, PWRT disabled
  2749                           ;	RE3/MCLR pin function select bit
  2750                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2751                           ;	Code Protection bit
  2752                           ;	CP = OFF, Program memory code protection is disabled
  2753                           ;	Data Code Protection bit
  2754                           ;	CPD = OFF, Data memory code protection is disabled
  2755                           ;	Brown Out Reset Selection bits
  2756                           ;	BOREN = OFF, BOR disabled
  2757                           ;	Internal External Switchover bit
  2758                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2759                           ;	Fail-Safe Clock Monitor Enabled bit
  2760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2761                           ;	Low Voltage Programming Enable bit
  2762                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2763                           ;	In-Circuit Debugger Mode bit
  2764                           ;	DEBUG = 0x1, unprogrammed default
  2765  2007                     	org	8199
  2766  2007  20D4               	dw	8404
  2767                           
  2768                           ;Config register CONFIG2 @ 0x2008
  2769                           ;	Brown-out Reset Selection bit
  2770                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2771                           ;	Flash Program Memory Self Write Enable bits
  2772                           ;	WRT = OFF, Write protection off
  2773  2008                     	org	8200
  2774  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     21      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 


Critical Paths under _main in COMMON

    _intToString->___awmod
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Setup
    _intToString->___awdiv
    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6249
                                             19 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                     _UARTSendString
                        _intToString
 ---------------------------------------------------------------------------------
 (1) _intToString                                          9     9      0    1758
                                              4 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     188
                                              3 COMMON     4     2      2
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                2     2      0    1956
                                             17 BANK0      2     2      0
                    _I2C_Master_Init
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5    1054
                                              8 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     902
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     781
                                              2 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    2074
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _I2C_Master_Init
       ___lldiv
     _UARTInit
       ___lldiv
   _UARTSendString
     _UARTSendChar
   _intToString
     ___awdiv
     ___awmod
     ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 25 19:23:13 2021

        UARTInit@baud_rate 0028                          pc 0002             ___bmul@product 0074  
                       l64 0389                         l67 02C1                         l96 0354  
                       l99 0412                         _Ax 0041               ___awdiv@sign 0021  
                       fsr 0004                        l102 041E                        l111 043D  
                      l105 0446                        l114 0434                        l117 03DF  
                      l141 0191                        l118 03E2                        l119 03E7  
                      l144 0420                        l153 03B9                        l307 0262  
                      l147 042A                        l424 01FA                        l437 031A  
                      l297 03FC                        _GIE 005F                        u600 03FB  
                      u601 03FA                        _ISR 0447                        u710 02C7  
                      u711 02C6                        u560 0418                        u800 03DB  
                      u720 02D2                        u561 0417                        u801 03DA  
                      u721 02D1                        u570 041E                        u810 03B9  
                      u730 02DD                        u571 041D                        u811 03B8  
                      u731 02DC                        u900 025A                        u580 0426  
                      u901 0259                        u581 0425                        u910 0126  
                      u750 02EF                        u590 03EE                        u911 0125  
                      u751 02EE                        u591 03ED                        u840 020D  
                      u920 0134                        u760 02F9                        u841 020C  
                      u761 02F8                        u745 02E1                        u930 0163  
                      u860 0221                        u940 0332                        u780 030C  
                      u861 0220                        u925 012F                        u781 030B  
                      u765 02F5                        u950 0199                        u790 0311  
                      u855 0212                        u935 015E                        u951 0198  
                      u791 0310                        u775 0300                        u880 023C  
                      u960 01A4                        u881 023B                        u945 032D  
                      u961 01A3                        u970 01B5                        u875 0223  
                      u971 01B4                        u885 0238                        u990 01C7  
                      u895 024C                        u991 01C6                        u985 01B9  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
                     ?_ISR 0070                       l1301 03BF                       l1311 03E3  
                     l1303 03C7                       l1305 03D0                       l1401 0254  
                     l1241 02CE                       l1233 02C2                       l1307 03D5  
                     l1403 025A                       l1411 0153                       l1171 0420  
                     l1331 038A                       l1251 02E7                       l1243 02D2  
                     l1235 02C3                       l1309 03DB                       l1421 0185  
                     l1413 0155                       l1501 036F                       l1173 0426  
                     l1333 038D                       l1261 0306                       l1253 02EB  
                     l1245 02D7                       l1237 02C7                       l1181 03F2  
                     l1167 0412                       l1431 018C                       l1423 0186  
                     l1415 0182                       l1407 011F                       l1503 0370  
                     l1335 039F                       l1255 02EF                       l1247 02DD  
                     l1263 030C                       l1239 02CC                       l1183 03F4  
                     l1175 03E9                       l1511 027C                       l1169 0418  
                     l1441 0322                       l1433 018D                       l1425 0189  
                     l1417 0183                       l1409 0126                       l1505 037A  
                     l1337 03A5                       l1265 0311                       l1257 02F9  
                     l1249 02E0                       l1185 03FB                       l1177 03EA  
                     l1521 02C0                       l1513 0281                       l1291 042B  
                     l1443 0351                       l1435 0190                       l1427 018A  
                     l1419 0184                       l1451 0195                       l1267 0316  
                     l1259 02FF                       l1179 03EE                       l1515 0291  
                     l1531 00CF                       l1293 0430                       l1445 0352  
                     l1437 031B                       l1429 018B                       l1461 01A9  
                     l1453 0199                       l1517 02A8                       l1509 0266  
                     l1541 00F0                       l1533 00D4                       l1525 0026  
                     l1287 043E                       l1295 0435                       l1391 0221  
                     l1383 01FB                       l1447 0353                       l1439 031F  
                     l1471 01BF                       l1463 01AD                       l1455 019E  
                     l1519 02BF                       l1543 00F9                       l1535 00DD  
                     l1527 00B5                       l1289 0443                       l1297 043A  
                     l1393 022A                       l1385 020D                       l1481 01DF  
                     l1473 01C3                       l1465 01AF                       l1457 01A0  
                     l1449 0192                       l1545 0107                       l1537 00E2  
                     l1529 00C4                       l1299 03BA                       l1395 023C  
                     l1387 0210                       l1483 01E6                       l1475 01C7  
                     l1467 01B5                       l1459 01A4                       l1547 0112  
                     l1539 00E7                       l1397 024A                       l1389 021D  
                     l1493 0355                       l1477 01D8                       l1469 01B8  
                     l1485 01EC                       l1399 024B                       l1495 0366  
                     l1487 01F1                       l1479 01DE                       l1497 0369  
                     l1489 01F6                       l1499 036C                       u1010 01D8  
                     u1011 01D7                       u1005 01C8                       u1030 01EC  
                     u1031 01EB                       u1015 01D4                       u1040 01F1  
                     u1041 01F0                       u1025 01E0                       u1050 00C1  
                     u1051 00BD                       u1064 00C4                       u1077 00CA  
                     u1087 0376                       _PEIE 005E                       i1l53 0447  
                     _main 0026                       btemp 007E                       start 000C  
        ___bmul@multiplier 0075                      ??_ISR 0070           ?_I2C_Master_Init 0028  
         ?_I2C_Master_Read 0072               ?_intToString 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 01FB  
          __end_of___awmod 031B                      _ANSEL 0188            __end_of___lldiv 0263  
          ___awdiv@divisor 0072            ___awdiv@counter 0020                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _TRISA 0085  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
         __end_of_UARTInit 0192                      _Setup 0355                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 011F                     ??_main 0033          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0072                     ?_Setup 0070         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074           ___awdiv@dividend 0074                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     _Tenvio 0035  
                   ___bmul 03E8                  ??___awdiv 0076                  ??___awmod 0076  
                ??___lldiv 0072    __size_of_UARTSendString 0030           ___awdiv@quotient 0022  
          ___awmod@divisor 0072            ___awmod@counter 0077                     saved_w 007E  
  __end_of__initialization 0022        ___bmul@multiplicand 0072           intToString@value 002C  
         intToString@valor 0027             __pcstackCOMMON 0070              __end_of_Setup 038A  
                ?_UARTInit 0028       __size_of_intToString 005F                    ??_Setup 0031  
               __pbssBANK0 0035                 __pmaintext 0026                    ?___bmul 0072  
               ??_UARTInit 002D                 __pintentry 0004                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0400              ?_UARTSendChar 0070  
                  _Axenvio 003F                    _Ayenvio 0079                    _Azenvio 003D  
                  _Gxenvio 003B                    _Gyenvio 0039                    _Gzenvio 0037  
          __size_of___bmul 0015                    ___awdiv 0192                    ___awmod 02C2  
                  ___lldiv 01FB             _UARTSendString 038A                    _bandera 007B  
                  __ptext1 0263                    __ptext2 03E8                    __ptext3 02C2  
                  __ptext4 0192                    __ptext5 038A                    __ptext6 041F  
                  __ptext7 0355                    __ptext8 011F                    __ptext9 031B  
             __size_of_ISR 0007           ___awmod@dividend 0074   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
     end_of_initialization 0022             ??_UARTSendChar 0072  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 0077  
                _RCSTAbits 0018     __end_of_UARTSendString 03BA           I2C_Master_Init@c 0028  
         I2C_Master_Read@a 0072               __pstringtext 0000                  _PORTAbits 0005  
                _TRISCbits 0087                  _TXSTAbits 0098          intToString@entero 002B  
          ?_UARTSendString 0073             __end_of___bmul 03FD          __size_of_UARTInit 0073  
      start_initialization 000F                __end_of_ISR 044E          ??_I2C_Master_Init 002C  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
                 ??___bmul 0073              ??_intToString 0024       __end_of_UARTSendChar 042B  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
         _I2C_Master_Start 043E           _I2C_Master_Write 042B              UARTSendChar@c 0072  
                 ?___awdiv 0072                   ?___awmod 0072                   ?___lldiv 0020  
                __pstrings 0400        __end_of_intToString 02C2             __size_of_Setup 0035  
        interrupt_function 0004            UARTSendString@i 0075                   _PIR1bits 000C  
                 _UARTInit 011F                __stringbase 0412        I2C_Master_Read@temp 0076  
         ??_UARTSendString 0075      __size_of_UARTSendChar 000C               UARTInit@BRGH 002C  
         __size_of___awdiv 0069           __size_of___awmod 0059           __size_of___lldiv 0068  
              _intToString 0263         __end_of__stringtab 0412            _I2C_Master_Init 031B  
          _I2C_Master_Read 03BA            _I2C_Master_Wait 0412            _I2C_Master_Stop 0435  
                 __ptext10 01FB                   __ptext11 042B                   __ptext12 0435  
                 __ptext13 043E                   __ptext14 03BA                   __ptext15 0412  
                 __ptext16 0447               _UARTSendChar 041F              __size_of_main 00F9  
 __end_of_I2C_Master_Start 0447   __end_of_I2C_Master_Write 0435          UARTSendString@str 0073  
                 intlevel1 0000           ___lldiv@dividend 0024                  stringcode 040A  
  __end_of_I2C_Master_Init 0355    __end_of_I2C_Master_Read 03E8    __end_of_I2C_Master_Wait 041F  
  __end_of_I2C_Master_Stop 043E           ___lldiv@quotient 0073          I2C_Master_Write@d 0072  
                 stringtab 0400                _SSPCON2bits 0091  
