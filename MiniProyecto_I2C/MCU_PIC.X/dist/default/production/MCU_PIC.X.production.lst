

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 01 21:35:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  001A                     _RCREG	set	26
   458  000C                     _PIR1bits	set	12
   459  0019                     _TXREG	set	25
   460  0018                     _RCSTAbits	set	24
   461  0013                     _SSPBUF	set	19
   462  0014                     _SSPCON	set	20
   463  0007                     _PORTC	set	7
   464  0005                     _PORTA	set	5
   465  0005                     _PORTAbits	set	5
   466  0063                     _SSPIF	set	99
   467  005E                     _PEIE	set	94
   468  005F                     _GIE	set	95
   469  0098                     _TXSTAbits	set	152
   470  0099                     _SPBRG	set	153
   471  0091                     _SSPCON2bits	set	145
   472  0087                     _TRISCbits	set	135
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  0087                     _TRISC	set	135
   477  0085                     _TRISA	set	133
   478  048C                     _ACKEN	set	1164
   479  048D                     _ACKDT	set	1165
   480  04A0                     _BF	set	1184
   481  048B                     _RCEN	set	1163
   482  0488                     _SEN	set	1160
   483  0463                     _SSPIE	set	1123
   484  043C                     _TRISC4	set	1084
   485  043B                     _TRISC3	set	1083
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	strings
   490  04C6                     __pstrings:
   491  04C6                     stringtab:
   492  04C6                     __stringtab:
   493  04C6                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  04C6                     stringdir:
   497  04C6  3004               	movlw	high stringdir
   498  04C7  008A               	movwf	10
   499  04C8  0804               	movf	4,w
   500  04C9  0A84               	incf	4,f
   501  04CA  0782               	addwf	2,f
   502  04CB                     __stringbase:
   503  04CB  3400               	retlw	0
   504  04CC                     __end_of__stringtab:
   505  04CC                     STR_4:
   506  04CC  3420               	retlw	32	;' '
   507  04CD  3447               	retlw	71	;'G'
   508  04CE  3478               	retlw	120	;'x'
   509  04CF  3420               	retlw	32	;' '
   510  04D0  3400               	retlw	0
   511  04D1                     STR_2:
   512  04D1  3420               	retlw	32	;' '
   513  04D2  3441               	retlw	65	;'A'
   514  04D3  3479               	retlw	121	;'y'
   515  04D4  3420               	retlw	32	;' '
   516  04D5  3400               	retlw	0
   517  04D6                     STR_5:
   518  04D6  3420               	retlw	32	;' '
   519  04D7  3447               	retlw	71	;'G'
   520  04D8  3479               	retlw	121	;'y'
   521  04D9  3420               	retlw	32	;' '
   522  04DA  3400               	retlw	0
   523  04DB                     STR_3:
   524  04DB  3420               	retlw	32	;' '
   525  04DC  3441               	retlw	65	;'A'
   526  04DD  347A               	retlw	122	;'z'
   527  04DE  3420               	retlw	32	;' '
   528  04DF  3400               	retlw	0
   529  04E0                     STR_6:
   530  04E0  3420               	retlw	32	;' '
   531  04E1  3447               	retlw	71	;'G'
   532  04E2  347A               	retlw	122	;'z'
   533  04E3  3420               	retlw	32	;' '
   534  04E4  3400               	retlw	0
   535  04E5                     STR_7:
   536  04E5  3420               	retlw	32	;' '
   537  04E6  3454               	retlw	84	;'T'
   538  04E7  3420               	retlw	32	;' '
   539  04E8  3400               	retlw	0
   540  04E9                     STR_1:
   541  04E9  3441               	retlw	65	;'A'
   542  04EA  3478               	retlw	120	;'x'
   543  04EB  3420               	retlw	32	;' '
   544  04EC  3400               	retlw	0
   545  04ED                     STR_8:
   546  04ED  340A               	retlw	10
   547  04EE  3400               	retlw	0
   548                           
   549                           	psect	cinit
   550  000F                     start_initialization:	
   551                           ; #config settings
   552                           
   553  000F                     __initialization:
   554                           
   555                           ; Clear objects allocated to BANK0
   556  000F  1383               	bcf	3,7	;select IRP bank0
   557  0010  3020               	movlw	low __pbssBANK0
   558  0011  0084               	movwf	4
   559  0012  303C               	movlw	low (__pbssBANK0+28)
   560  0013  120A  118A  25C6  120A  118A  	fcall	clear_ram0
   561  0018                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  0018                     __end_of__initialization:
   565  0018  0183               	clrf	3
   566  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bssBANK0
   569  0020                     __pbssBANK0:
   570  0020                     _Tenvio:
   571  0020                     	ds	2
   572  0022                     _Gzenvio:
   573  0022                     	ds	2
   574  0024                     _Gyenvio:
   575  0024                     	ds	2
   576  0026                     _Gxenvio:
   577  0026                     	ds	2
   578  0028                     _Azenvio:
   579  0028                     	ds	2
   580  002A                     _Ayenvio:
   581  002A                     	ds	2
   582  002C                     _Axenvio:
   583  002C                     	ds	2
   584  002E                     _T:
   585  002E                     	ds	2
   586  0030                     _Gz:
   587  0030                     	ds	2
   588  0032                     _Gy:
   589  0032                     	ds	2
   590  0034                     _Gx:
   591  0034                     	ds	2
   592  0036                     _Az:
   593  0036                     	ds	2
   594  0038                     _Ay:
   595  0038                     	ds	2
   596  003A                     _Ax:
   597  003A                     	ds	2
   598                           
   599                           	psect	clrtext
   600  05C6                     clear_ram0:	
   601                           ;	Called with FSR containing the base address, and
   602                           ;	W with the last address+1
   603                           
   604  05C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   605  05C7                     clrloop0:
   606  05C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   607  05C8  0A84               	incf	4,f	;increment pointer
   608  05C9  0604               	xorwf	4,w	;XOR with final address
   609  05CA  1903               	btfsc	3,2	;have we reached the end yet?
   610  05CB  3400               	retlw	0	;all done for this memory range, return
   611  05CC  0604               	xorwf	4,w	;XOR again to restore value
   612  05CD  2DC7               	goto	clrloop0	;do the next byte
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:
   616  0070                     ?_Setup:
   617  0070                     ?_I2C_Start:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_I2C_Master_Stop:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_I2C_Read:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_intToString:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_UARTSendString:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_ACK:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_NACK:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_ISR:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_ISR:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_UARTSendChar:	
   651                           ; 1 bytes @ 0x0
   652                           
   653                           
   654                           ; 1 bytes @ 0x0
   655  0070                     	ds	2
   656  0072                     ?_I2C_Master_Write:
   657  0072                     ??_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0072                     ??_I2C_Read:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0072                     ??_I2C_ACK:	
   664                           ; 1 bytes @ 0x2
   665                           
   666  0072                     ??_I2C_NACK:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ??_I2C_Master_Wait:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0072                     ??_UARTSendChar:	
   673                           ; 1 bytes @ 0x2
   674                           
   675  0072                     ?___bmul:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     ?___awdiv:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     ?___awmod:	
   682                           ; 2 bytes @ 0x2
   683                           
   684  0072                     ?___lldiv:	
   685                           ; 2 bytes @ 0x2
   686                           
   687  0072                     UARTSendChar@c:	
   688                           ; 4 bytes @ 0x2
   689                           
   690  0072                     ___bmul@multiplicand:	
   691                           ; 1 bytes @ 0x2
   692                           
   693  0072                     I2C_Master_Write@d:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0072                     ___awdiv@divisor:	
   697                           ; 2 bytes @ 0x2
   698                           
   699  0072                     ___awmod@divisor:	
   700                           ; 2 bytes @ 0x2
   701                           
   702  0072                     ___lldiv@divisor:	
   703                           ; 2 bytes @ 0x2
   704                           
   705                           
   706                           ; 4 bytes @ 0x2
   707  0072                     	ds	1
   708  0073                     ??_UARTSendString:
   709  0073                     ??___bmul:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0073                     I2C_Read@ACK_NACK:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0073                     UARTSendString@i:	
   716                           ; 1 bytes @ 0x3
   717                           
   718                           
   719                           ; 2 bytes @ 0x3
   720  0073                     	ds	1
   721  0074                     ??_I2C_Start:
   722  0074                     ??_I2C_Master_Write:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     I2C_Read@Data:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ___bmul@product:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     ___awdiv@dividend:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ___awmod@dividend:	
   735                           ; 2 bytes @ 0x4
   736                           
   737                           
   738                           ; 2 bytes @ 0x4
   739  0074                     	ds	1
   740  0075                     UARTSendString@str:
   741  0075                     ___bmul@multiplier:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 1 bytes @ 0x5
   746  0075                     	ds	1
   747  0076                     ??___awdiv:
   748  0076                     ??___awmod:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0076                     I2C_Start@add:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0076                     ___lldiv@dividend:	
   755                           ; 1 bytes @ 0x6
   756                           
   757                           
   758                           ; 4 bytes @ 0x6
   759  0076                     	ds	1
   760  0077                     ___awdiv@counter:
   761  0077                     ___awmod@counter:	
   762                           ; 1 bytes @ 0x7
   763                           
   764                           
   765                           ; 1 bytes @ 0x7
   766  0077                     	ds	1
   767  0078                     ___awdiv@sign:
   768  0078                     ___awmod@sign:	
   769                           ; 1 bytes @ 0x8
   770                           
   771                           
   772                           ; 1 bytes @ 0x8
   773  0078                     	ds	1
   774  0079                     ___awdiv@quotient:
   775                           
   776                           ; 2 bytes @ 0x9
   777  0079                     	ds	1
   778  007A                     ??___lldiv:
   779                           
   780                           ; 1 bytes @ 0xA
   781  007A                     	ds	1
   782  007B                     ??_Setup:
   783                           
   784                           	psect	cstackBANK0
   785  003C                     __pcstackBANK0:	
   786                           ; 1 bytes @ 0xB
   787                           
   788  003C                     ??_intToString:
   789  003C                     ___lldiv@quotient:	
   790                           ; 1 bytes @ 0x0
   791                           
   792                           
   793                           ; 4 bytes @ 0x0
   794  003C                     	ds	3
   795  003F                     intToString@valor:
   796                           
   797                           ; 4 bytes @ 0x3
   798  003F                     	ds	1
   799  0040                     ___lldiv@counter:
   800                           
   801                           ; 1 bytes @ 0x4
   802  0040                     	ds	1
   803  0041                     ?_I2C_Master_Init:
   804  0041                     ?_UARTInit:	
   805                           ; 1 bytes @ 0x5
   806                           
   807  0041                     I2C_Master_Init@c:	
   808                           ; 1 bytes @ 0x5
   809                           
   810  0041                     UARTInit@baud_rate:	
   811                           ; 4 bytes @ 0x5
   812                           
   813                           
   814                           ; 4 bytes @ 0x5
   815  0041                     	ds	2
   816  0043                     intToString@entero:
   817                           
   818                           ; 1 bytes @ 0x7
   819  0043                     	ds	1
   820  0044                     intToString@value:
   821                           
   822                           ; 1 bytes @ 0x8
   823  0044                     	ds	1
   824  0045                     ??_I2C_Master_Init:
   825  0045                     UARTInit@BRGH:	
   826                           ; 1 bytes @ 0x9
   827                           
   828                           
   829                           ; 1 bytes @ 0x9
   830  0045                     	ds	1
   831  0046                     ??_UARTInit:
   832                           
   833                           ; 1 bytes @ 0xA
   834  0046                     	ds	4
   835  004A                     ??_main:
   836                           
   837                           ; 1 bytes @ 0xE
   838  004A                     	ds	4
   839                           
   840                           	psect	maintext
   841  001C                     __pmaintext:	
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 52 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : B00/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       4       0       0       0
   864 ;;      Totals:         0       4       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels required when called:    4
   867 ;; This function calls:
   868 ;;		_I2C_Master_Init
   869 ;;		_I2C_Master_Stop
   870 ;;		_I2C_Master_Write
   871 ;;		_I2C_Read
   872 ;;		_I2C_Start
   873 ;;		_Setup
   874 ;;		_UARTSendString
   875 ;;		_intToString
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _main
   883  001C                     _main:
   884  001C                     l1496:	
   885                           ;incstack = 0
   886                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   887                           
   888                           
   889                           ;main.c: 53: 
   890  001C  120A  118A  253B  120A  118A  	fcall	_Setup
   891  0021                     l1498:
   892                           
   893                           ;main.c: 58: 
   894  0021  3082               	movlw	130
   895  0022  1283               	bcf	3,5	;RP0=0, select bank0
   896  0023  1303               	bcf	3,6	;RP1=0, select bank0
   897  0024  00CB               	movwf	??_main+1
   898  0025  30DD               	movlw	221
   899  0026  00CA               	movwf	??_main
   900  0027                     u947:
   901  0027  0BCA               	decfsz	??_main,f
   902  0028  2827               	goto	u947
   903  0029  0BCB               	decfsz	??_main+1,f
   904  002A  2827               	goto	u947
   905  002B                     l1500:
   906                           
   907                           ;main.c: 59:         Axenvio = 0;
   908  002B  3000               	movlw	0
   909  002C  1283               	bcf	3,5	;RP0=0, select bank0
   910  002D  1303               	bcf	3,6	;RP1=0, select bank0
   911  002E  00C4               	movwf	I2C_Master_Init@c+3
   912  002F  3001               	movlw	1
   913  0030  00C3               	movwf	I2C_Master_Init@c+2
   914  0031  3086               	movlw	134
   915  0032  00C2               	movwf	I2C_Master_Init@c+1
   916  0033  30A0               	movlw	160
   917  0034  00C1               	movwf	I2C_Master_Init@c
   918  0035  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Init
   919  003A                     l1502:
   920                           
   921                           ;main.c: 61:         Azenvio = 0;
   922  003A  30D0               	movlw	208
   923  003B  120A  118A  255D  120A  118A  	fcall	_I2C_Start
   924  0040                     l1504:
   925                           
   926                           ;main.c: 62:         Gxenvio = 0;
   927  0040  3019               	movlw	25
   928  0041  00F2               	movwf	I2C_Master_Write@d
   929  0042  3000               	movlw	0
   930  0043  00F3               	movwf	I2C_Master_Write@d+1
   931  0044  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   932  0049                     l1506:
   933                           
   934                           ;main.c: 63:         Gyenvio = 0;
   935  0049  3007               	movlw	7
   936  004A  00F2               	movwf	I2C_Master_Write@d
   937  004B  3000               	movlw	0
   938  004C  00F3               	movwf	I2C_Master_Write@d+1
   939  004D  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   940  0052                     l1508:
   941                           
   942                           ;main.c: 64:         Gzenvio = 0;
   943  0052  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
   944  0057                     l1510:
   945                           
   946                           ;main.c: 67: 
   947  0057  30D0               	movlw	208
   948  0058  120A  118A  255D  120A  118A  	fcall	_I2C_Start
   949  005D                     l1512:
   950                           
   951                           ;main.c: 68:         PORTAbits.RA0 = ~PORTAbits.RA0;
   952  005D  306B               	movlw	107
   953  005E  00F2               	movwf	I2C_Master_Write@d
   954  005F  3000               	movlw	0
   955  0060  00F3               	movwf	I2C_Master_Write@d+1
   956  0061  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   957  0066                     l1514:
   958                           
   959                           ;main.c: 69: 
   960  0066  3001               	movlw	1
   961  0067  00F2               	movwf	I2C_Master_Write@d
   962  0068  3000               	movlw	0
   963  0069  00F3               	movwf	I2C_Master_Write@d+1
   964  006A  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   965  006F                     l1516:
   966                           
   967                           ;main.c: 70:         _delay((unsigned long)((50)*(4000000/4000.0)));
   968  006F  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
   969  0074                     l1518:
   970                           
   971                           ;main.c: 73:         I2C_Master_Write(0x3B);
   972  0074  30D0               	movlw	208
   973  0075  120A  118A  255D  120A  118A  	fcall	_I2C_Start
   974  007A                     l1520:
   975                           
   976                           ;main.c: 74:         I2C_Master_Stop();
   977  007A  301A               	movlw	26
   978  007B  00F2               	movwf	I2C_Master_Write@d
   979  007C  3000               	movlw	0
   980  007D  00F3               	movwf	I2C_Master_Write@d+1
   981  007E  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   982  0083                     l1522:
   983                           
   984                           ;main.c: 75:         I2C_Start(0xD1);
   985  0083  3000               	movlw	0
   986  0084  00F2               	movwf	I2C_Master_Write@d
   987  0085  00F3               	movwf	I2C_Master_Write@d+1
   988  0086  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
   989  008B                     l1524:
   990                           
   991                           ;main.c: 76: 
   992  008B  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
   993  0090                     l1526:
   994                           
   995                           ;main.c: 79:         Az = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
   996  0090  30D0               	movlw	208
   997  0091  120A  118A  255D  120A  118A  	fcall	_I2C_Start
   998  0096                     l1528:
   999                           
  1000                           ;main.c: 80:         T = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1001  0096  301C               	movlw	28
  1002  0097  00F2               	movwf	I2C_Master_Write@d
  1003  0098  3000               	movlw	0
  1004  0099  00F3               	movwf	I2C_Master_Write@d+1
  1005  009A  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  1006  009F                     l1530:
  1007                           
  1008                           ;main.c: 81:         Gx = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1009  009F  3000               	movlw	0
  1010  00A0  00F2               	movwf	I2C_Master_Write@d
  1011  00A1  00F3               	movwf	I2C_Master_Write@d+1
  1012  00A2  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  1013  00A7                     l1532:
  1014                           
  1015                           ;main.c: 82:         Gy = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1016  00A7  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
  1017  00AC                     l1534:
  1018                           
  1019                           ;main.c: 85:         I2C_Master_Stop();
  1020  00AC  30D0               	movlw	208
  1021  00AD  120A  118A  255D  120A  118A  	fcall	_I2C_Start
  1022  00B2                     l1536:
  1023                           
  1024                           ;main.c: 86: 
  1025  00B2  301B               	movlw	27
  1026  00B3  00F2               	movwf	I2C_Master_Write@d
  1027  00B4  3000               	movlw	0
  1028  00B5  00F3               	movwf	I2C_Master_Write@d+1
  1029  00B6  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  1030  00BB                     l1538:
  1031                           
  1032                           ;main.c: 87:         Axenvio = intToString(Ax);
  1033  00BB  3018               	movlw	24
  1034  00BC  00F2               	movwf	I2C_Master_Write@d
  1035  00BD  3000               	movlw	0
  1036  00BE  00F3               	movwf	I2C_Master_Write@d+1
  1037  00BF  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  1038  00C4                     l1540:
  1039                           
  1040                           ;main.c: 88:         Ayenvio = intToString(Ay);
  1041  00C4  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
  1042  00C9                     l1542:
  1043                           
  1044                           ;main.c: 90:         Gxenvio = intToString(Gx);
  1045  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1046  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1047  00CB  01AC               	clrf	_Axenvio
  1048  00CC  01AD               	clrf	_Axenvio+1
  1049  00CD                     l1544:
  1050                           
  1051                           ;main.c: 91:         Gyenvio = intToString(Gy);
  1052  00CD  01AA               	clrf	_Ayenvio
  1053  00CE  01AB               	clrf	_Ayenvio+1
  1054  00CF                     l1546:
  1055                           
  1056                           ;main.c: 92:         Gzenvio = intToString(Gz);
  1057  00CF  01A8               	clrf	_Azenvio
  1058  00D0  01A9               	clrf	_Azenvio+1
  1059  00D1                     l1548:
  1060                           
  1061                           ;main.c: 93:         Tenvio = intToString(T);
  1062  00D1  01A6               	clrf	_Gxenvio
  1063  00D2  01A7               	clrf	_Gxenvio+1
  1064  00D3                     l1550:
  1065                           
  1066                           ;main.c: 94: 
  1067  00D3  01A4               	clrf	_Gyenvio
  1068  00D4  01A5               	clrf	_Gyenvio+1
  1069  00D5                     l1552:
  1070                           
  1071                           ;main.c: 95:         UARTSendString("Ax ");
  1072  00D5  01A2               	clrf	_Gzenvio
  1073  00D6  01A3               	clrf	_Gzenvio+1
  1074  00D7                     l1554:
  1075                           
  1076                           ;main.c: 96:         UARTSendString(Axenvio);
  1077  00D7  01A0               	clrf	_Tenvio
  1078  00D8  01A1               	clrf	_Tenvio+1
  1079  00D9                     l1556:
  1080                           
  1081                           ;main.c: 99:         UARTSendString(" Az ");
  1082  00D9  1003               	clrc
  1083  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1084  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1085  00DC  1C05               	btfss	5,0	;volatile
  1086  00DD  1403               	setc
  1087  00DE  1803               	btfsc	3,0
  1088  00DF  28E1               	goto	u911
  1089  00E0  28E5               	goto	u910
  1090  00E1                     u911:
  1091  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00E3  1405               	bsf	5,0	;volatile
  1094  00E4  28E8               	goto	u924
  1095  00E5                     u910:
  1096  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1097  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1098  00E7  1005               	bcf	5,0	;volatile
  1099  00E8                     u924:
  1100  00E8                     l1558:
  1101                           
  1102                           ;main.c: 101:         UARTSendString(" Gx ");
  1103  00E8  3041               	movlw	65
  1104  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1105  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1106  00EB  00CB               	movwf	??_main+1
  1107  00EC  30ED               	movlw	237
  1108  00ED  00CA               	movwf	??_main
  1109  00EE                     u957:
  1110  00EE  0BCA               	decfsz	??_main,f
  1111  00EF  28EE               	goto	u957
  1112  00F0  0BCB               	decfsz	??_main+1,f
  1113  00F1  28EE               	goto	u957
  1114  00F2  28F3               	nop2
  1115  00F3                     l1560:
  1116                           
  1117                           ;main.c: 103:         UARTSendString(" Gy ");
  1118  00F3  30D0               	movlw	208
  1119  00F4  120A  118A  255D  120A  118A  	fcall	_I2C_Start
  1120  00F9                     l1562:
  1121                           
  1122                           ;main.c: 104:         UARTSendString(Gyenvio);
  1123  00F9  303B               	movlw	59
  1124  00FA  00F2               	movwf	I2C_Master_Write@d
  1125  00FB  3000               	movlw	0
  1126  00FC  00F3               	movwf	I2C_Master_Write@d+1
  1127  00FD  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  1128  0102                     l1564:
  1129                           
  1130                           ;main.c: 105:         UARTSendString(" Gz ");
  1131  0102  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
  1132  0107                     l1566:
  1133                           
  1134                           ;main.c: 106:         UARTSendString(Gzenvio);
  1135  0107  30D1               	movlw	209
  1136  0108  120A  118A  255D  120A  118A  	fcall	_I2C_Start
  1137  010D                     l1568:
  1138                           
  1139                           ;main.c: 108:         UARTSendString(Tenvio);
  1140  010D  3000               	movlw	0
  1141  010E  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1142  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0115  00CA               	movwf	??_main
  1145  0116  01CB               	clrf	??_main+1
  1146  0117  3000               	movlw	0
  1147  0118  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1148  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1149  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1150  011F  00CC               	movwf	??_main+2
  1151  0120  01CD               	clrf	??_main+3
  1152  0121  084C               	movf	??_main+2,w
  1153  0122  00CD               	movwf	??_main+3
  1154  0123  01CC               	clrf	??_main+2
  1155  0124  084A               	movf	??_main,w
  1156  0125  044C               	iorwf	??_main+2,w
  1157  0126  00BA               	movwf	_Ax
  1158  0127  084B               	movf	??_main+1,w
  1159  0128  044D               	iorwf	??_main+3,w
  1160  0129  00BB               	movwf	_Ax+1
  1161  012A                     l1570:
  1162                           
  1163                           ;main.c: 109:         UARTSendString("\n");
  1164  012A  3000               	movlw	0
  1165  012B  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1166  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0132  00CA               	movwf	??_main
  1169  0133  01CB               	clrf	??_main+1
  1170  0134  3000               	movlw	0
  1171  0135  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1172  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1173  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1174  013C  00CC               	movwf	??_main+2
  1175  013D  01CD               	clrf	??_main+3
  1176  013E  084C               	movf	??_main+2,w
  1177  013F  00CD               	movwf	??_main+3
  1178  0140  01CC               	clrf	??_main+2
  1179  0141  084A               	movf	??_main,w
  1180  0142  044C               	iorwf	??_main+2,w
  1181  0143  00B8               	movwf	_Ay
  1182  0144  084B               	movf	??_main+1,w
  1183  0145  044D               	iorwf	??_main+3,w
  1184  0146  00B9               	movwf	_Ay+1
  1185  0147                     l1572:
  1186                           
  1187                           ;main.c: 110: 
  1188  0147  3000               	movlw	0
  1189  0148  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1190  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1191  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1192  014F  00CA               	movwf	??_main
  1193  0150  01CB               	clrf	??_main+1
  1194  0151  3000               	movlw	0
  1195  0152  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1196  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0159  00CC               	movwf	??_main+2
  1199  015A  01CD               	clrf	??_main+3
  1200  015B  084C               	movf	??_main+2,w
  1201  015C  00CD               	movwf	??_main+3
  1202  015D  01CC               	clrf	??_main+2
  1203  015E  084A               	movf	??_main,w
  1204  015F  044C               	iorwf	??_main+2,w
  1205  0160  00B6               	movwf	_Az
  1206  0161  084B               	movf	??_main+1,w
  1207  0162  044D               	iorwf	??_main+3,w
  1208  0163  00B7               	movwf	_Az+1
  1209  0164                     l1574:
  1210                           
  1211                           ;main.c: 111:     }
  1212  0164  3000               	movlw	0
  1213  0165  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1214  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1215  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1216  016C  00CA               	movwf	??_main
  1217  016D  01CB               	clrf	??_main+1
  1218  016E  3000               	movlw	0
  1219  016F  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1220  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0176  00CC               	movwf	??_main+2
  1223  0177  01CD               	clrf	??_main+3
  1224  0178  084C               	movf	??_main+2,w
  1225  0179  00CD               	movwf	??_main+3
  1226  017A  01CC               	clrf	??_main+2
  1227  017B  084A               	movf	??_main,w
  1228  017C  044C               	iorwf	??_main+2,w
  1229  017D  00AE               	movwf	_T
  1230  017E  084B               	movf	??_main+1,w
  1231  017F  044D               	iorwf	??_main+3,w
  1232  0180  00AF               	movwf	_T+1
  1233  0181                     l1576:
  1234                           
  1235                           ;main.c: 112: 
  1236  0181  3000               	movlw	0
  1237  0182  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1238  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0189  00CA               	movwf	??_main
  1241  018A  01CB               	clrf	??_main+1
  1242  018B  3000               	movlw	0
  1243  018C  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1244  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0193  00CC               	movwf	??_main+2
  1247  0194  01CD               	clrf	??_main+3
  1248  0195  084C               	movf	??_main+2,w
  1249  0196  00CD               	movwf	??_main+3
  1250  0197  01CC               	clrf	??_main+2
  1251  0198  084A               	movf	??_main,w
  1252  0199  044C               	iorwf	??_main+2,w
  1253  019A  00B4               	movwf	_Gx
  1254  019B  084B               	movf	??_main+1,w
  1255  019C  044D               	iorwf	??_main+3,w
  1256  019D  00B5               	movwf	_Gx+1
  1257  019E                     l1578:
  1258                           
  1259                           ;main.c: 113: 
  1260  019E  3000               	movlw	0
  1261  019F  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1262  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1263  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1264  01A6  00CA               	movwf	??_main
  1265  01A7  01CB               	clrf	??_main+1
  1266  01A8  3000               	movlw	0
  1267  01A9  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1268  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01B0  00CC               	movwf	??_main+2
  1271  01B1  01CD               	clrf	??_main+3
  1272  01B2  084C               	movf	??_main+2,w
  1273  01B3  00CD               	movwf	??_main+3
  1274  01B4  01CC               	clrf	??_main+2
  1275  01B5  084A               	movf	??_main,w
  1276  01B6  044C               	iorwf	??_main+2,w
  1277  01B7  00B2               	movwf	_Gy
  1278  01B8  084B               	movf	??_main+1,w
  1279  01B9  044D               	iorwf	??_main+3,w
  1280  01BA  00B3               	movwf	_Gy+1
  1281  01BB                     l1580:
  1282                           
  1283                           ;main.c: 114:     return;
  1284  01BB  3001               	movlw	1
  1285  01BC  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1286  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1287  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1288  01C3  00CA               	movwf	??_main
  1289  01C4  01CB               	clrf	??_main+1
  1290  01C5  3000               	movlw	0
  1291  01C6  120A  118A  24EF  120A  118A  	fcall	_I2C_Read
  1292  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1293  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1294  01CD  00CC               	movwf	??_main+2
  1295  01CE  01CD               	clrf	??_main+3
  1296  01CF  084C               	movf	??_main+2,w
  1297  01D0  00CD               	movwf	??_main+3
  1298  01D1  01CC               	clrf	??_main+2
  1299  01D2  084A               	movf	??_main,w
  1300  01D3  044C               	iorwf	??_main+2,w
  1301  01D4  00B0               	movwf	_Gz
  1302  01D5  084B               	movf	??_main+1,w
  1303  01D6  044D               	iorwf	??_main+3,w
  1304  01D7  00B1               	movwf	_Gz+1
  1305  01D8                     l1582:
  1306                           
  1307                           ;main.c: 116: 
  1308  01D8  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Stop
  1309  01DD                     l1584:
  1310                           
  1311                           ;main.c: 118: 
  1312  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1313  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1314  01DF  083A               	movf	_Ax,w
  1315  01E0  120A  118A  23D6  120A  118A  	fcall	_intToString
  1316  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1317  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1318  01E7  00AC               	movwf	_Axenvio
  1319  01E8  3000               	movlw	0
  1320  01E9  00AD               	movwf	_Axenvio+1
  1321  01EA                     l1586:
  1322                           
  1323                           ;main.c: 119:     UARTInit(9600, 1);
  1324  01EA  0838               	movf	_Ay,w
  1325  01EB  120A  118A  23D6  120A  118A  	fcall	_intToString
  1326  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1327  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1328  01F2  00AA               	movwf	_Ayenvio
  1329  01F3  3000               	movlw	0
  1330  01F4  00AB               	movwf	_Ayenvio+1
  1331  01F5                     l1588:
  1332                           
  1333                           ;main.c: 120: 
  1334  01F5  0836               	movf	_Az,w
  1335  01F6  120A  118A  23D6  120A  118A  	fcall	_intToString
  1336  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1337  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1338  01FD  00A8               	movwf	_Azenvio
  1339  01FE  3000               	movlw	0
  1340  01FF  00A9               	movwf	_Azenvio+1
  1341  0200                     l1590:
  1342                           
  1343                           ;main.c: 121: 
  1344  0200  0834               	movf	_Gx,w
  1345  0201  120A  118A  23D6  120A  118A  	fcall	_intToString
  1346  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0208  00A6               	movwf	_Gxenvio
  1349  0209  3000               	movlw	0
  1350  020A  00A7               	movwf	_Gxenvio+1
  1351  020B                     l1592:
  1352                           
  1353                           ;main.c: 122:     TRISA = 0;
  1354  020B  0832               	movf	_Gy,w
  1355  020C  120A  118A  23D6  120A  118A  	fcall	_intToString
  1356  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0213  00A4               	movwf	_Gyenvio
  1359  0214  3000               	movlw	0
  1360  0215  00A5               	movwf	_Gyenvio+1
  1361  0216                     l1594:
  1362                           
  1363                           ;main.c: 123:     PORTA = 0;
  1364  0216  0830               	movf	_Gz,w
  1365  0217  120A  118A  23D6  120A  118A  	fcall	_intToString
  1366  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1367  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1368  021E  00A2               	movwf	_Gzenvio
  1369  021F  3000               	movlw	0
  1370  0220  00A3               	movwf	_Gzenvio+1
  1371  0221                     l1596:
  1372                           
  1373                           ;main.c: 124:     TRISC = 0;
  1374  0221  082E               	movf	_T,w
  1375  0222  120A  118A  23D6  120A  118A  	fcall	_intToString
  1376  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0229  00A0               	movwf	_Tenvio
  1379  022A  3000               	movlw	0
  1380  022B  00A1               	movwf	_Tenvio+1
  1381  022C                     l1598:
  1382                           
  1383                           ;main.c: 126:     ANSEL = 0;
  1384  022C  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1385  022D  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1386  0232                     l1600:
  1387                           
  1388                           ;main.c: 127:     ANSELH = 0;
  1389  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0234  082C               	movf	_Axenvio,w
  1392  0235  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1393  023A                     l1602:
  1394                           
  1395                           ;main.c: 128: 
  1396  023A  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1397  023B  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1398  0240                     l1604:
  1399                           
  1400                           ;main.c: 129: 
  1401  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0242  082A               	movf	_Ayenvio,w
  1404  0243  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1405  0248                     l1606:
  1406                           
  1407                           ;main.c: 130: 
  1408  0248  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1409  0249  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1410  024E                     l1608:
  1411                           
  1412                           ;main.c: 131: 
  1413  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1414  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0250  0828               	movf	_Azenvio,w
  1416  0251  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1417  0256                     l1610:
  1418                           
  1419                           ;main.c: 132: 
  1420  0256  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1421  0257  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1422  025C                     l1612:
  1423                           
  1424                           ;main.c: 133: 
  1425  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1426  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1427  025E  0826               	movf	_Gxenvio,w
  1428  025F  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1429  0264                     l1614:
  1430                           
  1431                           ;main.c: 134: 
  1432  0264  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1433  0265  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1434  026A                     l1616:
  1435                           
  1436                           ;main.c: 135:     return;
  1437  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1438  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1439  026C  0824               	movf	_Gyenvio,w
  1440  026D  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1441  0272                     l1618:
  1442                           
  1443                           ;main.c: 136: }
  1444  0272  3015               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1445  0273  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1446  0278                     l1620:
  1447                           
  1448                           ;main.c: 137: 
  1449  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1451  027A  0822               	movf	_Gzenvio,w
  1452  027B  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1453  0280                     l1622:
  1454                           
  1455                           ;main.c: 138: char* intToString(uint8_t value) {
  1456  0280  301A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1457  0281  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1458  0286                     l1624:
  1459                           
  1460                           ;main.c: 139:     char valor[4];
  1461  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0288  0820               	movf	_Tenvio,w
  1464  0289  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1465  028E                     l1626:
  1466                           
  1467                           ;main.c: 140: 
  1468  028E  3022               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1469  028F  120A  118A  2516  120A  118A  	fcall	_UARTSendString
  1470  0294  28D9               	goto	l1556
  1471  0295  120A  118A  280C   	ljmp	start
  1472  0298                     __end_of_main:
  1473                           
  1474                           	psect	text1
  1475  03D6                     __ptext1:	
  1476 ;; *************** function _intToString *****************
  1477 ;; Defined at:
  1478 ;;		line 169 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  value           1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  value           1    8[BANK0 ] unsigned char 
  1483 ;;  valor           4    3[BANK0 ] unsigned char [4]
  1484 ;;  entero          1    7[BANK0 ] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      PTR unsigned char 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, pclath, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       0       0       0       0
  1495 ;;      Locals:         0       6       0       0       0
  1496 ;;      Temps:          0       3       0       0       0
  1497 ;;      Totals:         0       9       0       0       0
  1498 ;;Total ram usage:        9 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    2
  1501 ;; This function calls:
  1502 ;;		___awdiv
  1503 ;;		___awmod
  1504 ;;		___bmul
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _intToString
  1512  03D6                     _intToString:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _intToString: [wreg+status,2+status,0+pclath+cstack]
  1516                           ;intToString@value stored from wreg
  1517  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1518  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1519  03D8  00C4               	movwf	intToString@value
  1520  03D9                     l1472:
  1521  03D9  3064               	movlw	100
  1522  03DA  00F2               	movwf	___awdiv@divisor
  1523  03DB  3000               	movlw	0
  1524  03DC  00F3               	movwf	___awdiv@divisor+1
  1525  03DD  0844               	movf	intToString@value,w
  1526  03DE  00BC               	movwf	??_intToString
  1527  03DF  01BD               	clrf	??_intToString+1
  1528  03E0  083C               	movf	??_intToString,w
  1529  03E1  00F4               	movwf	___awdiv@dividend
  1530  03E2  083D               	movf	??_intToString+1,w
  1531  03E3  00F5               	movwf	___awdiv@dividend+1
  1532  03E4  120A  118A  236F  120A  118A  	fcall	___awdiv
  1533  03E9  0872               	movf	?___awdiv,w
  1534  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1535  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1536  03EC  00BE               	movwf	??_intToString+2
  1537  03ED  083E               	movf	??_intToString+2,w
  1538  03EE  00C3               	movwf	intToString@entero
  1539  03EF                     l1474:
  1540  03EF  0843               	movf	intToString@entero,w
  1541  03F0  3E30               	addlw	48
  1542  03F1  00BC               	movwf	??_intToString
  1543  03F2  083C               	movf	??_intToString,w
  1544  03F3  00BF               	movwf	intToString@valor
  1545  03F4                     l1476:
  1546  03F4  309C               	movlw	156
  1547  03F5  00BC               	movwf	??_intToString
  1548  03F6  083C               	movf	??_intToString,w
  1549  03F7  00F2               	movwf	___bmul@multiplicand
  1550  03F8  0843               	movf	intToString@entero,w
  1551  03F9  120A  118A  2573  120A  118A  	fcall	___bmul
  1552  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1553  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0400  0744               	addwf	intToString@value,w
  1555  0401  00BD               	movwf	??_intToString+1
  1556  0402  083D               	movf	??_intToString+1,w
  1557  0403  00C4               	movwf	intToString@value
  1558  0404                     l1478:
  1559  0404  300A               	movlw	10
  1560  0405  00F2               	movwf	___awdiv@divisor
  1561  0406  3000               	movlw	0
  1562  0407  00F3               	movwf	___awdiv@divisor+1
  1563  0408  0844               	movf	intToString@value,w
  1564  0409  00BC               	movwf	??_intToString
  1565  040A  01BD               	clrf	??_intToString+1
  1566  040B  083C               	movf	??_intToString,w
  1567  040C  00F4               	movwf	___awdiv@dividend
  1568  040D  083D               	movf	??_intToString+1,w
  1569  040E  00F5               	movwf	___awdiv@dividend+1
  1570  040F  120A  118A  236F  120A  118A  	fcall	___awdiv
  1571  0414  0872               	movf	?___awdiv,w
  1572  0415  3E30               	addlw	48
  1573  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0418  00BE               	movwf	??_intToString+2
  1576  0419  083E               	movf	??_intToString+2,w
  1577  041A  00C0               	movwf	intToString@valor+1
  1578  041B                     l1480:
  1579  041B  300A               	movlw	10
  1580  041C  00F2               	movwf	___awmod@divisor
  1581  041D  3000               	movlw	0
  1582  041E  00F3               	movwf	___awmod@divisor+1
  1583  041F  0844               	movf	intToString@value,w
  1584  0420  00BC               	movwf	??_intToString
  1585  0421  01BD               	clrf	??_intToString+1
  1586  0422  083C               	movf	??_intToString,w
  1587  0423  00F4               	movwf	___awmod@dividend
  1588  0424  083D               	movf	??_intToString+1,w
  1589  0425  00F5               	movwf	___awmod@dividend+1
  1590  0426  120A  118A  2435  120A  118A  	fcall	___awmod
  1591  042B  0872               	movf	?___awmod,w
  1592  042C  3E30               	addlw	48
  1593  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1594  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1595  042F  00BE               	movwf	??_intToString+2
  1596  0430  083E               	movf	??_intToString+2,w
  1597  0431  00C1               	movwf	intToString@valor+2
  1598  0432                     l1482:
  1599  0432  01C2               	clrf	intToString@valor+3
  1600  0433                     l1484:
  1601  0433  303F               	movlw	(low (intToString@valor| 0))& (0+255)
  1602  0434                     l81:
  1603  0434  0008               	return
  1604  0435                     __end_of_intToString:
  1605                           
  1606                           	psect	text2
  1607  0573                     __ptext2:	
  1608 ;; *************** function ___bmul *****************
  1609 ;; Defined at:
  1610 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  multiplier      1    wreg     unsigned char 
  1613 ;;  multiplicand    1    2[COMMON] unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  multiplier      1    5[COMMON] unsigned char 
  1616 ;;  product         1    4[COMMON] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         1       0       0       0       0
  1627 ;;      Locals:         2       0       0       0       0
  1628 ;;      Temps:          1       0       0       0       0
  1629 ;;      Totals:         4       0       0       0       0
  1630 ;;Total ram usage:        4 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_intToString
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function ___bmul
  1642  0573                     ___bmul:
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1646                           ;___bmul@multiplier stored from wreg
  1647  0573  00F5               	movwf	___bmul@multiplier
  1648  0574                     l1326:
  1649  0574  01F4               	clrf	___bmul@product
  1650  0575                     l1328:
  1651  0575  1C75               	btfss	___bmul@multiplier,0
  1652  0576  2D78               	goto	u651
  1653  0577  2D79               	goto	u650
  1654  0578                     u651:
  1655  0578  2D7D               	goto	l1332
  1656  0579                     u650:
  1657  0579                     l1330:
  1658  0579  0872               	movf	___bmul@multiplicand,w
  1659  057A  00F3               	movwf	??___bmul
  1660  057B  0873               	movf	??___bmul,w
  1661  057C  07F4               	addwf	___bmul@product,f
  1662  057D                     l1332:
  1663  057D  1003               	clrc
  1664  057E  0DF2               	rlf	___bmul@multiplicand,f
  1665  057F                     l1334:
  1666  057F  1003               	clrc
  1667  0580  0CF5               	rrf	___bmul@multiplier,f
  1668  0581  0875               	movf	___bmul@multiplier,w
  1669  0582  1D03               	btfss	3,2
  1670  0583  2D85               	goto	u661
  1671  0584  2D86               	goto	u660
  1672  0585                     u661:
  1673  0585  2D75               	goto	l1328
  1674  0586                     u660:
  1675  0586                     l1336:
  1676  0586  0874               	movf	___bmul@product,w
  1677  0587                     l340:
  1678  0587  0008               	return
  1679  0588                     __end_of___bmul:
  1680                           
  1681                           	psect	text3
  1682  0435                     __ptext3:	
  1683 ;; *************** function ___awmod *****************
  1684 ;; Defined at:
  1685 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  divisor         2    2[COMMON] int 
  1688 ;;  dividend        2    4[COMMON] int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  sign            1    8[COMMON] unsigned char 
  1691 ;;  counter         1    7[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2    2[COMMON] int 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         4       0       0       0       0
  1702 ;;      Locals:         2       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0
  1704 ;;      Totals:         7       0       0       0       0
  1705 ;;Total ram usage:        7 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_intToString
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function ___awmod
  1717  0435                     ___awmod:
  1718  0435                     l1384:	
  1719                           ;incstack = 0
  1720                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1721                           
  1722  0435  01F8               	clrf	___awmod@sign
  1723  0436                     l1386:
  1724  0436  1FF5               	btfss	___awmod@dividend+1,7
  1725  0437  2C39               	goto	u771
  1726  0438  2C3A               	goto	u770
  1727  0439                     u771:
  1728  0439  2C41               	goto	l1392
  1729  043A                     u770:
  1730  043A                     l1388:
  1731  043A  09F4               	comf	___awmod@dividend,f
  1732  043B  09F5               	comf	___awmod@dividend+1,f
  1733  043C  0AF4               	incf	___awmod@dividend,f
  1734  043D  1903               	skipnz
  1735  043E  0AF5               	incf	___awmod@dividend+1,f
  1736  043F                     l1390:
  1737  043F  01F8               	clrf	___awmod@sign
  1738  0440  0AF8               	incf	___awmod@sign,f
  1739  0441                     l1392:
  1740  0441  1FF3               	btfss	___awmod@divisor+1,7
  1741  0442  2C44               	goto	u781
  1742  0443  2C45               	goto	u780
  1743  0444                     u781:
  1744  0444  2C4A               	goto	l1396
  1745  0445                     u780:
  1746  0445                     l1394:
  1747  0445  09F2               	comf	___awmod@divisor,f
  1748  0446  09F3               	comf	___awmod@divisor+1,f
  1749  0447  0AF2               	incf	___awmod@divisor,f
  1750  0448  1903               	skipnz
  1751  0449  0AF3               	incf	___awmod@divisor+1,f
  1752  044A                     l1396:
  1753  044A  0872               	movf	___awmod@divisor,w
  1754  044B  0473               	iorwf	___awmod@divisor+1,w
  1755  044C  1903               	btfsc	3,2
  1756  044D  2C4F               	goto	u791
  1757  044E  2C50               	goto	u790
  1758  044F                     u791:
  1759  044F  2C7F               	goto	l1414
  1760  0450                     u790:
  1761  0450                     l1398:
  1762  0450  01F7               	clrf	___awmod@counter
  1763  0451  0AF7               	incf	___awmod@counter,f
  1764  0452  2C5E               	goto	l1404
  1765  0453                     l1400:
  1766  0453  3001               	movlw	1
  1767  0454                     u805:
  1768  0454  1003               	clrc
  1769  0455  0DF2               	rlf	___awmod@divisor,f
  1770  0456  0DF3               	rlf	___awmod@divisor+1,f
  1771  0457  3EFF               	addlw	-1
  1772  0458  1D03               	skipz
  1773  0459  2C54               	goto	u805
  1774  045A                     l1402:
  1775  045A  3001               	movlw	1
  1776  045B  00F6               	movwf	??___awmod
  1777  045C  0876               	movf	??___awmod,w
  1778  045D  07F7               	addwf	___awmod@counter,f
  1779  045E                     l1404:
  1780  045E  1FF3               	btfss	___awmod@divisor+1,7
  1781  045F  2C61               	goto	u811
  1782  0460  2C62               	goto	u810
  1783  0461                     u811:
  1784  0461  2C53               	goto	l1400
  1785  0462                     u810:
  1786  0462                     l1406:
  1787  0462  0873               	movf	___awmod@divisor+1,w
  1788  0463  0275               	subwf	___awmod@dividend+1,w
  1789  0464  1D03               	skipz
  1790  0465  2C68               	goto	u825
  1791  0466  0872               	movf	___awmod@divisor,w
  1792  0467  0274               	subwf	___awmod@dividend,w
  1793  0468                     u825:
  1794  0468  1C03               	skipc
  1795  0469  2C6B               	goto	u821
  1796  046A  2C6C               	goto	u820
  1797  046B                     u821:
  1798  046B  2C72               	goto	l1410
  1799  046C                     u820:
  1800  046C                     l1408:
  1801  046C  0872               	movf	___awmod@divisor,w
  1802  046D  02F4               	subwf	___awmod@dividend,f
  1803  046E  0873               	movf	___awmod@divisor+1,w
  1804  046F  1C03               	skipc
  1805  0470  03F5               	decf	___awmod@dividend+1,f
  1806  0471  02F5               	subwf	___awmod@dividend+1,f
  1807  0472                     l1410:
  1808  0472  3001               	movlw	1
  1809  0473                     u835:
  1810  0473  1003               	clrc
  1811  0474  0CF3               	rrf	___awmod@divisor+1,f
  1812  0475  0CF2               	rrf	___awmod@divisor,f
  1813  0476  3EFF               	addlw	-1
  1814  0477  1D03               	skipz
  1815  0478  2C73               	goto	u835
  1816  0479                     l1412:
  1817  0479  3001               	movlw	1
  1818  047A  02F7               	subwf	___awmod@counter,f
  1819  047B  1D03               	btfss	3,2
  1820  047C  2C7E               	goto	u841
  1821  047D  2C7F               	goto	u840
  1822  047E                     u841:
  1823  047E  2C62               	goto	l1406
  1824  047F                     u840:
  1825  047F                     l1414:
  1826  047F  0878               	movf	___awmod@sign,w
  1827  0480  1903               	btfsc	3,2
  1828  0481  2C83               	goto	u851
  1829  0482  2C84               	goto	u850
  1830  0483                     u851:
  1831  0483  2C89               	goto	l1418
  1832  0484                     u850:
  1833  0484                     l1416:
  1834  0484  09F4               	comf	___awmod@dividend,f
  1835  0485  09F5               	comf	___awmod@dividend+1,f
  1836  0486  0AF4               	incf	___awmod@dividend,f
  1837  0487  1903               	skipnz
  1838  0488  0AF5               	incf	___awmod@dividend+1,f
  1839  0489                     l1418:
  1840  0489  0875               	movf	___awmod@dividend+1,w
  1841  048A  00F3               	movwf	?___awmod+1
  1842  048B  0874               	movf	___awmod@dividend,w
  1843  048C  00F2               	movwf	?___awmod
  1844  048D                     l480:
  1845  048D  0008               	return
  1846  048E                     __end_of___awmod:
  1847                           
  1848                           	psect	text4
  1849  036F                     __ptext4:	
  1850 ;; *************** function ___awdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    2[COMMON] int 
  1855 ;;  dividend        2    4[COMMON] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    9[COMMON] int 
  1858 ;;  sign            1    8[COMMON] unsigned char 
  1859 ;;  counter         1    7[COMMON] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    2[COMMON] int 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         4       0       0       0       0
  1870 ;;      Locals:         4       0       0       0       0
  1871 ;;      Temps:          1       0       0       0       0
  1872 ;;      Totals:         9       0       0       0       0
  1873 ;;Total ram usage:        9 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_intToString
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function ___awdiv
  1885  036F                     ___awdiv:
  1886  036F                     l1340:	
  1887                           ;incstack = 0
  1888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1889                           
  1890  036F  01F8               	clrf	___awdiv@sign
  1891  0370                     l1342:
  1892  0370  1FF3               	btfss	___awdiv@divisor+1,7
  1893  0371  2B73               	goto	u671
  1894  0372  2B74               	goto	u670
  1895  0373                     u671:
  1896  0373  2B7B               	goto	l1348
  1897  0374                     u670:
  1898  0374                     l1344:
  1899  0374  09F2               	comf	___awdiv@divisor,f
  1900  0375  09F3               	comf	___awdiv@divisor+1,f
  1901  0376  0AF2               	incf	___awdiv@divisor,f
  1902  0377  1903               	skipnz
  1903  0378  0AF3               	incf	___awdiv@divisor+1,f
  1904  0379                     l1346:
  1905  0379  01F8               	clrf	___awdiv@sign
  1906  037A  0AF8               	incf	___awdiv@sign,f
  1907  037B                     l1348:
  1908  037B  1FF5               	btfss	___awdiv@dividend+1,7
  1909  037C  2B7E               	goto	u681
  1910  037D  2B7F               	goto	u680
  1911  037E                     u681:
  1912  037E  2B88               	goto	l1354
  1913  037F                     u680:
  1914  037F                     l1350:
  1915  037F  09F4               	comf	___awdiv@dividend,f
  1916  0380  09F5               	comf	___awdiv@dividend+1,f
  1917  0381  0AF4               	incf	___awdiv@dividend,f
  1918  0382  1903               	skipnz
  1919  0383  0AF5               	incf	___awdiv@dividend+1,f
  1920  0384                     l1352:
  1921  0384  3001               	movlw	1
  1922  0385  00F6               	movwf	??___awdiv
  1923  0386  0876               	movf	??___awdiv,w
  1924  0387  06F8               	xorwf	___awdiv@sign,f
  1925  0388                     l1354:
  1926  0388  01F9               	clrf	___awdiv@quotient
  1927  0389  01FA               	clrf	___awdiv@quotient+1
  1928  038A                     l1356:
  1929  038A  0872               	movf	___awdiv@divisor,w
  1930  038B  0473               	iorwf	___awdiv@divisor+1,w
  1931  038C  1903               	btfsc	3,2
  1932  038D  2B8F               	goto	u691
  1933  038E  2B90               	goto	u690
  1934  038F                     u691:
  1935  038F  2BC7               	goto	l1376
  1936  0390                     u690:
  1937  0390                     l1358:
  1938  0390  01F7               	clrf	___awdiv@counter
  1939  0391  0AF7               	incf	___awdiv@counter,f
  1940  0392  2B9E               	goto	l1364
  1941  0393                     l1360:
  1942  0393  3001               	movlw	1
  1943  0394                     u705:
  1944  0394  1003               	clrc
  1945  0395  0DF2               	rlf	___awdiv@divisor,f
  1946  0396  0DF3               	rlf	___awdiv@divisor+1,f
  1947  0397  3EFF               	addlw	-1
  1948  0398  1D03               	skipz
  1949  0399  2B94               	goto	u705
  1950  039A                     l1362:
  1951  039A  3001               	movlw	1
  1952  039B  00F6               	movwf	??___awdiv
  1953  039C  0876               	movf	??___awdiv,w
  1954  039D  07F7               	addwf	___awdiv@counter,f
  1955  039E                     l1364:
  1956  039E  1FF3               	btfss	___awdiv@divisor+1,7
  1957  039F  2BA1               	goto	u711
  1958  03A0  2BA2               	goto	u710
  1959  03A1                     u711:
  1960  03A1  2B93               	goto	l1360
  1961  03A2                     u710:
  1962  03A2                     l1366:
  1963  03A2  3001               	movlw	1
  1964  03A3                     u725:
  1965  03A3  1003               	clrc
  1966  03A4  0DF9               	rlf	___awdiv@quotient,f
  1967  03A5  0DFA               	rlf	___awdiv@quotient+1,f
  1968  03A6  3EFF               	addlw	-1
  1969  03A7  1D03               	skipz
  1970  03A8  2BA3               	goto	u725
  1971  03A9  0873               	movf	___awdiv@divisor+1,w
  1972  03AA  0275               	subwf	___awdiv@dividend+1,w
  1973  03AB  1D03               	skipz
  1974  03AC  2BAF               	goto	u735
  1975  03AD  0872               	movf	___awdiv@divisor,w
  1976  03AE  0274               	subwf	___awdiv@dividend,w
  1977  03AF                     u735:
  1978  03AF  1C03               	skipc
  1979  03B0  2BB2               	goto	u731
  1980  03B1  2BB3               	goto	u730
  1981  03B2                     u731:
  1982  03B2  2BBA               	goto	l1372
  1983  03B3                     u730:
  1984  03B3                     l1368:
  1985  03B3  0872               	movf	___awdiv@divisor,w
  1986  03B4  02F4               	subwf	___awdiv@dividend,f
  1987  03B5  0873               	movf	___awdiv@divisor+1,w
  1988  03B6  1C03               	skipc
  1989  03B7  03F5               	decf	___awdiv@dividend+1,f
  1990  03B8  02F5               	subwf	___awdiv@dividend+1,f
  1991  03B9                     l1370:
  1992  03B9  1479               	bsf	___awdiv@quotient,0
  1993  03BA                     l1372:
  1994  03BA  3001               	movlw	1
  1995  03BB                     u745:
  1996  03BB  1003               	clrc
  1997  03BC  0CF3               	rrf	___awdiv@divisor+1,f
  1998  03BD  0CF2               	rrf	___awdiv@divisor,f
  1999  03BE  3EFF               	addlw	-1
  2000  03BF  1D03               	skipz
  2001  03C0  2BBB               	goto	u745
  2002  03C1                     l1374:
  2003  03C1  3001               	movlw	1
  2004  03C2  02F7               	subwf	___awdiv@counter,f
  2005  03C3  1D03               	btfss	3,2
  2006  03C4  2BC6               	goto	u751
  2007  03C5  2BC7               	goto	u750
  2008  03C6                     u751:
  2009  03C6  2BA2               	goto	l1366
  2010  03C7                     u750:
  2011  03C7                     l1376:
  2012  03C7  0878               	movf	___awdiv@sign,w
  2013  03C8  1903               	btfsc	3,2
  2014  03C9  2BCB               	goto	u761
  2015  03CA  2BCC               	goto	u760
  2016  03CB                     u761:
  2017  03CB  2BD1               	goto	l1380
  2018  03CC                     u760:
  2019  03CC                     l1378:
  2020  03CC  09F9               	comf	___awdiv@quotient,f
  2021  03CD  09FA               	comf	___awdiv@quotient+1,f
  2022  03CE  0AF9               	incf	___awdiv@quotient,f
  2023  03CF  1903               	skipnz
  2024  03D0  0AFA               	incf	___awdiv@quotient+1,f
  2025  03D1                     l1380:
  2026  03D1  087A               	movf	___awdiv@quotient+1,w
  2027  03D2  00F3               	movwf	?___awdiv+1
  2028  03D3  0879               	movf	___awdiv@quotient,w
  2029  03D4  00F2               	movwf	?___awdiv
  2030  03D5                     l467:
  2031  03D5  0008               	return
  2032  03D6                     __end_of___awdiv:
  2033                           
  2034                           	psect	text5
  2035  0516                     __ptext5:	
  2036 ;; *************** function _UARTSendString *****************
  2037 ;; Defined at:
  2038 ;;		line 50 in file "UART.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  str             1    wreg     PTR const unsigned char 
  2041 ;;		 -> STR_8(2), STR_7(4), STR_6(5), STR_5(5), 
  2042 ;;		 -> STR_4(5), STR_3(5), STR_2(5), ROM(8192), 
  2043 ;;		 -> STR_1(4), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  str             1    5[COMMON] PTR const unsigned char 
  2046 ;;		 -> STR_8(2), STR_7(4), STR_6(5), STR_5(5), 
  2047 ;;		 -> STR_4(5), STR_3(5), STR_2(5), ROM(8192), 
  2048 ;;		 -> STR_1(4), 
  2049 ;;  i               2    3[COMMON] int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         3       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0
  2062 ;;      Totals:         3       0       0       0       0
  2063 ;;Total ram usage:        3 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    2
  2066 ;; This function calls:
  2067 ;;		_UARTSendChar
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _UARTSendString
  2075  0516                     _UARTSendString:
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2079                           ;UARTSendString@str stored from wreg
  2080  0516  00F5               	movwf	UARTSendString@str
  2081  0517                     l1488:
  2082                           
  2083                           ;UART.c: 51:     int i = 0;
  2084  0517  01F3               	clrf	UARTSendString@i
  2085  0518  01F4               	clrf	UARTSendString@i+1
  2086                           
  2087                           ;UART.c: 55:         while(str[i] != '\0'){
  2088  0519  2D2D               	goto	l1494
  2089  051A                     l1490:
  2090                           
  2091                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2092  051A  0873               	movf	UARTSendString@i,w
  2093  051B  0775               	addwf	UARTSendString@str,w
  2094  051C  0084               	movwf	4
  2095  051D  120A  118A  24C6  120A  118A  	fcall	stringdir
  2096  0522  120A  118A  2595  120A  118A  	fcall	_UARTSendChar
  2097  0527                     l1492:
  2098  0527  3001               	movlw	1
  2099  0528  07F3               	addwf	UARTSendString@i,f
  2100  0529  1803               	skipnc
  2101  052A  0AF4               	incf	UARTSendString@i+1,f
  2102  052B  3000               	movlw	0
  2103  052C  07F4               	addwf	UARTSendString@i+1,f
  2104  052D                     l1494:
  2105                           
  2106                           ;UART.c: 55:         while(str[i] != '\0'){
  2107  052D  0873               	movf	UARTSendString@i,w
  2108  052E  0775               	addwf	UARTSendString@str,w
  2109  052F  0084               	movwf	4
  2110  0530  120A  118A  24C6  120A  118A  	fcall	stringdir
  2111  0535  3A00               	xorlw	0
  2112  0536  1D03               	skipz
  2113  0537  2D39               	goto	u901
  2114  0538  2D3A               	goto	u900
  2115  0539                     u901:
  2116  0539  2D1A               	goto	l1490
  2117  053A                     u900:
  2118  053A                     l207:
  2119  053A  0008               	return
  2120  053B                     __end_of_UARTSendString:
  2121                           
  2122                           	psect	text6
  2123  0595                     __ptext6:	
  2124 ;; *************** function _UARTSendChar *****************
  2125 ;; Defined at:
  2126 ;;		line 40 in file "UART.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  c               1    wreg     const unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  c               1    2[COMMON] const unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       0       0       0       0
  2141 ;;      Locals:         1       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0
  2143 ;;      Totals:         1       0       0       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_UARTSendString
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _UARTSendChar
  2156  0595                     _UARTSendChar:
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _UARTSendChar: [wreg]
  2160                           ;UARTSendChar@c stored from wreg
  2161  0595  00F2               	movwf	UARTSendChar@c
  2162  0596                     l1322:
  2163  0596                     l198:	
  2164                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  2165                           
  2166  0596  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0597  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0598  1C98               	btfss	24,1	;volatile
  2169  0599  2D9B               	goto	u641
  2170  059A  2D9C               	goto	u640
  2171  059B                     u641:
  2172  059B  2D96               	goto	l198
  2173  059C                     u640:
  2174  059C                     l1324:
  2175                           
  2176                           ;UART.c: 42:     TXREG = c;
  2177  059C  0872               	movf	UARTSendChar@c,w
  2178  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2179  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2180  059F  0099               	movwf	25	;volatile
  2181  05A0                     l201:
  2182  05A0  0008               	return
  2183  05A1                     __end_of_UARTSendChar:
  2184                           
  2185                           	psect	text7
  2186  053B                     __ptext7:	
  2187 ;; *************** function _Setup *****************
  2188 ;; Defined at:
  2189 ;;		line 148 in file "main.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		_UARTInit
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _Setup
  2219  053B                     _Setup:
  2220  053B                     l1422:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  2223                           
  2224                           
  2225                           ;main.c: 150:     return valor;
  2226  053B  3000               	movlw	0
  2227  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2228  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2229  053E  00C4               	movwf	UARTInit@baud_rate+3
  2230  053F  3000               	movlw	0
  2231  0540  00C3               	movwf	UARTInit@baud_rate+2
  2232  0541  3025               	movlw	37
  2233  0542  00C2               	movwf	UARTInit@baud_rate+1
  2234  0543  3080               	movlw	128
  2235  0544  00C1               	movwf	UARTInit@baud_rate
  2236  0545  01C5               	clrf	UARTInit@BRGH
  2237  0546  0AC5               	incf	UARTInit@BRGH,f
  2238  0547  120A  118A  2298  120A  118A  	fcall	_UARTInit
  2239  054C                     l1424:
  2240                           
  2241                           ;main.c: 153: }
  2242  054C  1683               	bsf	3,5	;RP0=1, select bank1
  2243  054D  1303               	bcf	3,6	;RP1=0, select bank1
  2244  054E  0185               	clrf	5	;volatile
  2245  054F                     l1426:
  2246  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0551  0185               	clrf	5	;volatile
  2249  0552                     l1428:
  2250  0552  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0553  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0554  0187               	clrf	7	;volatile
  2253  0555                     l1430:
  2254  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0557  0187               	clrf	7	;volatile
  2257  0558                     l1432:
  2258  0558  1683               	bsf	3,5	;RP0=1, select bank3
  2259  0559  1703               	bsf	3,6	;RP1=1, select bank3
  2260  055A  0188               	clrf	8	;volatile
  2261  055B                     l1434:
  2262  055B  0189               	clrf	9	;volatile
  2263  055C                     l78:
  2264  055C  0008               	return
  2265  055D                     __end_of_Setup:
  2266                           
  2267                           	psect	text8
  2268  0298                     __ptext8:	
  2269 ;; *************** function _UARTInit *****************
  2270 ;; Defined at:
  2271 ;;		line 9 in file "UART.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  2274 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         0       5       0       0       0
  2287 ;;      Locals:         0       0       0       0       0
  2288 ;;      Temps:          0       4       0       0       0
  2289 ;;      Totals:         0       9       0       0       0
  2290 ;;Total ram usage:        9 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		___lldiv
  2295 ;; This function is called by:
  2296 ;;		_Setup
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _UARTInit
  2302  0298                     _UARTInit:
  2303  0298                     l1288:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  2306                           
  2307                           
  2308                           ;UART.c: 11:     if (BRGH == 0) {
  2309  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2311  029A  0845               	movf	UARTInit@BRGH,w
  2312  029B  1D03               	btfss	3,2
  2313  029C  2A9E               	goto	u591
  2314  029D  2A9F               	goto	u590
  2315  029E                     u591:
  2316  029E  2ACC               	goto	l1294
  2317  029F                     u590:
  2318  029F                     l1290:
  2319                           
  2320                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  2321  029F  0841               	movf	UARTInit@baud_rate,w
  2322  02A0  00C6               	movwf	??_UARTInit
  2323  02A1  0842               	movf	UARTInit@baud_rate+1,w
  2324  02A2  00C7               	movwf	??_UARTInit+1
  2325  02A3  0843               	movf	UARTInit@baud_rate+2,w
  2326  02A4  00C8               	movwf	??_UARTInit+2
  2327  02A5  0844               	movf	UARTInit@baud_rate+3,w
  2328  02A6  00C9               	movwf	??_UARTInit+3
  2329  02A7  3006               	movlw	6
  2330  02A8                     u605:
  2331  02A8  1003               	clrc
  2332  02A9  0DC6               	rlf	??_UARTInit,f
  2333  02AA  0DC7               	rlf	??_UARTInit+1,f
  2334  02AB  0DC8               	rlf	??_UARTInit+2,f
  2335  02AC  0DC9               	rlf	??_UARTInit+3,f
  2336  02AD                     u600:
  2337  02AD  3EFF               	addlw	-1
  2338  02AE  1D03               	skipz
  2339  02AF  2AA8               	goto	u605
  2340  02B0  0849               	movf	??_UARTInit+3,w
  2341  02B1  00F5               	movwf	___lldiv@divisor+3
  2342  02B2  0848               	movf	??_UARTInit+2,w
  2343  02B3  00F4               	movwf	___lldiv@divisor+2
  2344  02B4  0847               	movf	??_UARTInit+1,w
  2345  02B5  00F3               	movwf	___lldiv@divisor+1
  2346  02B6  0846               	movf	??_UARTInit,w
  2347  02B7  00F2               	movwf	___lldiv@divisor
  2348  02B8  3000               	movlw	0
  2349  02B9  00F9               	movwf	___lldiv@dividend+3
  2350  02BA  303D               	movlw	61
  2351  02BB  00F8               	movwf	___lldiv@dividend+2
  2352  02BC  3009               	movlw	9
  2353  02BD  00F7               	movwf	___lldiv@dividend+1
  2354  02BE  3000               	movlw	0
  2355  02BF  00F6               	movwf	___lldiv@dividend
  2356  02C0  120A  118A  2307  120A  118A  	fcall	___lldiv
  2357  02C5  0872               	movf	?___lldiv,w
  2358  02C6  3EFF               	addlw	255
  2359  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2360  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2361  02C9  0099               	movwf	25	;volatile
  2362  02CA                     l1292:
  2363                           
  2364                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  2365  02CA  1118               	bcf	24,2	;volatile
  2366                           
  2367                           ;UART.c: 14:     } else {
  2368  02CB  2AF8               	goto	l1298
  2369  02CC                     l1294:
  2370                           
  2371                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  2372  02CC  0841               	movf	UARTInit@baud_rate,w
  2373  02CD  00C6               	movwf	??_UARTInit
  2374  02CE  0842               	movf	UARTInit@baud_rate+1,w
  2375  02CF  00C7               	movwf	??_UARTInit+1
  2376  02D0  0843               	movf	UARTInit@baud_rate+2,w
  2377  02D1  00C8               	movwf	??_UARTInit+2
  2378  02D2  0844               	movf	UARTInit@baud_rate+3,w
  2379  02D3  00C9               	movwf	??_UARTInit+3
  2380  02D4  3004               	movlw	4
  2381  02D5                     u615:
  2382  02D5  1003               	clrc
  2383  02D6  0DC6               	rlf	??_UARTInit,f
  2384  02D7  0DC7               	rlf	??_UARTInit+1,f
  2385  02D8  0DC8               	rlf	??_UARTInit+2,f
  2386  02D9  0DC9               	rlf	??_UARTInit+3,f
  2387  02DA                     u610:
  2388  02DA  3EFF               	addlw	-1
  2389  02DB  1D03               	skipz
  2390  02DC  2AD5               	goto	u615
  2391  02DD  0849               	movf	??_UARTInit+3,w
  2392  02DE  00F5               	movwf	___lldiv@divisor+3
  2393  02DF  0848               	movf	??_UARTInit+2,w
  2394  02E0  00F4               	movwf	___lldiv@divisor+2
  2395  02E1  0847               	movf	??_UARTInit+1,w
  2396  02E2  00F3               	movwf	___lldiv@divisor+1
  2397  02E3  0846               	movf	??_UARTInit,w
  2398  02E4  00F2               	movwf	___lldiv@divisor
  2399  02E5  3000               	movlw	0
  2400  02E6  00F9               	movwf	___lldiv@dividend+3
  2401  02E7  303D               	movlw	61
  2402  02E8  00F8               	movwf	___lldiv@dividend+2
  2403  02E9  3009               	movlw	9
  2404  02EA  00F7               	movwf	___lldiv@dividend+1
  2405  02EB  3000               	movlw	0
  2406  02EC  00F6               	movwf	___lldiv@dividend
  2407  02ED  120A  118A  2307  120A  118A  	fcall	___lldiv
  2408  02F2  0872               	movf	?___lldiv,w
  2409  02F3  3EFF               	addlw	255
  2410  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2411  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2412  02F6  0099               	movwf	25	;volatile
  2413  02F7                     l1296:
  2414                           
  2415                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2416  02F7  1518               	bsf	24,2	;volatile
  2417  02F8                     l1298:
  2418                           
  2419                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  2420  02F8  1318               	bcf	24,6	;volatile
  2421  02F9                     l1300:
  2422                           
  2423                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  2424  02F9  1698               	bsf	24,5	;volatile
  2425  02FA                     l1302:
  2426                           
  2427                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  2428  02FA  1218               	bcf	24,4	;volatile
  2429  02FB                     l1304:
  2430                           
  2431                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  2432  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2433  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2434  02FD  1798               	bsf	24,7	;volatile
  2435  02FE                     l1306:
  2436                           
  2437                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  2438  02FE  1318               	bcf	24,6	;volatile
  2439  02FF                     l1308:
  2440                           
  2441                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  2442  02FF  1618               	bsf	24,4	;volatile
  2443  0300                     l1310:
  2444                           
  2445                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  2446  0300  1118               	bcf	24,2	;volatile
  2447  0301                     l1312:
  2448                           
  2449                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  2450  0301  1098               	bcf	24,1	;volatile
  2451  0302                     l1314:
  2452                           
  2453                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  2454  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0304  1787               	bsf	7,7	;volatile
  2457  0305                     l1316:
  2458                           
  2459                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  2460  0305  1307               	bcf	7,6	;volatile
  2461  0306                     l195:
  2462  0306  0008               	return
  2463  0307                     __end_of_UARTInit:
  2464                           
  2465                           	psect	text9
  2466  055D                     __ptext9:	
  2467 ;; *************** function _I2C_Start *****************
  2468 ;; Defined at:
  2469 ;;		line 108 in file "I2C.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  add             1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  add             1    6[COMMON] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         1       0       0       0       0
  2485 ;;      Temps:          2       0       0       0       0
  2486 ;;      Totals:         3       0       0       0       0
  2487 ;;Total ram usage:        3 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    3
  2490 ;; This function calls:
  2491 ;;		_I2C_Master_Wait
  2492 ;;		_I2C_Master_Write
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _I2C_Start
  2500  055D                     _I2C_Start:
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2504                           ;I2C_Start@add stored from wreg
  2505  055D  00F6               	movwf	I2C_Start@add
  2506  055E                     l1450:
  2507                           
  2508                           ;I2C.c: 109:     I2C_Master_Wait();
  2509  055E  120A  118A  2588  120A  118A  	fcall	_I2C_Master_Wait
  2510  0563                     l1452:
  2511                           
  2512                           ;I2C.c: 110:     SEN = 1;
  2513  0563  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0564  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0565  1411               	bsf	17,0	;volatile
  2516                           
  2517                           ;I2C.c: 111:     I2C_Master_Write(add);
  2518  0566  0876               	movf	I2C_Start@add,w
  2519  0567  00F4               	movwf	??_I2C_Start
  2520  0568  01F5               	clrf	??_I2C_Start+1
  2521  0569  0874               	movf	??_I2C_Start,w
  2522  056A  00F2               	movwf	I2C_Master_Write@d
  2523  056B  0875               	movf	??_I2C_Start+1,w
  2524  056C  00F3               	movwf	I2C_Master_Write@d+1
  2525  056D  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Write
  2526  0572                     l153:
  2527  0572  0008               	return
  2528  0573                     __end_of_I2C_Start:
  2529                           
  2530                           	psect	text10
  2531  05A1                     __ptext10:	
  2532 ;; *************** function _I2C_Master_Write *****************
  2533 ;; Defined at:
  2534 ;;		line 66 in file "I2C.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  d               2    2[COMMON] unsigned int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         2       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    2
  2555 ;; This function calls:
  2556 ;;		_I2C_Master_Wait
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;;		_I2C_Start
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _I2C_Master_Write
  2565  05A1                     _I2C_Master_Write:
  2566  05A1                     l1284:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2569                           
  2570                           
  2571                           ;I2C.c: 67:     I2C_Master_Wait();
  2572  05A1  120A  118A  2588  120A  118A  	fcall	_I2C_Master_Wait
  2573  05A6                     l1286:
  2574                           
  2575                           ;I2C.c: 68:     SSPBUF = d;
  2576  05A6  0872               	movf	I2C_Master_Write@d,w
  2577  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2578  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2579  05A9  0093               	movwf	19	;volatile
  2580  05AA                     l142:
  2581  05AA  0008               	return
  2582  05AB                     __end_of_I2C_Master_Write:
  2583                           
  2584                           	psect	text11
  2585  04EF                     __ptext11:	
  2586 ;; *************** function _I2C_Read *****************
  2587 ;; Defined at:
  2588 ;;		line 114 in file "I2C.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  ACK_NACK        1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  ACK_NACK        1    3[COMMON] unsigned char 
  2593 ;;  Data            1    4[COMMON] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      unsigned char 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       0       0       0       0
  2604 ;;      Locals:         2       0       0       0       0
  2605 ;;      Temps:          1       0       0       0       0
  2606 ;;      Totals:         3       0       0       0       0
  2607 ;;Total ram usage:        3 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    2
  2610 ;; This function calls:
  2611 ;;		_I2C_ACK
  2612 ;;		_I2C_NACK
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _I2C_Read
  2620  04EF                     _I2C_Read:
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2624                           ;I2C_Read@ACK_NACK stored from wreg
  2625  04EF  00F3               	movwf	I2C_Read@ACK_NACK
  2626  04F0                     l1458:
  2627                           
  2628                           ;I2C.c: 116:     unsigned char Data;;I2C.c: 117:     RCEN = 1;
  2629  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  2630  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  2631  04F2  1591               	bsf	17,3	;volatile
  2632  04F3                     l156:	
  2633                           ;I2C.c: 118:     while (!BF);
  2634                           
  2635  04F3  1C14               	btfss	20,0	;volatile
  2636  04F4  2CF6               	goto	u871
  2637  04F5  2CF7               	goto	u870
  2638  04F6                     u871:
  2639  04F6  2CF3               	goto	l156
  2640  04F7                     u870:
  2641  04F7                     l1460:
  2642                           
  2643                           ;I2C.c: 119:     Data = SSPBUF;
  2644  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2645  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2646  04F9  0813               	movf	19,w	;volatile
  2647  04FA  00F2               	movwf	??_I2C_Read
  2648  04FB  0872               	movf	??_I2C_Read,w
  2649  04FC  00F4               	movwf	I2C_Read@Data
  2650  04FD                     l1462:
  2651                           
  2652                           ;I2C.c: 120:     if (ACK_NACK == 0)
  2653  04FD  0873               	movf	I2C_Read@ACK_NACK,w
  2654  04FE  1D03               	btfss	3,2
  2655  04FF  2D01               	goto	u881
  2656  0500  2D02               	goto	u880
  2657  0501                     u881:
  2658  0501  2D08               	goto	l1466
  2659  0502                     u880:
  2660  0502                     l1464:
  2661                           
  2662                           ;I2C.c: 121:         I2C_ACK();
  2663  0502  120A  118A  25B4  120A  118A  	fcall	_I2C_ACK
  2664  0507  2D0D               	goto	l161
  2665  0508                     l1466:
  2666                           
  2667                           ;I2C.c: 123:         I2C_NACK();
  2668  0508  120A  118A  25AB  120A  118A  	fcall	_I2C_NACK
  2669  050D                     l161:
  2670  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2671  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2672  050F  1D8C               	btfss	12,3	;volatile
  2673  0510  2D12               	goto	u891
  2674  0511  2D13               	goto	u890
  2675  0512                     u891:
  2676  0512  2D0D               	goto	l161
  2677  0513                     u890:
  2678  0513                     l163:
  2679                           
  2680                           ;I2C.c: 125:     SSPIF = 0;
  2681  0513  118C               	bcf	12,3	;volatile
  2682  0514                     l1468:
  2683                           
  2684                           ;I2C.c: 126:     return Data;
  2685  0514  0874               	movf	I2C_Read@Data,w
  2686  0515                     l164:
  2687  0515  0008               	return
  2688  0516                     __end_of_I2C_Read:
  2689                           
  2690                           	psect	text12
  2691  05AB                     __ptext12:	
  2692 ;; *************** function _I2C_NACK *****************
  2693 ;; Defined at:
  2694 ;;		line 135 in file "I2C.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		None
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_I2C_Read
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _I2C_NACK
  2724  05AB                     _I2C_NACK:
  2725  05AB                     l1320:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _I2C_NACK: []
  2728                           
  2729                           
  2730                           ;I2C.c: 136:     ACKDT = 1;
  2731  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2732  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2733  05AD  1691               	bsf	17,5	;volatile
  2734                           
  2735                           ;I2C.c: 137:     ACKEN = 1;
  2736  05AE  1611               	bsf	17,4	;volatile
  2737  05AF                     l173:	
  2738                           ;I2C.c: 138:     while (ACKEN);
  2739                           
  2740  05AF  1A11               	btfsc	17,4	;volatile
  2741  05B0  2DB2               	goto	u631
  2742  05B1  2DB3               	goto	u630
  2743  05B2                     u631:
  2744  05B2  2DAF               	goto	l173
  2745  05B3                     u630:
  2746  05B3                     l176:
  2747  05B3  0008               	return
  2748  05B4                     __end_of_I2C_NACK:
  2749                           
  2750                           	psect	text13
  2751  05B4                     __ptext13:	
  2752 ;; *************** function _I2C_ACK *****************
  2753 ;; Defined at:
  2754 ;;		line 129 in file "I2C.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		None
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_I2C_Read
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _I2C_ACK
  2784  05B4                     _I2C_ACK:
  2785  05B4                     l1318:	
  2786                           ;incstack = 0
  2787                           ; Regs used in _I2C_ACK: []
  2788                           
  2789                           
  2790                           ;I2C.c: 130:     ACKDT = 0;
  2791  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2792  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2793  05B6  1291               	bcf	17,5	;volatile
  2794                           
  2795                           ;I2C.c: 131:     ACKEN = 1;
  2796  05B7  1611               	bsf	17,4	;volatile
  2797  05B8                     l167:	
  2798                           ;I2C.c: 132:     while (ACKEN);
  2799                           
  2800  05B8  1A11               	btfsc	17,4	;volatile
  2801  05B9  2DBB               	goto	u621
  2802  05BA  2DBC               	goto	u620
  2803  05BB                     u621:
  2804  05BB  2DB8               	goto	l167
  2805  05BC                     u620:
  2806  05BC                     l170:
  2807  05BC  0008               	return
  2808  05BD                     __end_of_I2C_ACK:
  2809                           
  2810                           	psect	text14
  2811  05BD                     __ptext14:	
  2812 ;; *************** function _I2C_Master_Stop *****************
  2813 ;; Defined at:
  2814 ;;		line 56 in file "I2C.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		_I2C_Master_Wait
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _I2C_Master_Stop
  2844  05BD                     _I2C_Master_Stop:
  2845  05BD                     l1454:	
  2846                           ;incstack = 0
  2847                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2848                           
  2849                           
  2850                           ;I2C.c: 57:     I2C_Master_Wait();
  2851  05BD  120A  118A  2588  120A  118A  	fcall	_I2C_Master_Wait
  2852  05C2                     l1456:
  2853                           
  2854                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2855  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  2856  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  2857  05C4  1511               	bsf	17,2	;volatile
  2858  05C5                     l139:
  2859  05C5  0008               	return
  2860  05C6                     __end_of_I2C_Master_Stop:
  2861                           
  2862                           	psect	text15
  2863  0588                     __ptext15:	
  2864 ;; *************** function _I2C_Master_Wait *****************
  2865 ;; Defined at:
  2866 ;;		line 33 in file "I2C.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_I2C_Master_Stop
  2891 ;;		_I2C_Master_Write
  2892 ;;		_I2C_Start
  2893 ;;		_I2C_Master_Start
  2894 ;;		_I2C_Master_RepeatedStart
  2895 ;;		_I2C_Master_Read
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _I2C_Master_Wait
  2901  0588                     _I2C_Master_Wait:
  2902  0588                     l1256:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2905                           
  2906  0588                     l127:	
  2907                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2908                           
  2909  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2911  058A  1914               	btfsc	20,2	;volatile
  2912  058B  2D8D               	goto	u501
  2913  058C  2D8E               	goto	u500
  2914  058D                     u501:
  2915  058D  2D88               	goto	l127
  2916  058E                     u500:
  2917  058E                     l1258:
  2918  058E  0811               	movf	17,w	;volatile
  2919  058F  391F               	andlw	31
  2920  0590  1D03               	btfss	3,2
  2921  0591  2D93               	goto	u511
  2922  0592  2D94               	goto	u510
  2923  0593                     u511:
  2924  0593  2D88               	goto	l127
  2925  0594                     u510:
  2926  0594                     l130:
  2927  0594  0008               	return
  2928  0595                     __end_of_I2C_Master_Wait:
  2929                           
  2930                           	psect	text16
  2931  048E                     __ptext16:	
  2932 ;; *************** function _I2C_Master_Init *****************
  2933 ;; Defined at:
  2934 ;;		line 17 in file "I2C.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  c               4    5[BANK0 ] const unsigned long 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       4       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       4       0       0       0
  2951 ;;      Totals:         0       8       0       0       0
  2952 ;;Total ram usage:        8 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    2
  2955 ;; This function calls:
  2956 ;;		___lldiv
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _I2C_Master_Init
  2964  048E                     _I2C_Master_Init:
  2965  048E                     l1438:	
  2966                           ;incstack = 0
  2967                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2968                           
  2969                           
  2970                           ;I2C.c: 18:     SSPCON = 0b00101000;
  2971  048E  3028               	movlw	40
  2972  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0491  0094               	movwf	20	;volatile
  2975  0492                     l1440:
  2976                           
  2977                           ;I2C.c: 19:     SSPCON2 = 0;
  2978  0492  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0493  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0494  0191               	clrf	17	;volatile
  2981  0495                     l1442:
  2982                           
  2983                           ;I2C.c: 20:     SSPADD = (4000000 / (4 * c)) - 1;
  2984  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0497  0841               	movf	I2C_Master_Init@c,w
  2987  0498  00C5               	movwf	??_I2C_Master_Init
  2988  0499  0842               	movf	I2C_Master_Init@c+1,w
  2989  049A  00C6               	movwf	??_I2C_Master_Init+1
  2990  049B  0843               	movf	I2C_Master_Init@c+2,w
  2991  049C  00C7               	movwf	??_I2C_Master_Init+2
  2992  049D  0844               	movf	I2C_Master_Init@c+3,w
  2993  049E  00C8               	movwf	??_I2C_Master_Init+3
  2994  049F  3002               	movlw	2
  2995  04A0                     u865:
  2996  04A0  1003               	clrc
  2997  04A1  0DC5               	rlf	??_I2C_Master_Init,f
  2998  04A2  0DC6               	rlf	??_I2C_Master_Init+1,f
  2999  04A3  0DC7               	rlf	??_I2C_Master_Init+2,f
  3000  04A4  0DC8               	rlf	??_I2C_Master_Init+3,f
  3001  04A5                     u860:
  3002  04A5  3EFF               	addlw	-1
  3003  04A6  1D03               	skipz
  3004  04A7  2CA0               	goto	u865
  3005  04A8  0848               	movf	??_I2C_Master_Init+3,w
  3006  04A9  00F5               	movwf	___lldiv@divisor+3
  3007  04AA  0847               	movf	??_I2C_Master_Init+2,w
  3008  04AB  00F4               	movwf	___lldiv@divisor+2
  3009  04AC  0846               	movf	??_I2C_Master_Init+1,w
  3010  04AD  00F3               	movwf	___lldiv@divisor+1
  3011  04AE  0845               	movf	??_I2C_Master_Init,w
  3012  04AF  00F2               	movwf	___lldiv@divisor
  3013  04B0  3000               	movlw	0
  3014  04B1  00F9               	movwf	___lldiv@dividend+3
  3015  04B2  303D               	movlw	61
  3016  04B3  00F8               	movwf	___lldiv@dividend+2
  3017  04B4  3009               	movlw	9
  3018  04B5  00F7               	movwf	___lldiv@dividend+1
  3019  04B6  3000               	movlw	0
  3020  04B7  00F6               	movwf	___lldiv@dividend
  3021  04B8  120A  118A  2307  120A  118A  	fcall	___lldiv
  3022  04BD  0872               	movf	?___lldiv,w
  3023  04BE  3EFF               	addlw	255
  3024  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3025  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3026  04C1  0093               	movwf	19	;volatile
  3027  04C2                     l1444:
  3028                           
  3029                           ;I2C.c: 21:     SSPSTAT = 0;
  3030  04C2  0194               	clrf	20	;volatile
  3031  04C3                     l1446:
  3032                           
  3033                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3034  04C3  1587               	bsf	7,3	;volatile
  3035  04C4                     l1448:
  3036                           
  3037                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3038  04C4  1607               	bsf	7,4	;volatile
  3039  04C5                     l124:
  3040  04C5  0008               	return
  3041  04C6                     __end_of_I2C_Master_Init:
  3042                           
  3043                           	psect	text17
  3044  0307                     __ptext17:	
  3045 ;; *************** function ___lldiv *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  divisor         4    2[COMMON] unsigned long 
  3050 ;;  dividend        4    6[COMMON] unsigned long 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  quotient        4    0[BANK0 ] unsigned long 
  3053 ;;  counter         1    4[BANK0 ] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  4    2[COMMON] unsigned long 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         8       0       0       0       0
  3064 ;;      Locals:         0       5       0       0       0
  3065 ;;      Temps:          1       0       0       0       0
  3066 ;;      Totals:         9       5       0       0       0
  3067 ;;Total ram usage:       14 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_I2C_Master_Init
  3074 ;;		_UARTInit
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function ___lldiv
  3080  0307                     ___lldiv:
  3081  0307                     l1260:	
  3082                           ;incstack = 0
  3083                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3084                           
  3085  0307  3000               	movlw	0
  3086  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3088  030A  00BF               	movwf	___lldiv@quotient+3
  3089  030B  3000               	movlw	0
  3090  030C  00BE               	movwf	___lldiv@quotient+2
  3091  030D  3000               	movlw	0
  3092  030E  00BD               	movwf	___lldiv@quotient+1
  3093  030F  3000               	movlw	0
  3094  0310  00BC               	movwf	___lldiv@quotient
  3095  0311  0875               	movf	___lldiv@divisor+3,w
  3096  0312  0474               	iorwf	___lldiv@divisor+2,w
  3097  0313  0473               	iorwf	___lldiv@divisor+1,w
  3098  0314  0472               	iorwf	___lldiv@divisor,w
  3099  0315  1903               	skipnz
  3100  0316  2B18               	goto	u521
  3101  0317  2B19               	goto	u520
  3102  0318                     u521:
  3103  0318  2B66               	goto	l1280
  3104  0319                     u520:
  3105  0319                     l1262:
  3106  0319  01C0               	clrf	___lldiv@counter
  3107  031A  0AC0               	incf	___lldiv@counter,f
  3108  031B  2B29               	goto	l1266
  3109  031C                     l1264:
  3110  031C  3001               	movlw	1
  3111  031D  00FA               	movwf	??___lldiv
  3112  031E                     u535:
  3113  031E  1003               	clrc
  3114  031F  0DF2               	rlf	___lldiv@divisor,f
  3115  0320  0DF3               	rlf	___lldiv@divisor+1,f
  3116  0321  0DF4               	rlf	___lldiv@divisor+2,f
  3117  0322  0DF5               	rlf	___lldiv@divisor+3,f
  3118  0323  0BFA               	decfsz	??___lldiv,f
  3119  0324  2B1E               	goto	u535
  3120  0325  3001               	movlw	1
  3121  0326  00FA               	movwf	??___lldiv
  3122  0327  087A               	movf	??___lldiv,w
  3123  0328  07C0               	addwf	___lldiv@counter,f
  3124  0329                     l1266:
  3125  0329  1FF5               	btfss	___lldiv@divisor+3,7
  3126  032A  2B2C               	goto	u541
  3127  032B  2B2D               	goto	u540
  3128  032C                     u541:
  3129  032C  2B1C               	goto	l1264
  3130  032D                     u540:
  3131  032D                     l1268:
  3132  032D  3001               	movlw	1
  3133  032E  00FA               	movwf	??___lldiv
  3134  032F                     u555:
  3135  032F  1003               	clrc
  3136  0330  0DBC               	rlf	___lldiv@quotient,f
  3137  0331  0DBD               	rlf	___lldiv@quotient+1,f
  3138  0332  0DBE               	rlf	___lldiv@quotient+2,f
  3139  0333  0DBF               	rlf	___lldiv@quotient+3,f
  3140  0334  0BFA               	decfsz	??___lldiv,f
  3141  0335  2B2F               	goto	u555
  3142  0336                     l1270:
  3143  0336  0875               	movf	___lldiv@divisor+3,w
  3144  0337  0279               	subwf	___lldiv@dividend+3,w
  3145  0338  1D03               	skipz
  3146  0339  2B44               	goto	u565
  3147  033A  0874               	movf	___lldiv@divisor+2,w
  3148  033B  0278               	subwf	___lldiv@dividend+2,w
  3149  033C  1D03               	skipz
  3150  033D  2B44               	goto	u565
  3151  033E  0873               	movf	___lldiv@divisor+1,w
  3152  033F  0277               	subwf	___lldiv@dividend+1,w
  3153  0340  1D03               	skipz
  3154  0341  2B44               	goto	u565
  3155  0342  0872               	movf	___lldiv@divisor,w
  3156  0343  0276               	subwf	___lldiv@dividend,w
  3157  0344                     u565:
  3158  0344  1C03               	skipc
  3159  0345  2B47               	goto	u561
  3160  0346  2B48               	goto	u560
  3161  0347                     u561:
  3162  0347  2B57               	goto	l1276
  3163  0348                     u560:
  3164  0348                     l1272:
  3165  0348  0872               	movf	___lldiv@divisor,w
  3166  0349  02F6               	subwf	___lldiv@dividend,f
  3167  034A  0873               	movf	___lldiv@divisor+1,w
  3168  034B  1C03               	skipc
  3169  034C  0F73               	incfsz	___lldiv@divisor+1,w
  3170  034D  02F7               	subwf	___lldiv@dividend+1,f
  3171  034E  0874               	movf	___lldiv@divisor+2,w
  3172  034F  1C03               	skipc
  3173  0350  0F74               	incfsz	___lldiv@divisor+2,w
  3174  0351  02F8               	subwf	___lldiv@dividend+2,f
  3175  0352  0875               	movf	___lldiv@divisor+3,w
  3176  0353  1C03               	skipc
  3177  0354  0F75               	incfsz	___lldiv@divisor+3,w
  3178  0355  02F9               	subwf	___lldiv@dividend+3,f
  3179  0356                     l1274:
  3180  0356  143C               	bsf	___lldiv@quotient,0
  3181  0357                     l1276:
  3182  0357  3001               	movlw	1
  3183  0358                     u575:
  3184  0358  1003               	clrc
  3185  0359  0CF5               	rrf	___lldiv@divisor+3,f
  3186  035A  0CF4               	rrf	___lldiv@divisor+2,f
  3187  035B  0CF3               	rrf	___lldiv@divisor+1,f
  3188  035C  0CF2               	rrf	___lldiv@divisor,f
  3189  035D  3EFF               	addlw	-1
  3190  035E  1D03               	skipz
  3191  035F  2B58               	goto	u575
  3192  0360                     l1278:
  3193  0360  3001               	movlw	1
  3194  0361  02C0               	subwf	___lldiv@counter,f
  3195  0362  1D03               	btfss	3,2
  3196  0363  2B65               	goto	u581
  3197  0364  2B66               	goto	u580
  3198  0365                     u581:
  3199  0365  2B2D               	goto	l1268
  3200  0366                     u580:
  3201  0366                     l1280:
  3202  0366  083F               	movf	___lldiv@quotient+3,w
  3203  0367  00F5               	movwf	?___lldiv+3
  3204  0368  083E               	movf	___lldiv@quotient+2,w
  3205  0369  00F4               	movwf	?___lldiv+2
  3206  036A  083D               	movf	___lldiv@quotient+1,w
  3207  036B  00F3               	movwf	?___lldiv+1
  3208  036C  083C               	movf	___lldiv@quotient,w
  3209  036D  00F2               	movwf	?___lldiv
  3210  036E                     l350:
  3211  036E  0008               	return
  3212  036F                     __end_of___lldiv:
  3213                           
  3214                           	psect	text18
  3215  05CE                     __ptext18:	
  3216 ;; *************** function _ISR *****************
  3217 ;; Defined at:
  3218 ;;		line 47 in file "main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		None
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0
  3234 ;;      Temps:          2       0       0       0       0
  3235 ;;      Totals:         2       0       0       0       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		Interrupt level 1
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _ISR
  3247  05CE                     _ISR:
  3248  05CE                     i1l67:
  3249  05CE  0871               	movf	??_ISR+1,w
  3250  05CF  008A               	movwf	10
  3251  05D0  0E70               	swapf	??_ISR,w
  3252  05D1  0083               	movwf	3
  3253  05D2  0EFE               	swapf	btemp,f
  3254  05D3  0E7E               	swapf	btemp,w
  3255  05D4  0009               	retfie
  3256  05D5                     __end_of_ISR:
  3257  007E                     btemp	set	126	;btemp
  3258  007E                     wtemp0	set	126
  3259                           
  3260                           	psect	intentry
  3261  0004                     __pintentry:	
  3262                           ;incstack = 0
  3263                           ; Regs used in _ISR: []
  3264                           
  3265  0004                     interrupt_function:
  3266  007E                     saved_w	set	btemp
  3267  0004  00FE               	movwf	btemp
  3268  0005  0E03               	swapf	3,w
  3269  0006  00F0               	movwf	??_ISR
  3270  0007  080A               	movf	10,w
  3271  0008  00F1               	movwf	??_ISR+1
  3272  0009  120A  118A  2DCE   	ljmp	_ISR
  3273                           
  3274                           	psect	config
  3275                           
  3276                           ;Config register CONFIG1 @ 0x2007
  3277                           ;	Oscillator Selection bits
  3278                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3279                           ;	Watchdog Timer Enable bit
  3280                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3281                           ;	Power-up Timer Enable bit
  3282                           ;	PWRTE = OFF, PWRT disabled
  3283                           ;	RE3/MCLR pin function select bit
  3284                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3285                           ;	Code Protection bit
  3286                           ;	CP = OFF, Program memory code protection is disabled
  3287                           ;	Data Code Protection bit
  3288                           ;	CPD = OFF, Data memory code protection is disabled
  3289                           ;	Brown Out Reset Selection bits
  3290                           ;	BOREN = OFF, BOR disabled
  3291                           ;	Internal External Switchover bit
  3292                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3293                           ;	Fail-Safe Clock Monitor Enabled bit
  3294                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3295                           ;	Low Voltage Programming Enable bit
  3296                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3297                           ;	In-Circuit Debugger Mode bit
  3298                           ;	DEBUG = 0x1, unprogrammed default
  3299  2007                     	org	8199
  3300  2007  20D4               	dw	8404
  3301                           
  3302                           ;Config register CONFIG2 @ 0x2008
  3303                           ;	Brown-out Reset Selection bit
  3304                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3305                           ;	Flash Program Memory Self Write Enable bits
  3306                           ;	WRT = OFF, Write protection off
  3307  2008                     	org	8200
  3308  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 8192
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), ROM(CODE[8192]), 
		 -> STR_1(CODE[4]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 


Critical Paths under _main in COMMON

    _intToString->___awdiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5543
                                             14 BANK0      4     4      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                              _Setup
                     _UARTSendString
                        _intToString
 ---------------------------------------------------------------------------------
 (1) _intToString                                          9     9      0    1449
                                              0 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       3     3      0     607
                                              3 COMMON     3     3      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     836
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            3     3      0     956
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              2 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read
     _I2C_ACK
     _I2C_NACK
   _I2C_Start
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Setup
     _UARTInit
       ___lldiv
   _UARTSendString
     _UARTSendChar
   _intToString
     ___awdiv
     ___awmod
     ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 01 21:35:29 2021

        UARTInit@baud_rate 0041                          _T 002E                          pc 0002  
           ___bmul@product 0074         __size_of_I2C_Start 0016                         _BF 04A0  
                       l81 0434                         l78 055C                         _Ax 003A  
                       _Ay 0038                         _Az 0036                         _Gx 0034  
                       _Gy 0032                         _Gz 0030               ___awdiv@sign 0078  
                       fsr 0004                        l201 05A0                        l130 0594  
                      l124 04C5                        l142 05AA                        l127 0588  
                      l207 053A                        l161 050D                        l153 0572  
                      l170 05BC                        l139 05C5                        l163 0513  
                      l164 0515                        l156 04F3                        l340 0587  
                      l173 05AF                        l350 036E                        l167 05B8  
                      l176 05B3                        l195 0306                        l198 0596  
                      l480 048D                        l467 03D5                        _GIE 005F  
                      u500 058E                        u501 058D                        u510 0594  
                      u511 0593                        u520 0319                        u600 02AD  
                      u521 0318                        u610 02DA                        u540 032D  
                      u620 05BC                        _ISR 05CE                        u541 032C  
                      u621 05BB                        u605 02A8                        u630 05B3  
                      u710 03A2                        u535 031E                        u631 05B2  
                      u615 02D5                        u711 03A1                        u560 0348  
                      u640 059C                        u561 0347                        u641 059B  
                      u705 0394                        u730 03B3                        u810 0462  
                      u650 0579                        u555 032F                        u731 03B2  
                      u811 0461                        u651 0578                        u580 0366  
                      u900 053A                        u820 046C                        u660 0586  
                      _SEN 0488                        u581 0365                        u565 0344  
                      u901 0539                        u725 03A3                        u821 046B  
                      u805 0454                        u661 0585                        u590 029F  
                      u750 03C7                        u670 0374                        u910 00E5  
                      u575 0358                        u591 029E                        u751 03C6  
                      u735 03AF                        u671 0373                        u911 00E1  
                      u760 03CC                        u680 037F                        u840 047F  
                      u761 03CB                        u745 03BB                        u681 037E  
                      u841 047E                        u825 0468                        u690 0390  
                      u850 0484                        u770 043A                        u691 038F  
                      u851 0483                        u835 0473                        u771 0439  
                      u860 04A5                        u780 0445                        u924 00E8  
                      u781 0444                        u870 04F7                        u790 0450  
                      u871 04F6                        u791 044F                        u880 0502  
                      u865 04A0                        u881 0501                        u890 0513  
                      u891 0512                        u947 0027                        u957 00EE  
          __end_of_I2C_ACK 05BD                        fsr0 0004                        indf 0000  
             ___awmod@sign 0078                       ?_ISR 0070                       l1300 02F9  
                     l1310 0300                       l1302 02FA                       l1320 05AB  
                     l1312 0301                       l1304 02FB                       l1400 0453  
                     l1314 0302                       l1306 02FE                       l1322 0596  
                     l1410 0472                       l1402 045A                       l1330 0579  
                     l1260 0307                       l1316 0305                       l1308 02FF  
                     l1324 059C                       l1340 036F                       l1412 0479  
                     l1404 045E                       l1332 057D                       l1500 002B  
                     l1270 0336                       l1262 0319                       l1318 05B4  
                     l1430 0555                       l1422 053B                       l1350 037F  
                     l1342 0370                       l1406 0462                       l1414 047F  
                     l1334 057F                       l1326 0574                       l1510 0057  
                     l1502 003A                       l1272 0348                       l1264 031C  
                     l1280 0366                       l1440 0492                       l1256 0588  
                     l1432 0558                       l1424 054C                       l1360 0393  
                     l1352 0384                       l1344 0374                       l1416 0484  
                     l1408 046C                       l1336 0586                       l1328 0575  
                     l1600 0232                       l1520 007A                       l1512 005D  
                     l1504 0040                       l1274 0356                       l1266 0329  
                     l1442 0495                       l1258 058E                       l1450 055E  
                     l1290 029F                       l1434 055B                       l1426 054F  
                     l1370 03B9                       l1362 039A                       l1354 0388  
                     l1346 0379                       l1418 0489                       l1610 0256  
                     l1602 023A                       l1530 009F                       l1522 0083  
                     l1514 0066                       l1506 0049                       l1276 0357  
                     l1268 032D                       l1444 04C2                       l1460 04F7  
                     l1284 05A1                       l1452 0563                       l1292 02CA  
                     l1428 0552                       l1380 03D1                       l1372 03BA  
                     l1364 039E                       l1356 038A                       l1348 037B  
                     l1620 0278                       l1612 025C                       l1604 0240  
                     l1540 00C4                       l1532 00A7                       l1524 008B  
                     l1516 006F                       l1508 0052                       l1278 0360  
                     l1446 04C3                       l1438 048E                       l1454 05BD  
                     l1462 04FD                       l1286 05A6                       l1294 02CC  
                     l1374 03C1                       l1366 03A2                       l1358 0390  
                     l1390 043F                       l1622 0280                       l1614 0264  
                     l1606 0248                       l1550 00D3                       l1542 00C9  
                     l1534 00AC                       l1526 0090                       l1518 0074  
                     l1448 04C4                       l1456 05C2                       l1464 0502  
                     l1296 02F7                       l1288 0298                       l1368 03B3  
                     l1376 03C7                       l1392 0441                       l1384 0435  
                     l1480 041B                       l1472 03D9                       l1624 0286  
                     l1616 026A                       l1608 024E                       l1560 00F3  
                     l1552 00D5                       l1544 00CD                       l1536 00B2  
                     l1528 0096                       l1466 0508                       l1458 04F0  
                     l1298 02F8                       l1490 051A                       l1378 03CC  
                     l1394 0445                       l1386 0436                       l1482 0432  
                     l1474 03EF                       l1626 028E                       l1618 0272  
                     l1570 012A                       l1562 00F9                       l1554 00D7  
                     l1546 00CF                       l1538 00BB                       l1468 0514  
                     l1492 0527                       l1396 044A                       l1388 043A  
                     l1484 0433                       l1476 03F4                       l1580 01BB  
                     l1572 0147                       l1564 0102                       l1556 00D9  
                     l1548 00D1                       l1494 052D                       l1398 0450  
                     l1478 0404                       l1590 0200                       l1582 01D8  
                     l1574 0164                       l1566 0107                       l1558 00E8  
                     l1488 0517                       l1592 020B                       l1584 01DD  
                     l1576 0181                       l1568 010D                       l1496 001C  
                     l1594 0216                       l1586 01EA                       l1578 019E  
                     l1498 0021                       l1596 0221                       l1588 01F5  
                     l1598 022C                       STR_1 04E9                       STR_2 04D1  
                     STR_3 04DB                       STR_4 04CC                       STR_5 04D6  
                     STR_6 04E0                       STR_7 04E5                       STR_8 04ED  
                     _PEIE 005E                       _RCEN 048B                       i1l67 05CE  
         __end_of_I2C_NACK 05B4                       _main 001C           __end_of_I2C_Read 0516  
                     btemp 007E                       start 000C          ___bmul@multiplier 0075  
                    ??_ISR 0070           ?_I2C_Master_Init 0041               ?_intToString 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D            __end_of___awdiv 03D6  
          __end_of___awmod 048E                      _ANSEL 0188            __end_of___lldiv 036F  
          ___awdiv@divisor 0072            ___awdiv@counter 0077                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTC 0007  
                    _TRISA 0085                      _TRISC 0087                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019           __end_of_UARTInit 0307  
                    _Setup 053B          __end_of_I2C_Start 0573                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 0298                  ??_I2C_ACK 0072                     ??_main 004A  
        ?_I2C_Master_Write 0072                     ?_Setup 0070         ??_I2C_Master_Write 0074  
         ___awdiv@dividend 0074                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     _Tenvio 0020                     ___bmul 0573  
         I2C_Read@ACK_NACK 0073                  ??___awdiv 0076                  ??___awmod 0076  
                ??___lldiv 007A    __size_of_UARTSendString 0025           ___awdiv@quotient 0079  
          ___awmod@divisor 0072            ___awmod@counter 0077                  ?_I2C_NACK 0070  
                ?_I2C_Read 0070                     saved_w 007E    __end_of__initialization 0018  
      ___bmul@multiplicand 0072           intToString@value 0044           intToString@valor 003F  
           __pcstackCOMMON 0070              __end_of_Setup 055D                  ?_UARTInit 0041  
               ??_I2C_NACK 0072       __size_of_intToString 005F                 ??_I2C_Read 0072  
                  ??_Setup 007B                 __pbssBANK0 0020               I2C_Read@Data 0074  
               __pmaintext 001C                    ?___bmul 0072                 ??_UARTInit 0046  
               __pintentry 0004                    _I2C_ACK 05B4                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 04C6              ?_UARTSendChar 0070  
             I2C_Start@add 0076                    _Axenvio 002C                    _Ayenvio 002A  
                  _Azenvio 0028                  _I2C_Start 055D                    _Gxenvio 0026  
                  _Gyenvio 0024                    _Gzenvio 0022            __size_of___bmul 0015  
                  ___awdiv 036F                    ___awmod 0435                    ___lldiv 0307  
           _UARTSendString 0516                    __ptext1 03D6                    __ptext2 0573  
                  __ptext3 0435                    __ptext4 036F                    __ptext5 0516  
                  __ptext6 0595                    __ptext7 053B                    __ptext8 0298  
                  __ptext9 055D               __size_of_ISR 0007           ___awmod@dividend 0074  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 05C7       end_of_initialization 0018             ??_UARTSendChar 0072  
               ?_I2C_Start 0070  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072  
          ___lldiv@counter 0040                  _RCSTAbits 0018     __end_of_UARTSendString 053B  
         I2C_Master_Init@c 0041                  _PORTAbits 0005          __size_of_I2C_NACK 0009  
                _TRISCbits 0087          __size_of_I2C_Read 0027                  _TXSTAbits 0098  
        intToString@entero 0043            ?_UARTSendString 0070             __end_of___bmul 0588  
        __size_of_UARTInit 006F        start_initialization 000F                __end_of_ISR 05D5  
        ??_I2C_Master_Init 0045          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
              ??_I2C_Start 0074                   ??___bmul 0073                   ?_I2C_ACK 0070  
            ??_intToString 003C       __end_of_UARTSendChar 05A1                  ___latbits 0002  
            __pcstackBANK0 003C           _I2C_Master_Write 05A1              UARTSendChar@c 0072  
                 ?___awdiv 0072                   ?___awmod 0072                   ?___lldiv 0072  
                __pstrings 04C6                   _I2C_NACK 05AB                   _I2C_Read 04EF  
      __end_of_intToString 0435             __size_of_Setup 0022          interrupt_function 0004  
                clear_ram0 05C6            UARTSendString@i 0073                   _PIR1bits 000C  
                 _UARTInit 0298           __size_of_I2C_ACK 0009                __stringbase 04CB  
         ??_UARTSendString 0073      __size_of_UARTSendChar 000C               UARTInit@BRGH 0045  
         __size_of___awdiv 0067           __size_of___awmod 0059           __size_of___lldiv 0068  
              _intToString 03D6         __end_of__stringtab 04CC            _I2C_Master_Init 048E  
          _I2C_Master_Wait 0588            _I2C_Master_Stop 05BD                   __ptext10 05A1  
                 __ptext11 04EF                   __ptext12 05AB                   __ptext13 05B4  
                 __ptext14 05BD                   __ptext15 0588                   __ptext16 048E  
                 __ptext17 0307                   __ptext18 05CE               _UARTSendChar 0595  
            __size_of_main 027C   __end_of_I2C_Master_Write 05AB          UARTSendString@str 0075  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 04C6  
  __end_of_I2C_Master_Init 04C6    __end_of_I2C_Master_Wait 0595    __end_of_I2C_Master_Stop 05C6  
         ___lldiv@quotient 003C          I2C_Master_Write@d 0072                   stringdir 04C6  
                 stringtab 04C6                _SSPCON2bits 0091  
