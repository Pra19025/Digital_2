

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 11:26:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455                           
   456                           	psect	strings
   457  043D                     __pstrings:
   458  043D                     stringtab:
   459  043D                     __stringtab:
   460  043D                     stringcode:	
   461                           ;	String table - string pointers are 1 byte each
   462                           
   463  043D                     stringdir:
   464  043D  3004               	movlw	high stringdir
   465  043E  008A               	movwf	10
   466  043F  0804               	movf	4,w
   467  0440  0A84               	incf	4,f
   468  0441  0782               	addwf	2,f
   469  0442                     __stringbase:
   470  0442  3400               	retlw	0
   471  0443                     __end_of__stringtab:
   472  0443                     _dpowers:
   473  0443  3401               	retlw	1
   474  0444  3400               	retlw	0
   475  0445  340A               	retlw	10
   476  0446  3400               	retlw	0
   477  0447  3464               	retlw	100
   478  0448  3400               	retlw	0
   479  0449  34E8               	retlw	232
   480  044A  3403               	retlw	3
   481  044B  3410               	retlw	16
   482  044C  3427               	retlw	39
   483  044D                     __end_of_dpowers:
   484  001A                     _RCREG	set	26
   485  000C                     _PIR1bits	set	12
   486  0019                     _TXREG	set	25
   487  0018                     _RCSTAbits	set	24
   488  0013                     _SSPBUF	set	19
   489  0014                     _SSPCON	set	20
   490  0005                     _PORTA	set	5
   491  0005                     _PORTAbits	set	5
   492  0063                     _SSPIF	set	99
   493  005E                     _PEIE	set	94
   494  005F                     _GIE	set	95
   495  0098                     _TXSTAbits	set	152
   496  0099                     _SPBRG	set	153
   497  0091                     _SSPCON2bits	set	145
   498  0087                     _TRISCbits	set	135
   499  0094                     _SSPSTAT	set	148
   500  0093                     _SSPADD	set	147
   501  0091                     _SSPCON2	set	145
   502  0085                     _TRISA	set	133
   503  0488                     _SEN	set	1160
   504  0463                     _SSPIE	set	1123
   505  043C                     _TRISC4	set	1084
   506  043B                     _TRISC3	set	1083
   507  0189                     _ANSELH	set	393
   508  0188                     _ANSEL	set	392
   509  044D                     STR_5:
   510  044D  3420               	retlw	32	;' '
   511  044E  3447               	retlw	71	;'G'
   512  044F  3478               	retlw	120	;'x'
   513  0450  3420               	retlw	32	;' '
   514  0451  343D               	retlw	61	;'='
   515  0452  3420               	retlw	32	;' '
   516  0453  3425               	retlw	37	;'%'
   517  0454  3464               	retlw	100	;'d'
   518  0455  3420               	retlw	32	;' '
   519  0456  3420               	retlw	32	;' '
   520  0457  3420               	retlw	32	;' '
   521  0458  3420               	retlw	32	;' '
   522  0459  3400               	retlw	0
   523  045A                     STR_2:
   524  045A  3420               	retlw	32	;' '
   525  045B  3441               	retlw	65	;'A'
   526  045C  3479               	retlw	121	;'y'
   527  045D  3420               	retlw	32	;' '
   528  045E  343D               	retlw	61	;'='
   529  045F  3420               	retlw	32	;' '
   530  0460  3425               	retlw	37	;'%'
   531  0461  3464               	retlw	100	;'d'
   532  0462  3420               	retlw	32	;' '
   533  0463  3420               	retlw	32	;' '
   534  0464  3420               	retlw	32	;' '
   535  0465  3420               	retlw	32	;' '
   536  0466  3400               	retlw	0
   537  0467                     STR_6:
   538  0467  3420               	retlw	32	;' '
   539  0468  3447               	retlw	71	;'G'
   540  0469  3479               	retlw	121	;'y'
   541  046A  3420               	retlw	32	;' '
   542  046B  343D               	retlw	61	;'='
   543  046C  3420               	retlw	32	;' '
   544  046D  3425               	retlw	37	;'%'
   545  046E  3464               	retlw	100	;'d'
   546  046F  3420               	retlw	32	;' '
   547  0470  3420               	retlw	32	;' '
   548  0471  3420               	retlw	32	;' '
   549  0472  3420               	retlw	32	;' '
   550  0473  3400               	retlw	0
   551  0474                     STR_3:
   552  0474  3420               	retlw	32	;' '
   553  0475  3441               	retlw	65	;'A'
   554  0476  347A               	retlw	122	;'z'
   555  0477  3420               	retlw	32	;' '
   556  0478  343D               	retlw	61	;'='
   557  0479  3420               	retlw	32	;' '
   558  047A  3425               	retlw	37	;'%'
   559  047B  3464               	retlw	100	;'d'
   560  047C  3420               	retlw	32	;' '
   561  047D  3420               	retlw	32	;' '
   562  047E  3420               	retlw	32	;' '
   563  047F  3420               	retlw	32	;' '
   564  0480  3400               	retlw	0
   565  0481                     STR_1:
   566  0481  3441               	retlw	65	;'A'
   567  0482  3478               	retlw	120	;'x'
   568  0483  3420               	retlw	32	;' '
   569  0484  343D               	retlw	61	;'='
   570  0485  3420               	retlw	32	;' '
   571  0486  3425               	retlw	37	;'%'
   572  0487  3464               	retlw	100	;'d'
   573  0488  3420               	retlw	32	;' '
   574  0489  3420               	retlw	32	;' '
   575  048A  3420               	retlw	32	;' '
   576  048B  3420               	retlw	32	;' '
   577  048C  3400               	retlw	0
   578  048D                     STR_7:
   579  048D  3420               	retlw	32	;' '
   580  048E  3447               	retlw	71	;'G'
   581  048F  347A               	retlw	122	;'z'
   582  0490  3420               	retlw	32	;' '
   583  0491  343D               	retlw	61	;'='
   584  0492  3420               	retlw	32	;' '
   585  0493  3425               	retlw	37	;'%'
   586  0494  3464               	retlw	100	;'d'
   587  0495  340D               	retlw	13
   588  0496  340A               	retlw	10
   589  0497  3400               	retlw	0
   590  0498                     STR_4:
   591  0498  3420               	retlw	32	;' '
   592  0499  3454               	retlw	84	;'T'
   593  049A  3420               	retlw	32	;' '
   594  049B  343D               	retlw	61	;'='
   595  049C  3420               	retlw	32	;' '
   596  049D  3425               	retlw	37	;'%'
   597  049E  3464               	retlw	100	;'d'
   598  049F  3420               	retlw	32	;' '
   599  04A0  3420               	retlw	32	;' '
   600  04A1  3400               	retlw	0
   601                           
   602                           	psect	cinit
   603  000F                     start_initialization:	
   604                           ; #config settings
   605                           
   606  000F                     __initialization:
   607                           
   608                           ; Clear objects allocated to COMMON
   609  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   610  0010                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  0010                     __end_of__initialization:
   614  0010  0183               	clrf	3
   615  0011  120A  118A  2DB8   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssCOMMON
   618  007B                     __pbssCOMMON:
   619  007B                     _bandera:
   620  007B                     	ds	1
   621                           
   622                           	psect	cstackCOMMON
   623  0070                     __pcstackCOMMON:
   624  0070                     ?_Setup:
   625  0070                     ?_MPU6050_Read:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_MPU6050_Init:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_UARTSendString:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_ISR:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_ISR:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_I2C_Master_Wait:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_I2C_Master_Stop:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Start:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_UARTSendChar:	
   653                           ; 1 bytes @ 0x0
   654                           
   655                           
   656                           ; 1 bytes @ 0x0
   657  0070                     	ds	2
   658  0072                     ??_I2C_Master_Wait:
   659  0072                     ??_I2C_Master_Stop:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0072                     ?_I2C_Master_Write:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     ??_UARTSendChar:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ?_I2C_Master_Read:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ?___lwdiv:	
   672                           ; 2 bytes @ 0x2
   673                           
   674  0072                     ?___lldiv:	
   675                           ; 2 bytes @ 0x2
   676                           
   677  0072                     UARTSendChar@c:	
   678                           ; 4 bytes @ 0x2
   679                           
   680  0072                     I2C_Master_Write@d:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0072                     I2C_Master_Read@a:	
   684                           ; 2 bytes @ 0x2
   685                           
   686  0072                     ___lwdiv@divisor:	
   687                           ; 2 bytes @ 0x2
   688                           
   689  0072                     ___lldiv@divisor:	
   690                           ; 2 bytes @ 0x2
   691                           
   692                           
   693                           ; 4 bytes @ 0x2
   694  0072                     	ds	1
   695  0073                     ??_UARTSendString:
   696                           
   697                           ; 1 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ??_I2C_Master_Write:
   700  0074                     ??_I2C_Master_Read:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_I2C_Start:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     UARTSendString@i:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ___lwdiv@dividend:	
   710                           ; 2 bytes @ 0x4
   711                           
   712                           
   713                           ; 2 bytes @ 0x4
   714  0074                     	ds	2
   715  0076                     ??___lwdiv:
   716  0076                     I2C_Start@add:	
   717                           ; 1 bytes @ 0x6
   718                           
   719  0076                     UARTSendString@str:	
   720                           ; 1 bytes @ 0x6
   721                           
   722  0076                     I2C_Master_Read@temp:	
   723                           ; 1 bytes @ 0x6
   724                           
   725  0076                     ___lldiv@dividend:	
   726                           ; 2 bytes @ 0x6
   727                           
   728                           
   729                           ; 4 bytes @ 0x6
   730  0076                     	ds	1
   731  0077                     ___lwdiv@quotient:
   732                           
   733                           ; 2 bytes @ 0x7
   734  0077                     	ds	2
   735  0079                     ___lwdiv@counter:
   736                           
   737                           ; 1 bytes @ 0x9
   738  0079                     	ds	1
   739  007A                     ??___lldiv:
   740  007A                     ??___lwmod:	
   741                           ; 1 bytes @ 0xA
   742                           
   743                           
   744                           ; 1 bytes @ 0xA
   745  007A                     	ds	1
   746  007B                     ??_Setup:
   747                           
   748                           	psect	cstackBANK0
   749  0020                     __pcstackBANK0:	
   750                           ; 1 bytes @ 0xB
   751                           
   752  0020                     ?___lwmod:
   753  0020                     ___lwmod@divisor:	
   754                           ; 2 bytes @ 0x0
   755                           
   756  0020                     ___lldiv@quotient:	
   757                           ; 2 bytes @ 0x0
   758                           
   759                           
   760                           ; 4 bytes @ 0x0
   761  0020                     	ds	2
   762  0022                     ___lwmod@dividend:
   763                           
   764                           ; 2 bytes @ 0x2
   765  0022                     	ds	2
   766  0024                     ___lldiv@counter:
   767  0024                     ___lwmod@counter:	
   768                           ; 1 bytes @ 0x4
   769                           
   770                           
   771                           ; 1 bytes @ 0x4
   772  0024                     	ds	1
   773  0025                     ?_UARTInit:
   774  0025                     ?_I2C_Master_Init:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0025                     ?_sprintf:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0025                     sprintf@f:	
   781                           ; 2 bytes @ 0x5
   782                           
   783  0025                     I2C_Master_Init@c:	
   784                           ; 1 bytes @ 0x5
   785                           
   786  0025                     UARTInit@baud_rate:	
   787                           ; 4 bytes @ 0x5
   788                           
   789                           
   790                           ; 4 bytes @ 0x5
   791  0025                     	ds	3
   792  0028                     ??_sprintf:
   793                           
   794                           ; 1 bytes @ 0x8
   795  0028                     	ds	1
   796  0029                     ??_I2C_Master_Init:
   797  0029                     UARTInit@BRGH:	
   798                           ; 1 bytes @ 0x9
   799                           
   800                           
   801                           ; 1 bytes @ 0x9
   802  0029                     	ds	1
   803  002A                     ??_UARTInit:
   804                           
   805                           ; 1 bytes @ 0xA
   806  002A                     	ds	1
   807  002B                     sprintf@ap:
   808                           
   809                           ; 1 bytes @ 0xB
   810  002B                     	ds	1
   811  002C                     sprintf@flag:
   812                           
   813                           ; 1 bytes @ 0xC
   814  002C                     	ds	1
   815  002D                     ??_MPU6050_Init:
   816  002D                     sprintf@prec:	
   817                           ; 1 bytes @ 0xD
   818                           
   819                           
   820                           ; 1 bytes @ 0xD
   821  002D                     	ds	1
   822  002E                     sprintf@val:
   823                           
   824                           ; 2 bytes @ 0xE
   825  002E                     	ds	2
   826  0030                     sprintf@sp:
   827                           
   828                           ; 1 bytes @ 0x10
   829  0030                     	ds	1
   830  0031                     sprintf@c:
   831                           
   832                           ; 1 bytes @ 0x11
   833  0031                     	ds	1
   834  0032                     ??_MPU6050_Read:
   835                           
   836                           ; 1 bytes @ 0x12
   837  0032                     	ds	2
   838  0034                     MPU6050_Read@buffer:
   839                           
   840                           ; 40 bytes @ 0x14
   841  0034                     	ds	40
   842  005C                     MPU6050_Read@Ax:
   843                           
   844                           ; 2 bytes @ 0x3C
   845  005C                     	ds	2
   846  005E                     MPU6050_Read@Ay:
   847                           
   848                           ; 2 bytes @ 0x3E
   849  005E                     	ds	2
   850  0060                     MPU6050_Read@Az:
   851                           
   852                           ; 2 bytes @ 0x40
   853  0060                     	ds	2
   854  0062                     MPU6050_Read@T:
   855                           
   856                           ; 2 bytes @ 0x42
   857  0062                     	ds	2
   858  0064                     MPU6050_Read@Gx:
   859                           
   860                           ; 2 bytes @ 0x44
   861  0064                     	ds	2
   862  0066                     MPU6050_Read@Gy:
   863                           
   864                           ; 2 bytes @ 0x46
   865  0066                     	ds	2
   866  0068                     MPU6050_Read@Gz:
   867                           
   868                           ; 2 bytes @ 0x48
   869  0068                     	ds	2
   870  006A                     ??_main:
   871                           
   872                           ; 1 bytes @ 0x4A
   873  006A                     	ds	2
   874                           
   875                           	psect	maintext
   876  05B8                     __pmaintext:	
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 50 in file "main.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : B00/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0
   898 ;;      Temps:          0       2       0       0       0
   899 ;;      Totals:         0       2       0       0       0
   900 ;;Total ram usage:        2 bytes
   901 ;; Hardware stack levels required when called:    6
   902 ;; This function calls:
   903 ;;		_MPU6050_Read
   904 ;;		_Setup
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _main
   912  05B8                     _main:
   913  05B8                     l1691:	
   914                           ;incstack = 0
   915                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   916                           
   917                           
   918                           ;main.c: 51:     I2C_Master_Init(100000);
   919  05B8  120A  118A  255A  120A  118A  	fcall	_Setup
   920  05BD                     l1693:
   921  05BD  1003               	clrc
   922  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   923  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   924  05C0  1C05               	btfss	5,0	;volatile
   925  05C1  1403               	setc
   926  05C2  1803               	btfsc	3,0
   927  05C3  2DC5               	goto	u951
   928  05C4  2DC9               	goto	u950
   929  05C5                     u951:
   930  05C5  1283               	bcf	3,5	;RP0=0, select bank0
   931  05C6  1303               	bcf	3,6	;RP1=0, select bank0
   932  05C7  1405               	bsf	5,0	;volatile
   933  05C8  2DCC               	goto	u964
   934  05C9                     u950:
   935  05C9  1283               	bcf	3,5	;RP0=0, select bank0
   936  05CA  1303               	bcf	3,6	;RP1=0, select bank0
   937  05CB  1005               	bcf	5,0	;volatile
   938  05CC                     u964:
   939  05CC                     l1695:
   940  05CC  120A  118A  2014  120A  118A  	fcall	_MPU6050_Read
   941  05D1                     l1697:
   942  05D1  3041               	movlw	65
   943  05D2  1283               	bcf	3,5	;RP0=0, select bank0
   944  05D3  1303               	bcf	3,6	;RP1=0, select bank0
   945  05D4  00EB               	movwf	??_main+1
   946  05D5  30ED               	movlw	237
   947  05D6  00EA               	movwf	??_main
   948  05D7                     u977:
   949  05D7  0BEA               	decfsz	??_main,f
   950  05D8  2DD7               	goto	u977
   951  05D9  0BEB               	decfsz	??_main+1,f
   952  05DA  2DD7               	goto	u977
   953  05DB  2DDC               	nop2
   954  05DC  2DBD               	goto	l1693
   955  05DD  120A  118A  280C   	ljmp	start
   956  05E0                     __end_of_main:
   957                           
   958                           	psect	text1
   959  055A                     __ptext1:	
   960 ;; *************** function _Setup *****************
   961 ;; Defined at:
   962 ;;		line 73 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, pclath, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    5
   983 ;; This function calls:
   984 ;;		_I2C_Master_Init
   985 ;;		_MPU6050_Init
   986 ;;		_UARTInit
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _Setup
   994  055A                     _Setup:
   995  055A                     l1469:	
   996                           ;incstack = 0
   997                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
   998                           
   999  055A  3000               	movlw	0
  1000  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1001  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1002  055D  00A8               	movwf	UARTInit@baud_rate+3
  1003  055E  3000               	movlw	0
  1004  055F  00A7               	movwf	UARTInit@baud_rate+2
  1005  0560  3025               	movlw	37
  1006  0561  00A6               	movwf	UARTInit@baud_rate+1
  1007  0562  3080               	movlw	128
  1008  0563  00A5               	movwf	UARTInit@baud_rate
  1009  0564  01A9               	clrf	UARTInit@BRGH
  1010  0565  0AA9               	incf	UARTInit@BRGH,f
  1011  0566  120A  118A  2366  120A  118A  	fcall	_UARTInit
  1012  056B  120A  118A  22A0  120A  118A  	fcall	_MPU6050_Init
  1013  0570                     l1471:
  1014  0570  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0571  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0572  0185               	clrf	5	;volatile
  1017  0573                     l1473:
  1018  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0575  0185               	clrf	5	;volatile
  1021  0576                     l1475:
  1022  0576  1683               	bsf	3,5	;RP0=1, select bank3
  1023  0577  1703               	bsf	3,6	;RP1=1, select bank3
  1024  0578  0188               	clrf	8	;volatile
  1025  0579                     l1477:
  1026  0579  0189               	clrf	9	;volatile
  1027  057A  3000               	movlw	0
  1028  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1029  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1030  057D  00A8               	movwf	I2C_Master_Init@c+3
  1031  057E  3001               	movlw	1
  1032  057F  00A7               	movwf	I2C_Master_Init@c+2
  1033  0580  3086               	movlw	134
  1034  0581  00A6               	movwf	I2C_Master_Init@c+1
  1035  0582  30A0               	movlw	160
  1036  0583  00A5               	movwf	I2C_Master_Init@c
  1037  0584  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Init
  1038  0589                     l40:
  1039  0589  0008               	return
  1040  058A                     __end_of_Setup:
  1041                           
  1042                           	psect	text2
  1043  0366                     __ptext2:	
  1044 ;; *************** function _UARTInit *****************
  1045 ;; Defined at:
  1046 ;;		line 9 in file "UART.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  1049 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, pclath, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       5       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       4       0       0       0
  1064 ;;      Totals:         0       9       0       0       0
  1065 ;;Total ram usage:        9 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		___lldiv
  1070 ;; This function is called by:
  1071 ;;		_Setup
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _UARTInit
  1077  0366                     _UARTInit:
  1078  0366                     l1301:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1081                           
  1082                           
  1083                           ;UART.c: 11:     if (BRGH == 0) {
  1084  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0368  0829               	movf	UARTInit@BRGH,w
  1087  0369  1D03               	btfss	3,2
  1088  036A  2B6C               	goto	u681
  1089  036B  2B6D               	goto	u680
  1090  036C                     u681:
  1091  036C  2B9A               	goto	l1307
  1092  036D                     u680:
  1093  036D                     l1303:
  1094                           
  1095                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  1096  036D  0825               	movf	UARTInit@baud_rate,w
  1097  036E  00AA               	movwf	??_UARTInit
  1098  036F  0826               	movf	UARTInit@baud_rate+1,w
  1099  0370  00AB               	movwf	??_UARTInit+1
  1100  0371  0827               	movf	UARTInit@baud_rate+2,w
  1101  0372  00AC               	movwf	??_UARTInit+2
  1102  0373  0828               	movf	UARTInit@baud_rate+3,w
  1103  0374  00AD               	movwf	??_UARTInit+3
  1104  0375  3006               	movlw	6
  1105  0376                     u695:
  1106  0376  1003               	clrc
  1107  0377  0DAA               	rlf	??_UARTInit,f
  1108  0378  0DAB               	rlf	??_UARTInit+1,f
  1109  0379  0DAC               	rlf	??_UARTInit+2,f
  1110  037A  0DAD               	rlf	??_UARTInit+3,f
  1111  037B                     u690:
  1112  037B  3EFF               	addlw	-1
  1113  037C  1D03               	skipz
  1114  037D  2B76               	goto	u695
  1115  037E  082D               	movf	??_UARTInit+3,w
  1116  037F  00F5               	movwf	___lldiv@divisor+3
  1117  0380  082C               	movf	??_UARTInit+2,w
  1118  0381  00F4               	movwf	___lldiv@divisor+2
  1119  0382  082B               	movf	??_UARTInit+1,w
  1120  0383  00F3               	movwf	___lldiv@divisor+1
  1121  0384  082A               	movf	??_UARTInit,w
  1122  0385  00F2               	movwf	___lldiv@divisor
  1123  0386  3000               	movlw	0
  1124  0387  00F9               	movwf	___lldiv@dividend+3
  1125  0388  303D               	movlw	61
  1126  0389  00F8               	movwf	___lldiv@dividend+2
  1127  038A  3009               	movlw	9
  1128  038B  00F7               	movwf	___lldiv@dividend+1
  1129  038C  3000               	movlw	0
  1130  038D  00F6               	movwf	___lldiv@dividend
  1131  038E  120A  118A  23D5  120A  118A  	fcall	___lldiv
  1132  0393  0872               	movf	?___lldiv,w
  1133  0394  3EFF               	addlw	255
  1134  0395  1683               	bsf	3,5	;RP0=1, select bank1
  1135  0396  1303               	bcf	3,6	;RP1=0, select bank1
  1136  0397  0099               	movwf	25	;volatile
  1137  0398                     l1305:
  1138                           
  1139                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  1140  0398  1118               	bcf	24,2	;volatile
  1141                           
  1142                           ;UART.c: 14:     } else {
  1143  0399  2BC6               	goto	l1311
  1144  039A                     l1307:
  1145                           
  1146                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  1147  039A  0825               	movf	UARTInit@baud_rate,w
  1148  039B  00AA               	movwf	??_UARTInit
  1149  039C  0826               	movf	UARTInit@baud_rate+1,w
  1150  039D  00AB               	movwf	??_UARTInit+1
  1151  039E  0827               	movf	UARTInit@baud_rate+2,w
  1152  039F  00AC               	movwf	??_UARTInit+2
  1153  03A0  0828               	movf	UARTInit@baud_rate+3,w
  1154  03A1  00AD               	movwf	??_UARTInit+3
  1155  03A2  3004               	movlw	4
  1156  03A3                     u705:
  1157  03A3  1003               	clrc
  1158  03A4  0DAA               	rlf	??_UARTInit,f
  1159  03A5  0DAB               	rlf	??_UARTInit+1,f
  1160  03A6  0DAC               	rlf	??_UARTInit+2,f
  1161  03A7  0DAD               	rlf	??_UARTInit+3,f
  1162  03A8                     u700:
  1163  03A8  3EFF               	addlw	-1
  1164  03A9  1D03               	skipz
  1165  03AA  2BA3               	goto	u705
  1166  03AB  082D               	movf	??_UARTInit+3,w
  1167  03AC  00F5               	movwf	___lldiv@divisor+3
  1168  03AD  082C               	movf	??_UARTInit+2,w
  1169  03AE  00F4               	movwf	___lldiv@divisor+2
  1170  03AF  082B               	movf	??_UARTInit+1,w
  1171  03B0  00F3               	movwf	___lldiv@divisor+1
  1172  03B1  082A               	movf	??_UARTInit,w
  1173  03B2  00F2               	movwf	___lldiv@divisor
  1174  03B3  3000               	movlw	0
  1175  03B4  00F9               	movwf	___lldiv@dividend+3
  1176  03B5  303D               	movlw	61
  1177  03B6  00F8               	movwf	___lldiv@dividend+2
  1178  03B7  3009               	movlw	9
  1179  03B8  00F7               	movwf	___lldiv@dividend+1
  1180  03B9  3000               	movlw	0
  1181  03BA  00F6               	movwf	___lldiv@dividend
  1182  03BB  120A  118A  23D5  120A  118A  	fcall	___lldiv
  1183  03C0  0872               	movf	?___lldiv,w
  1184  03C1  3EFF               	addlw	255
  1185  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1186  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  1187  03C4  0099               	movwf	25	;volatile
  1188  03C5                     l1309:
  1189                           
  1190                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  1191  03C5  1518               	bsf	24,2	;volatile
  1192  03C6                     l1311:
  1193                           
  1194                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  1195  03C6  1318               	bcf	24,6	;volatile
  1196  03C7                     l1313:
  1197                           
  1198                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  1199  03C7  1698               	bsf	24,5	;volatile
  1200  03C8                     l1315:
  1201                           
  1202                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  1203  03C8  1218               	bcf	24,4	;volatile
  1204  03C9                     l1317:
  1205                           
  1206                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  1207  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1208  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1209  03CB  1798               	bsf	24,7	;volatile
  1210  03CC                     l1319:
  1211                           
  1212                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1213  03CC  1318               	bcf	24,6	;volatile
  1214  03CD                     l1321:
  1215                           
  1216                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  1217  03CD  1618               	bsf	24,4	;volatile
  1218  03CE                     l1323:
  1219                           
  1220                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  1221  03CE  1118               	bcf	24,2	;volatile
  1222  03CF                     l1325:
  1223                           
  1224                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  1225  03CF  1098               	bcf	24,1	;volatile
  1226  03D0                     l1327:
  1227                           
  1228                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  1229  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1230  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1231  03D2  1787               	bsf	7,7	;volatile
  1232  03D3                     l1329:
  1233                           
  1234                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  1235  03D3  1307               	bcf	7,6	;volatile
  1236  03D4                     l141:
  1237  03D4  0008               	return
  1238  03D5                     __end_of_UARTInit:
  1239                           
  1240                           	psect	text3
  1241  02A0                     __ptext3:	
  1242 ;; *************** function _MPU6050_Init *****************
  1243 ;; Defined at:
  1244 ;;		line 12 in file "MPU6050.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          0       2       0       0       0
  1261 ;;      Totals:         0       2       0       0       0
  1262 ;;Total ram usage:        2 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    4
  1265 ;; This function calls:
  1266 ;;		_I2C_Master_Init
  1267 ;;		_I2C_Master_Stop
  1268 ;;		_I2C_Master_Write
  1269 ;;		_I2C_Start
  1270 ;; This function is called by:
  1271 ;;		_Setup
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _MPU6050_Init
  1277  02A0                     _MPU6050_Init:
  1278  02A0                     l1331:	
  1279                           ;incstack = 0
  1280                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  1281                           
  1282                           
  1283                           ;MPU6050.c: 15:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1284  02A0  3082               	movlw	130
  1285  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1286  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1287  02A3  00AE               	movwf	??_MPU6050_Init+1
  1288  02A4  30DD               	movlw	221
  1289  02A5  00AD               	movwf	??_MPU6050_Init
  1290  02A6                     u987:
  1291  02A6  0BAD               	decfsz	??_MPU6050_Init,f
  1292  02A7  2AA6               	goto	u987
  1293  02A8  0BAE               	decfsz	??_MPU6050_Init+1,f
  1294  02A9  2AA6               	goto	u987
  1295  02AA                     l1333:
  1296                           
  1297                           ;MPU6050.c: 16:   I2C_Master_Init(100000);
  1298  02AA  3000               	movlw	0
  1299  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1300  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1301  02AD  00A8               	movwf	I2C_Master_Init@c+3
  1302  02AE  3001               	movlw	1
  1303  02AF  00A7               	movwf	I2C_Master_Init@c+2
  1304  02B0  3086               	movlw	134
  1305  02B1  00A6               	movwf	I2C_Master_Init@c+1
  1306  02B2  30A0               	movlw	160
  1307  02B3  00A5               	movwf	I2C_Master_Init@c
  1308  02B4  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Init
  1309  02B9                     l1335:
  1310                           
  1311                           ;MPU6050.c: 19:   I2C_Start(0xD0);
  1312  02B9  30D0               	movlw	208
  1313  02BA  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1314  02BF                     l1337:
  1315                           
  1316                           ;MPU6050.c: 20:   I2C_Master_Write(0x19);
  1317  02BF  3019               	movlw	25
  1318  02C0  00F2               	movwf	I2C_Master_Write@d
  1319  02C1  3000               	movlw	0
  1320  02C2  00F3               	movwf	I2C_Master_Write@d+1
  1321  02C3  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1322  02C8                     l1339:
  1323                           
  1324                           ;MPU6050.c: 21:   I2C_Master_Write(0x07);
  1325  02C8  3007               	movlw	7
  1326  02C9  00F2               	movwf	I2C_Master_Write@d
  1327  02CA  3000               	movlw	0
  1328  02CB  00F3               	movwf	I2C_Master_Write@d+1
  1329  02CC  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1330  02D1                     l1341:
  1331                           
  1332                           ;MPU6050.c: 22:   I2C_Master_Stop();
  1333  02D1  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1334  02D6                     l1343:
  1335                           
  1336                           ;MPU6050.c: 25:   I2C_Start(0xD0);
  1337  02D6  30D0               	movlw	208
  1338  02D7  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1339  02DC                     l1345:
  1340                           
  1341                           ;MPU6050.c: 26:   I2C_Master_Write(0x6B);
  1342  02DC  306B               	movlw	107
  1343  02DD  00F2               	movwf	I2C_Master_Write@d
  1344  02DE  3000               	movlw	0
  1345  02DF  00F3               	movwf	I2C_Master_Write@d+1
  1346  02E0  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1347  02E5                     l1347:
  1348                           
  1349                           ;MPU6050.c: 27:   I2C_Master_Write(0x01);
  1350  02E5  3001               	movlw	1
  1351  02E6  00F2               	movwf	I2C_Master_Write@d
  1352  02E7  3000               	movlw	0
  1353  02E8  00F3               	movwf	I2C_Master_Write@d+1
  1354  02E9  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1355  02EE                     l1349:
  1356                           
  1357                           ;MPU6050.c: 28:   I2C_Master_Stop();
  1358  02EE  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1359  02F3                     l1351:
  1360                           
  1361                           ;MPU6050.c: 31:   I2C_Start(0xD0);
  1362  02F3  30D0               	movlw	208
  1363  02F4  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1364  02F9                     l1353:
  1365                           
  1366                           ;MPU6050.c: 32:   I2C_Master_Write(0x1A);
  1367  02F9  301A               	movlw	26
  1368  02FA  00F2               	movwf	I2C_Master_Write@d
  1369  02FB  3000               	movlw	0
  1370  02FC  00F3               	movwf	I2C_Master_Write@d+1
  1371  02FD  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1372  0302                     l1355:
  1373                           
  1374                           ;MPU6050.c: 33:   I2C_Master_Write(0x00);
  1375  0302  3000               	movlw	0
  1376  0303  00F2               	movwf	I2C_Master_Write@d
  1377  0304  00F3               	movwf	I2C_Master_Write@d+1
  1378  0305  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1379  030A                     l1357:
  1380                           
  1381                           ;MPU6050.c: 34:   I2C_Master_Stop();
  1382  030A  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1383  030F                     l1359:
  1384                           
  1385                           ;MPU6050.c: 37:   I2C_Start(0xD0);
  1386  030F  30D0               	movlw	208
  1387  0310  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1388  0315                     l1361:
  1389                           
  1390                           ;MPU6050.c: 38:   I2C_Master_Write(0x1C);
  1391  0315  301C               	movlw	28
  1392  0316  00F2               	movwf	I2C_Master_Write@d
  1393  0317  3000               	movlw	0
  1394  0318  00F3               	movwf	I2C_Master_Write@d+1
  1395  0319  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1396  031E                     l1363:
  1397                           
  1398                           ;MPU6050.c: 39:   I2C_Master_Write(0x00);
  1399  031E  3000               	movlw	0
  1400  031F  00F2               	movwf	I2C_Master_Write@d
  1401  0320  00F3               	movwf	I2C_Master_Write@d+1
  1402  0321  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1403  0326                     l1365:
  1404                           
  1405                           ;MPU6050.c: 40:   I2C_Master_Stop();
  1406  0326  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1407  032B                     l1367:
  1408                           
  1409                           ;MPU6050.c: 43:   I2C_Start(0xD0);
  1410  032B  30D0               	movlw	208
  1411  032C  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1412  0331                     l1369:
  1413                           
  1414                           ;MPU6050.c: 44:   I2C_Master_Write(0x1B);
  1415  0331  301B               	movlw	27
  1416  0332  00F2               	movwf	I2C_Master_Write@d
  1417  0333  3000               	movlw	0
  1418  0334  00F3               	movwf	I2C_Master_Write@d+1
  1419  0335  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1420  033A                     l1371:
  1421                           
  1422                           ;MPU6050.c: 45:   I2C_Master_Write(0x18);
  1423  033A  3018               	movlw	24
  1424  033B  00F2               	movwf	I2C_Master_Write@d
  1425  033C  3000               	movlw	0
  1426  033D  00F3               	movwf	I2C_Master_Write@d+1
  1427  033E  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1428  0343                     l1373:
  1429                           
  1430                           ;MPU6050.c: 46:   I2C_Master_Stop();
  1431  0343  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1432  0348                     l1375:
  1433                           
  1434                           ;MPU6050.c: 49:   I2C_Start(0xD0);
  1435  0348  30D0               	movlw	208
  1436  0349  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1437  034E                     l1377:
  1438                           
  1439                           ;MPU6050.c: 50:   I2C_Master_Write(0x38);
  1440  034E  3038               	movlw	56
  1441  034F  00F2               	movwf	I2C_Master_Write@d
  1442  0350  3000               	movlw	0
  1443  0351  00F3               	movwf	I2C_Master_Write@d+1
  1444  0352  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1445  0357                     l1379:
  1446                           
  1447                           ;MPU6050.c: 51:   I2C_Master_Write(0x01);
  1448  0357  3001               	movlw	1
  1449  0358  00F2               	movwf	I2C_Master_Write@d
  1450  0359  3000               	movlw	0
  1451  035A  00F3               	movwf	I2C_Master_Write@d+1
  1452  035B  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1453  0360                     l1381:
  1454                           
  1455                           ;MPU6050.c: 52:   I2C_Master_Stop();
  1456  0360  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1457  0365                     l119:
  1458  0365  0008               	return
  1459  0366                     __end_of_MPU6050_Init:
  1460                           
  1461                           	psect	text4
  1462  0522                     __ptext4:	
  1463 ;; *************** function _I2C_Master_Init *****************
  1464 ;; Defined at:
  1465 ;;		line 16 in file "I2C.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  c               4    5[BANK0 ] const unsigned long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         0       4       0       0       0
  1480 ;;      Locals:         0       0       0       0       0
  1481 ;;      Temps:          0       4       0       0       0
  1482 ;;      Totals:         0       8       0       0       0
  1483 ;;Total ram usage:        8 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    2
  1486 ;; This function calls:
  1487 ;;		___lldiv
  1488 ;; This function is called by:
  1489 ;;		_Setup
  1490 ;;		_MPU6050_Init
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _I2C_Master_Init
  1496  0522                     _I2C_Master_Init:
  1497  0522                     l1229:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1500                           
  1501                           
  1502                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1503  0522  3028               	movlw	40
  1504  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0525  0094               	movwf	20	;volatile
  1507  0526                     l1231:
  1508                           
  1509                           ;I2C.c: 19:     SSPCON2 = 0;
  1510  0526  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0527  1303               	bcf	3,6	;RP1=0, select bank1
  1512  0528  0191               	clrf	17	;volatile
  1513  0529                     l1233:
  1514                           
  1515                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  1516  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1517  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1518  052B  0825               	movf	I2C_Master_Init@c,w
  1519  052C  00A9               	movwf	??_I2C_Master_Init
  1520  052D  0826               	movf	I2C_Master_Init@c+1,w
  1521  052E  00AA               	movwf	??_I2C_Master_Init+1
  1522  052F  0827               	movf	I2C_Master_Init@c+2,w
  1523  0530  00AB               	movwf	??_I2C_Master_Init+2
  1524  0531  0828               	movf	I2C_Master_Init@c+3,w
  1525  0532  00AC               	movwf	??_I2C_Master_Init+3
  1526  0533  3002               	movlw	2
  1527  0534                     u535:
  1528  0534  1003               	clrc
  1529  0535  0DA9               	rlf	??_I2C_Master_Init,f
  1530  0536  0DAA               	rlf	??_I2C_Master_Init+1,f
  1531  0537  0DAB               	rlf	??_I2C_Master_Init+2,f
  1532  0538  0DAC               	rlf	??_I2C_Master_Init+3,f
  1533  0539                     u530:
  1534  0539  3EFF               	addlw	-1
  1535  053A  1D03               	skipz
  1536  053B  2D34               	goto	u535
  1537  053C  082C               	movf	??_I2C_Master_Init+3,w
  1538  053D  00F5               	movwf	___lldiv@divisor+3
  1539  053E  082B               	movf	??_I2C_Master_Init+2,w
  1540  053F  00F4               	movwf	___lldiv@divisor+2
  1541  0540  082A               	movf	??_I2C_Master_Init+1,w
  1542  0541  00F3               	movwf	___lldiv@divisor+1
  1543  0542  0829               	movf	??_I2C_Master_Init,w
  1544  0543  00F2               	movwf	___lldiv@divisor
  1545  0544  3000               	movlw	0
  1546  0545  00F9               	movwf	___lldiv@dividend+3
  1547  0546  303D               	movlw	61
  1548  0547  00F8               	movwf	___lldiv@dividend+2
  1549  0548  3009               	movlw	9
  1550  0549  00F7               	movwf	___lldiv@dividend+1
  1551  054A  3000               	movlw	0
  1552  054B  00F6               	movwf	___lldiv@dividend
  1553  054C  120A  118A  23D5  120A  118A  	fcall	___lldiv
  1554  0551  0872               	movf	?___lldiv,w
  1555  0552  3EFF               	addlw	255
  1556  0553  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0554  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0555  0093               	movwf	19	;volatile
  1559  0556                     l1235:
  1560                           
  1561                           ;I2C.c: 21:     SSPSTAT = 0;
  1562  0556  0194               	clrf	20	;volatile
  1563  0557                     l1237:
  1564                           
  1565                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1566  0557  1587               	bsf	7,3	;volatile
  1567  0558                     l1239:
  1568                           
  1569                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1570  0558  1607               	bsf	7,4	;volatile
  1571  0559                     l71:
  1572  0559  0008               	return
  1573  055A                     __end_of_I2C_Master_Init:
  1574                           
  1575                           	psect	text5
  1576  03D5                     __ptext5:	
  1577 ;; *************** function ___lldiv *****************
  1578 ;; Defined at:
  1579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  divisor         4    2[COMMON] unsigned long 
  1582 ;;  dividend        4    6[COMMON] unsigned long 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  quotient        4    0[BANK0 ] unsigned long 
  1585 ;;  counter         1    4[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  4    2[COMMON] unsigned long 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         8       0       0       0       0
  1596 ;;      Locals:         0       5       0       0       0
  1597 ;;      Temps:          1       0       0       0       0
  1598 ;;      Totals:         9       5       0       0       0
  1599 ;;Total ram usage:       14 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_I2C_Master_Init
  1606 ;;		_UARTInit
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function ___lldiv
  1612  03D5                     ___lldiv:
  1613  03D5                     l1205:	
  1614                           ;incstack = 0
  1615                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1616                           
  1617  03D5  3000               	movlw	0
  1618  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1619  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1620  03D8  00A3               	movwf	___lldiv@quotient+3
  1621  03D9  3000               	movlw	0
  1622  03DA  00A2               	movwf	___lldiv@quotient+2
  1623  03DB  3000               	movlw	0
  1624  03DC  00A1               	movwf	___lldiv@quotient+1
  1625  03DD  3000               	movlw	0
  1626  03DE  00A0               	movwf	___lldiv@quotient
  1627  03DF  0875               	movf	___lldiv@divisor+3,w
  1628  03E0  0474               	iorwf	___lldiv@divisor+2,w
  1629  03E1  0473               	iorwf	___lldiv@divisor+1,w
  1630  03E2  0472               	iorwf	___lldiv@divisor,w
  1631  03E3  1903               	skipnz
  1632  03E4  2BE6               	goto	u461
  1633  03E5  2BE7               	goto	u460
  1634  03E6                     u461:
  1635  03E6  2C34               	goto	l1225
  1636  03E7                     u460:
  1637  03E7                     l1207:
  1638  03E7  01A4               	clrf	___lldiv@counter
  1639  03E8  0AA4               	incf	___lldiv@counter,f
  1640  03E9  2BF7               	goto	l1211
  1641  03EA                     l1209:
  1642  03EA  3001               	movlw	1
  1643  03EB  00FA               	movwf	??___lldiv
  1644  03EC                     u475:
  1645  03EC  1003               	clrc
  1646  03ED  0DF2               	rlf	___lldiv@divisor,f
  1647  03EE  0DF3               	rlf	___lldiv@divisor+1,f
  1648  03EF  0DF4               	rlf	___lldiv@divisor+2,f
  1649  03F0  0DF5               	rlf	___lldiv@divisor+3,f
  1650  03F1  0BFA               	decfsz	??___lldiv,f
  1651  03F2  2BEC               	goto	u475
  1652  03F3  3001               	movlw	1
  1653  03F4  00FA               	movwf	??___lldiv
  1654  03F5  087A               	movf	??___lldiv,w
  1655  03F6  07A4               	addwf	___lldiv@counter,f
  1656  03F7                     l1211:
  1657  03F7  1FF5               	btfss	___lldiv@divisor+3,7
  1658  03F8  2BFA               	goto	u481
  1659  03F9  2BFB               	goto	u480
  1660  03FA                     u481:
  1661  03FA  2BEA               	goto	l1209
  1662  03FB                     u480:
  1663  03FB                     l1213:
  1664  03FB  3001               	movlw	1
  1665  03FC  00FA               	movwf	??___lldiv
  1666  03FD                     u495:
  1667  03FD  1003               	clrc
  1668  03FE  0DA0               	rlf	___lldiv@quotient,f
  1669  03FF  0DA1               	rlf	___lldiv@quotient+1,f
  1670  0400  0DA2               	rlf	___lldiv@quotient+2,f
  1671  0401  0DA3               	rlf	___lldiv@quotient+3,f
  1672  0402  0BFA               	decfsz	??___lldiv,f
  1673  0403  2BFD               	goto	u495
  1674  0404                     l1215:
  1675  0404  0875               	movf	___lldiv@divisor+3,w
  1676  0405  0279               	subwf	___lldiv@dividend+3,w
  1677  0406  1D03               	skipz
  1678  0407  2C12               	goto	u505
  1679  0408  0874               	movf	___lldiv@divisor+2,w
  1680  0409  0278               	subwf	___lldiv@dividend+2,w
  1681  040A  1D03               	skipz
  1682  040B  2C12               	goto	u505
  1683  040C  0873               	movf	___lldiv@divisor+1,w
  1684  040D  0277               	subwf	___lldiv@dividend+1,w
  1685  040E  1D03               	skipz
  1686  040F  2C12               	goto	u505
  1687  0410  0872               	movf	___lldiv@divisor,w
  1688  0411  0276               	subwf	___lldiv@dividend,w
  1689  0412                     u505:
  1690  0412  1C03               	skipc
  1691  0413  2C15               	goto	u501
  1692  0414  2C16               	goto	u500
  1693  0415                     u501:
  1694  0415  2C25               	goto	l1221
  1695  0416                     u500:
  1696  0416                     l1217:
  1697  0416  0872               	movf	___lldiv@divisor,w
  1698  0417  02F6               	subwf	___lldiv@dividend,f
  1699  0418  0873               	movf	___lldiv@divisor+1,w
  1700  0419  1C03               	skipc
  1701  041A  0F73               	incfsz	___lldiv@divisor+1,w
  1702  041B  02F7               	subwf	___lldiv@dividend+1,f
  1703  041C  0874               	movf	___lldiv@divisor+2,w
  1704  041D  1C03               	skipc
  1705  041E  0F74               	incfsz	___lldiv@divisor+2,w
  1706  041F  02F8               	subwf	___lldiv@dividend+2,f
  1707  0420  0875               	movf	___lldiv@divisor+3,w
  1708  0421  1C03               	skipc
  1709  0422  0F75               	incfsz	___lldiv@divisor+3,w
  1710  0423  02F9               	subwf	___lldiv@dividend+3,f
  1711  0424                     l1219:
  1712  0424  1420               	bsf	___lldiv@quotient,0
  1713  0425                     l1221:
  1714  0425  3001               	movlw	1
  1715  0426                     u515:
  1716  0426  1003               	clrc
  1717  0427  0CF5               	rrf	___lldiv@divisor+3,f
  1718  0428  0CF4               	rrf	___lldiv@divisor+2,f
  1719  0429  0CF3               	rrf	___lldiv@divisor+1,f
  1720  042A  0CF2               	rrf	___lldiv@divisor,f
  1721  042B  3EFF               	addlw	-1
  1722  042C  1D03               	skipz
  1723  042D  2C26               	goto	u515
  1724  042E                     l1223:
  1725  042E  3001               	movlw	1
  1726  042F  02A4               	subwf	___lldiv@counter,f
  1727  0430  1D03               	btfss	3,2
  1728  0431  2C33               	goto	u521
  1729  0432  2C34               	goto	u520
  1730  0433                     u521:
  1731  0433  2BFB               	goto	l1213
  1732  0434                     u520:
  1733  0434                     l1225:
  1734  0434  0823               	movf	___lldiv@quotient+3,w
  1735  0435  00F5               	movwf	?___lldiv+3
  1736  0436  0822               	movf	___lldiv@quotient+2,w
  1737  0437  00F4               	movwf	?___lldiv+2
  1738  0438  0821               	movf	___lldiv@quotient+1,w
  1739  0439  00F3               	movwf	?___lldiv+1
  1740  043A  0820               	movf	___lldiv@quotient,w
  1741  043B  00F2               	movwf	?___lldiv
  1742  043C                     l321:
  1743  043C  0008               	return
  1744  043D                     __end_of___lldiv:
  1745                           
  1746                           	psect	text6
  1747  0014                     __ptext6:	
  1748 ;; *************** function _MPU6050_Read *****************
  1749 ;; Defined at:
  1750 ;;		line 55 in file "MPU6050.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  buffer         40   20[BANK0 ] unsigned char [40]
  1755 ;;  Gz              2   72[BANK0 ] int 
  1756 ;;  Gy              2   70[BANK0 ] int 
  1757 ;;  Gx              2   68[BANK0 ] int 
  1758 ;;  T               2   66[BANK0 ] int 
  1759 ;;  Az              2   64[BANK0 ] int 
  1760 ;;  Ay              2   62[BANK0 ] int 
  1761 ;;  Ax              2   60[BANK0 ] int 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0      54       0       0       0
  1773 ;;      Temps:          0       2       0       0       0
  1774 ;;      Totals:         0      56       0       0       0
  1775 ;;Total ram usage:       56 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		_I2C_Master_Read
  1780 ;;		_I2C_Master_Stop
  1781 ;;		_I2C_Master_Write
  1782 ;;		_I2C_Start
  1783 ;;		_UARTSendString
  1784 ;;		_sprintf
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _MPU6050_Read
  1792  0014                     _MPU6050_Read:
  1793  0014                     l1645:	
  1794                           ;incstack = 0
  1795                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1796                           
  1797                           
  1798                           ;MPU6050.c: 57:   char buffer[40];;MPU6050.c: 58:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU6050.c: 
      +                          60:   I2C_Start(0xD0);
  1799  0014  30D0               	movlw	208
  1800  0015  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1801                           
  1802                           ;MPU6050.c: 61:   I2C_Master_Write(0x3B);
  1803  001A  303B               	movlw	59
  1804  001B  00F2               	movwf	I2C_Master_Write@d
  1805  001C  3000               	movlw	0
  1806  001D  00F3               	movwf	I2C_Master_Write@d+1
  1807  001E  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  1808                           
  1809                           ;MPU6050.c: 62:   I2C_Master_Stop();
  1810  0023  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  1811                           
  1812                           ;MPU6050.c: 63:   I2C_Start(0xD1);
  1813  0028  30D1               	movlw	209
  1814  0029  120A  118A  2601  120A  118A  	fcall	_I2C_Start
  1815  002E                     l1647:
  1816                           
  1817                           ;MPU6050.c: 64:   Ax = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1818  002E  3000               	movlw	0
  1819  002F  00F2               	movwf	I2C_Master_Read@a
  1820  0030  00F3               	movwf	I2C_Master_Read@a+1
  1821  0031  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1822  0036  0872               	movf	?_I2C_Master_Read,w
  1823  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0039  00B2               	movwf	??_MPU6050_Read
  1826  003A  0873               	movf	?_I2C_Master_Read+1,w
  1827  003B  00B3               	movwf	??_MPU6050_Read+1
  1828  003C  0832               	movf	??_MPU6050_Read,w
  1829  003D  00B3               	movwf	??_MPU6050_Read+1
  1830  003E  01B2               	clrf	??_MPU6050_Read
  1831  003F  3000               	movlw	0
  1832  0040  00F2               	movwf	I2C_Master_Read@a
  1833  0041  00F3               	movwf	I2C_Master_Read@a+1
  1834  0042  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1835  0047  0872               	movf	?_I2C_Master_Read,w
  1836  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1838  004A  0432               	iorwf	??_MPU6050_Read,w
  1839  004B  00DC               	movwf	MPU6050_Read@Ax
  1840  004C  0873               	movf	?_I2C_Master_Read+1,w
  1841  004D  0433               	iorwf	??_MPU6050_Read+1,w
  1842  004E  00DD               	movwf	MPU6050_Read@Ax+1
  1843  004F                     l1649:
  1844                           
  1845                           ;MPU6050.c: 65:   Ay = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1846  004F  3000               	movlw	0
  1847  0050  00F2               	movwf	I2C_Master_Read@a
  1848  0051  00F3               	movwf	I2C_Master_Read@a+1
  1849  0052  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1850  0057  0872               	movf	?_I2C_Master_Read,w
  1851  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1853  005A  00B2               	movwf	??_MPU6050_Read
  1854  005B  0873               	movf	?_I2C_Master_Read+1,w
  1855  005C  00B3               	movwf	??_MPU6050_Read+1
  1856  005D  0832               	movf	??_MPU6050_Read,w
  1857  005E  00B3               	movwf	??_MPU6050_Read+1
  1858  005F  01B2               	clrf	??_MPU6050_Read
  1859  0060  3000               	movlw	0
  1860  0061  00F2               	movwf	I2C_Master_Read@a
  1861  0062  00F3               	movwf	I2C_Master_Read@a+1
  1862  0063  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1863  0068  0872               	movf	?_I2C_Master_Read,w
  1864  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1865  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1866  006B  0432               	iorwf	??_MPU6050_Read,w
  1867  006C  00DE               	movwf	MPU6050_Read@Ay
  1868  006D  0873               	movf	?_I2C_Master_Read+1,w
  1869  006E  0433               	iorwf	??_MPU6050_Read+1,w
  1870  006F  00DF               	movwf	MPU6050_Read@Ay+1
  1871  0070                     l1651:
  1872                           
  1873                           ;MPU6050.c: 66:   Az = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1874  0070  3000               	movlw	0
  1875  0071  00F2               	movwf	I2C_Master_Read@a
  1876  0072  00F3               	movwf	I2C_Master_Read@a+1
  1877  0073  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1878  0078  0872               	movf	?_I2C_Master_Read,w
  1879  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1880  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1881  007B  00B2               	movwf	??_MPU6050_Read
  1882  007C  0873               	movf	?_I2C_Master_Read+1,w
  1883  007D  00B3               	movwf	??_MPU6050_Read+1
  1884  007E  0832               	movf	??_MPU6050_Read,w
  1885  007F  00B3               	movwf	??_MPU6050_Read+1
  1886  0080  01B2               	clrf	??_MPU6050_Read
  1887  0081  3000               	movlw	0
  1888  0082  00F2               	movwf	I2C_Master_Read@a
  1889  0083  00F3               	movwf	I2C_Master_Read@a+1
  1890  0084  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1891  0089  0872               	movf	?_I2C_Master_Read,w
  1892  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1893  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1894  008C  0432               	iorwf	??_MPU6050_Read,w
  1895  008D  00E0               	movwf	MPU6050_Read@Az
  1896  008E  0873               	movf	?_I2C_Master_Read+1,w
  1897  008F  0433               	iorwf	??_MPU6050_Read+1,w
  1898  0090  00E1               	movwf	MPU6050_Read@Az+1
  1899  0091                     l1653:
  1900                           
  1901                           ;MPU6050.c: 67:   T = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1902  0091  3000               	movlw	0
  1903  0092  00F2               	movwf	I2C_Master_Read@a
  1904  0093  00F3               	movwf	I2C_Master_Read@a+1
  1905  0094  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1906  0099  0872               	movf	?_I2C_Master_Read,w
  1907  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1908  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1909  009C  00B2               	movwf	??_MPU6050_Read
  1910  009D  0873               	movf	?_I2C_Master_Read+1,w
  1911  009E  00B3               	movwf	??_MPU6050_Read+1
  1912  009F  0832               	movf	??_MPU6050_Read,w
  1913  00A0  00B3               	movwf	??_MPU6050_Read+1
  1914  00A1  01B2               	clrf	??_MPU6050_Read
  1915  00A2  3000               	movlw	0
  1916  00A3  00F2               	movwf	I2C_Master_Read@a
  1917  00A4  00F3               	movwf	I2C_Master_Read@a+1
  1918  00A5  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1919  00AA  0872               	movf	?_I2C_Master_Read,w
  1920  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1921  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1922  00AD  0432               	iorwf	??_MPU6050_Read,w
  1923  00AE  00E2               	movwf	MPU6050_Read@T
  1924  00AF  0873               	movf	?_I2C_Master_Read+1,w
  1925  00B0  0433               	iorwf	??_MPU6050_Read+1,w
  1926  00B1  00E3               	movwf	MPU6050_Read@T+1
  1927  00B2                     l1655:
  1928                           
  1929                           ;MPU6050.c: 68:   Gx = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1930  00B2  3000               	movlw	0
  1931  00B3  00F2               	movwf	I2C_Master_Read@a
  1932  00B4  00F3               	movwf	I2C_Master_Read@a+1
  1933  00B5  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1934  00BA  0872               	movf	?_I2C_Master_Read,w
  1935  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1936  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1937  00BD  00B2               	movwf	??_MPU6050_Read
  1938  00BE  0873               	movf	?_I2C_Master_Read+1,w
  1939  00BF  00B3               	movwf	??_MPU6050_Read+1
  1940  00C0  0832               	movf	??_MPU6050_Read,w
  1941  00C1  00B3               	movwf	??_MPU6050_Read+1
  1942  00C2  01B2               	clrf	??_MPU6050_Read
  1943  00C3  3000               	movlw	0
  1944  00C4  00F2               	movwf	I2C_Master_Read@a
  1945  00C5  00F3               	movwf	I2C_Master_Read@a+1
  1946  00C6  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1947  00CB  0872               	movf	?_I2C_Master_Read,w
  1948  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1949  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1950  00CE  0432               	iorwf	??_MPU6050_Read,w
  1951  00CF  00E4               	movwf	MPU6050_Read@Gx
  1952  00D0  0873               	movf	?_I2C_Master_Read+1,w
  1953  00D1  0433               	iorwf	??_MPU6050_Read+1,w
  1954  00D2  00E5               	movwf	MPU6050_Read@Gx+1
  1955  00D3                     l1657:
  1956                           
  1957                           ;MPU6050.c: 69:   Gy = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0);
  1958  00D3  3000               	movlw	0
  1959  00D4  00F2               	movwf	I2C_Master_Read@a
  1960  00D5  00F3               	movwf	I2C_Master_Read@a+1
  1961  00D6  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1962  00DB  0872               	movf	?_I2C_Master_Read,w
  1963  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1964  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1965  00DE  00B2               	movwf	??_MPU6050_Read
  1966  00DF  0873               	movf	?_I2C_Master_Read+1,w
  1967  00E0  00B3               	movwf	??_MPU6050_Read+1
  1968  00E1  0832               	movf	??_MPU6050_Read,w
  1969  00E2  00B3               	movwf	??_MPU6050_Read+1
  1970  00E3  01B2               	clrf	??_MPU6050_Read
  1971  00E4  3000               	movlw	0
  1972  00E5  00F2               	movwf	I2C_Master_Read@a
  1973  00E6  00F3               	movwf	I2C_Master_Read@a+1
  1974  00E7  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1975  00EC  0872               	movf	?_I2C_Master_Read,w
  1976  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1977  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1978  00EF  0432               	iorwf	??_MPU6050_Read,w
  1979  00F0  00E6               	movwf	MPU6050_Read@Gy
  1980  00F1  0873               	movf	?_I2C_Master_Read+1,w
  1981  00F2  0433               	iorwf	??_MPU6050_Read+1,w
  1982  00F3  00E7               	movwf	MPU6050_Read@Gy+1
  1983  00F4                     l1659:
  1984                           
  1985                           ;MPU6050.c: 70:   Gz = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(1);
  1986  00F4  3000               	movlw	0
  1987  00F5  00F2               	movwf	I2C_Master_Read@a
  1988  00F6  00F3               	movwf	I2C_Master_Read@a+1
  1989  00F7  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  1990  00FC  0872               	movf	?_I2C_Master_Read,w
  1991  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00FF  00B2               	movwf	??_MPU6050_Read
  1994  0100  0873               	movf	?_I2C_Master_Read+1,w
  1995  0101  00B3               	movwf	??_MPU6050_Read+1
  1996  0102  0832               	movf	??_MPU6050_Read,w
  1997  0103  00B3               	movwf	??_MPU6050_Read+1
  1998  0104  01B2               	clrf	??_MPU6050_Read
  1999  0105  3001               	movlw	1
  2000  0106  00F2               	movwf	I2C_Master_Read@a
  2001  0107  3000               	movlw	0
  2002  0108  00F3               	movwf	I2C_Master_Read@a+1
  2003  0109  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Read
  2004  010E  0872               	movf	?_I2C_Master_Read,w
  2005  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0111  0432               	iorwf	??_MPU6050_Read,w
  2008  0112  00E8               	movwf	MPU6050_Read@Gz
  2009  0113  0873               	movf	?_I2C_Master_Read+1,w
  2010  0114  0433               	iorwf	??_MPU6050_Read+1,w
  2011  0115  00E9               	movwf	MPU6050_Read@Gz+1
  2012  0116                     l1661:
  2013                           
  2014                           ;MPU6050.c: 71:   I2C_Master_Stop();
  2015  0116  120A  118A  263A  120A  118A  	fcall	_I2C_Master_Stop
  2016  011B                     l1663:
  2017                           
  2018                           ;MPU6050.c: 73:   sprintf(buffer,"Ax = %d    ",Ax);
  2019  011B  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2020  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2021  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2022  011E  00B2               	movwf	??_MPU6050_Read
  2023  011F  0832               	movf	??_MPU6050_Read,w
  2024  0120  00A5               	movwf	sprintf@f
  2025  0121  085D               	movf	MPU6050_Read@Ax+1,w
  2026  0122  00A7               	movwf	?_sprintf+2
  2027  0123  085C               	movf	MPU6050_Read@Ax,w
  2028  0124  00A6               	movwf	?_sprintf+1
  2029  0125  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2030  0126  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2031  012B                     l1665:
  2032                           
  2033                           ;MPU6050.c: 74:   UARTSendString(buffer);
  2034  012B  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2035  012C  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2036  0131                     l1667:
  2037                           
  2038                           ;MPU6050.c: 76:   sprintf(buffer," Ay = %d    ",Ay);
  2039  0131  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2040  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0134  00B2               	movwf	??_MPU6050_Read
  2043  0135  0832               	movf	??_MPU6050_Read,w
  2044  0136  00A5               	movwf	sprintf@f
  2045  0137  085F               	movf	MPU6050_Read@Ay+1,w
  2046  0138  00A7               	movwf	?_sprintf+2
  2047  0139  085E               	movf	MPU6050_Read@Ay,w
  2048  013A  00A6               	movwf	?_sprintf+1
  2049  013B  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2050  013C  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2051  0141                     l1669:
  2052                           
  2053                           ;MPU6050.c: 77:   UARTSendString(buffer);
  2054  0141  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2055  0142  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2056  0147                     l1671:
  2057                           
  2058                           ;MPU6050.c: 79:   sprintf(buffer," Az = %d    ",Az);
  2059  0147  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2060  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2062  014A  00B2               	movwf	??_MPU6050_Read
  2063  014B  0832               	movf	??_MPU6050_Read,w
  2064  014C  00A5               	movwf	sprintf@f
  2065  014D  0861               	movf	MPU6050_Read@Az+1,w
  2066  014E  00A7               	movwf	?_sprintf+2
  2067  014F  0860               	movf	MPU6050_Read@Az,w
  2068  0150  00A6               	movwf	?_sprintf+1
  2069  0151  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2070  0152  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2071  0157                     l1673:
  2072                           
  2073                           ;MPU6050.c: 80:   UARTSendString(buffer);
  2074  0157  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2075  0158  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2076  015D                     l1675:
  2077                           
  2078                           ;MPU6050.c: 82:   sprintf(buffer," T = %d  ",T);
  2079  015D  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2080  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2081  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0160  00B2               	movwf	??_MPU6050_Read
  2083  0161  0832               	movf	??_MPU6050_Read,w
  2084  0162  00A5               	movwf	sprintf@f
  2085  0163  0863               	movf	MPU6050_Read@T+1,w
  2086  0164  00A7               	movwf	?_sprintf+2
  2087  0165  0862               	movf	MPU6050_Read@T,w
  2088  0166  00A6               	movwf	?_sprintf+1
  2089  0167  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2090  0168  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2091  016D                     l1677:
  2092                           
  2093                           ;MPU6050.c: 83:   UARTSendString(buffer);
  2094  016D  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2095  016E  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2096  0173                     l1679:
  2097                           
  2098                           ;MPU6050.c: 85:   sprintf(buffer," Gx = %d    ",Gx);
  2099  0173  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2100  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0176  00B2               	movwf	??_MPU6050_Read
  2103  0177  0832               	movf	??_MPU6050_Read,w
  2104  0178  00A5               	movwf	sprintf@f
  2105  0179  0865               	movf	MPU6050_Read@Gx+1,w
  2106  017A  00A7               	movwf	?_sprintf+2
  2107  017B  0864               	movf	MPU6050_Read@Gx,w
  2108  017C  00A6               	movwf	?_sprintf+1
  2109  017D  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2110  017E  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2111  0183                     l1681:
  2112                           
  2113                           ;MPU6050.c: 86:   UARTSendString(buffer);
  2114  0183  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2115  0184  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2116  0189                     l1683:
  2117                           
  2118                           ;MPU6050.c: 88:   sprintf(buffer," Gy = %d    ",Gy);
  2119  0189  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2120  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2121  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2122  018C  00B2               	movwf	??_MPU6050_Read
  2123  018D  0832               	movf	??_MPU6050_Read,w
  2124  018E  00A5               	movwf	sprintf@f
  2125  018F  0867               	movf	MPU6050_Read@Gy+1,w
  2126  0190  00A7               	movwf	?_sprintf+2
  2127  0191  0866               	movf	MPU6050_Read@Gy,w
  2128  0192  00A6               	movwf	?_sprintf+1
  2129  0193  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2130  0194  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2131  0199                     l1685:
  2132                           
  2133                           ;MPU6050.c: 89:   UARTSendString(buffer);
  2134  0199  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2135  019A  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2136  019F                     l1687:
  2137                           
  2138                           ;MPU6050.c: 91:   sprintf(buffer," Gz = %d\r\n",Gz);
  2139  019F  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2140  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2141  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2142  01A2  00B2               	movwf	??_MPU6050_Read
  2143  01A3  0832               	movf	??_MPU6050_Read,w
  2144  01A4  00A5               	movwf	sprintf@f
  2145  01A5  0869               	movf	MPU6050_Read@Gz+1,w
  2146  01A6  00A7               	movwf	?_sprintf+2
  2147  01A7  0868               	movf	MPU6050_Read@Gz,w
  2148  01A8  00A6               	movwf	?_sprintf+1
  2149  01A9  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2150  01AA  120A  118A  21B6  120A  118A  	fcall	_sprintf
  2151  01AF                     l1689:
  2152                           
  2153                           ;MPU6050.c: 92:   UARTSendString(buffer);
  2154  01AF  3034               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  2155  01B0  120A  118A  25E0  120A  118A  	fcall	_UARTSendString
  2156  01B5                     l122:
  2157  01B5  0008               	return
  2158  01B6                     __end_of_MPU6050_Read:
  2159                           
  2160                           	psect	text7
  2161  01B6                     __ptext7:	
  2162 ;; *************** function _sprintf *****************
  2163 ;; Defined at:
  2164 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  sp              1    wreg     PTR unsigned char 
  2167 ;;		 -> MPU6050_Read@buffer(40), 
  2168 ;;  f               1    5[BANK0 ] PTR const unsigned char 
  2169 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  2170 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  sp              1   16[BANK0 ] PTR unsigned char 
  2173 ;;		 -> MPU6050_Read@buffer(40), 
  2174 ;;  tmpval          4    0        struct .
  2175 ;;  val             2   14[BANK0 ] unsigned int 
  2176 ;;  cp              2    0        PTR const unsigned char 
  2177 ;;  len             2    0        unsigned int 
  2178 ;;  c               1   17[BANK0 ] unsigned char 
  2179 ;;  prec            1   13[BANK0 ] char 
  2180 ;;  flag            1   12[BANK0 ] unsigned char 
  2181 ;;  ap              1   11[BANK0 ] PTR void [1]
  2182 ;;		 -> ?_sprintf(2), 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2    5[BANK0 ] int 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       3       0       0       0
  2193 ;;      Locals:         0       7       0       0       0
  2194 ;;      Temps:          0       3       0       0       0
  2195 ;;      Totals:         0      13       0       0       0
  2196 ;;Total ram usage:       13 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		___lwdiv
  2201 ;;		___lwmod
  2202 ;; This function is called by:
  2203 ;;		_MPU6050_Read
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _sprintf
  2209  01B6                     _sprintf:
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2213                           ;sprintf@sp stored from wreg
  2214  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01B8  00B0               	movwf	sprintf@sp
  2217  01B9                     l1583:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2220  01B9  3026               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2221  01BA  00A8               	movwf	??_sprintf
  2222  01BB  0828               	movf	??_sprintf,w
  2223  01BC  00AB               	movwf	sprintf@ap
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2226  01BD  2A89               	goto	l1635
  2227  01BE                     l1585:
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2230  01BE  3025               	movlw	37
  2231  01BF  0631               	xorwf	sprintf@c,w
  2232  01C0  1903               	btfsc	3,2
  2233  01C1  29C3               	goto	u881
  2234  01C2  29C4               	goto	u880
  2235  01C3                     u881:
  2236  01C3  29D0               	goto	l1591
  2237  01C4                     u880:
  2238  01C4                     l1587:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2241  01C4  0831               	movf	sprintf@c,w
  2242  01C5  00A8               	movwf	??_sprintf
  2243  01C6  0830               	movf	sprintf@sp,w
  2244  01C7  0084               	movwf	4
  2245  01C8  0828               	movf	??_sprintf,w
  2246  01C9  1383               	bcf	3,7	;select IRP bank0
  2247  01CA  0080               	movwf	0
  2248  01CB                     l1589:
  2249  01CB  3001               	movlw	1
  2250  01CC  00A8               	movwf	??_sprintf
  2251  01CD  0828               	movf	??_sprintf,w
  2252  01CE  07B0               	addwf	sprintf@sp,f
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2255  01CF  2A89               	goto	l1635
  2256  01D0                     l1591:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2259  01D0  01AC               	clrf	sprintf@flag
  2260  01D1                     l1595:	
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2262                           
  2263  01D1  3001               	movlw	1
  2264  01D2  07A5               	addwf	sprintf@f,f
  2265  01D3  30FF               	movlw	-1
  2266  01D4  0725               	addwf	sprintf@f,w
  2267  01D5  0084               	movwf	4
  2268  01D6  120A  118A  243D  120A  118A  	fcall	stringdir
  2269  01DB  00B1               	movwf	sprintf@c
  2270  01DC  00A8               	movwf	??_sprintf
  2271  01DD  01A9               	clrf	??_sprintf+1
  2272                           
  2273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2274                           ; Switch size 1, requested type "simple"
  2275                           ; Number of cases is 1, Range of values is 0 to 0
  2276                           ; switch strategies available:
  2277                           ; Name         Instructions Cycles
  2278                           ; simple_byte            4     3 (average)
  2279                           ; direct_byte           11     8 (fixed)
  2280                           ; jumptable            260     6 (fixed)
  2281                           ;	Chosen strategy is simple_byte
  2282  01DE  0829               	movf	??_sprintf+1,w
  2283  01DF  3A00               	xorlw	0	; case 0
  2284  01E0  1903               	skipnz
  2285  01E1  29E3               	goto	l1719
  2286  01E2  2A89               	goto	l1635
  2287  01E3                     l1719:
  2288                           
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 3, Range of values is 0 to 105
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte           10     6 (average)
  2294                           ; jumptable            260     6 (fixed)
  2295                           ;	Chosen strategy is simple_byte
  2296  01E3  0828               	movf	??_sprintf,w
  2297  01E4  3A00               	xorlw	0	; case 0
  2298  01E5  1903               	skipnz
  2299  01E6  2A9B               	goto	l1637
  2300  01E7  3A64               	xorlw	100	; case 100
  2301  01E8  1903               	skipnz
  2302  01E9  29EE               	goto	l1597
  2303  01EA  3A0D               	xorlw	13	; case 105
  2304  01EB  1903               	skipnz
  2305  01EC  29EE               	goto	l1597
  2306  01ED  2A89               	goto	l1635
  2307  01EE                     l1597:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2310  01EE  082B               	movf	sprintf@ap,w
  2311  01EF  0084               	movwf	4
  2312  01F0  1383               	bcf	3,7	;select IRP bank0
  2313  01F1  0800               	movf	0,w
  2314  01F2  00AE               	movwf	sprintf@val
  2315  01F3  0A84               	incf	4,f
  2316  01F4  0800               	movf	0,w
  2317  01F5  00AF               	movwf	sprintf@val+1
  2318  01F6                     l1599:
  2319  01F6  3002               	movlw	2
  2320  01F7  00A8               	movwf	??_sprintf
  2321  01F8  0828               	movf	??_sprintf,w
  2322  01F9  07AB               	addwf	sprintf@ap,f
  2323  01FA                     l1601:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2326  01FA  1FAF               	btfss	sprintf@val+1,7
  2327  01FB  29FD               	goto	u891
  2328  01FC  29FE               	goto	u890
  2329  01FD                     u891:
  2330  01FD  2A07               	goto	l1607
  2331  01FE                     u890:
  2332  01FE                     l1603:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2335  01FE  3003               	movlw	3
  2336  01FF  00A8               	movwf	??_sprintf
  2337  0200  0828               	movf	??_sprintf,w
  2338  0201  04AC               	iorwf	sprintf@flag,f
  2339  0202                     l1605:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2342  0202  09AE               	comf	sprintf@val,f
  2343  0203  09AF               	comf	sprintf@val+1,f
  2344  0204  0AAE               	incf	sprintf@val,f
  2345  0205  1903               	skipnz
  2346  0206  0AAF               	incf	sprintf@val+1,f
  2347  0207                     l1607:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2350  0207  01B1               	clrf	sprintf@c
  2351  0208  0AB1               	incf	sprintf@c,f
  2352  0209                     l1613:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2355  0209  0831               	movf	sprintf@c,w
  2356  020A  00A8               	movwf	??_sprintf
  2357  020B  0728               	addwf	??_sprintf,w
  2358  020C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2359  020D  0084               	movwf	4
  2360  020E  120A  118A  243D  120A  118A  	fcall	stringdir
  2361  0213  00A9               	movwf	??_sprintf+1
  2362  0214  120A  118A  243D  120A  118A  	fcall	stringdir
  2363  0219  00AA               	movwf	??_sprintf+2
  2364  021A  082A               	movf	??_sprintf+2,w
  2365  021B  022F               	subwf	sprintf@val+1,w
  2366  021C  1D03               	skipz
  2367  021D  2A20               	goto	u905
  2368  021E  0829               	movf	??_sprintf+1,w
  2369  021F  022E               	subwf	sprintf@val,w
  2370  0220                     u905:
  2371  0220  1803               	skipnc
  2372  0221  2A23               	goto	u901
  2373  0222  2A24               	goto	u900
  2374  0223                     u901:
  2375  0223  2A25               	goto	l1617
  2376  0224                     u900:
  2377  0224  2A2F               	goto	l1619
  2378  0225                     l1617:
  2379  0225  3001               	movlw	1
  2380  0226  00A8               	movwf	??_sprintf
  2381  0227  0828               	movf	??_sprintf,w
  2382  0228  07B1               	addwf	sprintf@c,f
  2383  0229  3005               	movlw	5
  2384  022A  0631               	xorwf	sprintf@c,w
  2385  022B  1D03               	btfss	3,2
  2386  022C  2A2E               	goto	u911
  2387  022D  2A2F               	goto	u910
  2388  022E                     u911:
  2389  022E  2A09               	goto	l1613
  2390  022F                     u910:
  2391  022F                     l1619:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2394  022F  082C               	movf	sprintf@flag,w
  2395  0230  3903               	andlw	3
  2396  0231  1903               	btfsc	3,2
  2397  0232  2A34               	goto	u921
  2398  0233  2A35               	goto	u920
  2399  0234                     u921:
  2400  0234  2A40               	goto	l1625
  2401  0235                     u920:
  2402  0235                     l1621:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2405  0235  302D               	movlw	45
  2406  0236  00A8               	movwf	??_sprintf
  2407  0237  0830               	movf	sprintf@sp,w
  2408  0238  0084               	movwf	4
  2409  0239  0828               	movf	??_sprintf,w
  2410  023A  1383               	bcf	3,7	;select IRP bank0
  2411  023B  0080               	movwf	0
  2412  023C                     l1623:
  2413  023C  3001               	movlw	1
  2414  023D  00A8               	movwf	??_sprintf
  2415  023E  0828               	movf	??_sprintf,w
  2416  023F  07B0               	addwf	sprintf@sp,f
  2417  0240                     l1625:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2420  0240  0831               	movf	sprintf@c,w
  2421  0241  00A8               	movwf	??_sprintf
  2422  0242  0828               	movf	??_sprintf,w
  2423  0243  00AD               	movwf	sprintf@prec
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2426  0244  2A80               	goto	l1633
  2427  0245                     l1627:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2430  0245  300A               	movlw	10
  2431  0246  00A0               	movwf	___lwmod@divisor
  2432  0247  3000               	movlw	0
  2433  0248  00A1               	movwf	___lwmod@divisor+1
  2434  0249  082D               	movf	sprintf@prec,w
  2435  024A  00A8               	movwf	??_sprintf
  2436  024B  0728               	addwf	??_sprintf,w
  2437  024C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2438  024D  0084               	movwf	4
  2439  024E  120A  118A  243D  120A  118A  	fcall	stringdir
  2440  0253  00F2               	movwf	___lwdiv@divisor
  2441  0254  120A  118A  243D  120A  118A  	fcall	stringdir
  2442  0259  00F3               	movwf	___lwdiv@divisor+1
  2443  025A  082F               	movf	sprintf@val+1,w
  2444  025B  00F5               	movwf	___lwdiv@dividend+1
  2445  025C  082E               	movf	sprintf@val,w
  2446  025D  00F4               	movwf	___lwdiv@dividend
  2447  025E  120A  118A  24A2  120A  118A  	fcall	___lwdiv
  2448  0263  0873               	movf	?___lwdiv+1,w
  2449  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0266  00A3               	movwf	___lwmod@dividend+1
  2452  0267  0872               	movf	?___lwdiv,w
  2453  0268  00A2               	movwf	___lwmod@dividend
  2454  0269  120A  118A  24E6  120A  118A  	fcall	___lwmod
  2455  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2456  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0270  0820               	movf	?___lwmod,w
  2458  0271  3E30               	addlw	48
  2459  0272  00A9               	movwf	??_sprintf+1
  2460  0273  0829               	movf	??_sprintf+1,w
  2461  0274  00B1               	movwf	sprintf@c
  2462  0275                     l1629:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2465  0275  0831               	movf	sprintf@c,w
  2466  0276  00A8               	movwf	??_sprintf
  2467  0277  0830               	movf	sprintf@sp,w
  2468  0278  0084               	movwf	4
  2469  0279  0828               	movf	??_sprintf,w
  2470  027A  1383               	bcf	3,7	;select IRP bank0
  2471  027B  0080               	movwf	0
  2472  027C                     l1631:
  2473  027C  3001               	movlw	1
  2474  027D  00A8               	movwf	??_sprintf
  2475  027E  0828               	movf	??_sprintf,w
  2476  027F  07B0               	addwf	sprintf@sp,f
  2477  0280                     l1633:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2480  0280  30FF               	movlw	255
  2481  0281  00A8               	movwf	??_sprintf
  2482  0282  0828               	movf	??_sprintf,w
  2483  0283  07AD               	addwf	sprintf@prec,f
  2484  0284  0A2D               	incf	sprintf@prec,w
  2485  0285  1D03               	btfss	3,2
  2486  0286  2A88               	goto	u931
  2487  0287  2A89               	goto	u930
  2488  0288                     u931:
  2489  0288  2A45               	goto	l1627
  2490  0289                     u930:
  2491  0289                     l1635:
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2494  0289  3001               	movlw	1
  2495  028A  07A5               	addwf	sprintf@f,f
  2496  028B  30FF               	movlw	-1
  2497  028C  0725               	addwf	sprintf@f,w
  2498  028D  0084               	movwf	4
  2499  028E  120A  118A  243D  120A  118A  	fcall	stringdir
  2500  0293  00A8               	movwf	??_sprintf
  2501  0294  0828               	movf	??_sprintf,w
  2502  0295  00B1               	movwf	sprintf@c
  2503  0296  0831               	movf	sprintf@c,w
  2504  0297  1D03               	btfss	3,2
  2505  0298  2A9A               	goto	u941
  2506  0299  2A9B               	goto	u940
  2507  029A                     u941:
  2508  029A  29BE               	goto	l1585
  2509  029B                     u940:
  2510  029B                     l1637:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2513  029B  0830               	movf	sprintf@sp,w
  2514  029C  0084               	movwf	4
  2515  029D  1383               	bcf	3,7	;select IRP bank0
  2516  029E  0180               	clrf	0
  2517  029F                     l281:
  2518  029F  0008               	return
  2519  02A0                     __end_of_sprintf:
  2520                           
  2521                           	psect	text8
  2522  04E6                     __ptext8:	
  2523 ;; *************** function ___lwmod *****************
  2524 ;; Defined at:
  2525 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  divisor         2    0[BANK0 ] unsigned int 
  2528 ;;  dividend        2    2[BANK0 ] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  counter         1    4[BANK0 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2    0[BANK0 ] unsigned int 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       4       0       0       0
  2541 ;;      Locals:         0       1       0       0       0
  2542 ;;      Temps:          1       0       0       0       0
  2543 ;;      Totals:         1       5       0       0       0
  2544 ;;Total ram usage:        6 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_sprintf
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function ___lwmod
  2556  04E6                     ___lwmod:
  2557  04E6                     l1561:	
  2558                           ;incstack = 0
  2559                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2560                           
  2561  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2562  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2563  04E8  0820               	movf	___lwmod@divisor,w
  2564  04E9  0421               	iorwf	___lwmod@divisor+1,w
  2565  04EA  1903               	btfsc	3,2
  2566  04EB  2CED               	goto	u821
  2567  04EC  2CEE               	goto	u820
  2568  04ED                     u821:
  2569  04ED  2D1D               	goto	l1579
  2570  04EE                     u820:
  2571  04EE                     l1563:
  2572  04EE  01A4               	clrf	___lwmod@counter
  2573  04EF  0AA4               	incf	___lwmod@counter,f
  2574  04F0  2CFC               	goto	l1569
  2575  04F1                     l1565:
  2576  04F1  3001               	movlw	1
  2577  04F2                     u835:
  2578  04F2  1003               	clrc
  2579  04F3  0DA0               	rlf	___lwmod@divisor,f
  2580  04F4  0DA1               	rlf	___lwmod@divisor+1,f
  2581  04F5  3EFF               	addlw	-1
  2582  04F6  1D03               	skipz
  2583  04F7  2CF2               	goto	u835
  2584  04F8                     l1567:
  2585  04F8  3001               	movlw	1
  2586  04F9  00FA               	movwf	??___lwmod
  2587  04FA  087A               	movf	??___lwmod,w
  2588  04FB  07A4               	addwf	___lwmod@counter,f
  2589  04FC                     l1569:
  2590  04FC  1FA1               	btfss	___lwmod@divisor+1,7
  2591  04FD  2CFF               	goto	u841
  2592  04FE  2D00               	goto	u840
  2593  04FF                     u841:
  2594  04FF  2CF1               	goto	l1565
  2595  0500                     u840:
  2596  0500                     l1571:
  2597  0500  0821               	movf	___lwmod@divisor+1,w
  2598  0501  0223               	subwf	___lwmod@dividend+1,w
  2599  0502  1D03               	skipz
  2600  0503  2D06               	goto	u855
  2601  0504  0820               	movf	___lwmod@divisor,w
  2602  0505  0222               	subwf	___lwmod@dividend,w
  2603  0506                     u855:
  2604  0506  1C03               	skipc
  2605  0507  2D09               	goto	u851
  2606  0508  2D0A               	goto	u850
  2607  0509                     u851:
  2608  0509  2D10               	goto	l1575
  2609  050A                     u850:
  2610  050A                     l1573:
  2611  050A  0820               	movf	___lwmod@divisor,w
  2612  050B  02A2               	subwf	___lwmod@dividend,f
  2613  050C  0821               	movf	___lwmod@divisor+1,w
  2614  050D  1C03               	skipc
  2615  050E  03A3               	decf	___lwmod@dividend+1,f
  2616  050F  02A3               	subwf	___lwmod@dividend+1,f
  2617  0510                     l1575:
  2618  0510  3001               	movlw	1
  2619  0511                     u865:
  2620  0511  1003               	clrc
  2621  0512  0CA1               	rrf	___lwmod@divisor+1,f
  2622  0513  0CA0               	rrf	___lwmod@divisor,f
  2623  0514  3EFF               	addlw	-1
  2624  0515  1D03               	skipz
  2625  0516  2D11               	goto	u865
  2626  0517                     l1577:
  2627  0517  3001               	movlw	1
  2628  0518  02A4               	subwf	___lwmod@counter,f
  2629  0519  1D03               	btfss	3,2
  2630  051A  2D1C               	goto	u871
  2631  051B  2D1D               	goto	u870
  2632  051C                     u871:
  2633  051C  2D00               	goto	l1571
  2634  051D                     u870:
  2635  051D                     l1579:
  2636  051D  0823               	movf	___lwmod@dividend+1,w
  2637  051E  00A1               	movwf	?___lwmod+1
  2638  051F  0822               	movf	___lwmod@dividend,w
  2639  0520  00A0               	movwf	?___lwmod
  2640  0521                     l567:
  2641  0521  0008               	return
  2642  0522                     __end_of___lwmod:
  2643                           
  2644                           	psect	text9
  2645  04A2                     __ptext9:	
  2646 ;; *************** function ___lwdiv *****************
  2647 ;; Defined at:
  2648 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  divisor         2    2[COMMON] unsigned int 
  2651 ;;  dividend        2    4[COMMON] unsigned int 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  quotient        2    7[COMMON] unsigned int 
  2654 ;;  counter         1    9[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    2[COMMON] unsigned int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         4       0       0       0       0
  2665 ;;      Locals:         3       0       0       0       0
  2666 ;;      Temps:          1       0       0       0       0
  2667 ;;      Totals:         8       0       0       0       0
  2668 ;;Total ram usage:        8 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_sprintf
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function ___lwdiv
  2680  04A2                     ___lwdiv:
  2681  04A2                     l1253:	
  2682                           ;incstack = 0
  2683                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2684                           
  2685  04A2  01F7               	clrf	___lwdiv@quotient
  2686  04A3  01F8               	clrf	___lwdiv@quotient+1
  2687  04A4                     l1255:
  2688  04A4  0872               	movf	___lwdiv@divisor,w
  2689  04A5  0473               	iorwf	___lwdiv@divisor+1,w
  2690  04A6  1903               	btfsc	3,2
  2691  04A7  2CA9               	goto	u551
  2692  04A8  2CAA               	goto	u550
  2693  04A9                     u551:
  2694  04A9  2CE1               	goto	l1275
  2695  04AA                     u550:
  2696  04AA                     l1257:
  2697  04AA  01F9               	clrf	___lwdiv@counter
  2698  04AB  0AF9               	incf	___lwdiv@counter,f
  2699  04AC  2CB8               	goto	l1263
  2700  04AD                     l1259:
  2701  04AD  3001               	movlw	1
  2702  04AE                     u565:
  2703  04AE  1003               	clrc
  2704  04AF  0DF2               	rlf	___lwdiv@divisor,f
  2705  04B0  0DF3               	rlf	___lwdiv@divisor+1,f
  2706  04B1  3EFF               	addlw	-1
  2707  04B2  1D03               	skipz
  2708  04B3  2CAE               	goto	u565
  2709  04B4                     l1261:
  2710  04B4  3001               	movlw	1
  2711  04B5  00F6               	movwf	??___lwdiv
  2712  04B6  0876               	movf	??___lwdiv,w
  2713  04B7  07F9               	addwf	___lwdiv@counter,f
  2714  04B8                     l1263:
  2715  04B8  1FF3               	btfss	___lwdiv@divisor+1,7
  2716  04B9  2CBB               	goto	u571
  2717  04BA  2CBC               	goto	u570
  2718  04BB                     u571:
  2719  04BB  2CAD               	goto	l1259
  2720  04BC                     u570:
  2721  04BC                     l1265:
  2722  04BC  3001               	movlw	1
  2723  04BD                     u585:
  2724  04BD  1003               	clrc
  2725  04BE  0DF7               	rlf	___lwdiv@quotient,f
  2726  04BF  0DF8               	rlf	___lwdiv@quotient+1,f
  2727  04C0  3EFF               	addlw	-1
  2728  04C1  1D03               	skipz
  2729  04C2  2CBD               	goto	u585
  2730  04C3  0873               	movf	___lwdiv@divisor+1,w
  2731  04C4  0275               	subwf	___lwdiv@dividend+1,w
  2732  04C5  1D03               	skipz
  2733  04C6  2CC9               	goto	u595
  2734  04C7  0872               	movf	___lwdiv@divisor,w
  2735  04C8  0274               	subwf	___lwdiv@dividend,w
  2736  04C9                     u595:
  2737  04C9  1C03               	skipc
  2738  04CA  2CCC               	goto	u591
  2739  04CB  2CCD               	goto	u590
  2740  04CC                     u591:
  2741  04CC  2CD4               	goto	l1271
  2742  04CD                     u590:
  2743  04CD                     l1267:
  2744  04CD  0872               	movf	___lwdiv@divisor,w
  2745  04CE  02F4               	subwf	___lwdiv@dividend,f
  2746  04CF  0873               	movf	___lwdiv@divisor+1,w
  2747  04D0  1C03               	skipc
  2748  04D1  03F5               	decf	___lwdiv@dividend+1,f
  2749  04D2  02F5               	subwf	___lwdiv@dividend+1,f
  2750  04D3                     l1269:
  2751  04D3  1477               	bsf	___lwdiv@quotient,0
  2752  04D4                     l1271:
  2753  04D4  3001               	movlw	1
  2754  04D5                     u605:
  2755  04D5  1003               	clrc
  2756  04D6  0CF3               	rrf	___lwdiv@divisor+1,f
  2757  04D7  0CF2               	rrf	___lwdiv@divisor,f
  2758  04D8  3EFF               	addlw	-1
  2759  04D9  1D03               	skipz
  2760  04DA  2CD5               	goto	u605
  2761  04DB                     l1273:
  2762  04DB  3001               	movlw	1
  2763  04DC  02F9               	subwf	___lwdiv@counter,f
  2764  04DD  1D03               	btfss	3,2
  2765  04DE  2CE0               	goto	u611
  2766  04DF  2CE1               	goto	u610
  2767  04E0                     u611:
  2768  04E0  2CBC               	goto	l1265
  2769  04E1                     u610:
  2770  04E1                     l1275:
  2771  04E1  0878               	movf	___lwdiv@quotient+1,w
  2772  04E2  00F3               	movwf	?___lwdiv+1
  2773  04E3  0877               	movf	___lwdiv@quotient,w
  2774  04E4  00F2               	movwf	?___lwdiv
  2775  04E5                     l557:
  2776  04E5  0008               	return
  2777  04E6                     __end_of___lwdiv:
  2778                           
  2779                           	psect	text10
  2780  05E0                     __ptext10:	
  2781 ;; *************** function _UARTSendString *****************
  2782 ;; Defined at:
  2783 ;;		line 50 in file "UART.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  str             1    wreg     PTR const unsigned char 
  2786 ;;		 -> MPU6050_Read@buffer(40), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  str             1    6[COMMON] PTR const unsigned char 
  2789 ;;		 -> MPU6050_Read@buffer(40), 
  2790 ;;  i               2    4[COMMON] int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         0       0       0       0       0
  2801 ;;      Locals:         3       0       0       0       0
  2802 ;;      Temps:          1       0       0       0       0
  2803 ;;      Totals:         4       0       0       0       0
  2804 ;;Total ram usage:        4 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    2
  2807 ;; This function calls:
  2808 ;;		_UARTSendChar
  2809 ;; This function is called by:
  2810 ;;		_MPU6050_Read
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _UARTSendString
  2816  05E0                     _UARTSendString:
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2820                           ;UARTSendString@str stored from wreg
  2821  05E0  00F6               	movwf	UARTSendString@str
  2822  05E1                     l1461:
  2823                           
  2824                           ;UART.c: 51:     int i = 0;
  2825  05E1  01F4               	clrf	UARTSendString@i
  2826  05E2  01F5               	clrf	UARTSendString@i+1
  2827                           
  2828                           ;UART.c: 55:         while(str[i] != '\0'){
  2829  05E3  2DF5               	goto	l1467
  2830  05E4                     l1463:
  2831                           
  2832                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2833  05E4  0874               	movf	UARTSendString@i,w
  2834  05E5  0776               	addwf	UARTSendString@str,w
  2835  05E6  00F3               	movwf	??_UARTSendString
  2836  05E7  0873               	movf	??_UARTSendString,w
  2837  05E8  0084               	movwf	4
  2838  05E9  0800               	movf	0,w
  2839  05EA  120A  118A  2624  120A  118A  	fcall	_UARTSendChar
  2840  05EF                     l1465:
  2841  05EF  3001               	movlw	1
  2842  05F0  07F4               	addwf	UARTSendString@i,f
  2843  05F1  1803               	skipnc
  2844  05F2  0AF5               	incf	UARTSendString@i+1,f
  2845  05F3  3000               	movlw	0
  2846  05F4  07F5               	addwf	UARTSendString@i+1,f
  2847  05F5                     l1467:
  2848                           
  2849                           ;UART.c: 55:         while(str[i] != '\0'){
  2850  05F5  0874               	movf	UARTSendString@i,w
  2851  05F6  0776               	addwf	UARTSendString@str,w
  2852  05F7  00F3               	movwf	??_UARTSendString
  2853  05F8  0873               	movf	??_UARTSendString,w
  2854  05F9  0084               	movwf	4
  2855  05FA  1383               	bcf	3,7	;select IRP bank0
  2856  05FB  0800               	movf	0,w
  2857  05FC  1D03               	btfss	3,2
  2858  05FD  2DFF               	goto	u791
  2859  05FE  2E00               	goto	u790
  2860  05FF                     u791:
  2861  05FF  2DE4               	goto	l1463
  2862  0600                     u790:
  2863  0600                     l153:
  2864  0600  0008               	return
  2865  0601                     __end_of_UARTSendString:
  2866                           
  2867                           	psect	text11
  2868  0624                     __ptext11:	
  2869 ;; *************** function _UARTSendChar *****************
  2870 ;; Defined at:
  2871 ;;		line 40 in file "UART.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  c               1    wreg     const unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  c               1    2[COMMON] const unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         1       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         1       0       0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_UARTSendString
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _UARTSendChar
  2901  0624                     _UARTSendChar:
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _UARTSendChar: [wreg]
  2905                           ;UARTSendChar@c stored from wreg
  2906  0624  00F2               	movwf	UARTSendChar@c
  2907  0625                     l1249:
  2908  0625                     l144:	
  2909                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  2910                           
  2911  0625  1683               	bsf	3,5	;RP0=1, select bank1
  2912  0626  1303               	bcf	3,6	;RP1=0, select bank1
  2913  0627  1C98               	btfss	24,1	;volatile
  2914  0628  2E2A               	goto	u541
  2915  0629  2E2B               	goto	u540
  2916  062A                     u541:
  2917  062A  2E25               	goto	l144
  2918  062B                     u540:
  2919  062B                     l1251:
  2920                           
  2921                           ;UART.c: 42:     TXREG = c;
  2922  062B  0872               	movf	UARTSendChar@c,w
  2923  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2924  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2925  062E  0099               	movwf	25	;volatile
  2926  062F                     l147:
  2927  062F  0008               	return
  2928  0630                     __end_of_UARTSendChar:
  2929                           
  2930                           	psect	text12
  2931  0601                     __ptext12:	
  2932 ;; *************** function _I2C_Start *****************
  2933 ;; Defined at:
  2934 ;;		line 108 in file "I2C.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  add             1    wreg     unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  add             1    6[COMMON] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         1       0       0       0       0
  2950 ;;      Temps:          2       0       0       0       0
  2951 ;;      Totals:         3       0       0       0       0
  2952 ;;Total ram usage:        3 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    3
  2955 ;; This function calls:
  2956 ;;		_I2C_Master_Wait
  2957 ;;		_I2C_Master_Write
  2958 ;; This function is called by:
  2959 ;;		_MPU6050_Init
  2960 ;;		_MPU6050_Read
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _I2C_Start
  2966  0601                     _I2C_Start:
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2970                           ;I2C_Start@add stored from wreg
  2971  0601  00F6               	movwf	I2C_Start@add
  2972  0602                     l1245:
  2973                           
  2974                           ;I2C.c: 108: void I2C_Start(char add);I2C.c: 109: {;I2C.c: 110:     I2C_Master_Wait();
  2975  0602  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  2976  0607                     l1247:
  2977                           
  2978                           ;I2C.c: 111:     SEN = 1;
  2979  0607  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0608  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0609  1411               	bsf	17,0	;volatile
  2982                           
  2983                           ;I2C.c: 112:     I2C_Master_Write(add);
  2984  060A  0876               	movf	I2C_Start@add,w
  2985  060B  00F4               	movwf	??_I2C_Start
  2986  060C  01F5               	clrf	??_I2C_Start+1
  2987  060D  0874               	movf	??_I2C_Start,w
  2988  060E  00F2               	movwf	I2C_Master_Write@d
  2989  060F  0875               	movf	??_I2C_Start+1,w
  2990  0610  00F3               	movwf	I2C_Master_Write@d+1
  2991  0611  120A  118A  2630  120A  118A  	fcall	_I2C_Master_Write
  2992  0616                     l100:
  2993  0616  0008               	return
  2994  0617                     __end_of_I2C_Start:
  2995                           
  2996                           	psect	text13
  2997  0630                     __ptext13:	
  2998 ;; *************** function _I2C_Master_Write *****************
  2999 ;; Defined at:
  3000 ;;		line 65 in file "I2C.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  d               2    2[COMMON] unsigned int 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         2       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    2
  3021 ;; This function calls:
  3022 ;;		_I2C_Master_Wait
  3023 ;; This function is called by:
  3024 ;;		_I2C_Start
  3025 ;;		_MPU6050_Init
  3026 ;;		_MPU6050_Read
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _I2C_Master_Write
  3032  0630                     _I2C_Master_Write:
  3033  0630                     l1201:	
  3034                           ;incstack = 0
  3035                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3036                           
  3037                           
  3038                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3039  0630  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  3040  0635                     l1203:
  3041                           
  3042                           ;I2C.c: 68:     SSPBUF = d;
  3043  0635  0872               	movf	I2C_Master_Write@d,w
  3044  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0638  0093               	movwf	19	;volatile
  3047  0639                     l89:
  3048  0639  0008               	return
  3049  063A                     __end_of_I2C_Master_Write:
  3050                           
  3051                           	psect	text14
  3052  063A                     __ptext14:	
  3053 ;; *************** function _I2C_Master_Stop *****************
  3054 ;; Defined at:
  3055 ;;		line 55 in file "I2C.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0
  3072 ;;      Totals:         0       0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    2
  3076 ;; This function calls:
  3077 ;;		_I2C_Master_Wait
  3078 ;; This function is called by:
  3079 ;;		_MPU6050_Init
  3080 ;;		_MPU6050_Read
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _I2C_Master_Stop
  3086  063A                     _I2C_Master_Stop:
  3087  063A                     l1241:	
  3088                           ;incstack = 0
  3089                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3090                           
  3091                           
  3092                           ;I2C.c: 57:     I2C_Master_Wait();
  3093  063A  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  3094  063F                     l1243:
  3095                           
  3096                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3097  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0641  1511               	bsf	17,2	;volatile
  3100  0642                     l86:
  3101  0642  0008               	return
  3102  0643                     __end_of_I2C_Master_Stop:
  3103                           
  3104                           	psect	text15
  3105  058A                     __ptext15:	
  3106 ;; *************** function _I2C_Master_Read *****************
  3107 ;; Defined at:
  3108 ;;		line 74 in file "I2C.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  a               2    2[COMMON] unsigned short 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  temp            2    6[COMMON] unsigned short 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    2[COMMON] unsigned short 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         2       0       0       0       0
  3123 ;;      Locals:         2       0       0       0       0
  3124 ;;      Temps:          2       0       0       0       0
  3125 ;;      Totals:         6       0       0       0       0
  3126 ;;Total ram usage:        6 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		_I2C_Master_Wait
  3131 ;; This function is called by:
  3132 ;;		_MPU6050_Read
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _I2C_Master_Read
  3138  058A                     _I2C_Master_Read:
  3139  058A                     l1383:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3142                           
  3143                           
  3144                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3145  058A  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  3146  058F                     l1385:
  3147                           
  3148                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3149  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0590  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0591  1591               	bsf	17,3	;volatile
  3152                           
  3153                           ;I2C.c: 79:     I2C_Master_Wait();
  3154  0592  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  3155  0597                     l1387:
  3156                           
  3157                           ;I2C.c: 80:     temp = SSPBUF;
  3158  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0599  0813               	movf	19,w	;volatile
  3161  059A  00F4               	movwf	??_I2C_Master_Read
  3162  059B  01F5               	clrf	??_I2C_Master_Read+1
  3163  059C  0874               	movf	??_I2C_Master_Read,w
  3164  059D  00F6               	movwf	I2C_Master_Read@temp
  3165  059E  0875               	movf	??_I2C_Master_Read+1,w
  3166  059F  00F7               	movwf	I2C_Master_Read@temp+1
  3167  05A0                     l1389:
  3168                           
  3169                           ;I2C.c: 81:     I2C_Master_Wait();
  3170  05A0  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Wait
  3171  05A5                     l1391:
  3172                           
  3173                           ;I2C.c: 82:     if(a == 1){
  3174  05A5  0372               	decf	I2C_Master_Read@a,w
  3175  05A6  0473               	iorwf	I2C_Master_Read@a+1,w
  3176  05A7  1D03               	btfss	3,2
  3177  05A8  2DAA               	goto	u711
  3178  05A9  2DAB               	goto	u710
  3179  05AA                     u711:
  3180  05AA  2DAF               	goto	l92
  3181  05AB                     u710:
  3182  05AB                     l1393:
  3183                           
  3184                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3185  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3186  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3187  05AD  1291               	bcf	17,5	;volatile
  3188                           
  3189                           ;I2C.c: 84:     }else{
  3190  05AE  2DB2               	goto	l93
  3191  05AF                     l92:
  3192                           
  3193                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3194  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  3195  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  3196  05B1  1691               	bsf	17,5	;volatile
  3197  05B2                     l93:	
  3198                           ;I2C.c: 86:     }
  3199                           
  3200                           
  3201                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3202  05B2  1611               	bsf	17,4	;volatile
  3203  05B3                     l1395:
  3204                           
  3205                           ;I2C.c: 88:     return temp;
  3206  05B3  0877               	movf	I2C_Master_Read@temp+1,w
  3207  05B4  00F3               	movwf	?_I2C_Master_Read+1
  3208  05B5  0876               	movf	I2C_Master_Read@temp,w
  3209  05B6  00F2               	movwf	?_I2C_Master_Read
  3210  05B7                     l94:
  3211  05B7  0008               	return
  3212  05B8                     __end_of_I2C_Master_Read:
  3213                           
  3214                           	psect	text16
  3215  0617                     __ptext16:	
  3216 ;; *************** function _I2C_Master_Wait *****************
  3217 ;; Defined at:
  3218 ;;		line 32 in file "I2C.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0
  3235 ;;      Totals:         0       0       0       0       0
  3236 ;;Total ram usage:        0 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_I2C_Master_Stop
  3243 ;;		_I2C_Master_Write
  3244 ;;		_I2C_Master_Read
  3245 ;;		_I2C_Start
  3246 ;;		_I2C_Master_Start
  3247 ;;		_I2C_Master_RepeatedStart
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _I2C_Master_Wait
  3253  0617                     _I2C_Master_Wait:
  3254  0617                     l1197:	
  3255                           ;incstack = 0
  3256                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3257                           
  3258  0617                     l74:	
  3259                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3260                           
  3261  0617  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0618  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0619  1914               	btfsc	20,2	;volatile
  3264  061A  2E1C               	goto	u441
  3265  061B  2E1D               	goto	u440
  3266  061C                     u441:
  3267  061C  2E17               	goto	l74
  3268  061D                     u440:
  3269  061D                     l1199:
  3270  061D  0811               	movf	17,w	;volatile
  3271  061E  391F               	andlw	31
  3272  061F  1D03               	btfss	3,2
  3273  0620  2E22               	goto	u451
  3274  0621  2E23               	goto	u450
  3275  0622                     u451:
  3276  0622  2E17               	goto	l74
  3277  0623                     u450:
  3278  0623                     l77:
  3279  0623  0008               	return
  3280  0624                     __end_of_I2C_Master_Wait:
  3281                           
  3282                           	psect	text17
  3283  0643                     __ptext17:	
  3284 ;; *************** function _ISR *****************
  3285 ;; Defined at:
  3286 ;;		line 45 in file "main.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		None
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          2       0       0       0       0
  3303 ;;      Totals:         2       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		Interrupt level 1
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _ISR
  3315  0643                     _ISR:
  3316  0643                     i1l29:
  3317  0643  0871               	movf	??_ISR+1,w
  3318  0644  008A               	movwf	10
  3319  0645  0E70               	swapf	??_ISR,w
  3320  0646  0083               	movwf	3
  3321  0647  0EFE               	swapf	btemp,f
  3322  0648  0E7E               	swapf	btemp,w
  3323  0649  0009               	retfie
  3324  064A                     __end_of_ISR:
  3325  007E                     btemp	set	126	;btemp
  3326  007E                     wtemp0	set	126
  3327                           
  3328                           	psect	intentry
  3329  0004                     __pintentry:	
  3330                           ;incstack = 0
  3331                           ; Regs used in _ISR: []
  3332                           
  3333  0004                     interrupt_function:
  3334  007E                     saved_w	set	btemp
  3335  0004  00FE               	movwf	btemp
  3336  0005  0E03               	swapf	3,w
  3337  0006  00F0               	movwf	??_ISR
  3338  0007  080A               	movf	10,w
  3339  0008  00F1               	movwf	??_ISR+1
  3340  0009  120A  118A  2E43   	ljmp	_ISR
  3341                           
  3342                           	psect	config
  3343                           
  3344                           ;Config register CONFIG1 @ 0x2007
  3345                           ;	Oscillator Selection bits
  3346                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3347                           ;	Watchdog Timer Enable bit
  3348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3349                           ;	Power-up Timer Enable bit
  3350                           ;	PWRTE = OFF, PWRT disabled
  3351                           ;	RE3/MCLR pin function select bit
  3352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3353                           ;	Code Protection bit
  3354                           ;	CP = OFF, Program memory code protection is disabled
  3355                           ;	Data Code Protection bit
  3356                           ;	CPD = OFF, Data memory code protection is disabled
  3357                           ;	Brown Out Reset Selection bits
  3358                           ;	BOREN = OFF, BOR disabled
  3359                           ;	Internal External Switchover bit
  3360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3361                           ;	Fail-Safe Clock Monitor Enabled bit
  3362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3363                           ;	Low Voltage Programming Enable bit
  3364                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3365                           ;	In-Circuit Debugger Mode bit
  3366                           ;	DEBUG = 0x1, unprogrammed default
  3367  2007                     	org	8199
  3368  2007  20D4               	dw	8404
  3369                           
  3370                           ;Config register CONFIG2 @ 0x2008
  3371                           ;	Brown-out Reset Selection bit
  3372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3373                           ;	Flash Program Memory Self Write Enable bits
  3374                           ;	WRT = OFF, Write protection off
  3375  2008                     	org	8200
  3376  2008  3FFF               	dw	16383

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     76      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UARTSendString->_UARTSendChar
    _I2C_Start->_I2C_Master_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _Setup->_MPU6050_Init
    _UARTInit->___lldiv
    _MPU6050_Init->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _MPU6050_Read->_sprintf
    _sprintf->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11266
                                             74 BANK0      2     2      0
                       _MPU6050_Read
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    4614
                    _I2C_Master_Init
                       _MPU6050_Init
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Init                                         2     2      0    2986
                                             13 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      8     4      4     792
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        56    56      0    6652
                                             18 BANK0     56    56      0
                    _I2C_Master_Read
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
                     _UARTSendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2304
                                              5 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       4     4      0     343
                                              3 COMMON     4     4      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            3     3      0    1108
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2    1086
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    1109
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UARTSendString
       _UARTSendChar
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _MPU6050_Init
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_Start
         _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _UARTInit
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 11:26:21 2021

        UARTInit@baud_rate 0025                          pc 0002         __size_of_I2C_Start 0016  
                       l40 0589                         l71 0559                         l74 0617  
                       l92 05AF                         l77 0623                         l93 05B2  
                       l94 05B7                         l86 0642                         l89 0639  
                       fsr 0004                        l100 0616                        l122 01B5  
                      l141 03D4                        l119 0365                        l144 0625  
                      l153 0600                        l321 043C                        l147 062F  
                      l281 029F                        l557 04E5                        l567 0521  
                      _GIE 005F                        u500 0416                        u501 0415  
                      u440 061D                        u520 0434                        u441 061C  
                      u521 0433                        u505 0412                        u450 0623  
                      u610 04E1                        u530 0539                        u451 0622  
                      u611 04E0                        u515 0426                        u540 062B  
                      u460 03E7                        u700 03A8                        _ISR 0643  
                      u541 062A                        u605 04D5                        u461 03E6  
                      u710 05AB                        u550 04AA                        u711 05AA  
                      u551 04A9                        u535 0534                        u480 03FB  
                      u481 03FA                        u705 03A3                        u570 04BC  
                      u571 04BB                        u475 03EC                        u820 04EE  
                      u900 0224                        _SEN 0488                        u565 04AE  
                      u821 04ED                        u901 0223                        u590 04CD  
                      u910 022F                        u591 04CC                        u911 022E  
                      u495 03FD                        u840 0500                        u920 0235  
                      u680 036D                        u585 04BD                        u841 04FF  
                      u921 0234                        u905 0220                        u681 036C  
                      u850 050A                        u930 0289                        u690 037B  
                      u595 04C9                        u851 0509                        u835 04F2  
                      u931 0288                        u940 029B                        u941 029A  
                      u790 0600                        u870 051D                        u950 05C9  
                      u791 05FF                        u871 051C                        u855 0506  
                      u695 0376                        u951 05C5                        u880 01C4  
                      u865 0511                        u881 01C3                        u890 01FE  
                      u891 01FD                        u964 05CC                        u977 05D7  
                      u987 02A6                        fsr0 0004                        indf 0000  
       MPU6050_Read@buffer 0034                       ?_ISR 0070                       l1201 0630  
                     l1203 0635                       l1211 03F7                       l1221 0425  
                     l1213 03FB                       l1205 03D5                       l1301 0366  
                     l1223 042E                       l1215 0404                       l1207 03E7  
                     l1231 0526                       l1311 03C6                       l1303 036D  
                     l1241 063A                       l1217 0416                       l1209 03EA  
                     l1225 0434                       l1233 0529                       l1321 03CD  
                     l1313 03C7                       l1305 0398                       l1243 063F  
                     l1251 062B                       l1219 0424                       l1235 0556  
                     l1331 02A0                       l1323 03CE                       l1315 03C8  
                     l1307 039A                       l1245 0602                       l1261 04B4  
                     l1253 04A2                       l1237 0557                       l1229 0522  
                     l1341 02D1                       l1333 02AA                       l1325 03CF  
                     l1317 03C9                       l1309 03C5                       l1247 0607  
                     l1271 04D4                       l1263 04B8                       l1255 04A4  
                     l1239 0558                       l1351 02F3                       l1343 02D6  
                     l1335 02B9                       l1327 03D0                       l1319 03CC  
                     l1249 0625                       l1273 04DB                       l1265 04BC  
                     l1257 04AA                       l1601 01FA                       l1361 0315  
                     l1353 02F9                       l1345 02DC                       l1337 02BF  
                     l1329 03D3                       l1267 04CD                       l1259 04AD  
                     l1275 04E1                       l1603 01FE                       l1371 033A  
                     l1363 031E                       l1355 0302                       l1347 02E5  
                     l1339 02C8                       l1197 0617                       l1461 05E1  
                     l1269 04D3                       l1621 0235                       l1613 0209  
                     l1605 0202                       l1381 0360                       l1373 0343  
                     l1365 0326                       l1357 030A                       l1349 02EE  
                     l1199 061D                       l1391 05A5                       l1383 058A  
                     l1463 05E4                       l1631 027C                       l1623 023C  
                     l1607 0207                       l1375 0348                       l1367 032B  
                     l1359 030F                       l1471 0570                       l1393 05AB  
                     l1385 058F                       l1465 05EF                       l1561 04E6  
                     l1633 0280                       l1625 0240                       l1617 0225  
                     l1377 034E                       l1369 0331                       l1473 0573  
                     l1395 05B3                       l1387 0597                       l1467 05F5  
                     l1571 0500                       l1563 04EE                       l1627 0245  
                     l1619 022F                       l1635 0289                       l1651 0070  
                     l1379 0357                       l1475 0576                       l1389 05A0  
                     l1573 050A                       l1565 04F1                       l1629 0275  
                     l1637 029B                       l1661 0116                       l1653 0091  
                     l1645 0014                       l1477 0579                       l1469 055A  
                     l1575 0510                       l1567 04F8                       l1719 01E3  
                     l1591 01D0                       l1583 01B9                       l1671 0147  
                     l1663 011B                       l1655 00B2                       l1647 002E  
                     l1577 0517                       l1569 04FC                       l1585 01BE  
                     l1681 0183                       l1673 0157                       l1665 012B  
                     l1657 00D3                       l1649 004F                       l1579 051D  
                     l1595 01D1                       l1587 01C4                       l1683 0189  
                     l1675 015D                       l1667 0131                       l1659 00F4  
                     l1691 05B8                       l1597 01EE                       l1589 01CB  
                     l1685 0199                       l1677 016D                       l1669 0141  
                     l1693 05BD                       l1599 01F6                       l1687 019F  
                     l1679 0173                       l1695 05CC                       l1689 01AF  
                     l1697 05D1                       STR_1 0481                       STR_2 045A  
                     STR_3 0474                       STR_4 0498                       STR_5 044D  
                     STR_6 0467                       STR_7 048D                       _PEIE 005E  
                     i1l29 0643                       _main 05B8                       btemp 007E  
                     start 000C                      ??_ISR 0070           ?_I2C_Master_Init 0025  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 043D  
          __end_of___lwdiv 04E6            __end_of___lwmod 0522                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _TRISA 0085  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
         __end_of_UARTInit 03D5                      _Setup 055A              ?_MPU6050_Init 0070  
            ?_MPU6050_Read 0070            __end_of_dpowers 044D          __end_of_I2C_Start 0617  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 02A0             MPU6050_Read@Ax 005C             MPU6050_Read@Ay 005E  
           MPU6050_Read@Az 0060             MPU6050_Read@Gx 0064             MPU6050_Read@Gy 0066  
           MPU6050_Read@Gz 0068            __initialization 000F               __end_of_main 05E0  
                   ??_main 006A          ?_I2C_Master_Write 0072                     ?_Setup 0070  
           ??_MPU6050_Init 002D             ??_MPU6050_Read 0032         ??_I2C_Master_Write 0074  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 007A                  ??___lwdiv 0076                  ??___lwmod 007A  
  __size_of_UARTSendString 0021                     saved_w 007E                  ??_sprintf 0028  
  __end_of__initialization 0010             __pcstackCOMMON 0070              __end_of_Setup 058A  
                ?_UARTInit 0025                    ??_Setup 007B                 __pmaintext 05B8  
     __end_of_MPU6050_Init 0366       __end_of_MPU6050_Read 01B6                 ??_UARTInit 002A  
               __pintentry 0004                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 043D              ?_UARTSendChar 0070               I2C_Start@add 0076  
                _I2C_Start 0601                    ___lldiv 03D5                    ___lwdiv 04A2  
                  ___lwmod 04E6             _UARTSendString 05E0                    _bandera 007B  
                  __ptext1 055A                    __ptext2 0366                    __ptext3 02A0  
                  __ptext4 0522                    __ptext5 03D5                    __ptext6 0014  
                  __ptext7 01B6                    __ptext8 04E6                    __ptext9 04A2  
             __size_of_ISR 0007                    _dpowers 0443   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 01B6       end_of_initialization 0010             ??_UARTSendChar 0072  
               ?_I2C_Start 0070  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072  
          ___lldiv@counter 0024                  _RCSTAbits 0018     __end_of_UARTSendString 0601  
         I2C_Master_Init@c 0025           I2C_Master_Read@a 0072                  _PORTAbits 0005  
                _TRISCbits 0087                  _TXSTAbits 0098      __size_of_MPU6050_Init 00C6  
    __size_of_MPU6050_Read 01A2            ?_UARTSendString 0070          __size_of_UARTInit 006F  
      start_initialization 000F              MPU6050_Read@T 0062                __end_of_ISR 064A  
             _MPU6050_Init 02A0               _MPU6050_Read 0014          ??_I2C_Master_Init 0029  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
              ??_I2C_Start 0074       __end_of_UARTSendChar 0630                __pbssCOMMON 007B  
                ___latbits 0002              __pcstackBANK0 0020                sprintf@flag 002C  
              sprintf@prec 002D           _I2C_Master_Write 0630           ___lwdiv@dividend 0074  
            UARTSendChar@c 0072                   ?___lldiv 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                  __pstrings 043D             __size_of_Setup 0030  
         ___lwdiv@quotient 0077                   ?_sprintf 0025          interrupt_function 0004  
          UARTSendString@i 0074                   _PIR1bits 000C                   _UARTInit 0366  
              __stringbase 0442        I2C_Master_Read@temp 0076           ??_UARTSendString 0073  
    __size_of_UARTSendChar 000C               UARTInit@BRGH 0029           __size_of___lldiv 0068  
         __size_of___lwdiv 0044           __size_of___lwmod 003C         __end_of__stringtab 0443  
               sprintf@val 002E            _I2C_Master_Init 0522            _I2C_Master_Read 058A  
          _I2C_Master_Wait 0617            _I2C_Master_Stop 063A            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 05E0                   __ptext11 0624  
                 __ptext12 0601                   __ptext13 0630                   __ptext14 063A  
                 __ptext15 058A                   __ptext16 0617                   __ptext17 0643  
         __size_of_sprintf 00EA               _UARTSendChar 0624              __size_of_main 0028  
 __end_of_I2C_Master_Write 063A          UARTSendString@str 0076                   intlevel1 0000  
                sprintf@ap 002B                  sprintf@sp 0030           ___lwmod@dividend 0022  
         ___lldiv@dividend 0076                  stringcode 043D    __end_of_I2C_Master_Init 055A  
  __end_of_I2C_Master_Read 05B8    __end_of_I2C_Master_Wait 0624    __end_of_I2C_Master_Stop 0643  
                 sprintf@c 0031                   sprintf@f 0025           ___lldiv@quotient 0020  
        I2C_Master_Write@d 0072            ___lwmod@divisor 0020            ___lwmod@counter 0024  
                 stringdir 043D                   stringtab 043D                _SSPCON2bits 0091  
