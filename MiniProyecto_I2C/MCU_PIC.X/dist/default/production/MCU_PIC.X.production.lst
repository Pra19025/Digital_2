

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 01 16:36:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  001A                     _RCREG	set	26
   458  000C                     _PIR1bits	set	12
   459  0019                     _TXREG	set	25
   460  0018                     _RCSTAbits	set	24
   461  0013                     _SSPBUF	set	19
   462  0014                     _SSPCON	set	20
   463  0007                     _PORTC	set	7
   464  0005                     _PORTA	set	5
   465  0005                     _PORTAbits	set	5
   466  0063                     _SSPIF	set	99
   467  005E                     _PEIE	set	94
   468  005F                     _GIE	set	95
   469  0098                     _TXSTAbits	set	152
   470  0099                     _SPBRG	set	153
   471  0091                     _SSPCON2bits	set	145
   472  0087                     _TRISCbits	set	135
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  0087                     _TRISC	set	135
   477  0085                     _TRISA	set	133
   478  048C                     _ACKEN	set	1164
   479  048D                     _ACKDT	set	1165
   480  04A0                     _BF	set	1184
   481  048B                     _RCEN	set	1163
   482  0488                     _SEN	set	1160
   483  0463                     _SSPIE	set	1123
   484  043C                     _TRISC4	set	1084
   485  043B                     _TRISC3	set	1083
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	strings
   490  04B6                     __pstrings:
   491  04B6                     stringtab:
   492  04B6                     __stringtab:
   493  04B6                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  04B6                     stringdir:
   497  04B6  3004               	movlw	high stringdir
   498  04B7  008A               	movwf	10
   499  04B8  0804               	movf	4,w
   500  04B9  0A84               	incf	4,f
   501  04BA  0782               	addwf	2,f
   502  04BB                     __stringbase:
   503  04BB  3400               	retlw	0
   504  04BC                     __end_of__stringtab:
   505  04BC                     STR_4:
   506  04BC  3420               	retlw	32	;' '
   507  04BD  3447               	retlw	71	;'G'
   508  04BE  3478               	retlw	120	;'x'
   509  04BF  3420               	retlw	32	;' '
   510  04C0  3400               	retlw	0
   511  04C1                     STR_2:
   512  04C1  3420               	retlw	32	;' '
   513  04C2  3441               	retlw	65	;'A'
   514  04C3  3479               	retlw	121	;'y'
   515  04C4  3420               	retlw	32	;' '
   516  04C5  3400               	retlw	0
   517  04C6                     STR_5:
   518  04C6  3420               	retlw	32	;' '
   519  04C7  3447               	retlw	71	;'G'
   520  04C8  3479               	retlw	121	;'y'
   521  04C9  3420               	retlw	32	;' '
   522  04CA  3400               	retlw	0
   523  04CB                     STR_3:
   524  04CB  3420               	retlw	32	;' '
   525  04CC  3441               	retlw	65	;'A'
   526  04CD  347A               	retlw	122	;'z'
   527  04CE  3420               	retlw	32	;' '
   528  04CF  3400               	retlw	0
   529  04D0                     STR_6:
   530  04D0  3420               	retlw	32	;' '
   531  04D1  3447               	retlw	71	;'G'
   532  04D2  347A               	retlw	122	;'z'
   533  04D3  3420               	retlw	32	;' '
   534  04D4  3400               	retlw	0
   535  04D5                     STR_7:
   536  04D5  3420               	retlw	32	;' '
   537  04D6  3454               	retlw	84	;'T'
   538  04D7  3420               	retlw	32	;' '
   539  04D8  3400               	retlw	0
   540  04D9                     STR_1:
   541  04D9  3441               	retlw	65	;'A'
   542  04DA  3478               	retlw	120	;'x'
   543  04DB  3420               	retlw	32	;' '
   544  04DC  3400               	retlw	0
   545  04DD                     STR_8:
   546  04DD  340A               	retlw	10
   547  04DE  3400               	retlw	0
   548                           
   549                           	psect	cinit
   550  000F                     start_initialization:	
   551                           ; #config settings
   552                           
   553  000F                     __initialization:
   554                           
   555                           ; Clear objects allocated to BANK0
   556  000F  1383               	bcf	3,7	;select IRP bank0
   557  0010  3020               	movlw	low __pbssBANK0
   558  0011  0084               	movwf	4
   559  0012  303C               	movlw	low (__pbssBANK0+28)
   560  0013  120A  118A  25B6  120A  118A  	fcall	clear_ram0
   561  0018                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  0018                     __end_of__initialization:
   565  0018  0183               	clrf	3
   566  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bssBANK0
   569  0020                     __pbssBANK0:
   570  0020                     _Tenvio:
   571  0020                     	ds	2
   572  0022                     _Gzenvio:
   573  0022                     	ds	2
   574  0024                     _Gyenvio:
   575  0024                     	ds	2
   576  0026                     _Gxenvio:
   577  0026                     	ds	2
   578  0028                     _Azenvio:
   579  0028                     	ds	2
   580  002A                     _Ayenvio:
   581  002A                     	ds	2
   582  002C                     _Axenvio:
   583  002C                     	ds	2
   584  002E                     _T:
   585  002E                     	ds	2
   586  0030                     _Gz:
   587  0030                     	ds	2
   588  0032                     _Gy:
   589  0032                     	ds	2
   590  0034                     _Gx:
   591  0034                     	ds	2
   592  0036                     _Az:
   593  0036                     	ds	2
   594  0038                     _Ay:
   595  0038                     	ds	2
   596  003A                     _Ax:
   597  003A                     	ds	2
   598                           
   599                           	psect	clrtext
   600  05B6                     clear_ram0:	
   601                           ;	Called with FSR containing the base address, and
   602                           ;	W with the last address+1
   603                           
   604  05B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   605  05B7                     clrloop0:
   606  05B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   607  05B8  0A84               	incf	4,f	;increment pointer
   608  05B9  0604               	xorwf	4,w	;XOR with final address
   609  05BA  1903               	btfsc	3,2	;have we reached the end yet?
   610  05BB  3400               	retlw	0	;all done for this memory range, return
   611  05BC  0604               	xorwf	4,w	;XOR again to restore value
   612  05BD  2DB7               	goto	clrloop0	;do the next byte
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:
   616  0070                     ?_Setup:
   617  0070                     ?_I2C_Start:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_I2C_Master_Stop:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_I2C_Read:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_intToString:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_UARTSendString:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_ACK:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_NACK:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_ISR:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_ISR:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_UARTSendChar:	
   651                           ; 1 bytes @ 0x0
   652                           
   653                           
   654                           ; 1 bytes @ 0x0
   655  0070                     	ds	2
   656  0072                     ?_I2C_Master_Write:
   657  0072                     ??_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0072                     ??_I2C_Read:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0072                     ??_I2C_ACK:	
   664                           ; 1 bytes @ 0x2
   665                           
   666  0072                     ??_I2C_NACK:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ??_I2C_Master_Wait:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0072                     ??_UARTSendChar:	
   673                           ; 1 bytes @ 0x2
   674                           
   675  0072                     ?___bmul:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     ?___awdiv:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     ?___awmod:	
   682                           ; 2 bytes @ 0x2
   683                           
   684  0072                     ?___lldiv:	
   685                           ; 2 bytes @ 0x2
   686                           
   687  0072                     UARTSendChar@c:	
   688                           ; 4 bytes @ 0x2
   689                           
   690  0072                     ___bmul@multiplicand:	
   691                           ; 1 bytes @ 0x2
   692                           
   693  0072                     I2C_Master_Write@d:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0072                     ___awdiv@divisor:	
   697                           ; 2 bytes @ 0x2
   698                           
   699  0072                     ___awmod@divisor:	
   700                           ; 2 bytes @ 0x2
   701                           
   702  0072                     ___lldiv@divisor:	
   703                           ; 2 bytes @ 0x2
   704                           
   705                           
   706                           ; 4 bytes @ 0x2
   707  0072                     	ds	1
   708  0073                     ??_UARTSendString:
   709  0073                     ??___bmul:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0073                     I2C_Read@ACK_NACK:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0073                     UARTSendString@i:	
   716                           ; 1 bytes @ 0x3
   717                           
   718                           
   719                           ; 2 bytes @ 0x3
   720  0073                     	ds	1
   721  0074                     ??_I2C_Start:
   722  0074                     ??_I2C_Master_Write:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     I2C_Read@Data:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ___bmul@product:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     ___awdiv@dividend:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ___awmod@dividend:	
   735                           ; 2 bytes @ 0x4
   736                           
   737                           
   738                           ; 2 bytes @ 0x4
   739  0074                     	ds	1
   740  0075                     UARTSendString@str:
   741  0075                     ___bmul@multiplier:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 1 bytes @ 0x5
   746  0075                     	ds	1
   747  0076                     ??___awdiv:
   748  0076                     ??___awmod:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0076                     I2C_Start@add:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0076                     ___lldiv@dividend:	
   755                           ; 1 bytes @ 0x6
   756                           
   757                           
   758                           ; 4 bytes @ 0x6
   759  0076                     	ds	1
   760  0077                     ___awdiv@counter:
   761  0077                     ___awmod@counter:	
   762                           ; 1 bytes @ 0x7
   763                           
   764                           
   765                           ; 1 bytes @ 0x7
   766  0077                     	ds	1
   767  0078                     ___awdiv@sign:
   768  0078                     ___awmod@sign:	
   769                           ; 1 bytes @ 0x8
   770                           
   771                           
   772                           ; 1 bytes @ 0x8
   773  0078                     	ds	1
   774  0079                     ___awdiv@quotient:
   775                           
   776                           ; 2 bytes @ 0x9
   777  0079                     	ds	1
   778  007A                     ??___lldiv:
   779                           
   780                           ; 1 bytes @ 0xA
   781  007A                     	ds	1
   782  007B                     ??_Setup:
   783                           
   784                           	psect	cstackBANK0
   785  003C                     __pcstackBANK0:	
   786                           ; 1 bytes @ 0xB
   787                           
   788  003C                     ??_intToString:
   789  003C                     ___lldiv@quotient:	
   790                           ; 1 bytes @ 0x0
   791                           
   792                           
   793                           ; 4 bytes @ 0x0
   794  003C                     	ds	3
   795  003F                     intToString@valor:
   796                           
   797                           ; 4 bytes @ 0x3
   798  003F                     	ds	1
   799  0040                     ___lldiv@counter:
   800                           
   801                           ; 1 bytes @ 0x4
   802  0040                     	ds	1
   803  0041                     ?_I2C_Master_Init:
   804  0041                     ?_UARTInit:	
   805                           ; 1 bytes @ 0x5
   806                           
   807  0041                     I2C_Master_Init@c:	
   808                           ; 1 bytes @ 0x5
   809                           
   810  0041                     UARTInit@baud_rate:	
   811                           ; 4 bytes @ 0x5
   812                           
   813                           
   814                           ; 4 bytes @ 0x5
   815  0041                     	ds	2
   816  0043                     intToString@entero:
   817                           
   818                           ; 1 bytes @ 0x7
   819  0043                     	ds	1
   820  0044                     intToString@value:
   821                           
   822                           ; 1 bytes @ 0x8
   823  0044                     	ds	1
   824  0045                     ??_I2C_Master_Init:
   825  0045                     UARTInit@BRGH:	
   826                           ; 1 bytes @ 0x9
   827                           
   828                           
   829                           ; 1 bytes @ 0x9
   830  0045                     	ds	1
   831  0046                     ??_UARTInit:
   832                           
   833                           ; 1 bytes @ 0xA
   834  0046                     	ds	4
   835  004A                     ??_main:
   836                           
   837                           ; 1 bytes @ 0xE
   838  004A                     	ds	4
   839                           
   840                           	psect	maintext
   841  001C                     __pmaintext:	
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 52 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : B00/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       4       0       0       0
   864 ;;      Totals:         0       4       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels required when called:    4
   867 ;; This function calls:
   868 ;;		_I2C_Master_Init
   869 ;;		_I2C_Master_Stop
   870 ;;		_I2C_Master_Write
   871 ;;		_I2C_Read
   872 ;;		_I2C_Start
   873 ;;		_Setup
   874 ;;		_UARTSendString
   875 ;;		_intToString
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _main
   883  001C                     _main:
   884  001C                     l1482:	
   885                           ;incstack = 0
   886                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   887                           
   888                           
   889                           ;main.c: 53: 
   890  001C  120A  118A  252B  120A  118A  	fcall	_Setup
   891  0021                     l1484:
   892                           
   893                           ;main.c: 58: 
   894  0021  3082               	movlw	130
   895  0022  1283               	bcf	3,5	;RP0=0, select bank0
   896  0023  1303               	bcf	3,6	;RP1=0, select bank0
   897  0024  00CB               	movwf	??_main+1
   898  0025  30DD               	movlw	221
   899  0026  00CA               	movwf	??_main
   900  0027                     u947:
   901  0027  0BCA               	decfsz	??_main,f
   902  0028  2827               	goto	u947
   903  0029  0BCB               	decfsz	??_main+1,f
   904  002A  2827               	goto	u947
   905  002B                     l1486:
   906                           
   907                           ;main.c: 59: 
   908  002B  3000               	movlw	0
   909  002C  1283               	bcf	3,5	;RP0=0, select bank0
   910  002D  1303               	bcf	3,6	;RP1=0, select bank0
   911  002E  00C4               	movwf	I2C_Master_Init@c+3
   912  002F  3001               	movlw	1
   913  0030  00C3               	movwf	I2C_Master_Init@c+2
   914  0031  3086               	movlw	134
   915  0032  00C2               	movwf	I2C_Master_Init@c+1
   916  0033  30A0               	movlw	160
   917  0034  00C1               	movwf	I2C_Master_Init@c
   918  0035  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Init
   919  003A                     l1488:
   920                           
   921                           ;main.c: 61: 
   922  003A  30D0               	movlw	208
   923  003B  120A  118A  254D  120A  118A  	fcall	_I2C_Start
   924  0040                     l1490:
   925                           
   926                           ;main.c: 62: 
   927  0040  3019               	movlw	25
   928  0041  00F2               	movwf	I2C_Master_Write@d
   929  0042  3000               	movlw	0
   930  0043  00F3               	movwf	I2C_Master_Write@d+1
   931  0044  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   932  0049                     l1492:
   933                           
   934                           ;main.c: 63: 
   935  0049  3007               	movlw	7
   936  004A  00F2               	movwf	I2C_Master_Write@d
   937  004B  3000               	movlw	0
   938  004C  00F3               	movwf	I2C_Master_Write@d+1
   939  004D  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   940  0052                     l1494:
   941                           
   942                           ;main.c: 64: 
   943  0052  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
   944  0057                     l1496:
   945                           
   946                           ;main.c: 67: 
   947  0057  30D0               	movlw	208
   948  0058  120A  118A  254D  120A  118A  	fcall	_I2C_Start
   949  005D                     l1498:
   950                           
   951                           ;main.c: 68:         PORTAbits.RA0 = ~PORTAbits.RA0;
   952  005D  306B               	movlw	107
   953  005E  00F2               	movwf	I2C_Master_Write@d
   954  005F  3000               	movlw	0
   955  0060  00F3               	movwf	I2C_Master_Write@d+1
   956  0061  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   957  0066                     l1500:
   958                           
   959                           ;main.c: 69: 
   960  0066  3001               	movlw	1
   961  0067  00F2               	movwf	I2C_Master_Write@d
   962  0068  3000               	movlw	0
   963  0069  00F3               	movwf	I2C_Master_Write@d+1
   964  006A  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   965  006F                     l1502:
   966                           
   967                           ;main.c: 70:         _delay((unsigned long)((50)*(4000000/4000.0)));
   968  006F  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
   969  0074                     l1504:
   970                           
   971                           ;main.c: 73:         I2C_Master_Write(0x3B);
   972  0074  30D0               	movlw	208
   973  0075  120A  118A  254D  120A  118A  	fcall	_I2C_Start
   974  007A                     l1506:
   975                           
   976                           ;main.c: 74:         I2C_Master_Stop();
   977  007A  301A               	movlw	26
   978  007B  00F2               	movwf	I2C_Master_Write@d
   979  007C  3000               	movlw	0
   980  007D  00F3               	movwf	I2C_Master_Write@d+1
   981  007E  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   982  0083                     l1508:
   983                           
   984                           ;main.c: 75:         I2C_Start(0xD1);
   985  0083  3000               	movlw	0
   986  0084  00F2               	movwf	I2C_Master_Write@d
   987  0085  00F3               	movwf	I2C_Master_Write@d+1
   988  0086  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
   989  008B                     l1510:
   990                           
   991                           ;main.c: 76: 
   992  008B  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
   993  0090                     l1512:
   994                           
   995                           ;main.c: 79:         Az = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
   996  0090  30D0               	movlw	208
   997  0091  120A  118A  254D  120A  118A  	fcall	_I2C_Start
   998  0096                     l1514:
   999                           
  1000                           ;main.c: 80:         T = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1001  0096  301C               	movlw	28
  1002  0097  00F2               	movwf	I2C_Master_Write@d
  1003  0098  3000               	movlw	0
  1004  0099  00F3               	movwf	I2C_Master_Write@d+1
  1005  009A  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  1006  009F                     l1516:
  1007                           
  1008                           ;main.c: 81:         Gx = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1009  009F  3000               	movlw	0
  1010  00A0  00F2               	movwf	I2C_Master_Write@d
  1011  00A1  00F3               	movwf	I2C_Master_Write@d+1
  1012  00A2  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  1013  00A7                     l1518:
  1014                           
  1015                           ;main.c: 82:         Gy = ((int) I2C_Read(0) << 8) | (int) I2C_Read(0);
  1016  00A7  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
  1017  00AC                     l1520:
  1018                           
  1019                           ;main.c: 85:         I2C_Master_Stop();
  1020  00AC  30D0               	movlw	208
  1021  00AD  120A  118A  254D  120A  118A  	fcall	_I2C_Start
  1022  00B2                     l1522:
  1023                           
  1024                           ;main.c: 86: 
  1025  00B2  301B               	movlw	27
  1026  00B3  00F2               	movwf	I2C_Master_Write@d
  1027  00B4  3000               	movlw	0
  1028  00B5  00F3               	movwf	I2C_Master_Write@d+1
  1029  00B6  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  1030  00BB                     l1524:
  1031                           
  1032                           ;main.c: 87:         Axenvio = intToString(Ax);
  1033  00BB  3018               	movlw	24
  1034  00BC  00F2               	movwf	I2C_Master_Write@d
  1035  00BD  3000               	movlw	0
  1036  00BE  00F3               	movwf	I2C_Master_Write@d+1
  1037  00BF  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  1038  00C4                     l1526:
  1039                           
  1040                           ;main.c: 88:         Ayenvio = intToString(Ay);
  1041  00C4  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
  1042  00C9                     l1528:
  1043                           
  1044                           ;main.c: 99:         UARTSendString(" Az ");
  1045  00C9  1003               	clrc
  1046  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00CC  1C05               	btfss	5,0	;volatile
  1049  00CD  1403               	setc
  1050  00CE  1803               	btfsc	3,0
  1051  00CF  28D1               	goto	u911
  1052  00D0  28D5               	goto	u910
  1053  00D1                     u911:
  1054  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1055  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1056  00D3  1405               	bsf	5,0	;volatile
  1057  00D4  28D8               	goto	u924
  1058  00D5                     u910:
  1059  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00D7  1005               	bcf	5,0	;volatile
  1062  00D8                     u924:
  1063  00D8                     l1530:
  1064                           
  1065                           ;main.c: 101:         UARTSendString(" Gx ");
  1066  00D8  3041               	movlw	65
  1067  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1068  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1069  00DB  00CB               	movwf	??_main+1
  1070  00DC  30ED               	movlw	237
  1071  00DD  00CA               	movwf	??_main
  1072  00DE                     u957:
  1073  00DE  0BCA               	decfsz	??_main,f
  1074  00DF  28DE               	goto	u957
  1075  00E0  0BCB               	decfsz	??_main+1,f
  1076  00E1  28DE               	goto	u957
  1077  00E2  28E3               	nop2
  1078  00E3                     l1532:
  1079                           
  1080                           ;main.c: 103:         UARTSendString(" Gy ");
  1081  00E3  30D0               	movlw	208
  1082  00E4  120A  118A  254D  120A  118A  	fcall	_I2C_Start
  1083  00E9                     l1534:
  1084                           
  1085                           ;main.c: 104:         UARTSendString(Gyenvio);
  1086  00E9  303B               	movlw	59
  1087  00EA  00F2               	movwf	I2C_Master_Write@d
  1088  00EB  3000               	movlw	0
  1089  00EC  00F3               	movwf	I2C_Master_Write@d+1
  1090  00ED  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  1091  00F2                     l1536:
  1092                           
  1093                           ;main.c: 105:         UARTSendString(" Gz ");
  1094  00F2  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
  1095  00F7                     l1538:
  1096                           
  1097                           ;main.c: 106:         UARTSendString(Gzenvio);
  1098  00F7  30D1               	movlw	209
  1099  00F8  120A  118A  254D  120A  118A  	fcall	_I2C_Start
  1100  00FD                     l1540:
  1101                           
  1102                           ;main.c: 108:         UARTSendString(Tenvio);
  1103  00FD  3000               	movlw	0
  1104  00FE  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1105  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0105  00CA               	movwf	??_main
  1108  0106  01CB               	clrf	??_main+1
  1109  0107  3000               	movlw	0
  1110  0108  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1111  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1112  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1113  010F  00CC               	movwf	??_main+2
  1114  0110  01CD               	clrf	??_main+3
  1115  0111  084C               	movf	??_main+2,w
  1116  0112  00CD               	movwf	??_main+3
  1117  0113  01CC               	clrf	??_main+2
  1118  0114  084A               	movf	??_main,w
  1119  0115  044C               	iorwf	??_main+2,w
  1120  0116  00BA               	movwf	_Ax
  1121  0117  084B               	movf	??_main+1,w
  1122  0118  044D               	iorwf	??_main+3,w
  1123  0119  00BB               	movwf	_Ax+1
  1124  011A                     l1542:
  1125                           
  1126                           ;main.c: 109:         UARTSendString("\n");
  1127  011A  3000               	movlw	0
  1128  011B  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1129  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0122  00CA               	movwf	??_main
  1132  0123  01CB               	clrf	??_main+1
  1133  0124  3000               	movlw	0
  1134  0125  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1135  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1136  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1137  012C  00CC               	movwf	??_main+2
  1138  012D  01CD               	clrf	??_main+3
  1139  012E  084C               	movf	??_main+2,w
  1140  012F  00CD               	movwf	??_main+3
  1141  0130  01CC               	clrf	??_main+2
  1142  0131  084A               	movf	??_main,w
  1143  0132  044C               	iorwf	??_main+2,w
  1144  0133  00B8               	movwf	_Ay
  1145  0134  084B               	movf	??_main+1,w
  1146  0135  044D               	iorwf	??_main+3,w
  1147  0136  00B9               	movwf	_Ay+1
  1148  0137                     l1544:
  1149                           
  1150                           ;main.c: 110: 
  1151  0137  3000               	movlw	0
  1152  0138  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1153  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1154  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1155  013F  00CA               	movwf	??_main
  1156  0140  01CB               	clrf	??_main+1
  1157  0141  3000               	movlw	0
  1158  0142  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1159  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0149  00CC               	movwf	??_main+2
  1162  014A  01CD               	clrf	??_main+3
  1163  014B  084C               	movf	??_main+2,w
  1164  014C  00CD               	movwf	??_main+3
  1165  014D  01CC               	clrf	??_main+2
  1166  014E  084A               	movf	??_main,w
  1167  014F  044C               	iorwf	??_main+2,w
  1168  0150  00B6               	movwf	_Az
  1169  0151  084B               	movf	??_main+1,w
  1170  0152  044D               	iorwf	??_main+3,w
  1171  0153  00B7               	movwf	_Az+1
  1172  0154                     l1546:
  1173                           
  1174                           ;main.c: 111:     }
  1175  0154  3000               	movlw	0
  1176  0155  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1177  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1178  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1179  015C  00CA               	movwf	??_main
  1180  015D  01CB               	clrf	??_main+1
  1181  015E  3000               	movlw	0
  1182  015F  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1183  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0166  00CC               	movwf	??_main+2
  1186  0167  01CD               	clrf	??_main+3
  1187  0168  084C               	movf	??_main+2,w
  1188  0169  00CD               	movwf	??_main+3
  1189  016A  01CC               	clrf	??_main+2
  1190  016B  084A               	movf	??_main,w
  1191  016C  044C               	iorwf	??_main+2,w
  1192  016D  00AE               	movwf	_T
  1193  016E  084B               	movf	??_main+1,w
  1194  016F  044D               	iorwf	??_main+3,w
  1195  0170  00AF               	movwf	_T+1
  1196  0171                     l1548:
  1197                           
  1198                           ;main.c: 112: 
  1199  0171  3000               	movlw	0
  1200  0172  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1201  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0179  00CA               	movwf	??_main
  1204  017A  01CB               	clrf	??_main+1
  1205  017B  3000               	movlw	0
  1206  017C  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1207  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0183  00CC               	movwf	??_main+2
  1210  0184  01CD               	clrf	??_main+3
  1211  0185  084C               	movf	??_main+2,w
  1212  0186  00CD               	movwf	??_main+3
  1213  0187  01CC               	clrf	??_main+2
  1214  0188  084A               	movf	??_main,w
  1215  0189  044C               	iorwf	??_main+2,w
  1216  018A  00B4               	movwf	_Gx
  1217  018B  084B               	movf	??_main+1,w
  1218  018C  044D               	iorwf	??_main+3,w
  1219  018D  00B5               	movwf	_Gx+1
  1220  018E                     l1550:
  1221                           
  1222                           ;main.c: 113: 
  1223  018E  3000               	movlw	0
  1224  018F  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1225  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0196  00CA               	movwf	??_main
  1228  0197  01CB               	clrf	??_main+1
  1229  0198  3000               	movlw	0
  1230  0199  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1231  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1232  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1233  01A0  00CC               	movwf	??_main+2
  1234  01A1  01CD               	clrf	??_main+3
  1235  01A2  084C               	movf	??_main+2,w
  1236  01A3  00CD               	movwf	??_main+3
  1237  01A4  01CC               	clrf	??_main+2
  1238  01A5  084A               	movf	??_main,w
  1239  01A6  044C               	iorwf	??_main+2,w
  1240  01A7  00B2               	movwf	_Gy
  1241  01A8  084B               	movf	??_main+1,w
  1242  01A9  044D               	iorwf	??_main+3,w
  1243  01AA  00B3               	movwf	_Gy+1
  1244  01AB                     l1552:
  1245                           
  1246                           ;main.c: 114:     return;
  1247  01AB  3001               	movlw	1
  1248  01AC  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1249  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1250  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1251  01B3  00CA               	movwf	??_main
  1252  01B4  01CB               	clrf	??_main+1
  1253  01B5  3000               	movlw	0
  1254  01B6  120A  118A  24DF  120A  118A  	fcall	_I2C_Read
  1255  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1256  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1257  01BD  00CC               	movwf	??_main+2
  1258  01BE  01CD               	clrf	??_main+3
  1259  01BF  084C               	movf	??_main+2,w
  1260  01C0  00CD               	movwf	??_main+3
  1261  01C1  01CC               	clrf	??_main+2
  1262  01C2  084A               	movf	??_main,w
  1263  01C3  044C               	iorwf	??_main+2,w
  1264  01C4  00B0               	movwf	_Gz
  1265  01C5  084B               	movf	??_main+1,w
  1266  01C6  044D               	iorwf	??_main+3,w
  1267  01C7  00B1               	movwf	_Gz+1
  1268  01C8                     l1554:
  1269                           
  1270                           ;main.c: 116: 
  1271  01C8  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
  1272  01CD                     l1556:
  1273                           
  1274                           ;main.c: 118: 
  1275  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1276  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1277  01CF  083A               	movf	_Ax,w
  1278  01D0  120A  118A  23C6  120A  118A  	fcall	_intToString
  1279  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1280  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1281  01D7  00AC               	movwf	_Axenvio
  1282  01D8  3000               	movlw	0
  1283  01D9  00AD               	movwf	_Axenvio+1
  1284  01DA                     l1558:
  1285                           
  1286                           ;main.c: 119:     UARTInit(9600, 1);
  1287  01DA  0838               	movf	_Ay,w
  1288  01DB  120A  118A  23C6  120A  118A  	fcall	_intToString
  1289  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1290  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1291  01E2  00AA               	movwf	_Ayenvio
  1292  01E3  3000               	movlw	0
  1293  01E4  00AB               	movwf	_Ayenvio+1
  1294  01E5                     l1560:
  1295                           
  1296                           ;main.c: 120: 
  1297  01E5  0836               	movf	_Az,w
  1298  01E6  120A  118A  23C6  120A  118A  	fcall	_intToString
  1299  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1300  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1301  01ED  00A8               	movwf	_Azenvio
  1302  01EE  3000               	movlw	0
  1303  01EF  00A9               	movwf	_Azenvio+1
  1304  01F0                     l1562:
  1305                           
  1306                           ;main.c: 121: 
  1307  01F0  0834               	movf	_Gx,w
  1308  01F1  120A  118A  23C6  120A  118A  	fcall	_intToString
  1309  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1310  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1311  01F8  00A6               	movwf	_Gxenvio
  1312  01F9  3000               	movlw	0
  1313  01FA  00A7               	movwf	_Gxenvio+1
  1314  01FB                     l1564:
  1315                           
  1316                           ;main.c: 122:     TRISA = 0;
  1317  01FB  0832               	movf	_Gy,w
  1318  01FC  120A  118A  23C6  120A  118A  	fcall	_intToString
  1319  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0203  00A4               	movwf	_Gyenvio
  1322  0204  3000               	movlw	0
  1323  0205  00A5               	movwf	_Gyenvio+1
  1324  0206                     l1566:
  1325                           
  1326                           ;main.c: 123:     PORTA = 0;
  1327  0206  0830               	movf	_Gz,w
  1328  0207  120A  118A  23C6  120A  118A  	fcall	_intToString
  1329  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1330  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1331  020E  00A2               	movwf	_Gzenvio
  1332  020F  3000               	movlw	0
  1333  0210  00A3               	movwf	_Gzenvio+1
  1334  0211                     l1568:
  1335                           
  1336                           ;main.c: 124:     TRISC = 0;
  1337  0211  082E               	movf	_T,w
  1338  0212  120A  118A  23C6  120A  118A  	fcall	_intToString
  1339  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0219  00A0               	movwf	_Tenvio
  1342  021A  3000               	movlw	0
  1343  021B  00A1               	movwf	_Tenvio+1
  1344  021C                     l1570:
  1345                           
  1346                           ;main.c: 126:     ANSEL = 0;
  1347  021C  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1348  021D  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1349  0222                     l1572:
  1350                           
  1351                           ;main.c: 127:     ANSELH = 0;
  1352  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0224  082C               	movf	_Axenvio,w
  1355  0225  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1356  022A                     l1574:
  1357                           
  1358                           ;main.c: 128: 
  1359  022A  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1360  022B  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1361  0230                     l1576:
  1362                           
  1363                           ;main.c: 129: 
  1364  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0232  082A               	movf	_Ayenvio,w
  1367  0233  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1368  0238                     l1578:
  1369                           
  1370                           ;main.c: 130: 
  1371  0238  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1372  0239  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1373  023E                     l1580:
  1374                           
  1375                           ;main.c: 131: 
  1376  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1377  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0240  0828               	movf	_Azenvio,w
  1379  0241  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1380  0246                     l1582:
  1381                           
  1382                           ;main.c: 132: 
  1383  0246  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1384  0247  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1385  024C                     l1584:
  1386                           
  1387                           ;main.c: 133: 
  1388  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1389  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1390  024E  0826               	movf	_Gxenvio,w
  1391  024F  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1392  0254                     l1586:
  1393                           
  1394                           ;main.c: 134: 
  1395  0254  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1396  0255  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1397  025A                     l1588:
  1398                           
  1399                           ;main.c: 135:     return;
  1400  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1401  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1402  025C  0824               	movf	_Gyenvio,w
  1403  025D  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1404  0262                     l1590:
  1405                           
  1406                           ;main.c: 136: }
  1407  0262  3015               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1408  0263  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1409  0268                     l1592:
  1410                           
  1411                           ;main.c: 137: 
  1412  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1414  026A  0822               	movf	_Gzenvio,w
  1415  026B  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1416  0270                     l1594:
  1417                           
  1418                           ;main.c: 138: char* intToString(uint8_t value) {
  1419  0270  301A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1420  0271  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1421  0276                     l1596:
  1422                           
  1423                           ;main.c: 139:     char valor[4];
  1424  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0278  0820               	movf	_Tenvio,w
  1427  0279  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1428  027E                     l1598:
  1429                           
  1430                           ;main.c: 140: 
  1431  027E  3022               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1432  027F  120A  118A  2506  120A  118A  	fcall	_UARTSendString
  1433  0284  28C9               	goto	l1528
  1434  0285  120A  118A  280C   	ljmp	start
  1435  0288                     __end_of_main:
  1436                           
  1437                           	psect	text1
  1438  03C6                     __ptext1:	
  1439 ;; *************** function _intToString *****************
  1440 ;; Defined at:
  1441 ;;		line 169 in file "main.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  value           1    wreg     unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  value           1    8[BANK0 ] unsigned char 
  1446 ;;  valor           4    3[BANK0 ] unsigned char [4]
  1447 ;;  entero          1    7[BANK0 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      PTR unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       6       0       0       0
  1459 ;;      Temps:          0       3       0       0       0
  1460 ;;      Totals:         0       9       0       0       0
  1461 ;;Total ram usage:        9 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    2
  1464 ;; This function calls:
  1465 ;;		___awdiv
  1466 ;;		___awmod
  1467 ;;		___bmul
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _intToString
  1475  03C6                     _intToString:
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _intToString: [wreg+status,2+status,0+pclath+cstack]
  1479                           ;intToString@value stored from wreg
  1480  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1481  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1482  03C8  00C4               	movwf	intToString@value
  1483  03C9                     l1458:
  1484  03C9  3064               	movlw	100
  1485  03CA  00F2               	movwf	___awdiv@divisor
  1486  03CB  3000               	movlw	0
  1487  03CC  00F3               	movwf	___awdiv@divisor+1
  1488  03CD  0844               	movf	intToString@value,w
  1489  03CE  00BC               	movwf	??_intToString
  1490  03CF  01BD               	clrf	??_intToString+1
  1491  03D0  083C               	movf	??_intToString,w
  1492  03D1  00F4               	movwf	___awdiv@dividend
  1493  03D2  083D               	movf	??_intToString+1,w
  1494  03D3  00F5               	movwf	___awdiv@dividend+1
  1495  03D4  120A  118A  235F  120A  118A  	fcall	___awdiv
  1496  03D9  0872               	movf	?___awdiv,w
  1497  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1498  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1499  03DC  00BE               	movwf	??_intToString+2
  1500  03DD  083E               	movf	??_intToString+2,w
  1501  03DE  00C3               	movwf	intToString@entero
  1502  03DF                     l1460:
  1503  03DF  0843               	movf	intToString@entero,w
  1504  03E0  3E30               	addlw	48
  1505  03E1  00BC               	movwf	??_intToString
  1506  03E2  083C               	movf	??_intToString,w
  1507  03E3  00BF               	movwf	intToString@valor
  1508  03E4                     l1462:
  1509  03E4  309C               	movlw	156
  1510  03E5  00BC               	movwf	??_intToString
  1511  03E6  083C               	movf	??_intToString,w
  1512  03E7  00F2               	movwf	___bmul@multiplicand
  1513  03E8  0843               	movf	intToString@entero,w
  1514  03E9  120A  118A  2563  120A  118A  	fcall	___bmul
  1515  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1516  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1517  03F0  0744               	addwf	intToString@value,w
  1518  03F1  00BD               	movwf	??_intToString+1
  1519  03F2  083D               	movf	??_intToString+1,w
  1520  03F3  00C4               	movwf	intToString@value
  1521  03F4                     l1464:
  1522  03F4  300A               	movlw	10
  1523  03F5  00F2               	movwf	___awdiv@divisor
  1524  03F6  3000               	movlw	0
  1525  03F7  00F3               	movwf	___awdiv@divisor+1
  1526  03F8  0844               	movf	intToString@value,w
  1527  03F9  00BC               	movwf	??_intToString
  1528  03FA  01BD               	clrf	??_intToString+1
  1529  03FB  083C               	movf	??_intToString,w
  1530  03FC  00F4               	movwf	___awdiv@dividend
  1531  03FD  083D               	movf	??_intToString+1,w
  1532  03FE  00F5               	movwf	___awdiv@dividend+1
  1533  03FF  120A  118A  235F  120A  118A  	fcall	___awdiv
  1534  0404  0872               	movf	?___awdiv,w
  1535  0405  3E30               	addlw	48
  1536  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0408  00BE               	movwf	??_intToString+2
  1539  0409  083E               	movf	??_intToString+2,w
  1540  040A  00C0               	movwf	intToString@valor+1
  1541  040B                     l1466:
  1542  040B  300A               	movlw	10
  1543  040C  00F2               	movwf	___awmod@divisor
  1544  040D  3000               	movlw	0
  1545  040E  00F3               	movwf	___awmod@divisor+1
  1546  040F  0844               	movf	intToString@value,w
  1547  0410  00BC               	movwf	??_intToString
  1548  0411  01BD               	clrf	??_intToString+1
  1549  0412  083C               	movf	??_intToString,w
  1550  0413  00F4               	movwf	___awmod@dividend
  1551  0414  083D               	movf	??_intToString+1,w
  1552  0415  00F5               	movwf	___awmod@dividend+1
  1553  0416  120A  118A  2425  120A  118A  	fcall	___awmod
  1554  041B  0872               	movf	?___awmod,w
  1555  041C  3E30               	addlw	48
  1556  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1558  041F  00BE               	movwf	??_intToString+2
  1559  0420  083E               	movf	??_intToString+2,w
  1560  0421  00C1               	movwf	intToString@valor+2
  1561  0422                     l1468:
  1562  0422  01C2               	clrf	intToString@valor+3
  1563  0423                     l1470:
  1564  0423  303F               	movlw	(low (intToString@valor| 0))& (0+255)
  1565  0424                     l81:
  1566  0424  0008               	return
  1567  0425                     __end_of_intToString:
  1568                           
  1569                           	psect	text2
  1570  0563                     __ptext2:	
  1571 ;; *************** function ___bmul *****************
  1572 ;; Defined at:
  1573 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  multiplier      1    wreg     unsigned char 
  1576 ;;  multiplicand    1    2[COMMON] unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  multiplier      1    5[COMMON] unsigned char 
  1579 ;;  product         1    4[COMMON] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         1       0       0       0       0
  1590 ;;      Locals:         2       0       0       0       0
  1591 ;;      Temps:          1       0       0       0       0
  1592 ;;      Totals:         4       0       0       0       0
  1593 ;;Total ram usage:        4 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_intToString
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function ___bmul
  1605  0563                     ___bmul:
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1609                           ;___bmul@multiplier stored from wreg
  1610  0563  00F5               	movwf	___bmul@multiplier
  1611  0564                     l1312:
  1612  0564  01F4               	clrf	___bmul@product
  1613  0565                     l1314:
  1614  0565  1C75               	btfss	___bmul@multiplier,0
  1615  0566  2D68               	goto	u651
  1616  0567  2D69               	goto	u650
  1617  0568                     u651:
  1618  0568  2D6D               	goto	l1318
  1619  0569                     u650:
  1620  0569                     l1316:
  1621  0569  0872               	movf	___bmul@multiplicand,w
  1622  056A  00F3               	movwf	??___bmul
  1623  056B  0873               	movf	??___bmul,w
  1624  056C  07F4               	addwf	___bmul@product,f
  1625  056D                     l1318:
  1626  056D  1003               	clrc
  1627  056E  0DF2               	rlf	___bmul@multiplicand,f
  1628  056F                     l1320:
  1629  056F  1003               	clrc
  1630  0570  0CF5               	rrf	___bmul@multiplier,f
  1631  0571  0875               	movf	___bmul@multiplier,w
  1632  0572  1D03               	btfss	3,2
  1633  0573  2D75               	goto	u661
  1634  0574  2D76               	goto	u660
  1635  0575                     u661:
  1636  0575  2D65               	goto	l1314
  1637  0576                     u660:
  1638  0576                     l1322:
  1639  0576  0874               	movf	___bmul@product,w
  1640  0577                     l340:
  1641  0577  0008               	return
  1642  0578                     __end_of___bmul:
  1643                           
  1644                           	psect	text3
  1645  0425                     __ptext3:	
  1646 ;; *************** function ___awmod *****************
  1647 ;; Defined at:
  1648 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  divisor         2    2[COMMON] int 
  1651 ;;  dividend        2    4[COMMON] int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  sign            1    8[COMMON] unsigned char 
  1654 ;;  counter         1    7[COMMON] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    2[COMMON] int 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         4       0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0
  1666 ;;      Temps:          1       0       0       0       0
  1667 ;;      Totals:         7       0       0       0       0
  1668 ;;Total ram usage:        7 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_intToString
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function ___awmod
  1680  0425                     ___awmod:
  1681  0425                     l1370:	
  1682                           ;incstack = 0
  1683                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1684                           
  1685  0425  01F8               	clrf	___awmod@sign
  1686  0426                     l1372:
  1687  0426  1FF5               	btfss	___awmod@dividend+1,7
  1688  0427  2C29               	goto	u771
  1689  0428  2C2A               	goto	u770
  1690  0429                     u771:
  1691  0429  2C31               	goto	l1378
  1692  042A                     u770:
  1693  042A                     l1374:
  1694  042A  09F4               	comf	___awmod@dividend,f
  1695  042B  09F5               	comf	___awmod@dividend+1,f
  1696  042C  0AF4               	incf	___awmod@dividend,f
  1697  042D  1903               	skipnz
  1698  042E  0AF5               	incf	___awmod@dividend+1,f
  1699  042F                     l1376:
  1700  042F  01F8               	clrf	___awmod@sign
  1701  0430  0AF8               	incf	___awmod@sign,f
  1702  0431                     l1378:
  1703  0431  1FF3               	btfss	___awmod@divisor+1,7
  1704  0432  2C34               	goto	u781
  1705  0433  2C35               	goto	u780
  1706  0434                     u781:
  1707  0434  2C3A               	goto	l1382
  1708  0435                     u780:
  1709  0435                     l1380:
  1710  0435  09F2               	comf	___awmod@divisor,f
  1711  0436  09F3               	comf	___awmod@divisor+1,f
  1712  0437  0AF2               	incf	___awmod@divisor,f
  1713  0438  1903               	skipnz
  1714  0439  0AF3               	incf	___awmod@divisor+1,f
  1715  043A                     l1382:
  1716  043A  0872               	movf	___awmod@divisor,w
  1717  043B  0473               	iorwf	___awmod@divisor+1,w
  1718  043C  1903               	btfsc	3,2
  1719  043D  2C3F               	goto	u791
  1720  043E  2C40               	goto	u790
  1721  043F                     u791:
  1722  043F  2C6F               	goto	l1400
  1723  0440                     u790:
  1724  0440                     l1384:
  1725  0440  01F7               	clrf	___awmod@counter
  1726  0441  0AF7               	incf	___awmod@counter,f
  1727  0442  2C4E               	goto	l1390
  1728  0443                     l1386:
  1729  0443  3001               	movlw	1
  1730  0444                     u805:
  1731  0444  1003               	clrc
  1732  0445  0DF2               	rlf	___awmod@divisor,f
  1733  0446  0DF3               	rlf	___awmod@divisor+1,f
  1734  0447  3EFF               	addlw	-1
  1735  0448  1D03               	skipz
  1736  0449  2C44               	goto	u805
  1737  044A                     l1388:
  1738  044A  3001               	movlw	1
  1739  044B  00F6               	movwf	??___awmod
  1740  044C  0876               	movf	??___awmod,w
  1741  044D  07F7               	addwf	___awmod@counter,f
  1742  044E                     l1390:
  1743  044E  1FF3               	btfss	___awmod@divisor+1,7
  1744  044F  2C51               	goto	u811
  1745  0450  2C52               	goto	u810
  1746  0451                     u811:
  1747  0451  2C43               	goto	l1386
  1748  0452                     u810:
  1749  0452                     l1392:
  1750  0452  0873               	movf	___awmod@divisor+1,w
  1751  0453  0275               	subwf	___awmod@dividend+1,w
  1752  0454  1D03               	skipz
  1753  0455  2C58               	goto	u825
  1754  0456  0872               	movf	___awmod@divisor,w
  1755  0457  0274               	subwf	___awmod@dividend,w
  1756  0458                     u825:
  1757  0458  1C03               	skipc
  1758  0459  2C5B               	goto	u821
  1759  045A  2C5C               	goto	u820
  1760  045B                     u821:
  1761  045B  2C62               	goto	l1396
  1762  045C                     u820:
  1763  045C                     l1394:
  1764  045C  0872               	movf	___awmod@divisor,w
  1765  045D  02F4               	subwf	___awmod@dividend,f
  1766  045E  0873               	movf	___awmod@divisor+1,w
  1767  045F  1C03               	skipc
  1768  0460  03F5               	decf	___awmod@dividend+1,f
  1769  0461  02F5               	subwf	___awmod@dividend+1,f
  1770  0462                     l1396:
  1771  0462  3001               	movlw	1
  1772  0463                     u835:
  1773  0463  1003               	clrc
  1774  0464  0CF3               	rrf	___awmod@divisor+1,f
  1775  0465  0CF2               	rrf	___awmod@divisor,f
  1776  0466  3EFF               	addlw	-1
  1777  0467  1D03               	skipz
  1778  0468  2C63               	goto	u835
  1779  0469                     l1398:
  1780  0469  3001               	movlw	1
  1781  046A  02F7               	subwf	___awmod@counter,f
  1782  046B  1D03               	btfss	3,2
  1783  046C  2C6E               	goto	u841
  1784  046D  2C6F               	goto	u840
  1785  046E                     u841:
  1786  046E  2C52               	goto	l1392
  1787  046F                     u840:
  1788  046F                     l1400:
  1789  046F  0878               	movf	___awmod@sign,w
  1790  0470  1903               	btfsc	3,2
  1791  0471  2C73               	goto	u851
  1792  0472  2C74               	goto	u850
  1793  0473                     u851:
  1794  0473  2C79               	goto	l1404
  1795  0474                     u850:
  1796  0474                     l1402:
  1797  0474  09F4               	comf	___awmod@dividend,f
  1798  0475  09F5               	comf	___awmod@dividend+1,f
  1799  0476  0AF4               	incf	___awmod@dividend,f
  1800  0477  1903               	skipnz
  1801  0478  0AF5               	incf	___awmod@dividend+1,f
  1802  0479                     l1404:
  1803  0479  0875               	movf	___awmod@dividend+1,w
  1804  047A  00F3               	movwf	?___awmod+1
  1805  047B  0874               	movf	___awmod@dividend,w
  1806  047C  00F2               	movwf	?___awmod
  1807  047D                     l480:
  1808  047D  0008               	return
  1809  047E                     __end_of___awmod:
  1810                           
  1811                           	psect	text4
  1812  035F                     __ptext4:	
  1813 ;; *************** function ___awdiv *****************
  1814 ;; Defined at:
  1815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  divisor         2    2[COMMON] int 
  1818 ;;  dividend        2    4[COMMON] int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  quotient        2    9[COMMON] int 
  1821 ;;  sign            1    8[COMMON] unsigned char 
  1822 ;;  counter         1    7[COMMON] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2    2[COMMON] int 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         4       0       0       0       0
  1833 ;;      Locals:         4       0       0       0       0
  1834 ;;      Temps:          1       0       0       0       0
  1835 ;;      Totals:         9       0       0       0       0
  1836 ;;Total ram usage:        9 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_intToString
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function ___awdiv
  1848  035F                     ___awdiv:
  1849  035F                     l1326:	
  1850                           ;incstack = 0
  1851                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1852                           
  1853  035F  01F8               	clrf	___awdiv@sign
  1854  0360                     l1328:
  1855  0360  1FF3               	btfss	___awdiv@divisor+1,7
  1856  0361  2B63               	goto	u671
  1857  0362  2B64               	goto	u670
  1858  0363                     u671:
  1859  0363  2B6B               	goto	l1334
  1860  0364                     u670:
  1861  0364                     l1330:
  1862  0364  09F2               	comf	___awdiv@divisor,f
  1863  0365  09F3               	comf	___awdiv@divisor+1,f
  1864  0366  0AF2               	incf	___awdiv@divisor,f
  1865  0367  1903               	skipnz
  1866  0368  0AF3               	incf	___awdiv@divisor+1,f
  1867  0369                     l1332:
  1868  0369  01F8               	clrf	___awdiv@sign
  1869  036A  0AF8               	incf	___awdiv@sign,f
  1870  036B                     l1334:
  1871  036B  1FF5               	btfss	___awdiv@dividend+1,7
  1872  036C  2B6E               	goto	u681
  1873  036D  2B6F               	goto	u680
  1874  036E                     u681:
  1875  036E  2B78               	goto	l1340
  1876  036F                     u680:
  1877  036F                     l1336:
  1878  036F  09F4               	comf	___awdiv@dividend,f
  1879  0370  09F5               	comf	___awdiv@dividend+1,f
  1880  0371  0AF4               	incf	___awdiv@dividend,f
  1881  0372  1903               	skipnz
  1882  0373  0AF5               	incf	___awdiv@dividend+1,f
  1883  0374                     l1338:
  1884  0374  3001               	movlw	1
  1885  0375  00F6               	movwf	??___awdiv
  1886  0376  0876               	movf	??___awdiv,w
  1887  0377  06F8               	xorwf	___awdiv@sign,f
  1888  0378                     l1340:
  1889  0378  01F9               	clrf	___awdiv@quotient
  1890  0379  01FA               	clrf	___awdiv@quotient+1
  1891  037A                     l1342:
  1892  037A  0872               	movf	___awdiv@divisor,w
  1893  037B  0473               	iorwf	___awdiv@divisor+1,w
  1894  037C  1903               	btfsc	3,2
  1895  037D  2B7F               	goto	u691
  1896  037E  2B80               	goto	u690
  1897  037F                     u691:
  1898  037F  2BB7               	goto	l1362
  1899  0380                     u690:
  1900  0380                     l1344:
  1901  0380  01F7               	clrf	___awdiv@counter
  1902  0381  0AF7               	incf	___awdiv@counter,f
  1903  0382  2B8E               	goto	l1350
  1904  0383                     l1346:
  1905  0383  3001               	movlw	1
  1906  0384                     u705:
  1907  0384  1003               	clrc
  1908  0385  0DF2               	rlf	___awdiv@divisor,f
  1909  0386  0DF3               	rlf	___awdiv@divisor+1,f
  1910  0387  3EFF               	addlw	-1
  1911  0388  1D03               	skipz
  1912  0389  2B84               	goto	u705
  1913  038A                     l1348:
  1914  038A  3001               	movlw	1
  1915  038B  00F6               	movwf	??___awdiv
  1916  038C  0876               	movf	??___awdiv,w
  1917  038D  07F7               	addwf	___awdiv@counter,f
  1918  038E                     l1350:
  1919  038E  1FF3               	btfss	___awdiv@divisor+1,7
  1920  038F  2B91               	goto	u711
  1921  0390  2B92               	goto	u710
  1922  0391                     u711:
  1923  0391  2B83               	goto	l1346
  1924  0392                     u710:
  1925  0392                     l1352:
  1926  0392  3001               	movlw	1
  1927  0393                     u725:
  1928  0393  1003               	clrc
  1929  0394  0DF9               	rlf	___awdiv@quotient,f
  1930  0395  0DFA               	rlf	___awdiv@quotient+1,f
  1931  0396  3EFF               	addlw	-1
  1932  0397  1D03               	skipz
  1933  0398  2B93               	goto	u725
  1934  0399  0873               	movf	___awdiv@divisor+1,w
  1935  039A  0275               	subwf	___awdiv@dividend+1,w
  1936  039B  1D03               	skipz
  1937  039C  2B9F               	goto	u735
  1938  039D  0872               	movf	___awdiv@divisor,w
  1939  039E  0274               	subwf	___awdiv@dividend,w
  1940  039F                     u735:
  1941  039F  1C03               	skipc
  1942  03A0  2BA2               	goto	u731
  1943  03A1  2BA3               	goto	u730
  1944  03A2                     u731:
  1945  03A2  2BAA               	goto	l1358
  1946  03A3                     u730:
  1947  03A3                     l1354:
  1948  03A3  0872               	movf	___awdiv@divisor,w
  1949  03A4  02F4               	subwf	___awdiv@dividend,f
  1950  03A5  0873               	movf	___awdiv@divisor+1,w
  1951  03A6  1C03               	skipc
  1952  03A7  03F5               	decf	___awdiv@dividend+1,f
  1953  03A8  02F5               	subwf	___awdiv@dividend+1,f
  1954  03A9                     l1356:
  1955  03A9  1479               	bsf	___awdiv@quotient,0
  1956  03AA                     l1358:
  1957  03AA  3001               	movlw	1
  1958  03AB                     u745:
  1959  03AB  1003               	clrc
  1960  03AC  0CF3               	rrf	___awdiv@divisor+1,f
  1961  03AD  0CF2               	rrf	___awdiv@divisor,f
  1962  03AE  3EFF               	addlw	-1
  1963  03AF  1D03               	skipz
  1964  03B0  2BAB               	goto	u745
  1965  03B1                     l1360:
  1966  03B1  3001               	movlw	1
  1967  03B2  02F7               	subwf	___awdiv@counter,f
  1968  03B3  1D03               	btfss	3,2
  1969  03B4  2BB6               	goto	u751
  1970  03B5  2BB7               	goto	u750
  1971  03B6                     u751:
  1972  03B6  2B92               	goto	l1352
  1973  03B7                     u750:
  1974  03B7                     l1362:
  1975  03B7  0878               	movf	___awdiv@sign,w
  1976  03B8  1903               	btfsc	3,2
  1977  03B9  2BBB               	goto	u761
  1978  03BA  2BBC               	goto	u760
  1979  03BB                     u761:
  1980  03BB  2BC1               	goto	l1366
  1981  03BC                     u760:
  1982  03BC                     l1364:
  1983  03BC  09F9               	comf	___awdiv@quotient,f
  1984  03BD  09FA               	comf	___awdiv@quotient+1,f
  1985  03BE  0AF9               	incf	___awdiv@quotient,f
  1986  03BF  1903               	skipnz
  1987  03C0  0AFA               	incf	___awdiv@quotient+1,f
  1988  03C1                     l1366:
  1989  03C1  087A               	movf	___awdiv@quotient+1,w
  1990  03C2  00F3               	movwf	?___awdiv+1
  1991  03C3  0879               	movf	___awdiv@quotient,w
  1992  03C4  00F2               	movwf	?___awdiv
  1993  03C5                     l467:
  1994  03C5  0008               	return
  1995  03C6                     __end_of___awdiv:
  1996                           
  1997                           	psect	text5
  1998  0506                     __ptext5:	
  1999 ;; *************** function _UARTSendString *****************
  2000 ;; Defined at:
  2001 ;;		line 50 in file "UART.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  str             1    wreg     PTR const unsigned char 
  2004 ;;		 -> STR_8(2), STR_7(4), STR_6(5), STR_5(5), 
  2005 ;;		 -> STR_4(5), STR_3(5), STR_2(5), ROM(8192), 
  2006 ;;		 -> STR_1(4), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  str             1    5[COMMON] PTR const unsigned char 
  2009 ;;		 -> STR_8(2), STR_7(4), STR_6(5), STR_5(5), 
  2010 ;;		 -> STR_4(5), STR_3(5), STR_2(5), ROM(8192), 
  2011 ;;		 -> STR_1(4), 
  2012 ;;  i               2    3[COMMON] int 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         3       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         3       0       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    2
  2029 ;; This function calls:
  2030 ;;		_UARTSendChar
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _UARTSendString
  2038  0506                     _UARTSendString:
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2042                           ;UARTSendString@str stored from wreg
  2043  0506  00F5               	movwf	UARTSendString@str
  2044  0507                     l1474:
  2045                           
  2046                           ;UART.c: 51:     int i = 0;
  2047  0507  01F3               	clrf	UARTSendString@i
  2048  0508  01F4               	clrf	UARTSendString@i+1
  2049                           
  2050                           ;UART.c: 55:         while(str[i] != '\0'){
  2051  0509  2D1D               	goto	l1480
  2052  050A                     l1476:
  2053                           
  2054                           ;UART.c: 56:         UARTSendChar(str[i++]);
  2055  050A  0873               	movf	UARTSendString@i,w
  2056  050B  0775               	addwf	UARTSendString@str,w
  2057  050C  0084               	movwf	4
  2058  050D  120A  118A  24B6  120A  118A  	fcall	stringdir
  2059  0512  120A  118A  2585  120A  118A  	fcall	_UARTSendChar
  2060  0517                     l1478:
  2061  0517  3001               	movlw	1
  2062  0518  07F3               	addwf	UARTSendString@i,f
  2063  0519  1803               	skipnc
  2064  051A  0AF4               	incf	UARTSendString@i+1,f
  2065  051B  3000               	movlw	0
  2066  051C  07F4               	addwf	UARTSendString@i+1,f
  2067  051D                     l1480:
  2068                           
  2069                           ;UART.c: 55:         while(str[i] != '\0'){
  2070  051D  0873               	movf	UARTSendString@i,w
  2071  051E  0775               	addwf	UARTSendString@str,w
  2072  051F  0084               	movwf	4
  2073  0520  120A  118A  24B6  120A  118A  	fcall	stringdir
  2074  0525  3A00               	xorlw	0
  2075  0526  1D03               	skipz
  2076  0527  2D29               	goto	u901
  2077  0528  2D2A               	goto	u900
  2078  0529                     u901:
  2079  0529  2D0A               	goto	l1476
  2080  052A                     u900:
  2081  052A                     l207:
  2082  052A  0008               	return
  2083  052B                     __end_of_UARTSendString:
  2084                           
  2085                           	psect	text6
  2086  0585                     __ptext6:	
  2087 ;; *************** function _UARTSendChar *****************
  2088 ;; Defined at:
  2089 ;;		line 40 in file "UART.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  c               1    wreg     const unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  c               1    2[COMMON] const unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0
  2106 ;;      Totals:         1       0       0       0       0
  2107 ;;Total ram usage:        1 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_UARTSendString
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _UARTSendChar
  2119  0585                     _UARTSendChar:
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _UARTSendChar: [wreg]
  2123                           ;UARTSendChar@c stored from wreg
  2124  0585  00F2               	movwf	UARTSendChar@c
  2125  0586                     l1308:
  2126  0586                     l198:	
  2127                           ;UART.c: 41:     while (TXSTAbits.TRMT == 0);
  2128                           
  2129  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0588  1C98               	btfss	24,1	;volatile
  2132  0589  2D8B               	goto	u641
  2133  058A  2D8C               	goto	u640
  2134  058B                     u641:
  2135  058B  2D86               	goto	l198
  2136  058C                     u640:
  2137  058C                     l1310:
  2138                           
  2139                           ;UART.c: 42:     TXREG = c;
  2140  058C  0872               	movf	UARTSendChar@c,w
  2141  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2142  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2143  058F  0099               	movwf	25	;volatile
  2144  0590                     l201:
  2145  0590  0008               	return
  2146  0591                     __end_of_UARTSendChar:
  2147                           
  2148                           	psect	text7
  2149  052B                     __ptext7:	
  2150 ;; *************** function _Setup *****************
  2151 ;; Defined at:
  2152 ;;		line 148 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		_UARTInit
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _Setup
  2182  052B                     _Setup:
  2183  052B                     l1408:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  2186                           
  2187                           
  2188                           ;main.c: 150:     return valor;
  2189  052B  3000               	movlw	0
  2190  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2191  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2192  052E  00C4               	movwf	UARTInit@baud_rate+3
  2193  052F  3000               	movlw	0
  2194  0530  00C3               	movwf	UARTInit@baud_rate+2
  2195  0531  3025               	movlw	37
  2196  0532  00C2               	movwf	UARTInit@baud_rate+1
  2197  0533  3080               	movlw	128
  2198  0534  00C1               	movwf	UARTInit@baud_rate
  2199  0535  01C5               	clrf	UARTInit@BRGH
  2200  0536  0AC5               	incf	UARTInit@BRGH,f
  2201  0537  120A  118A  2288  120A  118A  	fcall	_UARTInit
  2202  053C                     l1410:
  2203                           
  2204                           ;main.c: 153: }
  2205  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2206  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2207  053E  0185               	clrf	5	;volatile
  2208  053F                     l1412:
  2209  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0541  0185               	clrf	5	;volatile
  2212  0542                     l1414:
  2213  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0544  0187               	clrf	7	;volatile
  2216  0545                     l1416:
  2217  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0547  0187               	clrf	7	;volatile
  2220  0548                     l1418:
  2221  0548  1683               	bsf	3,5	;RP0=1, select bank3
  2222  0549  1703               	bsf	3,6	;RP1=1, select bank3
  2223  054A  0188               	clrf	8	;volatile
  2224  054B                     l1420:
  2225  054B  0189               	clrf	9	;volatile
  2226  054C                     l78:
  2227  054C  0008               	return
  2228  054D                     __end_of_Setup:
  2229                           
  2230                           	psect	text8
  2231  0288                     __ptext8:	
  2232 ;; *************** function _UARTInit *****************
  2233 ;; Defined at:
  2234 ;;		line 9 in file "UART.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  baud_rate       4    5[BANK0 ] const unsigned long 
  2237 ;;  BRGH            1    9[BANK0 ] const unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       5       0       0       0
  2250 ;;      Locals:         0       0       0       0       0
  2251 ;;      Temps:          0       4       0       0       0
  2252 ;;      Totals:         0       9       0       0       0
  2253 ;;Total ram usage:        9 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    2
  2256 ;; This function calls:
  2257 ;;		___lldiv
  2258 ;; This function is called by:
  2259 ;;		_Setup
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _UARTInit
  2265  0288                     _UARTInit:
  2266  0288                     l1274:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  2269                           
  2270                           
  2271                           ;UART.c: 11:     if (BRGH == 0) {
  2272  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2274  028A  0845               	movf	UARTInit@BRGH,w
  2275  028B  1D03               	btfss	3,2
  2276  028C  2A8E               	goto	u591
  2277  028D  2A8F               	goto	u590
  2278  028E                     u591:
  2279  028E  2ABC               	goto	l1280
  2280  028F                     u590:
  2281  028F                     l1276:
  2282                           
  2283                           ;UART.c: 12:         SPBRG = 4000000/(64*baud_rate) - 1;
  2284  028F  0841               	movf	UARTInit@baud_rate,w
  2285  0290  00C6               	movwf	??_UARTInit
  2286  0291  0842               	movf	UARTInit@baud_rate+1,w
  2287  0292  00C7               	movwf	??_UARTInit+1
  2288  0293  0843               	movf	UARTInit@baud_rate+2,w
  2289  0294  00C8               	movwf	??_UARTInit+2
  2290  0295  0844               	movf	UARTInit@baud_rate+3,w
  2291  0296  00C9               	movwf	??_UARTInit+3
  2292  0297  3006               	movlw	6
  2293  0298                     u605:
  2294  0298  1003               	clrc
  2295  0299  0DC6               	rlf	??_UARTInit,f
  2296  029A  0DC7               	rlf	??_UARTInit+1,f
  2297  029B  0DC8               	rlf	??_UARTInit+2,f
  2298  029C  0DC9               	rlf	??_UARTInit+3,f
  2299  029D                     u600:
  2300  029D  3EFF               	addlw	-1
  2301  029E  1D03               	skipz
  2302  029F  2A98               	goto	u605
  2303  02A0  0849               	movf	??_UARTInit+3,w
  2304  02A1  00F5               	movwf	___lldiv@divisor+3
  2305  02A2  0848               	movf	??_UARTInit+2,w
  2306  02A3  00F4               	movwf	___lldiv@divisor+2
  2307  02A4  0847               	movf	??_UARTInit+1,w
  2308  02A5  00F3               	movwf	___lldiv@divisor+1
  2309  02A6  0846               	movf	??_UARTInit,w
  2310  02A7  00F2               	movwf	___lldiv@divisor
  2311  02A8  3000               	movlw	0
  2312  02A9  00F9               	movwf	___lldiv@dividend+3
  2313  02AA  303D               	movlw	61
  2314  02AB  00F8               	movwf	___lldiv@dividend+2
  2315  02AC  3009               	movlw	9
  2316  02AD  00F7               	movwf	___lldiv@dividend+1
  2317  02AE  3000               	movlw	0
  2318  02AF  00F6               	movwf	___lldiv@dividend
  2319  02B0  120A  118A  22F7  120A  118A  	fcall	___lldiv
  2320  02B5  0872               	movf	?___lldiv,w
  2321  02B6  3EFF               	addlw	255
  2322  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2323  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2324  02B9  0099               	movwf	25	;volatile
  2325  02BA                     l1278:
  2326                           
  2327                           ;UART.c: 13:         TXSTAbits.BRGH = 0;
  2328  02BA  1118               	bcf	24,2	;volatile
  2329                           
  2330                           ;UART.c: 14:     } else {
  2331  02BB  2AE8               	goto	l1284
  2332  02BC                     l1280:
  2333                           
  2334                           ;UART.c: 15:         SPBRG = 4000000/(16*baud_rate) - 1;
  2335  02BC  0841               	movf	UARTInit@baud_rate,w
  2336  02BD  00C6               	movwf	??_UARTInit
  2337  02BE  0842               	movf	UARTInit@baud_rate+1,w
  2338  02BF  00C7               	movwf	??_UARTInit+1
  2339  02C0  0843               	movf	UARTInit@baud_rate+2,w
  2340  02C1  00C8               	movwf	??_UARTInit+2
  2341  02C2  0844               	movf	UARTInit@baud_rate+3,w
  2342  02C3  00C9               	movwf	??_UARTInit+3
  2343  02C4  3004               	movlw	4
  2344  02C5                     u615:
  2345  02C5  1003               	clrc
  2346  02C6  0DC6               	rlf	??_UARTInit,f
  2347  02C7  0DC7               	rlf	??_UARTInit+1,f
  2348  02C8  0DC8               	rlf	??_UARTInit+2,f
  2349  02C9  0DC9               	rlf	??_UARTInit+3,f
  2350  02CA                     u610:
  2351  02CA  3EFF               	addlw	-1
  2352  02CB  1D03               	skipz
  2353  02CC  2AC5               	goto	u615
  2354  02CD  0849               	movf	??_UARTInit+3,w
  2355  02CE  00F5               	movwf	___lldiv@divisor+3
  2356  02CF  0848               	movf	??_UARTInit+2,w
  2357  02D0  00F4               	movwf	___lldiv@divisor+2
  2358  02D1  0847               	movf	??_UARTInit+1,w
  2359  02D2  00F3               	movwf	___lldiv@divisor+1
  2360  02D3  0846               	movf	??_UARTInit,w
  2361  02D4  00F2               	movwf	___lldiv@divisor
  2362  02D5  3000               	movlw	0
  2363  02D6  00F9               	movwf	___lldiv@dividend+3
  2364  02D7  303D               	movlw	61
  2365  02D8  00F8               	movwf	___lldiv@dividend+2
  2366  02D9  3009               	movlw	9
  2367  02DA  00F7               	movwf	___lldiv@dividend+1
  2368  02DB  3000               	movlw	0
  2369  02DC  00F6               	movwf	___lldiv@dividend
  2370  02DD  120A  118A  22F7  120A  118A  	fcall	___lldiv
  2371  02E2  0872               	movf	?___lldiv,w
  2372  02E3  3EFF               	addlw	255
  2373  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2374  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2375  02E6  0099               	movwf	25	;volatile
  2376  02E7                     l1282:
  2377                           
  2378                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2379  02E7  1518               	bsf	24,2	;volatile
  2380  02E8                     l1284:
  2381                           
  2382                           ;UART.c: 20:     TXSTAbits.TX9 = 0;
  2383  02E8  1318               	bcf	24,6	;volatile
  2384  02E9                     l1286:
  2385                           
  2386                           ;UART.c: 21:     TXSTAbits.TXEN = 1;
  2387  02E9  1698               	bsf	24,5	;volatile
  2388  02EA                     l1288:
  2389                           
  2390                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  2391  02EA  1218               	bcf	24,4	;volatile
  2392  02EB                     l1290:
  2393                           
  2394                           ;UART.c: 25:     RCSTAbits.SPEN = 1;
  2395  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2396  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2397  02ED  1798               	bsf	24,7	;volatile
  2398  02EE                     l1292:
  2399                           
  2400                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  2401  02EE  1318               	bcf	24,6	;volatile
  2402  02EF                     l1294:
  2403                           
  2404                           ;UART.c: 27:     RCSTAbits.CREN = 1;
  2405  02EF  1618               	bsf	24,4	;volatile
  2406  02F0                     l1296:
  2407                           
  2408                           ;UART.c: 28:     RCSTAbits.FERR = 0;
  2409  02F0  1118               	bcf	24,2	;volatile
  2410  02F1                     l1298:
  2411                           
  2412                           ;UART.c: 29:     RCSTAbits.OERR = 0;
  2413  02F1  1098               	bcf	24,1	;volatile
  2414  02F2                     l1300:
  2415                           
  2416                           ;UART.c: 32:     TRISCbits.TRISC7 = 1;
  2417  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2418  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2419  02F4  1787               	bsf	7,7	;volatile
  2420  02F5                     l1302:
  2421                           
  2422                           ;UART.c: 33:     TRISCbits.TRISC6 = 0;
  2423  02F5  1307               	bcf	7,6	;volatile
  2424  02F6                     l195:
  2425  02F6  0008               	return
  2426  02F7                     __end_of_UARTInit:
  2427                           
  2428                           	psect	text9
  2429  054D                     __ptext9:	
  2430 ;; *************** function _I2C_Start *****************
  2431 ;; Defined at:
  2432 ;;		line 108 in file "I2C.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  add             1    wreg     unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  add             1    6[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         1       0       0       0       0
  2448 ;;      Temps:          2       0       0       0       0
  2449 ;;      Totals:         3       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    3
  2453 ;; This function calls:
  2454 ;;		_I2C_Master_Wait
  2455 ;;		_I2C_Master_Write
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _I2C_Start
  2463  054D                     _I2C_Start:
  2464                           
  2465                           ;incstack = 0
  2466                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2467                           ;I2C_Start@add stored from wreg
  2468  054D  00F6               	movwf	I2C_Start@add
  2469  054E                     l1436:
  2470                           
  2471                           ;I2C.c: 109:     I2C_Master_Wait();
  2472  054E  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Wait
  2473  0553                     l1438:
  2474                           
  2475                           ;I2C.c: 110:     SEN = 1;
  2476  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0555  1411               	bsf	17,0	;volatile
  2479                           
  2480                           ;I2C.c: 111:     I2C_Master_Write(add);
  2481  0556  0876               	movf	I2C_Start@add,w
  2482  0557  00F4               	movwf	??_I2C_Start
  2483  0558  01F5               	clrf	??_I2C_Start+1
  2484  0559  0874               	movf	??_I2C_Start,w
  2485  055A  00F2               	movwf	I2C_Master_Write@d
  2486  055B  0875               	movf	??_I2C_Start+1,w
  2487  055C  00F3               	movwf	I2C_Master_Write@d+1
  2488  055D  120A  118A  2591  120A  118A  	fcall	_I2C_Master_Write
  2489  0562                     l153:
  2490  0562  0008               	return
  2491  0563                     __end_of_I2C_Start:
  2492                           
  2493                           	psect	text10
  2494  0591                     __ptext10:	
  2495 ;; *************** function _I2C_Master_Write *****************
  2496 ;; Defined at:
  2497 ;;		line 66 in file "I2C.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  d               2    2[COMMON] unsigned int 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         2       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         2       0       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    2
  2518 ;; This function calls:
  2519 ;;		_I2C_Master_Wait
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;;		_I2C_Start
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _I2C_Master_Write
  2528  0591                     _I2C_Master_Write:
  2529  0591                     l1270:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2532                           
  2533                           
  2534                           ;I2C.c: 67:     I2C_Master_Wait();
  2535  0591  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Wait
  2536  0596                     l1272:
  2537                           
  2538                           ;I2C.c: 68:     SSPBUF = d;
  2539  0596  0872               	movf	I2C_Master_Write@d,w
  2540  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0599  0093               	movwf	19	;volatile
  2543  059A                     l142:
  2544  059A  0008               	return
  2545  059B                     __end_of_I2C_Master_Write:
  2546                           
  2547                           	psect	text11
  2548  04DF                     __ptext11:	
  2549 ;; *************** function _I2C_Read *****************
  2550 ;; Defined at:
  2551 ;;		line 114 in file "I2C.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  ACK_NACK        1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  ACK_NACK        1    3[COMMON] unsigned char 
  2556 ;;  Data            1    4[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      unsigned char 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         2       0       0       0       0
  2568 ;;      Temps:          1       0       0       0       0
  2569 ;;      Totals:         3       0       0       0       0
  2570 ;;Total ram usage:        3 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    2
  2573 ;; This function calls:
  2574 ;;		_I2C_ACK
  2575 ;;		_I2C_NACK
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function _I2C_Read
  2583  04DF                     _I2C_Read:
  2584                           
  2585                           ;incstack = 0
  2586                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2587                           ;I2C_Read@ACK_NACK stored from wreg
  2588  04DF  00F3               	movwf	I2C_Read@ACK_NACK
  2589  04E0                     l1444:
  2590                           
  2591                           ;I2C.c: 116:     unsigned char Data;;I2C.c: 117:     RCEN = 1;
  2592  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2593  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2594  04E2  1591               	bsf	17,3	;volatile
  2595  04E3                     l156:	
  2596                           ;I2C.c: 118:     while (!BF);
  2597                           
  2598  04E3  1C14               	btfss	20,0	;volatile
  2599  04E4  2CE6               	goto	u871
  2600  04E5  2CE7               	goto	u870
  2601  04E6                     u871:
  2602  04E6  2CE3               	goto	l156
  2603  04E7                     u870:
  2604  04E7                     l1446:
  2605                           
  2606                           ;I2C.c: 119:     Data = SSPBUF;
  2607  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2608  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2609  04E9  0813               	movf	19,w	;volatile
  2610  04EA  00F2               	movwf	??_I2C_Read
  2611  04EB  0872               	movf	??_I2C_Read,w
  2612  04EC  00F4               	movwf	I2C_Read@Data
  2613  04ED                     l1448:
  2614                           
  2615                           ;I2C.c: 120:     if (ACK_NACK == 0)
  2616  04ED  0873               	movf	I2C_Read@ACK_NACK,w
  2617  04EE  1D03               	btfss	3,2
  2618  04EF  2CF1               	goto	u881
  2619  04F0  2CF2               	goto	u880
  2620  04F1                     u881:
  2621  04F1  2CF8               	goto	l1452
  2622  04F2                     u880:
  2623  04F2                     l1450:
  2624                           
  2625                           ;I2C.c: 121:         I2C_ACK();
  2626  04F2  120A  118A  25A4  120A  118A  	fcall	_I2C_ACK
  2627  04F7  2CFD               	goto	l161
  2628  04F8                     l1452:
  2629                           
  2630                           ;I2C.c: 123:         I2C_NACK();
  2631  04F8  120A  118A  259B  120A  118A  	fcall	_I2C_NACK
  2632  04FD                     l161:
  2633  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2634  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2635  04FF  1D8C               	btfss	12,3	;volatile
  2636  0500  2D02               	goto	u891
  2637  0501  2D03               	goto	u890
  2638  0502                     u891:
  2639  0502  2CFD               	goto	l161
  2640  0503                     u890:
  2641  0503                     l163:
  2642                           
  2643                           ;I2C.c: 125:     SSPIF = 0;
  2644  0503  118C               	bcf	12,3	;volatile
  2645  0504                     l1454:
  2646                           
  2647                           ;I2C.c: 126:     return Data;
  2648  0504  0874               	movf	I2C_Read@Data,w
  2649  0505                     l164:
  2650  0505  0008               	return
  2651  0506                     __end_of_I2C_Read:
  2652                           
  2653                           	psect	text12
  2654  059B                     __ptext12:	
  2655 ;; *************** function _I2C_NACK *****************
  2656 ;; Defined at:
  2657 ;;		line 135 in file "I2C.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		None
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_I2C_Read
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _I2C_NACK
  2687  059B                     _I2C_NACK:
  2688  059B                     l1306:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _I2C_NACK: []
  2691                           
  2692                           
  2693                           ;I2C.c: 136:     ACKDT = 1;
  2694  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2695  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2696  059D  1691               	bsf	17,5	;volatile
  2697                           
  2698                           ;I2C.c: 137:     ACKEN = 1;
  2699  059E  1611               	bsf	17,4	;volatile
  2700  059F                     l173:	
  2701                           ;I2C.c: 138:     while (ACKEN);
  2702                           
  2703  059F  1A11               	btfsc	17,4	;volatile
  2704  05A0  2DA2               	goto	u631
  2705  05A1  2DA3               	goto	u630
  2706  05A2                     u631:
  2707  05A2  2D9F               	goto	l173
  2708  05A3                     u630:
  2709  05A3                     l176:
  2710  05A3  0008               	return
  2711  05A4                     __end_of_I2C_NACK:
  2712                           
  2713                           	psect	text13
  2714  05A4                     __ptext13:	
  2715 ;; *************** function _I2C_ACK *****************
  2716 ;; Defined at:
  2717 ;;		line 129 in file "I2C.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		None
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_I2C_Read
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _I2C_ACK
  2747  05A4                     _I2C_ACK:
  2748  05A4                     l1304:	
  2749                           ;incstack = 0
  2750                           ; Regs used in _I2C_ACK: []
  2751                           
  2752                           
  2753                           ;I2C.c: 130:     ACKDT = 0;
  2754  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2755  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2756  05A6  1291               	bcf	17,5	;volatile
  2757                           
  2758                           ;I2C.c: 131:     ACKEN = 1;
  2759  05A7  1611               	bsf	17,4	;volatile
  2760  05A8                     l167:	
  2761                           ;I2C.c: 132:     while (ACKEN);
  2762                           
  2763  05A8  1A11               	btfsc	17,4	;volatile
  2764  05A9  2DAB               	goto	u621
  2765  05AA  2DAC               	goto	u620
  2766  05AB                     u621:
  2767  05AB  2DA8               	goto	l167
  2768  05AC                     u620:
  2769  05AC                     l170:
  2770  05AC  0008               	return
  2771  05AD                     __end_of_I2C_ACK:
  2772                           
  2773                           	psect	text14
  2774  05AD                     __ptext14:	
  2775 ;; *************** function _I2C_Master_Stop *****************
  2776 ;; Defined at:
  2777 ;;		line 56 in file "I2C.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    2
  2798 ;; This function calls:
  2799 ;;		_I2C_Master_Wait
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _I2C_Master_Stop
  2807  05AD                     _I2C_Master_Stop:
  2808  05AD                     l1440:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2811                           
  2812                           
  2813                           ;I2C.c: 57:     I2C_Master_Wait();
  2814  05AD  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Wait
  2815  05B2                     l1442:
  2816                           
  2817                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2818  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  2819  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  2820  05B4  1511               	bsf	17,2	;volatile
  2821  05B5                     l139:
  2822  05B5  0008               	return
  2823  05B6                     __end_of_I2C_Master_Stop:
  2824                           
  2825                           	psect	text15
  2826  0578                     __ptext15:	
  2827 ;; *************** function _I2C_Master_Wait *****************
  2828 ;; Defined at:
  2829 ;;		line 33 in file "I2C.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_I2C_Master_Stop
  2854 ;;		_I2C_Master_Write
  2855 ;;		_I2C_Start
  2856 ;;		_I2C_Master_Start
  2857 ;;		_I2C_Master_RepeatedStart
  2858 ;;		_I2C_Master_Read
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _I2C_Master_Wait
  2864  0578                     _I2C_Master_Wait:
  2865  0578                     l1242:	
  2866                           ;incstack = 0
  2867                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2868                           
  2869  0578                     l127:	
  2870                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2871                           
  2872  0578  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0579  1303               	bcf	3,6	;RP1=0, select bank1
  2874  057A  1914               	btfsc	20,2	;volatile
  2875  057B  2D7D               	goto	u501
  2876  057C  2D7E               	goto	u500
  2877  057D                     u501:
  2878  057D  2D78               	goto	l127
  2879  057E                     u500:
  2880  057E                     l1244:
  2881  057E  0811               	movf	17,w	;volatile
  2882  057F  391F               	andlw	31
  2883  0580  1D03               	btfss	3,2
  2884  0581  2D83               	goto	u511
  2885  0582  2D84               	goto	u510
  2886  0583                     u511:
  2887  0583  2D78               	goto	l127
  2888  0584                     u510:
  2889  0584                     l130:
  2890  0584  0008               	return
  2891  0585                     __end_of_I2C_Master_Wait:
  2892                           
  2893                           	psect	text16
  2894  047E                     __ptext16:	
  2895 ;; *************** function _I2C_Master_Init *****************
  2896 ;; Defined at:
  2897 ;;		line 17 in file "I2C.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  c               4    5[BANK0 ] const unsigned long 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       4       0       0       0
  2912 ;;      Locals:         0       0       0       0       0
  2913 ;;      Temps:          0       4       0       0       0
  2914 ;;      Totals:         0       8       0       0       0
  2915 ;;Total ram usage:        8 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    2
  2918 ;; This function calls:
  2919 ;;		___lldiv
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _I2C_Master_Init
  2927  047E                     _I2C_Master_Init:
  2928  047E                     l1424:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2931                           
  2932                           
  2933                           ;I2C.c: 18:     SSPCON = 0b00101000;
  2934  047E  3028               	movlw	40
  2935  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0481  0094               	movwf	20	;volatile
  2938  0482                     l1426:
  2939                           
  2940                           ;I2C.c: 19:     SSPCON2 = 0;
  2941  0482  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0483  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0484  0191               	clrf	17	;volatile
  2944  0485                     l1428:
  2945                           
  2946                           ;I2C.c: 20:     SSPADD = (4000000 / (4 * c)) - 1;
  2947  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0487  0841               	movf	I2C_Master_Init@c,w
  2950  0488  00C5               	movwf	??_I2C_Master_Init
  2951  0489  0842               	movf	I2C_Master_Init@c+1,w
  2952  048A  00C6               	movwf	??_I2C_Master_Init+1
  2953  048B  0843               	movf	I2C_Master_Init@c+2,w
  2954  048C  00C7               	movwf	??_I2C_Master_Init+2
  2955  048D  0844               	movf	I2C_Master_Init@c+3,w
  2956  048E  00C8               	movwf	??_I2C_Master_Init+3
  2957  048F  3002               	movlw	2
  2958  0490                     u865:
  2959  0490  1003               	clrc
  2960  0491  0DC5               	rlf	??_I2C_Master_Init,f
  2961  0492  0DC6               	rlf	??_I2C_Master_Init+1,f
  2962  0493  0DC7               	rlf	??_I2C_Master_Init+2,f
  2963  0494  0DC8               	rlf	??_I2C_Master_Init+3,f
  2964  0495                     u860:
  2965  0495  3EFF               	addlw	-1
  2966  0496  1D03               	skipz
  2967  0497  2C90               	goto	u865
  2968  0498  0848               	movf	??_I2C_Master_Init+3,w
  2969  0499  00F5               	movwf	___lldiv@divisor+3
  2970  049A  0847               	movf	??_I2C_Master_Init+2,w
  2971  049B  00F4               	movwf	___lldiv@divisor+2
  2972  049C  0846               	movf	??_I2C_Master_Init+1,w
  2973  049D  00F3               	movwf	___lldiv@divisor+1
  2974  049E  0845               	movf	??_I2C_Master_Init,w
  2975  049F  00F2               	movwf	___lldiv@divisor
  2976  04A0  3000               	movlw	0
  2977  04A1  00F9               	movwf	___lldiv@dividend+3
  2978  04A2  303D               	movlw	61
  2979  04A3  00F8               	movwf	___lldiv@dividend+2
  2980  04A4  3009               	movlw	9
  2981  04A5  00F7               	movwf	___lldiv@dividend+1
  2982  04A6  3000               	movlw	0
  2983  04A7  00F6               	movwf	___lldiv@dividend
  2984  04A8  120A  118A  22F7  120A  118A  	fcall	___lldiv
  2985  04AD  0872               	movf	?___lldiv,w
  2986  04AE  3EFF               	addlw	255
  2987  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2988  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2989  04B1  0093               	movwf	19	;volatile
  2990  04B2                     l1430:
  2991                           
  2992                           ;I2C.c: 21:     SSPSTAT = 0;
  2993  04B2  0194               	clrf	20	;volatile
  2994  04B3                     l1432:
  2995                           
  2996                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2997  04B3  1587               	bsf	7,3	;volatile
  2998  04B4                     l1434:
  2999                           
  3000                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3001  04B4  1607               	bsf	7,4	;volatile
  3002  04B5                     l124:
  3003  04B5  0008               	return
  3004  04B6                     __end_of_I2C_Master_Init:
  3005                           
  3006                           	psect	text17
  3007  02F7                     __ptext17:	
  3008 ;; *************** function ___lldiv *****************
  3009 ;; Defined at:
  3010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  divisor         4    2[COMMON] unsigned long 
  3013 ;;  dividend        4    6[COMMON] unsigned long 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  quotient        4    0[BANK0 ] unsigned long 
  3016 ;;  counter         1    4[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  4    2[COMMON] unsigned long 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         8       0       0       0       0
  3027 ;;      Locals:         0       5       0       0       0
  3028 ;;      Temps:          1       0       0       0       0
  3029 ;;      Totals:         9       5       0       0       0
  3030 ;;Total ram usage:       14 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_I2C_Master_Init
  3037 ;;		_UARTInit
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function ___lldiv
  3043  02F7                     ___lldiv:
  3044  02F7                     l1246:	
  3045                           ;incstack = 0
  3046                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3047                           
  3048  02F7  3000               	movlw	0
  3049  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3050  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3051  02FA  00BF               	movwf	___lldiv@quotient+3
  3052  02FB  3000               	movlw	0
  3053  02FC  00BE               	movwf	___lldiv@quotient+2
  3054  02FD  3000               	movlw	0
  3055  02FE  00BD               	movwf	___lldiv@quotient+1
  3056  02FF  3000               	movlw	0
  3057  0300  00BC               	movwf	___lldiv@quotient
  3058  0301  0875               	movf	___lldiv@divisor+3,w
  3059  0302  0474               	iorwf	___lldiv@divisor+2,w
  3060  0303  0473               	iorwf	___lldiv@divisor+1,w
  3061  0304  0472               	iorwf	___lldiv@divisor,w
  3062  0305  1903               	skipnz
  3063  0306  2B08               	goto	u521
  3064  0307  2B09               	goto	u520
  3065  0308                     u521:
  3066  0308  2B56               	goto	l1266
  3067  0309                     u520:
  3068  0309                     l1248:
  3069  0309  01C0               	clrf	___lldiv@counter
  3070  030A  0AC0               	incf	___lldiv@counter,f
  3071  030B  2B19               	goto	l1252
  3072  030C                     l1250:
  3073  030C  3001               	movlw	1
  3074  030D  00FA               	movwf	??___lldiv
  3075  030E                     u535:
  3076  030E  1003               	clrc
  3077  030F  0DF2               	rlf	___lldiv@divisor,f
  3078  0310  0DF3               	rlf	___lldiv@divisor+1,f
  3079  0311  0DF4               	rlf	___lldiv@divisor+2,f
  3080  0312  0DF5               	rlf	___lldiv@divisor+3,f
  3081  0313  0BFA               	decfsz	??___lldiv,f
  3082  0314  2B0E               	goto	u535
  3083  0315  3001               	movlw	1
  3084  0316  00FA               	movwf	??___lldiv
  3085  0317  087A               	movf	??___lldiv,w
  3086  0318  07C0               	addwf	___lldiv@counter,f
  3087  0319                     l1252:
  3088  0319  1FF5               	btfss	___lldiv@divisor+3,7
  3089  031A  2B1C               	goto	u541
  3090  031B  2B1D               	goto	u540
  3091  031C                     u541:
  3092  031C  2B0C               	goto	l1250
  3093  031D                     u540:
  3094  031D                     l1254:
  3095  031D  3001               	movlw	1
  3096  031E  00FA               	movwf	??___lldiv
  3097  031F                     u555:
  3098  031F  1003               	clrc
  3099  0320  0DBC               	rlf	___lldiv@quotient,f
  3100  0321  0DBD               	rlf	___lldiv@quotient+1,f
  3101  0322  0DBE               	rlf	___lldiv@quotient+2,f
  3102  0323  0DBF               	rlf	___lldiv@quotient+3,f
  3103  0324  0BFA               	decfsz	??___lldiv,f
  3104  0325  2B1F               	goto	u555
  3105  0326                     l1256:
  3106  0326  0875               	movf	___lldiv@divisor+3,w
  3107  0327  0279               	subwf	___lldiv@dividend+3,w
  3108  0328  1D03               	skipz
  3109  0329  2B34               	goto	u565
  3110  032A  0874               	movf	___lldiv@divisor+2,w
  3111  032B  0278               	subwf	___lldiv@dividend+2,w
  3112  032C  1D03               	skipz
  3113  032D  2B34               	goto	u565
  3114  032E  0873               	movf	___lldiv@divisor+1,w
  3115  032F  0277               	subwf	___lldiv@dividend+1,w
  3116  0330  1D03               	skipz
  3117  0331  2B34               	goto	u565
  3118  0332  0872               	movf	___lldiv@divisor,w
  3119  0333  0276               	subwf	___lldiv@dividend,w
  3120  0334                     u565:
  3121  0334  1C03               	skipc
  3122  0335  2B37               	goto	u561
  3123  0336  2B38               	goto	u560
  3124  0337                     u561:
  3125  0337  2B47               	goto	l1262
  3126  0338                     u560:
  3127  0338                     l1258:
  3128  0338  0872               	movf	___lldiv@divisor,w
  3129  0339  02F6               	subwf	___lldiv@dividend,f
  3130  033A  0873               	movf	___lldiv@divisor+1,w
  3131  033B  1C03               	skipc
  3132  033C  0F73               	incfsz	___lldiv@divisor+1,w
  3133  033D  02F7               	subwf	___lldiv@dividend+1,f
  3134  033E  0874               	movf	___lldiv@divisor+2,w
  3135  033F  1C03               	skipc
  3136  0340  0F74               	incfsz	___lldiv@divisor+2,w
  3137  0341  02F8               	subwf	___lldiv@dividend+2,f
  3138  0342  0875               	movf	___lldiv@divisor+3,w
  3139  0343  1C03               	skipc
  3140  0344  0F75               	incfsz	___lldiv@divisor+3,w
  3141  0345  02F9               	subwf	___lldiv@dividend+3,f
  3142  0346                     l1260:
  3143  0346  143C               	bsf	___lldiv@quotient,0
  3144  0347                     l1262:
  3145  0347  3001               	movlw	1
  3146  0348                     u575:
  3147  0348  1003               	clrc
  3148  0349  0CF5               	rrf	___lldiv@divisor+3,f
  3149  034A  0CF4               	rrf	___lldiv@divisor+2,f
  3150  034B  0CF3               	rrf	___lldiv@divisor+1,f
  3151  034C  0CF2               	rrf	___lldiv@divisor,f
  3152  034D  3EFF               	addlw	-1
  3153  034E  1D03               	skipz
  3154  034F  2B48               	goto	u575
  3155  0350                     l1264:
  3156  0350  3001               	movlw	1
  3157  0351  02C0               	subwf	___lldiv@counter,f
  3158  0352  1D03               	btfss	3,2
  3159  0353  2B55               	goto	u581
  3160  0354  2B56               	goto	u580
  3161  0355                     u581:
  3162  0355  2B1D               	goto	l1254
  3163  0356                     u580:
  3164  0356                     l1266:
  3165  0356  083F               	movf	___lldiv@quotient+3,w
  3166  0357  00F5               	movwf	?___lldiv+3
  3167  0358  083E               	movf	___lldiv@quotient+2,w
  3168  0359  00F4               	movwf	?___lldiv+2
  3169  035A  083D               	movf	___lldiv@quotient+1,w
  3170  035B  00F3               	movwf	?___lldiv+1
  3171  035C  083C               	movf	___lldiv@quotient,w
  3172  035D  00F2               	movwf	?___lldiv
  3173  035E                     l350:
  3174  035E  0008               	return
  3175  035F                     __end_of___lldiv:
  3176                           
  3177                           	psect	text18
  3178  05BE                     __ptext18:	
  3179 ;; *************** function _ISR *****************
  3180 ;; Defined at:
  3181 ;;		line 47 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		None
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0
  3198 ;;      Totals:         2       0       0       0       0
  3199 ;;Total ram usage:        2 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		Interrupt level 1
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _ISR
  3210  05BE                     _ISR:
  3211  05BE                     i1l67:
  3212  05BE  0871               	movf	??_ISR+1,w
  3213  05BF  008A               	movwf	10
  3214  05C0  0E70               	swapf	??_ISR,w
  3215  05C1  0083               	movwf	3
  3216  05C2  0EFE               	swapf	btemp,f
  3217  05C3  0E7E               	swapf	btemp,w
  3218  05C4  0009               	retfie
  3219  05C5                     __end_of_ISR:
  3220  007E                     btemp	set	126	;btemp
  3221  007E                     wtemp0	set	126
  3222                           
  3223                           	psect	intentry
  3224  0004                     __pintentry:	
  3225                           ;incstack = 0
  3226                           ; Regs used in _ISR: []
  3227                           
  3228  0004                     interrupt_function:
  3229  007E                     saved_w	set	btemp
  3230  0004  00FE               	movwf	btemp
  3231  0005  0E03               	swapf	3,w
  3232  0006  00F0               	movwf	??_ISR
  3233  0007  080A               	movf	10,w
  3234  0008  00F1               	movwf	??_ISR+1
  3235  0009  120A  118A  2DBE   	ljmp	_ISR
  3236                           
  3237                           	psect	config
  3238                           
  3239                           ;Config register CONFIG1 @ 0x2007
  3240                           ;	Oscillator Selection bits
  3241                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3242                           ;	Watchdog Timer Enable bit
  3243                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3244                           ;	Power-up Timer Enable bit
  3245                           ;	PWRTE = OFF, PWRT disabled
  3246                           ;	RE3/MCLR pin function select bit
  3247                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3248                           ;	Code Protection bit
  3249                           ;	CP = OFF, Program memory code protection is disabled
  3250                           ;	Data Code Protection bit
  3251                           ;	CPD = OFF, Data memory code protection is disabled
  3252                           ;	Brown Out Reset Selection bits
  3253                           ;	BOREN = OFF, BOR disabled
  3254                           ;	Internal External Switchover bit
  3255                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3256                           ;	Fail-Safe Clock Monitor Enabled bit
  3257                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3258                           ;	Low Voltage Programming Enable bit
  3259                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3260                           ;	In-Circuit Debugger Mode bit
  3261                           ;	DEBUG = 0x1, unprogrammed default
  3262  2007                     	org	8199
  3263  2007  20D4               	dw	8404
  3264                           
  3265                           ;Config register CONFIG2 @ 0x2008
  3266                           ;	Brown-out Reset Selection bit
  3267                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3268                           ;	Flash Program Memory Self Write Enable bits
  3269                           ;	WRT = OFF, Write protection off
  3270  2008                     	org	8200
  3271  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 8192
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), ROM(CODE[8192]), 
		 -> STR_1(CODE[4]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 


Critical Paths under _main in COMMON

    _intToString->___awdiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Setup->_UARTInit
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5543
                                             14 BANK0      4     4      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                              _Setup
                     _UARTSendString
                        _intToString
 ---------------------------------------------------------------------------------
 (1) _intToString                                          9     9      0    1449
                                              0 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       3     3      0     607
                                              3 COMMON     3     3      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     836
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     836
                                              5 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            3     3      0     956
                                              4 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              2 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read
     _I2C_ACK
     _I2C_NACK
   _I2C_Start
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Setup
     _UARTInit
       ___lldiv
   _UARTSendString
     _UARTSendChar
   _intToString
     ___awdiv
     ___awmod
     ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 01 16:36:06 2021

        UARTInit@baud_rate 0041                          _T 002E                          pc 0002  
           ___bmul@product 0074         __size_of_I2C_Start 0016                         _BF 04A0  
                       l81 0424                         l78 054C                         _Ax 003A  
                       _Ay 0038                         _Az 0036                         _Gx 0034  
                       _Gy 0032                         _Gz 0030               ___awdiv@sign 0078  
                       fsr 0004                        l201 0590                        l130 0584  
                      l124 04B5                        l142 059A                        l127 0578  
                      l207 052A                        l161 04FD                        l153 0562  
                      l170 05AC                        l139 05B5                        l163 0503  
                      l164 0505                        l156 04E3                        l340 0577  
                      l173 059F                        l350 035E                        l167 05A8  
                      l176 05A3                        l195 02F6                        l198 0586  
                      l480 047D                        l467 03C5                        _GIE 005F  
                      u500 057E                        u501 057D                        u510 0584  
                      u511 0583                        u520 0309                        u600 029D  
                      u521 0308                        u610 02CA                        u540 031D  
                      u620 05AC                        _ISR 05BE                        u541 031C  
                      u621 05AB                        u605 0298                        u630 05A3  
                      u710 0392                        u535 030E                        u631 05A2  
                      u615 02C5                        u711 0391                        u560 0338  
                      u640 058C                        u561 0337                        u641 058B  
                      u705 0384                        u730 03A3                        u810 0452  
                      u650 0569                        u555 031F                        u731 03A2  
                      u811 0451                        u651 0568                        u580 0356  
                      u900 052A                        u820 045C                        u660 0576  
                      _SEN 0488                        u581 0355                        u565 0334  
                      u901 0529                        u725 0393                        u821 045B  
                      u805 0444                        u661 0575                        u590 028F  
                      u750 03B7                        u670 0364                        u910 00D5  
                      u575 0348                        u591 028E                        u751 03B6  
                      u735 039F                        u671 0363                        u911 00D1  
                      u760 03BC                        u680 036F                        u840 046F  
                      u761 03BB                        u745 03AB                        u681 036E  
                      u841 046E                        u825 0458                        u690 0380  
                      u850 0474                        u770 042A                        u691 037F  
                      u851 0473                        u835 0463                        u771 0429  
                      u860 0495                        u780 0435                        u924 00D8  
                      u781 0434                        u870 04E7                        u790 0440  
                      u871 04E6                        u791 043F                        u880 04F2  
                      u865 0490                        u881 04F1                        u890 0503  
                      u891 0502                        u947 0027                        u957 00DE  
          __end_of_I2C_ACK 05AD                        fsr0 0004                        indf 0000  
             ___awmod@sign 0078                       ?_ISR 0070                       l1300 02F2  
                     l1302 02F5                       l1310 058C                       l1304 05A4  
                     l1400 046F                       l1320 056F                       l1312 0564  
                     l1250 030C                       l1242 0578                       l1306 059B  
                     l1410 053C                       l1330 0364                       l1402 0474  
                     l1322 0576                       l1314 0565                       l1260 0346  
                     l1252 0319                       l1244 057E                       l1420 054B  
                     l1412 053F                       l1308 0586                       l1340 0378  
                     l1332 0369                       l1404 0479                       l1316 0569  
                     l1500 0066                       l1262 0347                       l1254 031D  
                     l1246 02F7                       l1430 04B2                       l1270 0591  
                     l1414 0542                       l1350 038E                       l1342 037A  
                     l1334 036B                       l1326 035F                       l1318 056D  
                     l1510 008B                       l1502 006F                       l1264 0350  
                     l1256 0326                       l1248 0309                       l1432 04B3  
                     l1424 047E                       l1440 05AD                       l1272 0596  
                     l1280 02BC                       l1416 0545                       l1408 052B  
                     l1360 03B1                       l1352 0392                       l1344 0380  
                     l1336 036F                       l1328 0360                       l1520 00AC  
                     l1512 0090                       l1504 0074                       l1258 0338  
                     l1266 0356                       l1434 04B4                       l1426 0482  
                     l1442 05B2                       l1450 04F2                       l1290 02EB  
                     l1282 02E7                       l1274 0288                       l1418 0548  
                     l1354 03A3                       l1346 0383                       l1362 03B7  
                     l1338 0374                       l1370 0425                       l1530 00D8  
                     l1522 00B2                       l1514 0096                       l1506 007A  
                     l1428 0485                       l1452 04F8                       l1444 04E0  
                     l1436 054E                       l1292 02EE                       l1284 02E8  
                     l1276 028F                       l1364 03BC                       l1356 03A9  
                     l1348 038A                       l1380 0435                       l1372 0426  
                     l1460 03DF                       l1540 00FD                       l1532 00E3  
                     l1524 00BB                       l1516 009F                       l1508 0083  
                     l1454 0504                       l1446 04E7                       l1438 0553  
                     l1294 02EF                       l1286 02E9                       l1278 02BA  
                     l1366 03C1                       l1358 03AA                       l1390 044E  
                     l1382 043A                       l1374 042A                       l1470 0423  
                     l1462 03E4                       l1550 018E                       l1542 011A  
                     l1534 00E9                       l1526 00C4                       l1518 00A7  
                     l1448 04ED                       l1296 02F0                       l1288 02EA  
                     l1480 051D                       l1392 0452                       l1384 0440  
                     l1376 042F                       l1464 03F4                       l1560 01E5  
                     l1552 01AB                       l1544 0137                       l1536 00F2  
                     l1528 00C9                       l1298 02F1                       l1474 0507  
                     l1394 045C                       l1386 0443                       l1378 0431  
                     l1466 040B                       l1458 03C9                       l1570 021C  
                     l1562 01F0                       l1554 01C8                       l1546 0154  
                     l1538 00F7                       l1490 0040                       l1482 001C  
                     l1476 050A                       l1396 0462                       l1388 044A  
                     l1468 0422                       l1580 023E                       l1572 0222  
                     l1564 01FB                       l1556 01CD                       l1548 0171  
                     l1492 0049                       l1484 0021                       l1478 0517  
                     l1398 0469                       l1590 0262                       l1582 0246  
                     l1574 022A                       l1566 0206                       l1558 01DA  
                     l1494 0052                       l1486 002B                       l1592 0268  
                     l1584 024C                       l1576 0230                       l1568 0211  
                     l1496 0057                       l1488 003A                       l1594 0270  
                     l1586 0254                       l1578 0238                       l1498 005D  
                     l1596 0276                       l1588 025A                       l1598 027E  
                     STR_1 04D9                       STR_2 04C1                       STR_3 04CB  
                     STR_4 04BC                       STR_5 04C6                       STR_6 04D0  
                     STR_7 04D5                       STR_8 04DD                       _PEIE 005E  
                     _RCEN 048B                       i1l67 05BE           __end_of_I2C_NACK 05A4  
                     _main 001C           __end_of_I2C_Read 0506                       btemp 007E  
                     start 000C          ___bmul@multiplier 0075                      ??_ISR 0070  
         ?_I2C_Master_Init 0041               ?_intToString 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D            __end_of___awdiv 03C6            __end_of___awmod 047E  
                    _ANSEL 0188            __end_of___lldiv 035F            ___awdiv@divisor 0072  
          ___awdiv@counter 0077                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTC 0007                      _TRISA 0085  
                    _TRISC 0087                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019           __end_of_UARTInit 02F7                      _Setup 052B  
        __end_of_I2C_Start 0563                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 0288  
                ??_I2C_ACK 0072                     ??_main 004A          ?_I2C_Master_Write 0072  
                   ?_Setup 0070         ??_I2C_Master_Write 0074           ___awdiv@dividend 0074  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   _Tenvio 0020                     ___bmul 0563           I2C_Read@ACK_NACK 0073  
                ??___awdiv 0076                  ??___awmod 0076                  ??___lldiv 007A  
  __size_of_UARTSendString 0025           ___awdiv@quotient 0079            ___awmod@divisor 0072  
          ___awmod@counter 0077                  ?_I2C_NACK 0070                  ?_I2C_Read 0070  
                   saved_w 007E    __end_of__initialization 0018        ___bmul@multiplicand 0072  
         intToString@value 0044           intToString@valor 003F             __pcstackCOMMON 0070  
            __end_of_Setup 054D                  ?_UARTInit 0041                 ??_I2C_NACK 0072  
     __size_of_intToString 005F                 ??_I2C_Read 0072                    ??_Setup 007B  
               __pbssBANK0 0020               I2C_Read@Data 0074                 __pmaintext 001C  
                  ?___bmul 0072                 ??_UARTInit 0046                 __pintentry 0004  
                  _I2C_ACK 05A4                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 04B6              ?_UARTSendChar 0070               I2C_Start@add 0076  
                  _Axenvio 002C                    _Ayenvio 002A                    _Azenvio 0028  
                _I2C_Start 054D                    _Gxenvio 0026                    _Gyenvio 0024  
                  _Gzenvio 0022            __size_of___bmul 0015                    ___awdiv 035F  
                  ___awmod 0425                    ___lldiv 02F7             _UARTSendString 0506  
                  __ptext1 03C6                    __ptext2 0563                    __ptext3 0425  
                  __ptext4 035F                    __ptext5 0506                    __ptext6 0585  
                  __ptext7 052B                    __ptext8 0288                    __ptext9 054D  
             __size_of_ISR 0007           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    clrloop0 05B7  
     end_of_initialization 0018             ??_UARTSendChar 0072                 ?_I2C_Start 0070  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0040  
                _RCSTAbits 0018     __end_of_UARTSendString 052B           I2C_Master_Init@c 0041  
                _PORTAbits 0005          __size_of_I2C_NACK 0009                  _TRISCbits 0087  
        __size_of_I2C_Read 0027                  _TXSTAbits 0098          intToString@entero 0043  
          ?_UARTSendString 0070             __end_of___bmul 0578          __size_of_UARTInit 006F  
      start_initialization 000F                __end_of_ISR 05C5          ??_I2C_Master_Init 0045  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                ??_I2C_Start 0074  
                 ??___bmul 0073                   ?_I2C_ACK 0070              ??_intToString 003C  
     __end_of_UARTSendChar 0591                  ___latbits 0002              __pcstackBANK0 003C  
         _I2C_Master_Write 0591              UARTSendChar@c 0072                   ?___awdiv 0072  
                 ?___awmod 0072                   ?___lldiv 0072                  __pstrings 04B6  
                 _I2C_NACK 059B                   _I2C_Read 04DF        __end_of_intToString 0425  
           __size_of_Setup 0022          interrupt_function 0004                  clear_ram0 05B6  
          UARTSendString@i 0073                   _PIR1bits 000C                   _UARTInit 0288  
         __size_of_I2C_ACK 0009                __stringbase 04BB           ??_UARTSendString 0073  
    __size_of_UARTSendChar 000C               UARTInit@BRGH 0045           __size_of___awdiv 0067  
         __size_of___awmod 0059           __size_of___lldiv 0068                _intToString 03C6  
       __end_of__stringtab 04BC            _I2C_Master_Init 047E            _I2C_Master_Wait 0578  
          _I2C_Master_Stop 05AD                   __ptext10 0591                   __ptext11 04DF  
                 __ptext12 059B                   __ptext13 05A4                   __ptext14 05AD  
                 __ptext15 0578                   __ptext16 047E                   __ptext17 02F7  
                 __ptext18 05BE               _UARTSendChar 0585              __size_of_main 026C  
 __end_of_I2C_Master_Write 059B          UARTSendString@str 0075                   intlevel1 0000  
         ___lldiv@dividend 0076                  stringcode 04B6    __end_of_I2C_Master_Init 04B6  
  __end_of_I2C_Master_Wait 0585    __end_of_I2C_Master_Stop 05B6           ___lldiv@quotient 003C  
        I2C_Master_Write@d 0072                   stringdir 04B6                   stringtab 04B6  
              _SSPCON2bits 0091  
