

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 09:14:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  0005                     _PORTA	set	5
   369  0006                     _PORTB	set	6
   370  0005                     _PORTAbits	set	5
   371  001F                     _ADCON0bits	set	31
   372  001E                     _ADRESH	set	30
   373  0063                     _SSPIF	set	99
   374  0066                     _ADIF	set	102
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  008C                     _PIE1bits	set	140
   379  0087                     _TRISCbits	set	135
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  0085                     _TRISAbits	set	133
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0188                     _ANSELbits	set	392
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   397  0010                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0010                     __end_of__initialization:
   401  0010  0183               	clrf	3
   402  0011  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _varADC:
   407  0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_spiWrite:
   412  0070                     ??_spiWrite:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_Setup:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_configADC:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_canalADC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_ISR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_main:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     spiWrite@dat:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	1
   436  0071                     ??_ISR:
   437                           
   438                           ; 1 bytes @ 0x1
   439  0071                     	ds	3
   440  0074                     ??_Setup:
   441  0074                     ??_configADC:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ??_canalADC:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ?_spiInit:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     canalADC@canal:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     spiInit@sDataSample:	
   454                           ; 1 bytes @ 0x4
   455                           
   456                           
   457                           ; 1 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     spiInit@sClockIdle:
   460                           
   461                           ; 1 bytes @ 0x5
   462  0075                     	ds	1
   463  0076                     spiInit@sTransmitEdge:
   464                           
   465                           ; 1 bytes @ 0x6
   466  0076                     	ds	1
   467  0077                     ??_spiInit:
   468  0077                     spiInit@sType:	
   469                           ; 1 bytes @ 0x7
   470                           
   471                           
   472                           ; 1 bytes @ 0x7
   473  0077                     	ds	1
   474  0078                     ??_main:
   475                           
   476                           	psect	maintext
   477  00E8                     __pmaintext:	
   478                           ; 1 bytes @ 0x8
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 68 in file "mainEsclavo1.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : B00/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		_Setup
   506 ;;		_canalADC
   507 ;;		_configADC
   508 ;;		_spiInit
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  00E8                     _main:
   517  00E8                     l866:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;mainEsclavo1.c: 69:     PIE1bits.SSPIE = 1;
   523  00E8  120A  118A  2108  120A  118A  	fcall	_Setup
   524  00ED                     l868:
   525                           
   526                           ;mainEsclavo1.c: 70:     TRISAbits.TRISA5 = 1;
   527  00ED  120A  118A  213A  120A  118A  	fcall	_configADC
   528  00F2                     l870:
   529                           
   530                           ;mainEsclavo1.c: 71: 
   531  00F2  3000               	movlw	0
   532  00F3  120A  118A  2014  120A  118A  	fcall	_canalADC
   533  00F8                     l872:
   534                           
   535                           ;mainEsclavo1.c: 72: 
   536  00F8  01F4               	clrf	spiInit@sDataSample
   537  00F9  01F5               	clrf	spiInit@sClockIdle
   538  00FA  01F6               	clrf	spiInit@sTransmitEdge
   539  00FB  3024               	movlw	36
   540  00FC  120A  118A  2124  120A  118A  	fcall	_spiInit
   541  0101                     l874:
   542  0101  1283               	bcf	3,5	;RP0=0, select bank0
   543  0102  1303               	bcf	3,6	;RP1=0, select bank0
   544  0103  1685               	bsf	5,5	;volatile
   545  0104  2901               	goto	l874
   546  0105  120A  118A  280C   	ljmp	start
   547  0108                     __end_of_main:
   548                           
   549                           	psect	text1
   550  0124                     __ptext1:	
   551 ;; *************** function _spiInit *****************
   552 ;; Defined at:
   553 ;;		line 12 in file "SPI.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  sType           1    wreg     enum E1264
   556 ;;  sDataSample     1    4[COMMON] enum E1272
   557 ;;  sClockIdle      1    5[COMMON] enum E1276
   558 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  sType           1    7[COMMON] enum E1264
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         3       0       0       0       0
   571 ;;      Locals:         1       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0
   573 ;;      Totals:         4       0       0       0       0
   574 ;;Total ram usage:        4 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    2
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           
   585                           ;psect for function _spiInit
   586  0124                     _spiInit:
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   590                           ;spiInit@sType stored from wreg
   591  0124  00F7               	movwf	spiInit@sType
   592  0125                     l856:
   593                           
   594                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   595  0125  1683               	bsf	3,5	;RP0=1, select bank1
   596  0126  1303               	bcf	3,6	;RP1=0, select bank1
   597  0127  1287               	bcf	7,5	;volatile
   598                           
   599                           ;SPI.c: 15:     if(sType & 0b00000100)
   600  0128  1D77               	btfss	spiInit@sType,2
   601  0129  292B               	goto	u191
   602  012A  292C               	goto	u190
   603  012B                     u191:
   604  012B  2930               	goto	l862
   605  012C                     u190:
   606  012C                     l858:
   607                           
   608                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   609  012C  0876               	movf	spiInit@sTransmitEdge,w
   610  012D  0094               	movwf	20	;volatile
   611  012E                     l860:
   612                           
   613                           ;SPI.c: 18:         TRISC3 = 1;
   614  012E  1587               	bsf	7,3	;volatile
   615                           
   616                           ;SPI.c: 19:     }
   617  012F  2934               	goto	l112
   618  0130                     l862:
   619                           
   620                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   621  0130  0874               	movf	spiInit@sDataSample,w
   622  0131  0476               	iorwf	spiInit@sTransmitEdge,w
   623  0132  0094               	movwf	20	;volatile
   624  0133                     l864:
   625                           
   626                           ;SPI.c: 23:         TRISC3 = 0;
   627  0133  1187               	bcf	7,3	;volatile
   628  0134                     l112:	
   629                           ;SPI.c: 24:     }
   630                           
   631                           
   632                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   633  0134  0877               	movf	spiInit@sType,w
   634  0135  0475               	iorwf	spiInit@sClockIdle,w
   635  0136  1283               	bcf	3,5	;RP0=0, select bank0
   636  0137  1303               	bcf	3,6	;RP1=0, select bank0
   637  0138  0094               	movwf	20	;volatile
   638  0139                     l113:
   639  0139  0008               	return
   640  013A                     __end_of_spiInit:
   641                           
   642                           	psect	text2
   643  013A                     __ptext2:	
   644 ;; *************** function _configADC *****************
   645 ;; Defined at:
   646 ;;		line 140 in file "ADC.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		None
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    2
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _configADC
   676  013A                     _configADC:
   677  013A                     l750:	
   678                           ;incstack = 0
   679                           ; Regs used in _configADC: []
   680                           
   681                           
   682                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   683  013A  1283               	bcf	3,5	;RP0=0, select bank0
   684  013B  1303               	bcf	3,6	;RP1=0, select bank0
   685  013C  171F               	bsf	31,6	;volatile
   686                           
   687                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   688  013D  139F               	bcf	31,7	;volatile
   689                           
   690                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   691  013E  1683               	bsf	3,5	;RP0=1, select bank1
   692  013F  1303               	bcf	3,6	;RP1=0, select bank1
   693  0140  121F               	bcf	31,4	;volatile
   694                           
   695                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   696  0141  129F               	bcf	31,5	;volatile
   697                           
   698                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   699  0142  139F               	bcf	31,7	;volatile
   700                           
   701                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   702  0143  1283               	bcf	3,5	;RP0=0, select bank0
   703  0144  1303               	bcf	3,6	;RP1=0, select bank0
   704  0145  130C               	bcf	12,6	;volatile
   705                           
   706                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   707  0146  1683               	bsf	3,5	;RP0=1, select bank1
   708  0147  1303               	bcf	3,6	;RP1=0, select bank1
   709  0148  170C               	bsf	12,6	;volatile
   710                           
   711                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   712  0149  178B               	bsf	11,7	;volatile
   713                           
   714                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   715  014A  170B               	bsf	11,6	;volatile
   716                           
   717                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   718  014B  1283               	bcf	3,5	;RP0=0, select bank0
   719  014C  1303               	bcf	3,6	;RP1=0, select bank0
   720  014D  141F               	bsf	31,0	;volatile
   721  014E                     l96:
   722  014E  0008               	return
   723  014F                     __end_of_configADC:
   724                           
   725                           	psect	text3
   726  0014                     __ptext3:	
   727 ;; *************** function _canalADC *****************
   728 ;; Defined at:
   729 ;;		line 13 in file "ADC.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  canal           1    wreg     unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  canal           1    4[COMMON] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         1       0       0       0       0
   747 ;;Total ram usage:        1 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _canalADC
   759  0014                     _canalADC:
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   763                           ;canalADC@canal stored from wreg
   764  0014  00F4               	movwf	canalADC@canal
   765  0015                     l752:
   766                           
   767                           ;ADC.c: 15:     if (canal == 0) {
   768  0015  0874               	movf	canalADC@canal,w
   769  0016  1D03               	btfss	3,2
   770  0017  2819               	goto	u11
   771  0018  281A               	goto	u10
   772  0019                     u11:
   773  0019  2820               	goto	l756
   774  001A                     u10:
   775  001A                     l754:
   776                           
   777                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   778  001A  1283               	bcf	3,5	;RP0=0, select bank0
   779  001B  1303               	bcf	3,6	;RP1=0, select bank0
   780  001C  129F               	bcf	31,5	;volatile
   781                           
   782                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   783  001D  121F               	bcf	31,4	;volatile
   784                           
   785                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   786  001E  119F               	bcf	31,3	;volatile
   787                           
   788                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   789  001F  111F               	bcf	31,2	;volatile
   790  0020                     l756:
   791                           
   792                           ;ADC.c: 23:     if (canal == 1) {
   793  0020  0374               	decf	canalADC@canal,w
   794  0021  1D03               	btfss	3,2
   795  0022  2824               	goto	u21
   796  0023  2825               	goto	u20
   797  0024                     u21:
   798  0024  282B               	goto	l760
   799  0025                     u20:
   800  0025                     l758:
   801                           
   802                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   803  0025  1283               	bcf	3,5	;RP0=0, select bank0
   804  0026  1303               	bcf	3,6	;RP1=0, select bank0
   805  0027  129F               	bcf	31,5	;volatile
   806                           
   807                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   808  0028  121F               	bcf	31,4	;volatile
   809                           
   810                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   811  0029  119F               	bcf	31,3	;volatile
   812                           
   813                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   814  002A  151F               	bsf	31,2	;volatile
   815  002B                     l760:
   816                           
   817                           ;ADC.c: 32:     if (canal == 2) {
   818  002B  3002               	movlw	2
   819  002C  0674               	xorwf	canalADC@canal,w
   820  002D  1D03               	btfss	3,2
   821  002E  2830               	goto	u31
   822  002F  2831               	goto	u30
   823  0030                     u31:
   824  0030  2837               	goto	l764
   825  0031                     u30:
   826  0031                     l762:
   827                           
   828                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   829  0031  1283               	bcf	3,5	;RP0=0, select bank0
   830  0032  1303               	bcf	3,6	;RP1=0, select bank0
   831  0033  129F               	bcf	31,5	;volatile
   832                           
   833                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   834  0034  121F               	bcf	31,4	;volatile
   835                           
   836                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   837  0035  159F               	bsf	31,3	;volatile
   838                           
   839                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   840  0036  111F               	bcf	31,2	;volatile
   841  0037                     l764:
   842                           
   843                           ;ADC.c: 41:     if (canal == 3) {
   844  0037  3003               	movlw	3
   845  0038  0674               	xorwf	canalADC@canal,w
   846  0039  1D03               	btfss	3,2
   847  003A  283C               	goto	u41
   848  003B  283D               	goto	u40
   849  003C                     u41:
   850  003C  2843               	goto	l768
   851  003D                     u40:
   852  003D                     l766:
   853                           
   854                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   855  003D  1283               	bcf	3,5	;RP0=0, select bank0
   856  003E  1303               	bcf	3,6	;RP1=0, select bank0
   857  003F  129F               	bcf	31,5	;volatile
   858                           
   859                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   860  0040  121F               	bcf	31,4	;volatile
   861                           
   862                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   863  0041  159F               	bsf	31,3	;volatile
   864                           
   865                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   866  0042  151F               	bsf	31,2	;volatile
   867  0043                     l768:
   868                           
   869                           ;ADC.c: 50:     if (canal == 4) {
   870  0043  3004               	movlw	4
   871  0044  0674               	xorwf	canalADC@canal,w
   872  0045  1D03               	btfss	3,2
   873  0046  2848               	goto	u51
   874  0047  2849               	goto	u50
   875  0048                     u51:
   876  0048  284F               	goto	l772
   877  0049                     u50:
   878  0049                     l770:
   879                           
   880                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   881  0049  1283               	bcf	3,5	;RP0=0, select bank0
   882  004A  1303               	bcf	3,6	;RP1=0, select bank0
   883  004B  129F               	bcf	31,5	;volatile
   884                           
   885                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   886  004C  161F               	bsf	31,4	;volatile
   887                           
   888                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   889  004D  119F               	bcf	31,3	;volatile
   890                           
   891                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   892  004E  111F               	bcf	31,2	;volatile
   893  004F                     l772:
   894                           
   895                           ;ADC.c: 59:     if (canal == 5) {
   896  004F  3005               	movlw	5
   897  0050  0674               	xorwf	canalADC@canal,w
   898  0051  1D03               	btfss	3,2
   899  0052  2854               	goto	u61
   900  0053  2855               	goto	u60
   901  0054                     u61:
   902  0054  285B               	goto	l776
   903  0055                     u60:
   904  0055                     l774:
   905                           
   906                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   907  0055  1283               	bcf	3,5	;RP0=0, select bank0
   908  0056  1303               	bcf	3,6	;RP1=0, select bank0
   909  0057  129F               	bcf	31,5	;volatile
   910                           
   911                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   912  0058  161F               	bsf	31,4	;volatile
   913                           
   914                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   915  0059  119F               	bcf	31,3	;volatile
   916                           
   917                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   918  005A  151F               	bsf	31,2	;volatile
   919  005B                     l776:
   920                           
   921                           ;ADC.c: 68:     if (canal == 6) {
   922  005B  3006               	movlw	6
   923  005C  0674               	xorwf	canalADC@canal,w
   924  005D  1D03               	btfss	3,2
   925  005E  2860               	goto	u71
   926  005F  2861               	goto	u70
   927  0060                     u71:
   928  0060  2867               	goto	l780
   929  0061                     u70:
   930  0061                     l778:
   931                           
   932                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   933  0061  1283               	bcf	3,5	;RP0=0, select bank0
   934  0062  1303               	bcf	3,6	;RP1=0, select bank0
   935  0063  129F               	bcf	31,5	;volatile
   936                           
   937                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   938  0064  161F               	bsf	31,4	;volatile
   939                           
   940                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   941  0065  159F               	bsf	31,3	;volatile
   942                           
   943                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   944  0066  111F               	bcf	31,2	;volatile
   945  0067                     l780:
   946                           
   947                           ;ADC.c: 77:     if (canal == 7) {
   948  0067  3007               	movlw	7
   949  0068  0674               	xorwf	canalADC@canal,w
   950  0069  1D03               	btfss	3,2
   951  006A  286C               	goto	u81
   952  006B  286D               	goto	u80
   953  006C                     u81:
   954  006C  2873               	goto	l784
   955  006D                     u80:
   956  006D                     l782:
   957                           
   958                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   959  006D  1283               	bcf	3,5	;RP0=0, select bank0
   960  006E  1303               	bcf	3,6	;RP1=0, select bank0
   961  006F  129F               	bcf	31,5	;volatile
   962                           
   963                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   964  0070  161F               	bsf	31,4	;volatile
   965                           
   966                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   967  0071  159F               	bsf	31,3	;volatile
   968                           
   969                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   970  0072  151F               	bsf	31,2	;volatile
   971  0073                     l784:
   972                           
   973                           ;ADC.c: 86:     if (canal == 8) {
   974  0073  3008               	movlw	8
   975  0074  0674               	xorwf	canalADC@canal,w
   976  0075  1D03               	btfss	3,2
   977  0076  2878               	goto	u91
   978  0077  2879               	goto	u90
   979  0078                     u91:
   980  0078  287F               	goto	l788
   981  0079                     u90:
   982  0079                     l786:
   983                           
   984                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   985  0079  1283               	bcf	3,5	;RP0=0, select bank0
   986  007A  1303               	bcf	3,6	;RP1=0, select bank0
   987  007B  169F               	bsf	31,5	;volatile
   988                           
   989                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   990  007C  121F               	bcf	31,4	;volatile
   991                           
   992                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   993  007D  119F               	bcf	31,3	;volatile
   994                           
   995                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
   996  007E  111F               	bcf	31,2	;volatile
   997  007F                     l788:
   998                           
   999                           ;ADC.c: 94:     if (canal == 9) {
  1000  007F  3009               	movlw	9
  1001  0080  0674               	xorwf	canalADC@canal,w
  1002  0081  1D03               	btfss	3,2
  1003  0082  2884               	goto	u101
  1004  0083  2885               	goto	u100
  1005  0084                     u101:
  1006  0084  288B               	goto	l792
  1007  0085                     u100:
  1008  0085                     l790:
  1009                           
  1010                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1011  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0087  169F               	bsf	31,5	;volatile
  1014                           
  1015                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1016  0088  121F               	bcf	31,4	;volatile
  1017                           
  1018                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1019  0089  119F               	bcf	31,3	;volatile
  1020                           
  1021                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1022  008A  151F               	bsf	31,2	;volatile
  1023  008B                     l792:
  1024                           
  1025                           ;ADC.c: 102:     if (canal == 10) {
  1026  008B  300A               	movlw	10
  1027  008C  0674               	xorwf	canalADC@canal,w
  1028  008D  1D03               	btfss	3,2
  1029  008E  2890               	goto	u111
  1030  008F  2891               	goto	u110
  1031  0090                     u111:
  1032  0090  2897               	goto	l796
  1033  0091                     u110:
  1034  0091                     l794:
  1035                           
  1036                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1037  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0093  169F               	bsf	31,5	;volatile
  1040                           
  1041                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1042  0094  121F               	bcf	31,4	;volatile
  1043                           
  1044                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1045  0095  159F               	bsf	31,3	;volatile
  1046                           
  1047                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1048  0096  111F               	bcf	31,2	;volatile
  1049  0097                     l796:
  1050                           
  1051                           ;ADC.c: 111:     if (canal == 11) {
  1052  0097  300B               	movlw	11
  1053  0098  0674               	xorwf	canalADC@canal,w
  1054  0099  1D03               	btfss	3,2
  1055  009A  289C               	goto	u121
  1056  009B  289D               	goto	u120
  1057  009C                     u121:
  1058  009C  28A3               	goto	l800
  1059  009D                     u120:
  1060  009D                     l798:
  1061                           
  1062                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1063  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1064  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1065  009F  169F               	bsf	31,5	;volatile
  1066                           
  1067                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1068  00A0  121F               	bcf	31,4	;volatile
  1069                           
  1070                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1071  00A1  159F               	bsf	31,3	;volatile
  1072                           
  1073                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1074  00A2  151F               	bsf	31,2	;volatile
  1075  00A3                     l800:
  1076                           
  1077                           ;ADC.c: 120:     if (canal == 12) {
  1078  00A3  300C               	movlw	12
  1079  00A4  0674               	xorwf	canalADC@canal,w
  1080  00A5  1D03               	btfss	3,2
  1081  00A6  28A8               	goto	u131
  1082  00A7  28A9               	goto	u130
  1083  00A8                     u131:
  1084  00A8  28AF               	goto	l804
  1085  00A9                     u130:
  1086  00A9                     l802:
  1087                           
  1088                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1089  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1090  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1091  00AB  169F               	bsf	31,5	;volatile
  1092                           
  1093                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1094  00AC  161F               	bsf	31,4	;volatile
  1095                           
  1096                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1097  00AD  119F               	bcf	31,3	;volatile
  1098                           
  1099                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1100  00AE  111F               	bcf	31,2	;volatile
  1101  00AF                     l804:
  1102                           
  1103                           ;ADC.c: 129:     if (canal == 13) {
  1104  00AF  300D               	movlw	13
  1105  00B0  0674               	xorwf	canalADC@canal,w
  1106  00B1  1D03               	btfss	3,2
  1107  00B2  28B4               	goto	u141
  1108  00B3  28B5               	goto	u140
  1109  00B4                     u141:
  1110  00B4  28BB               	goto	l92
  1111  00B5                     u140:
  1112  00B5                     l806:
  1113                           
  1114                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1115  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00B7  169F               	bsf	31,5	;volatile
  1118                           
  1119                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1120  00B8  161F               	bsf	31,4	;volatile
  1121                           
  1122                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1123  00B9  119F               	bcf	31,3	;volatile
  1124                           
  1125                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1126  00BA  151F               	bsf	31,2	;volatile
  1127  00BB                     l92:	
  1128                           ;ADC.c: 135:     }
  1129                           
  1130                           
  1131                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1132  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00BD  149F               	bsf	31,1	;volatile
  1135  00BE                     l93:
  1136  00BE  0008               	return
  1137  00BF                     __end_of_canalADC:
  1138                           
  1139                           	psect	text4
  1140  0108                     __ptext4:	
  1141 ;; *************** function _Setup *****************
  1142 ;; Defined at:
  1143 ;;		line 83 in file "mainEsclavo1.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    2
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _Setup
  1173  0108                     _Setup:
  1174  0108                     l724:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _Setup: [wreg+status,2]
  1177                           
  1178  0108  1683               	bsf	3,5	;RP0=1, select bank3
  1179  0109  1703               	bsf	3,6	;RP1=1, select bank3
  1180  010A  0188               	clrf	8	;volatile
  1181  010B  0189               	clrf	9	;volatile
  1182  010C                     l726:
  1183  010C  1408               	bsf	8,0	;volatile
  1184  010D                     l728:
  1185  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1186  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1187  010F  1685               	bsf	5,5	;volatile
  1188  0110                     l730:
  1189  0110  3001               	movlw	1
  1190  0111  0085               	movwf	5	;volatile
  1191  0112                     l732:
  1192  0112  0186               	clrf	6	;volatile
  1193  0113                     l734:
  1194  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0115  0186               	clrf	6	;volatile
  1197  0116                     l736:
  1198  0116  0185               	clrf	5	;volatile
  1199  0117                     l738:
  1200  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0119  1687               	bsf	7,5	;volatile
  1203  011A                     l740:
  1204  011A  178B               	bsf	11,7	;volatile
  1205  011B                     l742:
  1206  011B  170B               	bsf	11,6	;volatile
  1207  011C                     l744:
  1208  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1209  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1210  011E  118C               	bcf	12,3	;volatile
  1211  011F                     l746:
  1212  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0121  158C               	bsf	12,3	;volatile
  1215  0122                     l748:
  1216  0122  1685               	bsf	5,5	;volatile
  1217  0123                     l66:
  1218  0123  0008               	return
  1219  0124                     __end_of_Setup:
  1220                           
  1221                           	psect	text5
  1222  00BF                     __ptext5:	
  1223 ;; *************** function _ISR *****************
  1224 ;; Defined at:
  1225 ;;		line 48 in file "mainEsclavo1.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          3       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		_spiWrite
  1248 ;; This function is called by:
  1249 ;;		Interrupt level 1
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _ISR
  1255  00BF                     _ISR:
  1256  00BF                     i1l820:
  1257                           
  1258                           ;mainEsclavo1.c: 50: }
  1259  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1260  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1261  00C1  1F0C               	btfss	12,6	;volatile
  1262  00C2  28C4               	goto	u17_21
  1263  00C3  28C5               	goto	u17_20
  1264  00C4                     u17_21:
  1265  00C4  28D4               	goto	i1l828
  1266  00C5                     u17_20:
  1267  00C5                     i1l822:
  1268                           
  1269                           ;mainEsclavo1.c: 51: 
  1270  00C5  30C7               	movlw	199
  1271  00C6  00F1               	movwf	??_ISR
  1272  00C7                     u20_27:
  1273  00C7  28C8               	nop2
  1274  00C8  0BF1               	decfsz	??_ISR,f
  1275  00C9  28C7               	goto	u20_27
  1276  00CA  28CB               	nop2
  1277  00CB  28CC               	nop2
  1278                           
  1279                           ;mainEsclavo1.c: 52: void Setup(void) {
  1280  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1281  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1282  00CE  081E               	movf	30,w	;volatile
  1283  00CF  00F1               	movwf	??_ISR
  1284  00D0  0871               	movf	??_ISR,w
  1285  00D1  00F8               	movwf	_varADC
  1286  00D2                     i1l824:
  1287                           
  1288                           ;mainEsclavo1.c: 54:     ANSEL = 0;
  1289  00D2  130C               	bcf	12,6	;volatile
  1290  00D3                     i1l826:
  1291                           
  1292                           ;mainEsclavo1.c: 55:     ANSELH = 0;
  1293  00D3  149F               	bsf	31,1	;volatile
  1294  00D4                     i1l828:
  1295                           
  1296                           ;mainEsclavo1.c: 59:     TRISB = 0;
  1297  00D4  1D8C               	btfss	12,3	;volatile
  1298  00D5  28D7               	goto	u18_21
  1299  00D6  28D8               	goto	u18_20
  1300  00D7                     u18_21:
  1301  00D7  28E1               	goto	i1l55
  1302  00D8                     u18_20:
  1303  00D8                     i1l830:
  1304                           
  1305                           ;mainEsclavo1.c: 60: 
  1306  00D8  0878               	movf	_varADC,w
  1307  00D9  120A  118A  214F  120A  118A  	fcall	_spiWrite
  1308  00DE                     i1l832:
  1309                           
  1310                           ;mainEsclavo1.c: 61:     PORTB = 0;
  1311  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1312  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1313  00E0  118C               	bcf	12,3	;volatile
  1314  00E1                     i1l55:
  1315  00E1  0873               	movf	??_ISR+2,w
  1316  00E2  008A               	movwf	10
  1317  00E3  0E72               	swapf	??_ISR+1,w
  1318  00E4  0083               	movwf	3
  1319  00E5  0EFE               	swapf	btemp,f
  1320  00E6  0E7E               	swapf	btemp,w
  1321  00E7  0009               	retfie
  1322  00E8                     __end_of_ISR:
  1323                           
  1324                           	psect	intentry
  1325  0004                     __pintentry:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1328                           
  1329  0004                     interrupt_function:
  1330  007E                     saved_w	set	btemp
  1331  0004  00FE               	movwf	btemp
  1332  0005  0E03               	swapf	3,w
  1333  0006  00F2               	movwf	??_ISR+1
  1334  0007  080A               	movf	10,w
  1335  0008  00F3               	movwf	??_ISR+2
  1336  0009  120A  118A  28BF   	ljmp	_ISR
  1337                           
  1338                           	psect	text6
  1339  014F                     __ptext6:	
  1340 ;; *************** function _spiWrite *****************
  1341 ;; Defined at:
  1342 ;;		line 34 in file "SPI.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  dat             1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  dat             1    0[COMMON] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_ISR
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _spiWrite
  1371  014F                     _spiWrite:
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _spiWrite: [wreg]
  1375                           ;spiWrite@dat stored from wreg
  1376  014F  00F0               	movwf	spiWrite@dat
  1377  0150                     i1l722:
  1378                           
  1379                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1380  0150  0870               	movf	spiWrite@dat,w
  1381  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0153  0093               	movwf	19	;volatile
  1384  0154                     i1l122:
  1385  0154  0008               	return
  1386  0155                     __end_of_spiWrite:
  1387  007E                     btemp	set	126	;btemp
  1388  007E                     wtemp0	set	126
  1389                           
  1390                           	psect	config
  1391                           
  1392                           ;Config register CONFIG1 @ 0x2007
  1393                           ;	Oscillator Selection bits
  1394                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1395                           ;	Watchdog Timer Enable bit
  1396                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1397                           ;	Power-up Timer Enable bit
  1398                           ;	PWRTE = OFF, PWRT disabled
  1399                           ;	RE3/MCLR pin function select bit
  1400                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1401                           ;	Code Protection bit
  1402                           ;	CP = OFF, Program memory code protection is disabled
  1403                           ;	Data Code Protection bit
  1404                           ;	CPD = OFF, Data memory code protection is disabled
  1405                           ;	Brown Out Reset Selection bits
  1406                           ;	BOREN = OFF, BOR disabled
  1407                           ;	Internal External Switchover bit
  1408                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1409                           ;	Fail-Safe Clock Monitor Enabled bit
  1410                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1411                           ;	Low Voltage Programming Enable bit
  1412                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1413                           ;	In-Circuit Debugger Mode bit
  1414                           ;	DEBUG = 0x1, unprogrammed default
  1415  2007                     	org	8199
  1416  2007  20D4               	dw	8404
  1417                           
  1418                           ;Config register CONFIG2 @ 0x2008
  1419                           ;	Brown-out Reset Selection bit
  1420                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1421                           ;	Flash Program Memory Self Write Enable bits
  1422                           ;	WRT = OFF, Write protection off
  1423  2008                     	org	8200
  1424  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     570
                              _Setup
                           _canalADC
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 09:14:55 2021

            _SSPSTATbits 0094                       l66 0123                       l92 00BB  
                     l93 00BE                       l96 014E                       u10 001A  
                     u11 0019                       u20 0025                       u21 0024  
                     u30 0031                       u31 0030                       u40 003D  
                     u41 003C                       u50 0049                       u51 0048  
                     u60 0055                       u61 0054                       u70 0061  
                     u71 0060                       u80 006D                       u81 006C  
                     u90 0079                       u91 0078                      l112 0134  
                    l113 0139                      l800 00A3                      l730 0110  
                    l802 00A9                      l740 011A                      l732 0112  
                    l724 0108                      l804 00AF                      l742 011B  
                    l734 0113                      l726 010C                      l806 00B5  
                    l750 013A                      l744 011C                      l736 0116  
                    l728 010D                      l760 002B                      l752 0015  
                    l746 011F                      l738 0117                      l770 0049  
                    l762 0031                      l754 001A                      l748 0122  
                    l780 0067                      l772 004F                      l764 0037  
                    l756 0020                      l860 012E                      l790 0085  
                    l782 006D                      l774 0055                      l766 003D  
                    l758 0025                      l862 0130                      l870 00F2  
                    l792 008B                      l784 0073                      l776 005B  
                    l768 0043                      l864 0133                      l856 0125  
                    l872 00F8                      l794 0091                      l786 0079  
                    l778 0061                      l858 012C                      l874 0101  
                    l866 00E8                      l796 0097                      l788 007F  
                    l868 00ED                      l798 009D                      u100 0085  
                    u101 0084                      u110 0091                      u111 0090  
                    u120 009D                      u121 009C                      u130 00A9  
                    u131 00A8                      u140 00B5                      u141 00B4  
                    u190 012C                      u191 012B                      _ISR 00BF  
                   ?_ISR 0070                     _ADIF 0066                     i1l55 00E1  
                   _main 00E8                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l122 0154                    i1l722 0150                    i1l820 00BF  
                  i1l830 00D8                    i1l822 00C5                    i1l832 00DE  
                  i1l824 00D2                    i1l826 00D3                    i1l828 00D4  
                  u20_27 00C7                    u17_20 00C5                    u17_21 00C4  
                  u18_20 00D8                    u18_21 00D7                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIF 0063                    _Setup 0108                    pclath 000A  
        __end_of_spiInit 013A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0108                   ??_main 0078  
                 ?_Setup 0070                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_canalADC 00BF                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _varADC 0078  
                 saved_w 007E         __end_of_spiWrite 0155                ??_spiInit 0077  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_Setup 0124  
     __size_of_configADC 0015                  ??_Setup 0074               __pmaintext 00E8  
             __pintentry 0004                ?_canalADC 0070                  _SSPSTAT 0094  
      __end_of_configADC 014F                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0124                  __ptext2 013A                  __ptext3 0014  
                __ptext4 0108                  __ptext5 00BF                  __ptext6 014F  
             ??_canalADC 0074             __size_of_ISR 0029                  _spiInit 0124  
   end_of_initialization 0010               ??_spiWrite 0070                _PORTAbits 0005  
              _TRISAbits 0085                _TRISCbits 0087              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 00E8              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_canalADC 00AB                _configADC 013A  
      __size_of_spiWrite 0006                 ?_spiInit 0074           __size_of_Setup 001C  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               ?_configADC 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                 _canalADC 0014  
          canalADC@canal 0074         __size_of_spiInit 0016            __size_of_main 0020  
               _spiWrite 014F             spiInit@sType 0077              ??_configADC 0074  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
