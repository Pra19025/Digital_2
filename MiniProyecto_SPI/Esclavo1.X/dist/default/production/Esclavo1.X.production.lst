

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 09:20:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  0005                     _PORTA	set	5
   369  0005                     _PORTAbits	set	5
   370  0006                     _PORTB	set	6
   371  001F                     _ADCON0bits	set	31
   372  001E                     _ADRESH	set	30
   373  0063                     _SSPIF	set	99
   374  0066                     _ADIF	set	102
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  008C                     _PIE1bits	set	140
   379  0087                     _TRISCbits	set	135
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  0085                     _TRISAbits	set	133
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0188                     _ANSELbits	set	392
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   397  0010                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0010                     __end_of__initialization:
   401  0010  0183               	clrf	3
   402  0011  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _varADC:
   407  0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_spiWrite:
   412  0070                     ??_spiWrite:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_Setup:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_configADC:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_canalADC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_ISR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_main:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     spiWrite@dat:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	1
   436  0071                     ??_ISR:
   437                           
   438                           ; 1 bytes @ 0x1
   439  0071                     	ds	3
   440  0074                     ??_Setup:
   441  0074                     ??_configADC:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ??_canalADC:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ?_spiInit:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     canalADC@canal:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     spiInit@sDataSample:	
   454                           ; 1 bytes @ 0x4
   455                           
   456                           
   457                           ; 1 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     spiInit@sClockIdle:
   460                           
   461                           ; 1 bytes @ 0x5
   462  0075                     	ds	1
   463  0076                     spiInit@sTransmitEdge:
   464                           
   465                           ; 1 bytes @ 0x6
   466  0076                     	ds	1
   467  0077                     ??_spiInit:
   468  0077                     spiInit@sType:	
   469                           ; 1 bytes @ 0x7
   470                           
   471                           
   472                           ; 1 bytes @ 0x7
   473  0077                     	ds	1
   474  0078                     ??_main:
   475                           
   476                           	psect	maintext
   477  00E8                     __pmaintext:	
   478                           ; 1 bytes @ 0x8
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 68 in file "mainEsclavo1.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : B00/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		_Setup
   506 ;;		_canalADC
   507 ;;		_configADC
   508 ;;		_spiInit
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  00E8                     _main:
   517  00E8                     l866:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;mainEsclavo1.c: 69:     PIE1bits.SSPIE = 1;
   523  00E8  120A  118A  210A  120A  118A  	fcall	_Setup
   524  00ED                     l868:
   525                           
   526                           ;mainEsclavo1.c: 70:     TRISAbits.TRISA5 = 1;
   527  00ED  120A  118A  213C  120A  118A  	fcall	_configADC
   528  00F2                     l870:
   529                           
   530                           ;mainEsclavo1.c: 71: 
   531  00F2  3000               	movlw	0
   532  00F3  120A  118A  2014  120A  118A  	fcall	_canalADC
   533  00F8                     l872:
   534                           
   535                           ;mainEsclavo1.c: 72: 
   536  00F8  01F4               	clrf	spiInit@sDataSample
   537  00F9  01F5               	clrf	spiInit@sClockIdle
   538  00FA  01F6               	clrf	spiInit@sTransmitEdge
   539  00FB  3024               	movlw	36
   540  00FC  120A  118A  2126  120A  118A  	fcall	_spiInit
   541  0101                     l874:
   542  0101  1283               	bcf	3,5	;RP0=0, select bank0
   543  0102  1303               	bcf	3,6	;RP1=0, select bank0
   544  0103  1685               	bsf	5,5	;volatile
   545  0104  0878               	movf	_varADC,w
   546  0105  0086               	movwf	6	;volatile
   547  0106  2901               	goto	l874
   548  0107  120A  118A  280C   	ljmp	start
   549  010A                     __end_of_main:
   550                           
   551                           	psect	text1
   552  0126                     __ptext1:	
   553 ;; *************** function _spiInit *****************
   554 ;; Defined at:
   555 ;;		line 12 in file "SPI.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  sType           1    wreg     enum E1264
   558 ;;  sDataSample     1    4[COMMON] enum E1272
   559 ;;  sClockIdle      1    5[COMMON] enum E1276
   560 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  sType           1    7[COMMON] enum E1264
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         3       0       0       0       0
   573 ;;      Locals:         1       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         4       0       0       0       0
   576 ;;Total ram usage:        4 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    2
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _spiInit
   588  0126                     _spiInit:
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   592                           ;spiInit@sType stored from wreg
   593  0126  00F7               	movwf	spiInit@sType
   594  0127                     l856:
   595                           
   596                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   597  0127  1683               	bsf	3,5	;RP0=1, select bank1
   598  0128  1303               	bcf	3,6	;RP1=0, select bank1
   599  0129  1287               	bcf	7,5	;volatile
   600                           
   601                           ;SPI.c: 15:     if(sType & 0b00000100)
   602  012A  1D77               	btfss	spiInit@sType,2
   603  012B  292D               	goto	u191
   604  012C  292E               	goto	u190
   605  012D                     u191:
   606  012D  2932               	goto	l862
   607  012E                     u190:
   608  012E                     l858:
   609                           
   610                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   611  012E  0876               	movf	spiInit@sTransmitEdge,w
   612  012F  0094               	movwf	20	;volatile
   613  0130                     l860:
   614                           
   615                           ;SPI.c: 18:         TRISC3 = 1;
   616  0130  1587               	bsf	7,3	;volatile
   617                           
   618                           ;SPI.c: 19:     }
   619  0131  2936               	goto	l112
   620  0132                     l862:
   621                           
   622                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   623  0132  0874               	movf	spiInit@sDataSample,w
   624  0133  0476               	iorwf	spiInit@sTransmitEdge,w
   625  0134  0094               	movwf	20	;volatile
   626  0135                     l864:
   627                           
   628                           ;SPI.c: 23:         TRISC3 = 0;
   629  0135  1187               	bcf	7,3	;volatile
   630  0136                     l112:	
   631                           ;SPI.c: 24:     }
   632                           
   633                           
   634                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   635  0136  0877               	movf	spiInit@sType,w
   636  0137  0475               	iorwf	spiInit@sClockIdle,w
   637  0138  1283               	bcf	3,5	;RP0=0, select bank0
   638  0139  1303               	bcf	3,6	;RP1=0, select bank0
   639  013A  0094               	movwf	20	;volatile
   640  013B                     l113:
   641  013B  0008               	return
   642  013C                     __end_of_spiInit:
   643                           
   644                           	psect	text2
   645  013C                     __ptext2:	
   646 ;; *************** function _configADC *****************
   647 ;; Defined at:
   648 ;;		line 140 in file "ADC.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		None
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    2
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _configADC
   678  013C                     _configADC:
   679  013C                     l750:	
   680                           ;incstack = 0
   681                           ; Regs used in _configADC: []
   682                           
   683                           
   684                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   685  013C  1283               	bcf	3,5	;RP0=0, select bank0
   686  013D  1303               	bcf	3,6	;RP1=0, select bank0
   687  013E  171F               	bsf	31,6	;volatile
   688                           
   689                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   690  013F  139F               	bcf	31,7	;volatile
   691                           
   692                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   693  0140  1683               	bsf	3,5	;RP0=1, select bank1
   694  0141  1303               	bcf	3,6	;RP1=0, select bank1
   695  0142  121F               	bcf	31,4	;volatile
   696                           
   697                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   698  0143  129F               	bcf	31,5	;volatile
   699                           
   700                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   701  0144  139F               	bcf	31,7	;volatile
   702                           
   703                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   704  0145  1283               	bcf	3,5	;RP0=0, select bank0
   705  0146  1303               	bcf	3,6	;RP1=0, select bank0
   706  0147  130C               	bcf	12,6	;volatile
   707                           
   708                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   709  0148  1683               	bsf	3,5	;RP0=1, select bank1
   710  0149  1303               	bcf	3,6	;RP1=0, select bank1
   711  014A  170C               	bsf	12,6	;volatile
   712                           
   713                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   714  014B  178B               	bsf	11,7	;volatile
   715                           
   716                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   717  014C  170B               	bsf	11,6	;volatile
   718                           
   719                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   720  014D  1283               	bcf	3,5	;RP0=0, select bank0
   721  014E  1303               	bcf	3,6	;RP1=0, select bank0
   722  014F  141F               	bsf	31,0	;volatile
   723  0150                     l96:
   724  0150  0008               	return
   725  0151                     __end_of_configADC:
   726                           
   727                           	psect	text3
   728  0014                     __ptext3:	
   729 ;; *************** function _canalADC *****************
   730 ;; Defined at:
   731 ;;		line 13 in file "ADC.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  canal           1    wreg     unsigned char 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  canal           1    4[COMMON] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         1       0       0       0       0
   749 ;;Total ram usage:        1 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    2
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _canalADC
   761  0014                     _canalADC:
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   765                           ;canalADC@canal stored from wreg
   766  0014  00F4               	movwf	canalADC@canal
   767  0015                     l752:
   768                           
   769                           ;ADC.c: 15:     if (canal == 0) {
   770  0015  0874               	movf	canalADC@canal,w
   771  0016  1D03               	btfss	3,2
   772  0017  2819               	goto	u11
   773  0018  281A               	goto	u10
   774  0019                     u11:
   775  0019  2820               	goto	l756
   776  001A                     u10:
   777  001A                     l754:
   778                           
   779                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   780  001A  1283               	bcf	3,5	;RP0=0, select bank0
   781  001B  1303               	bcf	3,6	;RP1=0, select bank0
   782  001C  129F               	bcf	31,5	;volatile
   783                           
   784                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   785  001D  121F               	bcf	31,4	;volatile
   786                           
   787                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   788  001E  119F               	bcf	31,3	;volatile
   789                           
   790                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   791  001F  111F               	bcf	31,2	;volatile
   792  0020                     l756:
   793                           
   794                           ;ADC.c: 23:     if (canal == 1) {
   795  0020  0374               	decf	canalADC@canal,w
   796  0021  1D03               	btfss	3,2
   797  0022  2824               	goto	u21
   798  0023  2825               	goto	u20
   799  0024                     u21:
   800  0024  282B               	goto	l760
   801  0025                     u20:
   802  0025                     l758:
   803                           
   804                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   805  0025  1283               	bcf	3,5	;RP0=0, select bank0
   806  0026  1303               	bcf	3,6	;RP1=0, select bank0
   807  0027  129F               	bcf	31,5	;volatile
   808                           
   809                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   810  0028  121F               	bcf	31,4	;volatile
   811                           
   812                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   813  0029  119F               	bcf	31,3	;volatile
   814                           
   815                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   816  002A  151F               	bsf	31,2	;volatile
   817  002B                     l760:
   818                           
   819                           ;ADC.c: 32:     if (canal == 2) {
   820  002B  3002               	movlw	2
   821  002C  0674               	xorwf	canalADC@canal,w
   822  002D  1D03               	btfss	3,2
   823  002E  2830               	goto	u31
   824  002F  2831               	goto	u30
   825  0030                     u31:
   826  0030  2837               	goto	l764
   827  0031                     u30:
   828  0031                     l762:
   829                           
   830                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   831  0031  1283               	bcf	3,5	;RP0=0, select bank0
   832  0032  1303               	bcf	3,6	;RP1=0, select bank0
   833  0033  129F               	bcf	31,5	;volatile
   834                           
   835                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   836  0034  121F               	bcf	31,4	;volatile
   837                           
   838                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   839  0035  159F               	bsf	31,3	;volatile
   840                           
   841                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   842  0036  111F               	bcf	31,2	;volatile
   843  0037                     l764:
   844                           
   845                           ;ADC.c: 41:     if (canal == 3) {
   846  0037  3003               	movlw	3
   847  0038  0674               	xorwf	canalADC@canal,w
   848  0039  1D03               	btfss	3,2
   849  003A  283C               	goto	u41
   850  003B  283D               	goto	u40
   851  003C                     u41:
   852  003C  2843               	goto	l768
   853  003D                     u40:
   854  003D                     l766:
   855                           
   856                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   857  003D  1283               	bcf	3,5	;RP0=0, select bank0
   858  003E  1303               	bcf	3,6	;RP1=0, select bank0
   859  003F  129F               	bcf	31,5	;volatile
   860                           
   861                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   862  0040  121F               	bcf	31,4	;volatile
   863                           
   864                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   865  0041  159F               	bsf	31,3	;volatile
   866                           
   867                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   868  0042  151F               	bsf	31,2	;volatile
   869  0043                     l768:
   870                           
   871                           ;ADC.c: 50:     if (canal == 4) {
   872  0043  3004               	movlw	4
   873  0044  0674               	xorwf	canalADC@canal,w
   874  0045  1D03               	btfss	3,2
   875  0046  2848               	goto	u51
   876  0047  2849               	goto	u50
   877  0048                     u51:
   878  0048  284F               	goto	l772
   879  0049                     u50:
   880  0049                     l770:
   881                           
   882                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   883  0049  1283               	bcf	3,5	;RP0=0, select bank0
   884  004A  1303               	bcf	3,6	;RP1=0, select bank0
   885  004B  129F               	bcf	31,5	;volatile
   886                           
   887                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   888  004C  161F               	bsf	31,4	;volatile
   889                           
   890                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   891  004D  119F               	bcf	31,3	;volatile
   892                           
   893                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   894  004E  111F               	bcf	31,2	;volatile
   895  004F                     l772:
   896                           
   897                           ;ADC.c: 59:     if (canal == 5) {
   898  004F  3005               	movlw	5
   899  0050  0674               	xorwf	canalADC@canal,w
   900  0051  1D03               	btfss	3,2
   901  0052  2854               	goto	u61
   902  0053  2855               	goto	u60
   903  0054                     u61:
   904  0054  285B               	goto	l776
   905  0055                     u60:
   906  0055                     l774:
   907                           
   908                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   909  0055  1283               	bcf	3,5	;RP0=0, select bank0
   910  0056  1303               	bcf	3,6	;RP1=0, select bank0
   911  0057  129F               	bcf	31,5	;volatile
   912                           
   913                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   914  0058  161F               	bsf	31,4	;volatile
   915                           
   916                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   917  0059  119F               	bcf	31,3	;volatile
   918                           
   919                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   920  005A  151F               	bsf	31,2	;volatile
   921  005B                     l776:
   922                           
   923                           ;ADC.c: 68:     if (canal == 6) {
   924  005B  3006               	movlw	6
   925  005C  0674               	xorwf	canalADC@canal,w
   926  005D  1D03               	btfss	3,2
   927  005E  2860               	goto	u71
   928  005F  2861               	goto	u70
   929  0060                     u71:
   930  0060  2867               	goto	l780
   931  0061                     u70:
   932  0061                     l778:
   933                           
   934                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   935  0061  1283               	bcf	3,5	;RP0=0, select bank0
   936  0062  1303               	bcf	3,6	;RP1=0, select bank0
   937  0063  129F               	bcf	31,5	;volatile
   938                           
   939                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   940  0064  161F               	bsf	31,4	;volatile
   941                           
   942                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   943  0065  159F               	bsf	31,3	;volatile
   944                           
   945                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   946  0066  111F               	bcf	31,2	;volatile
   947  0067                     l780:
   948                           
   949                           ;ADC.c: 77:     if (canal == 7) {
   950  0067  3007               	movlw	7
   951  0068  0674               	xorwf	canalADC@canal,w
   952  0069  1D03               	btfss	3,2
   953  006A  286C               	goto	u81
   954  006B  286D               	goto	u80
   955  006C                     u81:
   956  006C  2873               	goto	l784
   957  006D                     u80:
   958  006D                     l782:
   959                           
   960                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   961  006D  1283               	bcf	3,5	;RP0=0, select bank0
   962  006E  1303               	bcf	3,6	;RP1=0, select bank0
   963  006F  129F               	bcf	31,5	;volatile
   964                           
   965                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   966  0070  161F               	bsf	31,4	;volatile
   967                           
   968                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   969  0071  159F               	bsf	31,3	;volatile
   970                           
   971                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   972  0072  151F               	bsf	31,2	;volatile
   973  0073                     l784:
   974                           
   975                           ;ADC.c: 86:     if (canal == 8) {
   976  0073  3008               	movlw	8
   977  0074  0674               	xorwf	canalADC@canal,w
   978  0075  1D03               	btfss	3,2
   979  0076  2878               	goto	u91
   980  0077  2879               	goto	u90
   981  0078                     u91:
   982  0078  287F               	goto	l788
   983  0079                     u90:
   984  0079                     l786:
   985                           
   986                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   987  0079  1283               	bcf	3,5	;RP0=0, select bank0
   988  007A  1303               	bcf	3,6	;RP1=0, select bank0
   989  007B  169F               	bsf	31,5	;volatile
   990                           
   991                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   992  007C  121F               	bcf	31,4	;volatile
   993                           
   994                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   995  007D  119F               	bcf	31,3	;volatile
   996                           
   997                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
   998  007E  111F               	bcf	31,2	;volatile
   999  007F                     l788:
  1000                           
  1001                           ;ADC.c: 94:     if (canal == 9) {
  1002  007F  3009               	movlw	9
  1003  0080  0674               	xorwf	canalADC@canal,w
  1004  0081  1D03               	btfss	3,2
  1005  0082  2884               	goto	u101
  1006  0083  2885               	goto	u100
  1007  0084                     u101:
  1008  0084  288B               	goto	l792
  1009  0085                     u100:
  1010  0085                     l790:
  1011                           
  1012                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1013  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0087  169F               	bsf	31,5	;volatile
  1016                           
  1017                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1018  0088  121F               	bcf	31,4	;volatile
  1019                           
  1020                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1021  0089  119F               	bcf	31,3	;volatile
  1022                           
  1023                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1024  008A  151F               	bsf	31,2	;volatile
  1025  008B                     l792:
  1026                           
  1027                           ;ADC.c: 102:     if (canal == 10) {
  1028  008B  300A               	movlw	10
  1029  008C  0674               	xorwf	canalADC@canal,w
  1030  008D  1D03               	btfss	3,2
  1031  008E  2890               	goto	u111
  1032  008F  2891               	goto	u110
  1033  0090                     u111:
  1034  0090  2897               	goto	l796
  1035  0091                     u110:
  1036  0091                     l794:
  1037                           
  1038                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1039  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0093  169F               	bsf	31,5	;volatile
  1042                           
  1043                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1044  0094  121F               	bcf	31,4	;volatile
  1045                           
  1046                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1047  0095  159F               	bsf	31,3	;volatile
  1048                           
  1049                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1050  0096  111F               	bcf	31,2	;volatile
  1051  0097                     l796:
  1052                           
  1053                           ;ADC.c: 111:     if (canal == 11) {
  1054  0097  300B               	movlw	11
  1055  0098  0674               	xorwf	canalADC@canal,w
  1056  0099  1D03               	btfss	3,2
  1057  009A  289C               	goto	u121
  1058  009B  289D               	goto	u120
  1059  009C                     u121:
  1060  009C  28A3               	goto	l800
  1061  009D                     u120:
  1062  009D                     l798:
  1063                           
  1064                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1065  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1066  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1067  009F  169F               	bsf	31,5	;volatile
  1068                           
  1069                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1070  00A0  121F               	bcf	31,4	;volatile
  1071                           
  1072                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1073  00A1  159F               	bsf	31,3	;volatile
  1074                           
  1075                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1076  00A2  151F               	bsf	31,2	;volatile
  1077  00A3                     l800:
  1078                           
  1079                           ;ADC.c: 120:     if (canal == 12) {
  1080  00A3  300C               	movlw	12
  1081  00A4  0674               	xorwf	canalADC@canal,w
  1082  00A5  1D03               	btfss	3,2
  1083  00A6  28A8               	goto	u131
  1084  00A7  28A9               	goto	u130
  1085  00A8                     u131:
  1086  00A8  28AF               	goto	l804
  1087  00A9                     u130:
  1088  00A9                     l802:
  1089                           
  1090                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1091  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00AB  169F               	bsf	31,5	;volatile
  1094                           
  1095                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1096  00AC  161F               	bsf	31,4	;volatile
  1097                           
  1098                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1099  00AD  119F               	bcf	31,3	;volatile
  1100                           
  1101                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1102  00AE  111F               	bcf	31,2	;volatile
  1103  00AF                     l804:
  1104                           
  1105                           ;ADC.c: 129:     if (canal == 13) {
  1106  00AF  300D               	movlw	13
  1107  00B0  0674               	xorwf	canalADC@canal,w
  1108  00B1  1D03               	btfss	3,2
  1109  00B2  28B4               	goto	u141
  1110  00B3  28B5               	goto	u140
  1111  00B4                     u141:
  1112  00B4  28BB               	goto	l92
  1113  00B5                     u140:
  1114  00B5                     l806:
  1115                           
  1116                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1117  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1119  00B7  169F               	bsf	31,5	;volatile
  1120                           
  1121                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1122  00B8  161F               	bsf	31,4	;volatile
  1123                           
  1124                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1125  00B9  119F               	bcf	31,3	;volatile
  1126                           
  1127                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1128  00BA  151F               	bsf	31,2	;volatile
  1129  00BB                     l92:	
  1130                           ;ADC.c: 135:     }
  1131                           
  1132                           
  1133                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1134  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00BD  149F               	bsf	31,1	;volatile
  1137  00BE                     l93:
  1138  00BE  0008               	return
  1139  00BF                     __end_of_canalADC:
  1140                           
  1141                           	psect	text4
  1142  010A                     __ptext4:	
  1143 ;; *************** function _Setup *****************
  1144 ;; Defined at:
  1145 ;;		line 83 in file "mainEsclavo1.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    2
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _Setup
  1175  010A                     _Setup:
  1176  010A                     l724:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _Setup: [wreg+status,2]
  1179                           
  1180  010A  1683               	bsf	3,5	;RP0=1, select bank3
  1181  010B  1703               	bsf	3,6	;RP1=1, select bank3
  1182  010C  0188               	clrf	8	;volatile
  1183  010D  0189               	clrf	9	;volatile
  1184  010E                     l726:
  1185  010E  1408               	bsf	8,0	;volatile
  1186  010F                     l728:
  1187  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0111  1685               	bsf	5,5	;volatile
  1190  0112                     l730:
  1191  0112  3001               	movlw	1
  1192  0113  0085               	movwf	5	;volatile
  1193  0114                     l732:
  1194  0114  0186               	clrf	6	;volatile
  1195  0115                     l734:
  1196  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0117  0186               	clrf	6	;volatile
  1199  0118                     l736:
  1200  0118  0185               	clrf	5	;volatile
  1201  0119                     l738:
  1202  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1203  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1204  011B  1687               	bsf	7,5	;volatile
  1205  011C                     l740:
  1206  011C  178B               	bsf	11,7	;volatile
  1207  011D                     l742:
  1208  011D  170B               	bsf	11,6	;volatile
  1209  011E                     l744:
  1210  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1211  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0120  118C               	bcf	12,3	;volatile
  1213  0121                     l746:
  1214  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0123  158C               	bsf	12,3	;volatile
  1217  0124                     l748:
  1218  0124  1685               	bsf	5,5	;volatile
  1219  0125                     l66:
  1220  0125  0008               	return
  1221  0126                     __end_of_Setup:
  1222                           
  1223                           	psect	text5
  1224  00BF                     __ptext5:	
  1225 ;; *************** function _ISR *****************
  1226 ;; Defined at:
  1227 ;;		line 48 in file "mainEsclavo1.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0
  1243 ;;      Temps:          3       0       0       0       0
  1244 ;;      Totals:         3       0       0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    1
  1248 ;; This function calls:
  1249 ;;		_spiWrite
  1250 ;; This function is called by:
  1251 ;;		Interrupt level 1
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _ISR
  1257  00BF                     _ISR:
  1258  00BF                     i1l820:
  1259                           
  1260                           ;mainEsclavo1.c: 50: }
  1261  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00C1  1F0C               	btfss	12,6	;volatile
  1264  00C2  28C4               	goto	u17_21
  1265  00C3  28C5               	goto	u17_20
  1266  00C4                     u17_21:
  1267  00C4  28D4               	goto	i1l828
  1268  00C5                     u17_20:
  1269  00C5                     i1l822:
  1270                           
  1271                           ;mainEsclavo1.c: 51: 
  1272  00C5  30C7               	movlw	199
  1273  00C6  00F1               	movwf	??_ISR
  1274  00C7                     u20_27:
  1275  00C7  28C8               	nop2
  1276  00C8  0BF1               	decfsz	??_ISR,f
  1277  00C9  28C7               	goto	u20_27
  1278  00CA  28CB               	nop2
  1279  00CB  28CC               	nop2
  1280                           
  1281                           ;mainEsclavo1.c: 52: void Setup(void) {
  1282  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1283  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1284  00CE  081E               	movf	30,w	;volatile
  1285  00CF  00F1               	movwf	??_ISR
  1286  00D0  0871               	movf	??_ISR,w
  1287  00D1  00F8               	movwf	_varADC
  1288  00D2                     i1l824:
  1289                           
  1290                           ;mainEsclavo1.c: 54:     ANSEL = 0;
  1291  00D2  130C               	bcf	12,6	;volatile
  1292  00D3                     i1l826:
  1293                           
  1294                           ;mainEsclavo1.c: 55:     ANSELH = 0;
  1295  00D3  149F               	bsf	31,1	;volatile
  1296  00D4                     i1l828:
  1297                           
  1298                           ;mainEsclavo1.c: 59:     TRISB = 0;
  1299  00D4  1D8C               	btfss	12,3	;volatile
  1300  00D5  28D7               	goto	u18_21
  1301  00D6  28D8               	goto	u18_20
  1302  00D7                     u18_21:
  1303  00D7  28E1               	goto	i1l55
  1304  00D8                     u18_20:
  1305  00D8                     i1l830:
  1306                           
  1307                           ;mainEsclavo1.c: 60: 
  1308  00D8  0806               	movf	6,w	;volatile
  1309  00D9  120A  118A  2151  120A  118A  	fcall	_spiWrite
  1310  00DE                     i1l832:
  1311                           
  1312                           ;mainEsclavo1.c: 61:     PORTB = 0;
  1313  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1315  00E0  118C               	bcf	12,3	;volatile
  1316  00E1                     i1l55:
  1317  00E1  0873               	movf	??_ISR+2,w
  1318  00E2  008A               	movwf	10
  1319  00E3  0E72               	swapf	??_ISR+1,w
  1320  00E4  0083               	movwf	3
  1321  00E5  0EFE               	swapf	btemp,f
  1322  00E6  0E7E               	swapf	btemp,w
  1323  00E7  0009               	retfie
  1324  00E8                     __end_of_ISR:
  1325                           
  1326                           	psect	intentry
  1327  0004                     __pintentry:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1330                           
  1331  0004                     interrupt_function:
  1332  007E                     saved_w	set	btemp
  1333  0004  00FE               	movwf	btemp
  1334  0005  0E03               	swapf	3,w
  1335  0006  00F2               	movwf	??_ISR+1
  1336  0007  080A               	movf	10,w
  1337  0008  00F3               	movwf	??_ISR+2
  1338  0009  120A  118A  28BF   	ljmp	_ISR
  1339                           
  1340                           	psect	text6
  1341  0151                     __ptext6:	
  1342 ;; *************** function _spiWrite *****************
  1343 ;; Defined at:
  1344 ;;		line 34 in file "SPI.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  dat             1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  dat             1    0[COMMON] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         1       0       0       0       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_ISR
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _spiWrite
  1373  0151                     _spiWrite:
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _spiWrite: [wreg]
  1377                           ;spiWrite@dat stored from wreg
  1378  0151  00F0               	movwf	spiWrite@dat
  1379  0152                     i1l722:
  1380                           
  1381                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1382  0152  0870               	movf	spiWrite@dat,w
  1383  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0155  0093               	movwf	19	;volatile
  1386  0156                     i1l122:
  1387  0156  0008               	return
  1388  0157                     __end_of_spiWrite:
  1389  007E                     btemp	set	126	;btemp
  1390  007E                     wtemp0	set	126
  1391                           
  1392                           	psect	config
  1393                           
  1394                           ;Config register CONFIG1 @ 0x2007
  1395                           ;	Oscillator Selection bits
  1396                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1397                           ;	Watchdog Timer Enable bit
  1398                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1399                           ;	Power-up Timer Enable bit
  1400                           ;	PWRTE = OFF, PWRT disabled
  1401                           ;	RE3/MCLR pin function select bit
  1402                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1403                           ;	Code Protection bit
  1404                           ;	CP = OFF, Program memory code protection is disabled
  1405                           ;	Data Code Protection bit
  1406                           ;	CPD = OFF, Data memory code protection is disabled
  1407                           ;	Brown Out Reset Selection bits
  1408                           ;	BOREN = OFF, BOR disabled
  1409                           ;	Internal External Switchover bit
  1410                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1411                           ;	Fail-Safe Clock Monitor Enabled bit
  1412                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1413                           ;	Low Voltage Programming Enable bit
  1414                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1415                           ;	In-Circuit Debugger Mode bit
  1416                           ;	DEBUG = 0x1, unprogrammed default
  1417  2007                     	org	8199
  1418  2007  20D4               	dw	8404
  1419                           
  1420                           ;Config register CONFIG2 @ 0x2008
  1421                           ;	Brown-out Reset Selection bit
  1422                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1423                           ;	Flash Program Memory Self Write Enable bits
  1424                           ;	WRT = OFF, Write protection off
  1425  2008                     	org	8200
  1426  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     570
                              _Setup
                           _canalADC
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 09:20:08 2021

            _SSPSTATbits 0094                       l66 0125                       l92 00BB  
                     l93 00BE                       l96 0150                       u10 001A  
                     u11 0019                       u20 0025                       u21 0024  
                     u30 0031                       u31 0030                       u40 003D  
                     u41 003C                       u50 0049                       u51 0048  
                     u60 0055                       u61 0054                       u70 0061  
                     u71 0060                       u80 006D                       u81 006C  
                     u90 0079                       u91 0078                      l112 0136  
                    l113 013B                      l800 00A3                      l730 0112  
                    l802 00A9                      l740 011C                      l732 0114  
                    l724 010A                      l804 00AF                      l742 011D  
                    l734 0115                      l726 010E                      l806 00B5  
                    l750 013C                      l744 011E                      l736 0118  
                    l728 010F                      l760 002B                      l752 0015  
                    l746 0121                      l738 0119                      l770 0049  
                    l762 0031                      l754 001A                      l748 0124  
                    l780 0067                      l772 004F                      l764 0037  
                    l756 0020                      l860 0130                      l790 0085  
                    l782 006D                      l774 0055                      l766 003D  
                    l758 0025                      l862 0132                      l870 00F2  
                    l792 008B                      l784 0073                      l776 005B  
                    l768 0043                      l864 0135                      l856 0127  
                    l872 00F8                      l794 0091                      l786 0079  
                    l778 0061                      l858 012E                      l874 0101  
                    l866 00E8                      l796 0097                      l788 007F  
                    l868 00ED                      l798 009D                      u100 0085  
                    u101 0084                      u110 0091                      u111 0090  
                    u120 009D                      u121 009C                      u130 00A9  
                    u131 00A8                      u140 00B5                      u141 00B4  
                    u190 012E                      u191 012D                      _ISR 00BF  
                   ?_ISR 0070                     _ADIF 0066                     i1l55 00E1  
                   _main 00E8                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l122 0156                    i1l722 0152                    i1l820 00BF  
                  i1l830 00D8                    i1l822 00C5                    i1l832 00DE  
                  i1l824 00D2                    i1l826 00D3                    i1l828 00D4  
                  u20_27 00C7                    u17_20 00C5                    u17_21 00C4  
                  u18_20 00D8                    u18_21 00D7                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIF 0063                    _Setup 010A                    pclath 000A  
        __end_of_spiInit 013C                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 010A                   ??_main 0078  
                 ?_Setup 0070                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_canalADC 00BF                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _varADC 0078  
                 saved_w 007E         __end_of_spiWrite 0157                ??_spiInit 0077  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_Setup 0126  
     __size_of_configADC 0015                  ??_Setup 0074               __pmaintext 00E8  
             __pintentry 0004                ?_canalADC 0070                  _SSPSTAT 0094  
      __end_of_configADC 0151                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0126                  __ptext2 013C                  __ptext3 0014  
                __ptext4 010A                  __ptext5 00BF                  __ptext6 0151  
             ??_canalADC 0074             __size_of_ISR 0029                  _spiInit 0126  
   end_of_initialization 0010               ??_spiWrite 0070                _PORTAbits 0005  
              _TRISAbits 0085                _TRISCbits 0087              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 00E8              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_canalADC 00AB                _configADC 013C  
      __size_of_spiWrite 0006                 ?_spiInit 0074           __size_of_Setup 001C  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               ?_configADC 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                 _canalADC 0014  
          canalADC@canal 0074         __size_of_spiInit 0016            __size_of_main 0022  
               _spiWrite 0151             spiInit@sType 0077              ??_configADC 0074  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
