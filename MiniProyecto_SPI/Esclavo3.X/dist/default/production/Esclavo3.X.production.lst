

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 09:15:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000C                     _PIR1bits	set	12
   368  000B                     _INTCONbits	set	11
   369  0005                     _PORTA	set	5
   370  0006                     _PORTBbits	set	6
   371  0006                     _PORTB	set	6
   372  0007                     _PORTC	set	7
   373  0005                     _PORTAbits	set	5
   374  001F                     _ADCON0bits	set	31
   375  001E                     _ADRESH	set	30
   376  0066                     _ADIF	set	102
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  009F                     _ADCON1bits	set	159
   381  0085                     _TRISAbits	set	133
   382  008C                     _PIE1bits	set	140
   383  0087                     _TRISC	set	135
   384  0086                     _TRISB	set	134
   385  0085                     _TRISA	set	133
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0188                     _ANSELbits	set	392
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396  000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0011                     __end_of__initialization:
   405  0011  0183               	clrf	3
   406  0012  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0078                     __pbssCOMMON:
   410  0078                     _temperatura:
   411  0078                     	ds	1
   412  0079                     _varADC:
   413  0079                     	ds	1
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_spiWrite:
   418  0070                     ??_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_Setup:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_configADC:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_canalADC:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_ISR:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiWrite@dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_ISR:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	3
   446  0074                     ??_Setup:
   447  0074                     ??_configADC:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     ??_canalADC:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ?_spiInit:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     canalADC@canal:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     spiInit@sDataSample:	
   460                           ; 1 bytes @ 0x4
   461                           
   462                           
   463                           ; 1 bytes @ 0x4
   464  0074                     	ds	1
   465  0075                     spiInit@sClockIdle:
   466                           
   467                           ; 1 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     spiInit@sTransmitEdge:
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     ??_spiInit:
   474  0077                     spiInit@sType:	
   475                           ; 1 bytes @ 0x7
   476                           
   477                           
   478                           ; 1 bytes @ 0x7
   479  0077                     	ds	1
   480                           
   481                           	psect	cstackBANK0
   482  0020                     __pcstackBANK0:
   483  0020                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x0
   486  0020                     	ds	2
   487                           
   488                           	psect	maintext
   489  00C0                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 65 in file "mainEsclavo3.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       2       0       0       0
   512 ;;      Totals:         0       2       0       0       0
   513 ;;Total ram usage:        2 bytes
   514 ;; Hardware stack levels required when called:    3
   515 ;; This function calls:
   516 ;;		_Setup
   517 ;;		_canalADC
   518 ;;		_configADC
   519 ;;		_spiInit
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  00C0                     _main:
   528  00C0                     l931:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;mainEsclavo3.c: 66:     }
   534  00C0  120A  118A  212D  120A  118A  	fcall	_Setup
   535  00C5                     l933:
   536                           
   537                           ;mainEsclavo3.c: 67:     return;
   538  00C5  120A  118A  215A  120A  118A  	fcall	_configADC
   539  00CA                     l935:
   540                           
   541                           ;mainEsclavo3.c: 68: }
   542  00CA  3000               	movlw	0
   543  00CB  120A  118A  2015  120A  118A  	fcall	_canalADC
   544  00D0                     l937:
   545                           
   546                           ;mainEsclavo3.c: 70: void Setup(void) {
   547  00D0  01F4               	clrf	spiInit@sDataSample
   548  00D1  01F5               	clrf	spiInit@sClockIdle
   549  00D2  01F6               	clrf	spiInit@sTransmitEdge
   550  00D3  3024               	movlw	36
   551  00D4  120A  118A  2144  120A  118A  	fcall	_spiInit
   552  00D9                     l939:
   553                           
   554                           ;mainEsclavo3.c: 77:     TRISA = 1;
   555  00D9  0879               	movf	_varADC,w	;volatile
   556  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   557  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   558  00DC  00A0               	movwf	??_main
   559  00DD  0720               	addwf	??_main,w
   560  00DE  00A1               	movwf	??_main+1
   561  00DF  0821               	movf	??_main+1,w
   562  00E0  00F8               	movwf	_temperatura
   563  00E1                     l941:
   564                           
   565                           ;mainEsclavo3.c: 79:     TRISC = 0;
   566  00E1  1685               	bsf	5,5	;volatile
   567  00E2                     l943:
   568                           
   569                           ;mainEsclavo3.c: 80: 
   570  00E2  0879               	movf	_varADC,w	;volatile
   571  00E3  0087               	movwf	7	;volatile
   572  00E4                     l945:
   573                           
   574                           ;mainEsclavo3.c: 82:     PORTB = 0;
   575  00E4  300D               	movlw	13
   576  00E5  0279               	subwf	_varADC,w	;volatile
   577  00E6  1803               	skipnc
   578  00E7  28E9               	goto	u281
   579  00E8  28EA               	goto	u280
   580  00E9                     u281:
   581  00E9  28EC               	goto	l951
   582  00EA                     u280:
   583  00EA                     l947:
   584                           
   585                           ;mainEsclavo3.c: 83:     INTCONbits.GIE = 1;
   586  00EA  0186               	clrf	6	;volatile
   587  00EB                     l949:
   588                           
   589                           ;mainEsclavo3.c: 84:     INTCONbits.PEIE = 1;
   590  00EB  1506               	bsf	6,2	;volatile
   591  00EC                     l951:
   592                           
   593                           ;mainEsclavo3.c: 88: }
   594  00EC  3013               	movlw	19
   595  00ED  0279               	subwf	_varADC,w	;volatile
   596  00EE  1803               	skipnc
   597  00EF  28F1               	goto	u291
   598  00F0  28F2               	goto	u290
   599  00F1                     u291:
   600  00F1  28FA               	goto	l959
   601  00F2                     u290:
   602  00F2                     l953:
   603  00F2  300D               	movlw	13
   604  00F3  0279               	subwf	_varADC,w	;volatile
   605  00F4  1C03               	skipc
   606  00F5  28F7               	goto	u301
   607  00F6  28F8               	goto	u300
   608  00F7                     u301:
   609  00F7  28FA               	goto	l959
   610  00F8                     u300:
   611  00F8                     l955:
   612  00F8  0186               	clrf	6	;volatile
   613  00F9                     l957:
   614  00F9  1486               	bsf	6,1	;volatile
   615  00FA                     l959:
   616  00FA  3013               	movlw	19
   617  00FB  0279               	subwf	_varADC,w	;volatile
   618  00FC  1C03               	skipc
   619  00FD  28FF               	goto	u311
   620  00FE  2900               	goto	u310
   621  00FF                     u311:
   622  00FF  28D9               	goto	l939
   623  0100                     u310:
   624  0100                     l961:
   625  0100  0186               	clrf	6	;volatile
   626  0101                     l963:
   627  0101  1406               	bsf	6,0	;volatile
   628  0102  28D9               	goto	l939
   629  0103  120A  118A  280C   	ljmp	start
   630  0106                     __end_of_main:
   631                           
   632                           	psect	text1
   633  0144                     __ptext1:	
   634 ;; *************** function _spiInit *****************
   635 ;; Defined at:
   636 ;;		line 13 in file "SPI.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  sType           1    wreg     enum E1264
   639 ;;  sDataSample     1    4[COMMON] enum E1272
   640 ;;  sClockIdle      1    5[COMMON] enum E1276
   641 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  sType           1    7[COMMON] enum E1264
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         3       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         4       0       0       0       0
   657 ;;Total ram usage:        4 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _spiInit
   669  0144                     _spiInit:
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   673                           ;spiInit@sType stored from wreg
   674  0144  00F7               	movwf	spiInit@sType
   675  0145                     l887:
   676                           
   677                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   678  0145  1683               	bsf	3,5	;RP0=1, select bank1
   679  0146  1303               	bcf	3,6	;RP1=0, select bank1
   680  0147  1287               	bcf	7,5	;volatile
   681                           
   682                           ;SPI.c: 16:     if(sType & 0b00000100)
   683  0148  1D77               	btfss	spiInit@sType,2
   684  0149  294B               	goto	u231
   685  014A  294C               	goto	u230
   686  014B                     u231:
   687  014B  2950               	goto	l893
   688  014C                     u230:
   689  014C                     l889:
   690                           
   691                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   692  014C  0876               	movf	spiInit@sTransmitEdge,w
   693  014D  0094               	movwf	20	;volatile
   694  014E                     l891:
   695                           
   696                           ;SPI.c: 19:         TRISC3 = 1;
   697  014E  1587               	bsf	7,3	;volatile
   698                           
   699                           ;SPI.c: 20:     }
   700  014F  2954               	goto	l121
   701  0150                     l893:
   702                           
   703                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   704  0150  0874               	movf	spiInit@sDataSample,w
   705  0151  0476               	iorwf	spiInit@sTransmitEdge,w
   706  0152  0094               	movwf	20	;volatile
   707  0153                     l895:
   708                           
   709                           ;SPI.c: 24:         TRISC3 = 0;
   710  0153  1187               	bcf	7,3	;volatile
   711  0154                     l121:	
   712                           ;SPI.c: 25:     }
   713                           
   714                           
   715                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   716  0154  0877               	movf	spiInit@sType,w
   717  0155  0475               	iorwf	spiInit@sClockIdle,w
   718  0156  1283               	bcf	3,5	;RP0=0, select bank0
   719  0157  1303               	bcf	3,6	;RP1=0, select bank0
   720  0158  0094               	movwf	20	;volatile
   721  0159                     l122:
   722  0159  0008               	return
   723  015A                     __end_of_spiInit:
   724                           
   725                           	psect	text2
   726  015A                     __ptext2:	
   727 ;; *************** function _configADC *****************
   728 ;; Defined at:
   729 ;;		line 140 in file "ADC.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		None
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _configADC
   759  015A                     _configADC:
   760  015A                     l757:	
   761                           ;incstack = 0
   762                           ; Regs used in _configADC: []
   763                           
   764                           
   765                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   766  015A  1283               	bcf	3,5	;RP0=0, select bank0
   767  015B  1303               	bcf	3,6	;RP1=0, select bank0
   768  015C  171F               	bsf	31,6	;volatile
   769                           
   770                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   771  015D  139F               	bcf	31,7	;volatile
   772                           
   773                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   774  015E  1683               	bsf	3,5	;RP0=1, select bank1
   775  015F  1303               	bcf	3,6	;RP1=0, select bank1
   776  0160  121F               	bcf	31,4	;volatile
   777                           
   778                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   779  0161  129F               	bcf	31,5	;volatile
   780                           
   781                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   782  0162  139F               	bcf	31,7	;volatile
   783                           
   784                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   785  0163  1283               	bcf	3,5	;RP0=0, select bank0
   786  0164  1303               	bcf	3,6	;RP1=0, select bank0
   787  0165  130C               	bcf	12,6	;volatile
   788                           
   789                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   790  0166  1683               	bsf	3,5	;RP0=1, select bank1
   791  0167  1303               	bcf	3,6	;RP1=0, select bank1
   792  0168  170C               	bsf	12,6	;volatile
   793                           
   794                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   795  0169  178B               	bsf	11,7	;volatile
   796                           
   797                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   798  016A  170B               	bsf	11,6	;volatile
   799                           
   800                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   801  016B  1283               	bcf	3,5	;RP0=0, select bank0
   802  016C  1303               	bcf	3,6	;RP1=0, select bank0
   803  016D  141F               	bsf	31,0	;volatile
   804  016E                     l105:
   805  016E  0008               	return
   806  016F                     __end_of_configADC:
   807                           
   808                           	psect	text3
   809  0015                     __ptext3:	
   810 ;; *************** function _canalADC *****************
   811 ;; Defined at:
   812 ;;		line 13 in file "ADC.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  canal           1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  canal           1    4[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         1       0       0       0       0
   830 ;;Total ram usage:        1 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _canalADC
   842  0015                     _canalADC:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   846                           ;canalADC@canal stored from wreg
   847  0015  00F4               	movwf	canalADC@canal
   848  0016                     l759:
   849                           
   850                           ;ADC.c: 15:     if (canal == 0) {
   851  0016  0874               	movf	canalADC@canal,w
   852  0017  1D03               	btfss	3,2
   853  0018  281A               	goto	u11
   854  0019  281B               	goto	u10
   855  001A                     u11:
   856  001A  2821               	goto	l763
   857  001B                     u10:
   858  001B                     l761:
   859                           
   860                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   861  001B  1283               	bcf	3,5	;RP0=0, select bank0
   862  001C  1303               	bcf	3,6	;RP1=0, select bank0
   863  001D  129F               	bcf	31,5	;volatile
   864                           
   865                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   866  001E  121F               	bcf	31,4	;volatile
   867                           
   868                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   869  001F  119F               	bcf	31,3	;volatile
   870                           
   871                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   872  0020  111F               	bcf	31,2	;volatile
   873  0021                     l763:
   874                           
   875                           ;ADC.c: 23:     if (canal == 1) {
   876  0021  0374               	decf	canalADC@canal,w
   877  0022  1D03               	btfss	3,2
   878  0023  2825               	goto	u21
   879  0024  2826               	goto	u20
   880  0025                     u21:
   881  0025  282C               	goto	l767
   882  0026                     u20:
   883  0026                     l765:
   884                           
   885                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   886  0026  1283               	bcf	3,5	;RP0=0, select bank0
   887  0027  1303               	bcf	3,6	;RP1=0, select bank0
   888  0028  129F               	bcf	31,5	;volatile
   889                           
   890                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   891  0029  121F               	bcf	31,4	;volatile
   892                           
   893                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   894  002A  119F               	bcf	31,3	;volatile
   895                           
   896                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   897  002B  151F               	bsf	31,2	;volatile
   898  002C                     l767:
   899                           
   900                           ;ADC.c: 32:     if (canal == 2) {
   901  002C  3002               	movlw	2
   902  002D  0674               	xorwf	canalADC@canal,w
   903  002E  1D03               	btfss	3,2
   904  002F  2831               	goto	u31
   905  0030  2832               	goto	u30
   906  0031                     u31:
   907  0031  2838               	goto	l771
   908  0032                     u30:
   909  0032                     l769:
   910                           
   911                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   912  0032  1283               	bcf	3,5	;RP0=0, select bank0
   913  0033  1303               	bcf	3,6	;RP1=0, select bank0
   914  0034  129F               	bcf	31,5	;volatile
   915                           
   916                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   917  0035  121F               	bcf	31,4	;volatile
   918                           
   919                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   920  0036  159F               	bsf	31,3	;volatile
   921                           
   922                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   923  0037  111F               	bcf	31,2	;volatile
   924  0038                     l771:
   925                           
   926                           ;ADC.c: 41:     if (canal == 3) {
   927  0038  3003               	movlw	3
   928  0039  0674               	xorwf	canalADC@canal,w
   929  003A  1D03               	btfss	3,2
   930  003B  283D               	goto	u41
   931  003C  283E               	goto	u40
   932  003D                     u41:
   933  003D  2844               	goto	l775
   934  003E                     u40:
   935  003E                     l773:
   936                           
   937                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   938  003E  1283               	bcf	3,5	;RP0=0, select bank0
   939  003F  1303               	bcf	3,6	;RP1=0, select bank0
   940  0040  129F               	bcf	31,5	;volatile
   941                           
   942                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   943  0041  121F               	bcf	31,4	;volatile
   944                           
   945                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   946  0042  159F               	bsf	31,3	;volatile
   947                           
   948                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   949  0043  151F               	bsf	31,2	;volatile
   950  0044                     l775:
   951                           
   952                           ;ADC.c: 50:     if (canal == 4) {
   953  0044  3004               	movlw	4
   954  0045  0674               	xorwf	canalADC@canal,w
   955  0046  1D03               	btfss	3,2
   956  0047  2849               	goto	u51
   957  0048  284A               	goto	u50
   958  0049                     u51:
   959  0049  2850               	goto	l779
   960  004A                     u50:
   961  004A                     l777:
   962                           
   963                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   964  004A  1283               	bcf	3,5	;RP0=0, select bank0
   965  004B  1303               	bcf	3,6	;RP1=0, select bank0
   966  004C  129F               	bcf	31,5	;volatile
   967                           
   968                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   969  004D  161F               	bsf	31,4	;volatile
   970                           
   971                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   972  004E  119F               	bcf	31,3	;volatile
   973                           
   974                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   975  004F  111F               	bcf	31,2	;volatile
   976  0050                     l779:
   977                           
   978                           ;ADC.c: 59:     if (canal == 5) {
   979  0050  3005               	movlw	5
   980  0051  0674               	xorwf	canalADC@canal,w
   981  0052  1D03               	btfss	3,2
   982  0053  2855               	goto	u61
   983  0054  2856               	goto	u60
   984  0055                     u61:
   985  0055  285C               	goto	l783
   986  0056                     u60:
   987  0056                     l781:
   988                           
   989                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   990  0056  1283               	bcf	3,5	;RP0=0, select bank0
   991  0057  1303               	bcf	3,6	;RP1=0, select bank0
   992  0058  129F               	bcf	31,5	;volatile
   993                           
   994                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   995  0059  161F               	bsf	31,4	;volatile
   996                           
   997                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   998  005A  119F               	bcf	31,3	;volatile
   999                           
  1000                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
  1001  005B  151F               	bsf	31,2	;volatile
  1002  005C                     l783:
  1003                           
  1004                           ;ADC.c: 68:     if (canal == 6) {
  1005  005C  3006               	movlw	6
  1006  005D  0674               	xorwf	canalADC@canal,w
  1007  005E  1D03               	btfss	3,2
  1008  005F  2861               	goto	u71
  1009  0060  2862               	goto	u70
  1010  0061                     u71:
  1011  0061  2868               	goto	l787
  1012  0062                     u70:
  1013  0062                     l785:
  1014                           
  1015                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
  1016  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0064  129F               	bcf	31,5	;volatile
  1019                           
  1020                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
  1021  0065  161F               	bsf	31,4	;volatile
  1022                           
  1023                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
  1024  0066  159F               	bsf	31,3	;volatile
  1025                           
  1026                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
  1027  0067  111F               	bcf	31,2	;volatile
  1028  0068                     l787:
  1029                           
  1030                           ;ADC.c: 77:     if (canal == 7) {
  1031  0068  3007               	movlw	7
  1032  0069  0674               	xorwf	canalADC@canal,w
  1033  006A  1D03               	btfss	3,2
  1034  006B  286D               	goto	u81
  1035  006C  286E               	goto	u80
  1036  006D                     u81:
  1037  006D  2874               	goto	l791
  1038  006E                     u80:
  1039  006E                     l789:
  1040                           
  1041                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
  1042  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1043  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0070  129F               	bcf	31,5	;volatile
  1045                           
  1046                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
  1047  0071  161F               	bsf	31,4	;volatile
  1048                           
  1049                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
  1050  0072  159F               	bsf	31,3	;volatile
  1051                           
  1052                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
  1053  0073  151F               	bsf	31,2	;volatile
  1054  0074                     l791:
  1055                           
  1056                           ;ADC.c: 86:     if (canal == 8) {
  1057  0074  3008               	movlw	8
  1058  0075  0674               	xorwf	canalADC@canal,w
  1059  0076  1D03               	btfss	3,2
  1060  0077  2879               	goto	u91
  1061  0078  287A               	goto	u90
  1062  0079                     u91:
  1063  0079  2880               	goto	l795
  1064  007A                     u90:
  1065  007A                     l793:
  1066                           
  1067                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
  1068  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1069  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1070  007C  169F               	bsf	31,5	;volatile
  1071                           
  1072                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
  1073  007D  121F               	bcf	31,4	;volatile
  1074                           
  1075                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
  1076  007E  119F               	bcf	31,3	;volatile
  1077                           
  1078                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
  1079  007F  111F               	bcf	31,2	;volatile
  1080  0080                     l795:
  1081                           
  1082                           ;ADC.c: 94:     if (canal == 9) {
  1083  0080  3009               	movlw	9
  1084  0081  0674               	xorwf	canalADC@canal,w
  1085  0082  1D03               	btfss	3,2
  1086  0083  2885               	goto	u101
  1087  0084  2886               	goto	u100
  1088  0085                     u101:
  1089  0085  288C               	goto	l799
  1090  0086                     u100:
  1091  0086                     l797:
  1092                           
  1093                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1094  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0088  169F               	bsf	31,5	;volatile
  1097                           
  1098                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1099  0089  121F               	bcf	31,4	;volatile
  1100                           
  1101                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1102  008A  119F               	bcf	31,3	;volatile
  1103                           
  1104                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1105  008B  151F               	bsf	31,2	;volatile
  1106  008C                     l799:
  1107                           
  1108                           ;ADC.c: 102:     if (canal == 10) {
  1109  008C  300A               	movlw	10
  1110  008D  0674               	xorwf	canalADC@canal,w
  1111  008E  1D03               	btfss	3,2
  1112  008F  2891               	goto	u111
  1113  0090  2892               	goto	u110
  1114  0091                     u111:
  1115  0091  2898               	goto	l803
  1116  0092                     u110:
  1117  0092                     l801:
  1118                           
  1119                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1120  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0094  169F               	bsf	31,5	;volatile
  1123                           
  1124                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1125  0095  121F               	bcf	31,4	;volatile
  1126                           
  1127                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1128  0096  159F               	bsf	31,3	;volatile
  1129                           
  1130                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1131  0097  111F               	bcf	31,2	;volatile
  1132  0098                     l803:
  1133                           
  1134                           ;ADC.c: 111:     if (canal == 11) {
  1135  0098  300B               	movlw	11
  1136  0099  0674               	xorwf	canalADC@canal,w
  1137  009A  1D03               	btfss	3,2
  1138  009B  289D               	goto	u121
  1139  009C  289E               	goto	u120
  1140  009D                     u121:
  1141  009D  28A4               	goto	l807
  1142  009E                     u120:
  1143  009E                     l805:
  1144                           
  1145                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1146  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1147  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00A0  169F               	bsf	31,5	;volatile
  1149                           
  1150                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1151  00A1  121F               	bcf	31,4	;volatile
  1152                           
  1153                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1154  00A2  159F               	bsf	31,3	;volatile
  1155                           
  1156                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1157  00A3  151F               	bsf	31,2	;volatile
  1158  00A4                     l807:
  1159                           
  1160                           ;ADC.c: 120:     if (canal == 12) {
  1161  00A4  300C               	movlw	12
  1162  00A5  0674               	xorwf	canalADC@canal,w
  1163  00A6  1D03               	btfss	3,2
  1164  00A7  28A9               	goto	u131
  1165  00A8  28AA               	goto	u130
  1166  00A9                     u131:
  1167  00A9  28B0               	goto	l811
  1168  00AA                     u130:
  1169  00AA                     l809:
  1170                           
  1171                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1172  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00AC  169F               	bsf	31,5	;volatile
  1175                           
  1176                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1177  00AD  161F               	bsf	31,4	;volatile
  1178                           
  1179                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1180  00AE  119F               	bcf	31,3	;volatile
  1181                           
  1182                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1183  00AF  111F               	bcf	31,2	;volatile
  1184  00B0                     l811:
  1185                           
  1186                           ;ADC.c: 129:     if (canal == 13) {
  1187  00B0  300D               	movlw	13
  1188  00B1  0674               	xorwf	canalADC@canal,w
  1189  00B2  1D03               	btfss	3,2
  1190  00B3  28B5               	goto	u141
  1191  00B4  28B6               	goto	u140
  1192  00B5                     u141:
  1193  00B5  28BC               	goto	l101
  1194  00B6                     u140:
  1195  00B6                     l813:
  1196                           
  1197                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1198  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00B8  169F               	bsf	31,5	;volatile
  1201                           
  1202                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1203  00B9  161F               	bsf	31,4	;volatile
  1204                           
  1205                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1206  00BA  119F               	bcf	31,3	;volatile
  1207                           
  1208                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1209  00BB  151F               	bsf	31,2	;volatile
  1210  00BC                     l101:	
  1211                           ;ADC.c: 135:     }
  1212                           
  1213                           
  1214                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1215  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1216  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1217  00BE  149F               	bsf	31,1	;volatile
  1218  00BF                     l102:
  1219  00BF  0008               	return
  1220  00C0                     __end_of_canalADC:
  1221                           
  1222                           	psect	text4
  1223  012D                     __ptext4:	
  1224 ;; *************** function _Setup *****************
  1225 ;; Defined at:
  1226 ;;		line 101 in file "mainEsclavo3.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    2
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _Setup
  1256  012D                     _Setup:
  1257  012D                     l733:	
  1258                           ;incstack = 0
  1259                           ; Regs used in _Setup: [wreg+status,2]
  1260                           
  1261  012D  1683               	bsf	3,5	;RP0=1, select bank3
  1262  012E  1703               	bsf	3,6	;RP1=1, select bank3
  1263  012F  0188               	clrf	8	;volatile
  1264  0130  0189               	clrf	9	;volatile
  1265  0131                     l735:
  1266  0131  1408               	bsf	8,0	;volatile
  1267  0132                     l737:
  1268  0132  3001               	movlw	1
  1269  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0135  0085               	movwf	5	;volatile
  1272  0136                     l739:
  1273  0136  0186               	clrf	6	;volatile
  1274  0137                     l741:
  1275  0137  0187               	clrf	7	;volatile
  1276  0138                     l743:
  1277  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1279  013A  0185               	clrf	5	;volatile
  1280  013B                     l745:
  1281  013B  0186               	clrf	6	;volatile
  1282  013C                     l747:
  1283  013C  178B               	bsf	11,7	;volatile
  1284  013D                     l749:
  1285  013D  170B               	bsf	11,6	;volatile
  1286  013E                     l751:
  1287  013E  118C               	bcf	12,3	;volatile
  1288  013F                     l753:
  1289  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1290  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1291  0141  158C               	bsf	12,3	;volatile
  1292  0142                     l755:
  1293  0142  1685               	bsf	5,5	;volatile
  1294  0143                     l75:
  1295  0143  0008               	return
  1296  0144                     __end_of_Setup:
  1297                           
  1298                           	psect	text5
  1299  0106                     __ptext5:	
  1300 ;; *************** function _ISR *****************
  1301 ;; Defined at:
  1302 ;;		line 47 in file "mainEsclavo3.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0
  1318 ;;      Temps:          3       0       0       0       0
  1319 ;;      Totals:         3       0       0       0       0
  1320 ;;Total ram usage:        3 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    1
  1323 ;; This function calls:
  1324 ;;		_spiWrite
  1325 ;; This function is called by:
  1326 ;;		Interrupt level 1
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _ISR
  1332  0106                     _ISR:
  1333  0106                     i1l827:
  1334                           
  1335                           ;mainEsclavo3.c: 49:         PORTC = varADC;
  1336  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0108  1D8C               	btfss	12,3	;volatile
  1339  0109  290B               	goto	u17_21
  1340  010A  290C               	goto	u17_20
  1341  010B                     u17_21:
  1342  010B  2915               	goto	i1l833
  1343  010C                     u17_20:
  1344  010C                     i1l829:
  1345                           
  1346                           ;mainEsclavo3.c: 50: 
  1347  010C  0878               	movf	_temperatura,w
  1348  010D  120A  118A  216F  120A  118A  	fcall	_spiWrite
  1349  0112                     i1l831:
  1350                           
  1351                           ;mainEsclavo3.c: 51:         if (varADC <= 12) {
  1352  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0114  118C               	bcf	12,3	;volatile
  1355  0115                     i1l833:
  1356                           
  1357                           ;mainEsclavo3.c: 55:         }
  1358  0115  1F0C               	btfss	12,6	;volatile
  1359  0116  2918               	goto	u18_21
  1360  0117  2919               	goto	u18_20
  1361  0118                     u18_21:
  1362  0118  2926               	goto	i1l61
  1363  0119                     u18_20:
  1364  0119                     i1l835:
  1365                           
  1366                           ;mainEsclavo3.c: 56: 
  1367  0119  3004               	movlw	4
  1368  011A  00F1               	movwf	??_ISR
  1369  011B                     u32_27:
  1370  011B  0BF1               	decfsz	??_ISR,f
  1371  011C  291B               	goto	u32_27
  1372  011D  291E               	nop2
  1373                           
  1374                           ;mainEsclavo3.c: 57:         if ((varADC <= 18) & (varADC >= 13)) {
  1375  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1376  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0120  081E               	movf	30,w	;volatile
  1378  0121  00F1               	movwf	??_ISR
  1379  0122  0871               	movf	??_ISR,w
  1380  0123  00F9               	movwf	_varADC	;volatile
  1381  0124                     i1l837:
  1382                           
  1383                           ;mainEsclavo3.c: 58:             PORTB = 0;
  1384  0124  130C               	bcf	12,6	;volatile
  1385  0125                     i1l839:
  1386                           
  1387                           ;mainEsclavo3.c: 59:             PORTBbits.RB1 = 1;
  1388  0125  149F               	bsf	31,1	;volatile
  1389  0126                     i1l61:
  1390  0126  0873               	movf	??_ISR+2,w
  1391  0127  008A               	movwf	10
  1392  0128  0E72               	swapf	??_ISR+1,w
  1393  0129  0083               	movwf	3
  1394  012A  0EFE               	swapf	btemp,f
  1395  012B  0E7E               	swapf	btemp,w
  1396  012C  0009               	retfie
  1397  012D                     __end_of_ISR:
  1398                           
  1399                           	psect	intentry
  1400  0004                     __pintentry:	
  1401                           ;incstack = 0
  1402                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1403                           
  1404  0004                     interrupt_function:
  1405  007E                     saved_w	set	btemp
  1406  0004  00FE               	movwf	btemp
  1407  0005  0E03               	swapf	3,w
  1408  0006  00F2               	movwf	??_ISR+1
  1409  0007  080A               	movf	10,w
  1410  0008  00F3               	movwf	??_ISR+2
  1411  0009  120A  118A  2906   	ljmp	_ISR
  1412                           
  1413                           	psect	text6
  1414  016F                     __ptext6:	
  1415 ;; *************** function _spiWrite *****************
  1416 ;; Defined at:
  1417 ;;		line 35 in file "SPI.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  dat             1    wreg     unsigned char 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  dat             1    0[COMMON] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0
  1434 ;;      Totals:         1       0       0       0       0
  1435 ;;Total ram usage:        1 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_ISR
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _spiWrite
  1446  016F                     _spiWrite:
  1447                           
  1448                           ;incstack = 0
  1449                           ; Regs used in _spiWrite: [wreg]
  1450                           ;spiWrite@dat stored from wreg
  1451  016F  00F0               	movwf	spiWrite@dat
  1452  0170                     i1l731:
  1453                           
  1454                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1455  0170  0870               	movf	spiWrite@dat,w
  1456  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0173  0093               	movwf	19	;volatile
  1459  0174                     i1l131:
  1460  0174  0008               	return
  1461  0175                     __end_of_spiWrite:
  1462  007E                     btemp	set	126	;btemp
  1463  007E                     wtemp0	set	126
  1464                           
  1465                           	psect	config
  1466                           
  1467                           ;Config register CONFIG1 @ 0x2007
  1468                           ;	Oscillator Selection bits
  1469                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1470                           ;	Watchdog Timer Enable bit
  1471                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1472                           ;	Power-up Timer Enable bit
  1473                           ;	PWRTE = OFF, PWRT disabled
  1474                           ;	RE3/MCLR pin function select bit
  1475                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1476                           ;	Code Protection bit
  1477                           ;	CP = OFF, Program memory code protection is disabled
  1478                           ;	Data Code Protection bit
  1479                           ;	CPD = OFF, Data memory code protection is disabled
  1480                           ;	Brown Out Reset Selection bits
  1481                           ;	BOREN = OFF, BOR disabled
  1482                           ;	Internal External Switchover bit
  1483                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1484                           ;	Fail-Safe Clock Monitor Enabled bit
  1485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1486                           ;	Low Voltage Programming Enable bit
  1487                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1488                           ;	In-Circuit Debugger Mode bit
  1489                           ;	DEBUG = 0x1, unprogrammed default
  1490  2007                     	org	8199
  1491  2007  20D4               	dw	8404
  1492                           
  1493                           ;Config register CONFIG2 @ 0x2008
  1494                           ;	Brown-out Reset Selection bit
  1495                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1496                           ;	Flash Program Memory Self Write Enable bits
  1497                           ;	WRT = OFF, Write protection off
  1498  2008                     	org	8200
  1499  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     570
                                              0 BANK0      2     2      0
                              _Setup
                           _canalADC
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 09:15:01 2021

            _SSPSTATbits 0094                       l75 0143                       u10 001B  
                     u11 001A                       u20 0026                       u21 0025  
                     u30 0032                       u31 0031                       u40 003E  
                     u41 003D                       u50 004A                       u51 0049  
                     u60 0056                       u61 0055                       u70 0062  
                     u71 0061                       u80 006E                       u81 006D  
                     u90 007A                       u91 0079                      l101 00BC  
                    l102 00BF                      l105 016E                      l121 0154  
                    l122 0159                      l801 0092                      l811 00B0  
                    l803 0098                      l741 0137                      l733 012D  
                    l813 00B6                      l805 009E                      l751 013E  
                    l743 0138                      l735 0131                      l807 00A4  
                    l753 013F                      l745 013B                      l737 0132  
                    l809 00AA                      l761 001B                      l755 0142  
                    l747 013C                      l739 0136                      l771 0038  
                    l763 0021                      l931 00C0                      l749 013D  
                    l781 0056                      l773 003E                      l765 0026  
                    l757 015A                      l941 00E1                      l933 00C5  
                    l791 0074                      l783 005C                      l775 0044  
                    l767 002C                      l759 0016                      l951 00EC  
                    l943 00E2                      l935 00CA                      l793 007A  
                    l785 0062                      l777 004A                      l769 0032  
                    l961 0100                      l953 00F2                      l945 00E4  
                    l937 00D0                      l795 0080                      l787 0068  
                    l779 0050                      l891 014E                      l963 0101  
                    l955 00F8                      l947 00EA                      l939 00D9  
                    l797 0086                      l789 006E                      l893 0150  
                    l957 00F9                      l949 00EB                      l799 008C  
                    l895 0153                      l887 0145                      l959 00FA  
                    l889 014C                      u100 0086                      u101 0085  
                    u110 0092                      u111 0091                      u120 009E  
                    u121 009D                      u130 00AA                      u131 00A9  
                    u140 00B6                      u300 00F8                      u141 00B5  
                    u301 00F7                      u230 014C                      u310 0100  
                    u231 014B                      u311 00FF                      u280 00EA  
                    u281 00E9                      u290 00F2                      u291 00F1  
                    _ISR 0106                     ?_ISR 0070                     _ADIF 0066  
                   i1l61 0126                     _main 00C0                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l131 0174                    i1l731 0170  
                  i1l831 0112                    i1l833 0115                    i1l835 0119  
                  i1l827 0106                    i1l837 0124                    i1l829 010C  
                  i1l839 0125                    u32_27 011B                    u17_20 010C  
                  u17_21 010B                    u18_20 0119                    u18_21 0118  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _SSPIF 0063                    _Setup 012D                    pclath 000A  
        __end_of_spiInit 015A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0106                   ??_main 0020  
                 ?_Setup 0070                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_canalADC 00C0                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _varADC 0079  
                 saved_w 007E         __end_of_spiWrite 0175                ??_spiInit 0077  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_Setup 0144  
     __size_of_configADC 0015                  ??_Setup 0074               __pmaintext 00C0  
             __pintentry 0004                ?_canalADC 0070                  _SSPSTAT 0094  
      __end_of_configADC 016F                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0144                  __ptext2 015A                  __ptext3 0015  
                __ptext4 012D                  __ptext5 0106                  __ptext6 016F  
             ??_canalADC 0074             __size_of_ISR 0027                  _spiInit 0144  
   end_of_initialization 0011               ??_spiWrite 0070                _PORTAbits 0005  
              _PORTBbits 0006                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 012D              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_canalADC 00AB            __pcstackBANK0 0020  
              _configADC 015A        __size_of_spiWrite 0006                 ?_spiInit 0074  
         __size_of_Setup 0017     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             ?_configADC 0070               _ADCON0bits 001F               _ADCON1bits 009F  
               _canalADC 0015            canalADC@canal 0074         __size_of_spiInit 0016  
          __size_of_main 0046                 _spiWrite 016F             spiInit@sType 0077  
            ??_configADC 0074        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000              _temperatura 0078  
