

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 23:33:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  001A                     _RCREG	set	26
   456  000C                     _PIR1bits	set	12
   457  0019                     _TXREG	set	25
   458  0018                     _RCSTAbits	set	24
   459  0007                     _PORTCbits	set	7
   460  000B                     _INTCONbits	set	11
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0005                     _PORTA	set	5
   464  001F                     _ADCON0bits	set	31
   465  0006                     _PORTB	set	6
   466  001E                     _ADRESH	set	30
   467  0066                     _ADIF	set	102
   468  008C                     _PIE1bits	set	140
   469  009F                     _ADCON1bits	set	159
   470  0086                     _TRISBbits	set	134
   471  0098                     _TXSTAbits	set	152
   472  0099                     _SPBRG	set	153
   473  0086                     _TRISB	set	134
   474  0087                     _TRISC	set	135
   475  0088                     _TRISD	set	136
   476  0085                     _TRISA	set	133
   477  0188                     _ANSELbits	set	392
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	strings
   482  0461                     __pstrings:
   483  0461                     stringtab:
   484  0461                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0461  1BFF               	btfsc	btemp+1,7
   488  0462  2C6B               	ljmp	stringcode
   489  0463  1383               	bcf	3,7
   490  0464  187F               	btfsc	btemp+1,0
   491  0465  1783               	bsf	3,7
   492  0466  0800               	movf	0,w
   493  0467  0A84               	incf	4,f
   494  0468  1903               	skipnz
   495  0469  0AFF               	incf	btemp+1,f
   496  046A  0008               	return
   497  046B                     stringcode:
   498  046B                     stringdir:
   499  046B  3004               	movlw	high stringdir
   500  046C  008A               	movwf	10
   501  046D  0804               	movf	4,w
   502  046E  0A84               	incf	4,f
   503  046F  0782               	addwf	2,f
   504  0470                     __stringbase:
   505  0470  3400               	retlw	0
   506  0471                     __end_of__stringtab:
   507  0471                     STR_1:
   508  0471  3453               	retlw	83	;'S'
   509  0472  3431               	retlw	49	;'1'
   510  0473  3400               	retlw	0
   511  0474                     STR_2:
   512  0474  3453               	retlw	83	;'S'
   513  0475  3432               	retlw	50	;'2'
   514  0476  3400               	retlw	0
   515  0477                     STR_3:
   516  0477  3453               	retlw	83	;'S'
   517  0478  3433               	retlw	51	;'3'
   518  0479  3400               	retlw	0
   519                           
   520                           	psect	cinit
   521  000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524  000F                     __initialization:
   525                           
   526                           ; Clear objects allocated to COMMON
   527  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   528  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   529  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   530  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   531                           
   532                           ; Clear objects allocated to BANK0
   533  0013  1383               	bcf	3,7	;select IRP bank0
   534  0014  303E               	movlw	low __pbssBANK0
   535  0015  0084               	movwf	4
   536  0016  3058               	movlw	low (__pbssBANK0+26)
   537  0017  120A  118A  24DF  120A  118A  	fcall	clear_ram0
   538  001C                     end_of_initialization:	
   539                           ;End of C runtime variable initialization code
   540                           
   541  001C                     __end_of__initialization:
   542  001C  0183               	clrf	3
   543  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   544                           
   545                           	psect	bssCOMMON
   546  0076                     __pbssCOMMON:
   547  0076                     _status:
   548  0076                     	ds	2
   549  0078                     _resultado:
   550  0078                     	ds	1
   551  0079                     _bandera:
   552  0079                     	ds	1
   553                           
   554                           	psect	bssBANK0
   555  003E                     __pbssBANK0:
   556  003E                     _convertir:
   557  003E                     	ds	4
   558  0042                     _varADC2:
   559  0042                     	ds	1
   560  0043                     _varADC1:
   561  0043                     	ds	1
   562  0044                     _buf:
   563  0044                     	ds	20
   564                           
   565                           	psect	clrtext
   566  04DF                     clear_ram0:	
   567                           ;	Called with FSR containing the base address, and
   568                           ;	W with the last address+1
   569                           
   570  04DF  0064               	clrwdt	;clear the watchdog before getting into this loop
   571  04E0                     clrloop0:
   572  04E0  0180               	clrf	0	;clear RAM location pointed to by FSR
   573  04E1  0A84               	incf	4,f	;increment pointer
   574  04E2  0604               	xorwf	4,w	;XOR with final address
   575  04E3  1903               	btfsc	3,2	;have we reached the end yet?
   576  04E4  3400               	retlw	0	;all done for this memory range, return
   577  04E5  0604               	xorwf	4,w	;XOR again to restore value
   578  04E6  2CE0               	goto	clrloop0	;do the next byte
   579                           
   580                           	psect	cstackCOMMON
   581  0070                     __pcstackCOMMON:
   582  0070                     ?_canalADC:
   583  0070                     ?_Setup:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Lcd_Init:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_Lcd_Clear:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_configADC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_ISR:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Port:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Lcd_Cmd:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Lcd_Write_Char:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?i1_canalADC:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??i1_canalADC:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     i1canalADC@canal:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0070                     	ds	1
   622  0071                     ??_ISR:
   623                           
   624                           ; 1 bytes @ 0x1
   625  0071                     	ds	3
   626  0074                     ??_canalADC:
   627  0074                     ??_Setup:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     ??_configADC:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     ??_Lcd_Port:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ??___awdiv:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     Lcd_Port@a:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     canalADC@canal:	
   643                           ; 1 bytes @ 0x4
   644                           
   645                           
   646                           ; 1 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ??_Lcd_Cmd:
   649  0075                     ??_Lcd_Write_Char:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     ??___wmul:	
   653                           ; 1 bytes @ 0x5
   654                           
   655                           
   656                           ; 1 bytes @ 0x5
   657  0075                     	ds	1
   658  0076                     ??_Lcd_Clear:
   659  0076                     ??_Lcd_Write_String:	
   660                           ; 1 bytes @ 0x6
   661                           
   662                           
   663                           	psect	cstackBANK0
   664  0020                     __pcstackBANK0:	
   665                           ; 1 bytes @ 0x6
   666                           
   667  0020                     ?___awdiv:
   668  0020                     Lcd_Cmd@a:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0020                     Lcd_Write_Char@a:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0020                     ___awdiv@divisor:	
   675                           ; 1 bytes @ 0x0
   676                           
   677                           
   678                           ; 2 bytes @ 0x0
   679  0020                     	ds	1
   680  0021                     ??_Lcd_Init:
   681  0021                     ?_Lcd_Set_Cursor:	
   682                           ; 1 bytes @ 0x1
   683                           
   684  0021                     ?_Lcd_Write_String:	
   685                           ; 1 bytes @ 0x1
   686                           
   687  0021                     Lcd_Set_Cursor@b:	
   688                           ; 1 bytes @ 0x1
   689                           
   690  0021                     Lcd_Write_String@a:	
   691                           ; 1 bytes @ 0x1
   692                           
   693                           
   694                           ; 2 bytes @ 0x1
   695  0021                     	ds	1
   696  0022                     ??_Lcd_Set_Cursor:
   697  0022                     ___awdiv@dividend:	
   698                           ; 1 bytes @ 0x2
   699                           
   700                           
   701                           ; 2 bytes @ 0x2
   702  0022                     	ds	1
   703  0023                     Lcd_Set_Cursor@a:
   704  0023                     Lcd_Write_String@i:	
   705                           ; 1 bytes @ 0x3
   706                           
   707                           
   708                           ; 2 bytes @ 0x3
   709  0023                     	ds	1
   710  0024                     Lcd_Set_Cursor@temp:
   711  0024                     ___awdiv@counter:	
   712                           ; 1 bytes @ 0x4
   713                           
   714                           
   715                           ; 1 bytes @ 0x4
   716  0024                     	ds	1
   717  0025                     ___awdiv@sign:
   718                           
   719                           ; 1 bytes @ 0x5
   720  0025                     	ds	1
   721  0026                     ___awdiv@quotient:
   722                           
   723                           ; 2 bytes @ 0x6
   724  0026                     	ds	2
   725  0028                     ?___wmul:
   726  0028                     ___wmul@multiplier:	
   727                           ; 2 bytes @ 0x8
   728                           
   729                           
   730                           ; 2 bytes @ 0x8
   731  0028                     	ds	2
   732  002A                     ___wmul@multiplicand:
   733                           
   734                           ; 2 bytes @ 0xA
   735  002A                     	ds	2
   736  002C                     ___wmul@product:
   737                           
   738                           ; 2 bytes @ 0xC
   739  002C                     	ds	2
   740  002E                     ?___xxtofl:
   741  002E                     ___xxtofl@val:	
   742                           ; 4 bytes @ 0xE
   743                           
   744                           
   745                           ; 4 bytes @ 0xE
   746  002E                     	ds	4
   747  0032                     ??___xxtofl:
   748                           
   749                           ; 1 bytes @ 0x12
   750  0032                     	ds	4
   751  0036                     ___xxtofl@sign:
   752                           
   753                           ; 1 bytes @ 0x16
   754  0036                     	ds	1
   755  0037                     ___xxtofl@exp:
   756                           
   757                           ; 1 bytes @ 0x17
   758  0037                     	ds	1
   759  0038                     ___xxtofl@arg:
   760                           
   761                           ; 4 bytes @ 0x18
   762  0038                     	ds	4
   763  003C                     ??_main:
   764                           
   765                           ; 1 bytes @ 0x1C
   766  003C                     	ds	2
   767                           
   768                           	psect	maintext
   769  0020                     __pmaintext:	
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 77 in file "main.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : B00/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       2       0       0       0
   792 ;;      Totals:         0       2       0       0       0
   793 ;;Total ram usage:        2 bytes
   794 ;; Hardware stack levels required when called:    5
   795 ;; This function calls:
   796 ;;		_Lcd_Clear
   797 ;;		_Lcd_Init
   798 ;;		_Lcd_Set_Cursor
   799 ;;		_Lcd_Write_String
   800 ;;		_Setup
   801 ;;		___awdiv
   802 ;;		___wmul
   803 ;;		___xxtofl
   804 ;;		_canalADC
   805 ;;		_configADC
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _main
   813  0020                     _main:
   814  0020                     l1663:	
   815                           ;incstack = 0
   816                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   817                           
   818                           
   819                           ;main.c: 78: 
   820  0020  120A  118A  2492  120A  118A  	fcall	_Setup
   821                           
   822                           ;main.c: 80: 
   823  0025  120A  118A  2365  120A  118A  	fcall	_Lcd_Init
   824                           
   825                           ;main.c: 81:     return;
   826  002A  120A  118A  24D2  120A  118A  	fcall	_Lcd_Clear
   827  002F                     l1665:
   828                           
   829                           ;main.c: 83: 
   830  002F  120A  118A  24A8  120A  118A  	fcall	_configADC
   831  0034                     l1667:
   832                           
   833                           ;main.c: 84: void Setup(void) {
   834  0034  3000               	movlw	0
   835  0035  120A  118A  21A6  120A  118A  	fcall	_canalADC
   836  003A                     l1669:
   837                           
   838                           ;main.c: 91: 
   839  003A  1283               	bcf	3,5	;RP0=0, select bank0
   840  003B  1303               	bcf	3,6	;RP1=0, select bank0
   841  003C  01A1               	clrf	Lcd_Set_Cursor@b
   842  003D  0AA1               	incf	Lcd_Set_Cursor@b,f
   843  003E  3001               	movlw	1
   844  003F  120A  118A  243B  120A  118A  	fcall	_Lcd_Set_Cursor
   845  0044                     l1671:
   846                           
   847                           ;main.c: 92:     PORTA = 0;
   848  0044  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   849  0045  1283               	bcf	3,5	;RP0=0, select bank0
   850  0046  1303               	bcf	3,6	;RP1=0, select bank0
   851  0047  00A1               	movwf	Lcd_Write_String@a
   852  0048  3080               	movlw	128
   853  0049  00A2               	movwf	Lcd_Write_String@a+1
   854  004A  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_String
   855  004F                     l1673:
   856                           
   857                           ;main.c: 93:     PORTC = 0;
   858  004F  3008               	movlw	8
   859  0050  1283               	bcf	3,5	;RP0=0, select bank0
   860  0051  1303               	bcf	3,6	;RP1=0, select bank0
   861  0052  00BC               	movwf	??_main
   862  0053  083C               	movf	??_main,w
   863  0054  00A1               	movwf	Lcd_Set_Cursor@b
   864  0055  3001               	movlw	1
   865  0056  120A  118A  243B  120A  118A  	fcall	_Lcd_Set_Cursor
   866  005B                     l1675:
   867                           
   868                           ;main.c: 94:     PORTD = 0;
   869  005B  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   870  005C  1283               	bcf	3,5	;RP0=0, select bank0
   871  005D  1303               	bcf	3,6	;RP1=0, select bank0
   872  005E  00A1               	movwf	Lcd_Write_String@a
   873  005F  3080               	movlw	128
   874  0060  00A2               	movwf	Lcd_Write_String@a+1
   875  0061  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_String
   876  0066                     l1677:
   877                           
   878                           ;main.c: 95:     PORTB = 0;
   879  0066  300F               	movlw	15
   880  0067  1283               	bcf	3,5	;RP0=0, select bank0
   881  0068  1303               	bcf	3,6	;RP1=0, select bank0
   882  0069  00BC               	movwf	??_main
   883  006A  083C               	movf	??_main,w
   884  006B  00A1               	movwf	Lcd_Set_Cursor@b
   885  006C  3001               	movlw	1
   886  006D  120A  118A  243B  120A  118A  	fcall	_Lcd_Set_Cursor
   887  0072                     l1679:
   888                           
   889                           ;main.c: 96: 
   890  0072  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   891  0073  1283               	bcf	3,5	;RP0=0, select bank0
   892  0074  1303               	bcf	3,6	;RP1=0, select bank0
   893  0075  00A1               	movwf	Lcd_Write_String@a
   894  0076  3080               	movlw	128
   895  0077  00A2               	movwf	Lcd_Write_String@a+1
   896  0078  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_String
   897  007D                     l1681:
   898                           
   899                           ;main.c: 98:     INTCONbits.PEIE = 1;
   900  007D  3005               	movlw	5
   901  007E  1283               	bcf	3,5	;RP0=0, select bank0
   902  007F  1303               	bcf	3,6	;RP1=0, select bank0
   903  0080  00AA               	movwf	___wmul@multiplicand
   904  0081  3000               	movlw	0
   905  0082  00AB               	movwf	___wmul@multiplicand+1
   906  0083  0843               	movf	_varADC1,w
   907  0084  00BC               	movwf	??_main
   908  0085  01BD               	clrf	??_main+1
   909  0086  083C               	movf	??_main,w
   910  0087  00A2               	movwf	___awdiv@dividend
   911  0088  083D               	movf	??_main+1,w
   912  0089  00A3               	movwf	___awdiv@dividend+1
   913  008A  30FF               	movlw	255
   914  008B  00A0               	movwf	___awdiv@divisor
   915  008C  3000               	movlw	0
   916  008D  00A1               	movwf	___awdiv@divisor+1
   917  008E  120A  118A  22FC  120A  118A  	fcall	___awdiv
   918  0093  1283               	bcf	3,5	;RP0=0, select bank0
   919  0094  1303               	bcf	3,6	;RP1=0, select bank0
   920  0095  0821               	movf	?___awdiv+1,w
   921  0096  00A9               	movwf	___wmul@multiplier+1
   922  0097  0820               	movf	?___awdiv,w
   923  0098  00A8               	movwf	___wmul@multiplier
   924  0099  120A  118A  2414  120A  118A  	fcall	___wmul
   925  009E  1283               	bcf	3,5	;RP0=0, select bank0
   926  009F  1303               	bcf	3,6	;RP1=0, select bank0
   927  00A0  0828               	movf	?___wmul,w
   928  00A1  00AE               	movwf	___xxtofl@val
   929  00A2  0829               	movf	?___wmul+1,w
   930  00A3  00AF               	movwf	___xxtofl@val+1
   931  00A4  3000               	movlw	0
   932  00A5  1BAF               	btfsc	___xxtofl@val+1,7
   933  00A6  30FF               	movlw	255
   934  00A7  00B0               	movwf	___xxtofl@val+2
   935  00A8  00B1               	movwf	___xxtofl@val+3
   936  00A9  3001               	movlw	1
   937  00AA  120A  118A  20EA  120A  118A  	fcall	___xxtofl
   938  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   939  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   940  00B1  0831               	movf	?___xxtofl+3,w
   941  00B2  00C1               	movwf	_convertir+3
   942  00B3  0830               	movf	?___xxtofl+2,w
   943  00B4  00C0               	movwf	_convertir+2
   944  00B5  082F               	movf	?___xxtofl+1,w
   945  00B6  00BF               	movwf	_convertir+1
   946  00B7  082E               	movf	?___xxtofl,w
   947  00B8  00BE               	movwf	_convertir
   948  00B9                     l1683:
   949                           
   950                           ;main.c: 101:     ANSELbits.ANS0 = 1;
   951  00B9  01A1               	clrf	Lcd_Set_Cursor@b
   952  00BA  0AA1               	incf	Lcd_Set_Cursor@b,f
   953  00BB  3002               	movlw	2
   954  00BC  120A  118A  243B  120A  118A  	fcall	_Lcd_Set_Cursor
   955  00C1                     l1685:
   956                           
   957                           ;main.c: 102:     ANSELbits.ANS1 = 1;
   958  00C1  3044               	movlw	(low (_buf| 0))& (0+255)
   959  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   960  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   961  00C4  00A1               	movwf	Lcd_Write_String@a
   962  00C5  3000               	movlw	0
   963  00C6  00A2               	movwf	Lcd_Write_String@a+1
   964  00C7  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_String
   965  00CC                     l1687:
   966                           
   967                           ;main.c: 104: 
   968  00CC  3008               	movlw	8
   969  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   970  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   971  00CF  00BC               	movwf	??_main
   972  00D0  083C               	movf	??_main,w
   973  00D1  00A1               	movwf	Lcd_Set_Cursor@b
   974  00D2  3002               	movlw	2
   975  00D3  120A  118A  243B  120A  118A  	fcall	_Lcd_Set_Cursor
   976  00D8                     l1689:
   977                           
   978                           ;main.c: 105: }
   979  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   980  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   981  00DA  0842               	movf	_varADC2,w
   982  00DB  00BC               	movwf	??_main
   983  00DC  01BD               	clrf	??_main+1
   984  00DD  083C               	movf	??_main,w
   985  00DE  00A1               	movwf	Lcd_Write_String@a
   986  00DF  083D               	movf	??_main+1,w
   987  00E0  00A2               	movwf	Lcd_Write_String@a+1
   988  00E1  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_String
   989  00E6  283A               	goto	l1669
   990  00E7  120A  118A  280C   	ljmp	start
   991  00EA                     __end_of_main:
   992                           
   993                           	psect	text1
   994  04A8                     __ptext1:	
   995 ;; *************** function _configADC *****************
   996 ;; Defined at:
   997 ;;		line 141 in file "ADC.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		None
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    2
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _configADC
  1027  04A8                     _configADC:
  1028  04A8                     l1331:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _configADC: []
  1031                           
  1032                           
  1033                           ;ADC.c: 143:     ADCON0bits.ADCS0 = 1;
  1034  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1035  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1036  04AA  171F               	bsf	31,6	;volatile
  1037                           
  1038                           ;ADC.c: 144:     ADCON0bits.ADCS1 = 0;
  1039  04AB  139F               	bcf	31,7	;volatile
  1040                           
  1041                           ;ADC.c: 146:     ADCON1bits.VCFG0 = 0;
  1042  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1043  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1044  04AE  121F               	bcf	31,4	;volatile
  1045                           
  1046                           ;ADC.c: 147:     ADCON1bits.VCFG1 = 0;
  1047  04AF  129F               	bcf	31,5	;volatile
  1048                           
  1049                           ;ADC.c: 149:     ADCON1bits.ADFM = 0;
  1050  04B0  139F               	bcf	31,7	;volatile
  1051                           
  1052                           ;ADC.c: 151:     PIR1bits.ADIF = 0;
  1053  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1054  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1055  04B3  130C               	bcf	12,6	;volatile
  1056                           
  1057                           ;ADC.c: 152:     PIE1bits.ADIE = 1;
  1058  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1059  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1060  04B6  170C               	bsf	12,6	;volatile
  1061                           
  1062                           ;ADC.c: 153:     INTCONbits.GIE = 1;
  1063  04B7  178B               	bsf	11,7	;volatile
  1064                           
  1065                           ;ADC.c: 154:     INTCONbits.PEIE = 1;
  1066  04B8  170B               	bsf	11,6	;volatile
  1067                           
  1068                           ;ADC.c: 156:     ADCON0bits.ADON = 1;
  1069  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1070  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1071  04BB  141F               	bsf	31,0	;volatile
  1072  04BC                     l197:
  1073  04BC  0008               	return
  1074  04BD                     __end_of_configADC:
  1075                           
  1076                           	psect	text2
  1077  01A6                     __ptext2:	
  1078 ;; *************** function _canalADC *****************
  1079 ;; Defined at:
  1080 ;;		line 13 in file "ADC.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  canal           1    wreg     unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  canal           1    4[COMMON] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         1       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0
  1097 ;;      Totals:         1       0       0       0       0
  1098 ;;Total ram usage:        1 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    2
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _canalADC
  1110  01A6                     _canalADC:
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _canalADC: [wreg+status,2+status,0]
  1114                           ;canalADC@canal stored from wreg
  1115  01A6  00F4               	movwf	canalADC@canal
  1116  01A7                     l1235:
  1117                           
  1118                           ;ADC.c: 15:     if (canal == 0) {
  1119  01A7  0874               	movf	canalADC@canal,w
  1120  01A8  1D03               	btfss	3,2
  1121  01A9  29AB               	goto	u731
  1122  01AA  29AC               	goto	u730
  1123  01AB                     u731:
  1124  01AB  29B2               	goto	l1239
  1125  01AC                     u730:
  1126  01AC                     l1237:
  1127                           
  1128                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
  1129  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1130  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1131  01AE  129F               	bcf	31,5	;volatile
  1132                           
  1133                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
  1134  01AF  121F               	bcf	31,4	;volatile
  1135                           
  1136                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
  1137  01B0  119F               	bcf	31,3	;volatile
  1138                           
  1139                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
  1140  01B1  111F               	bcf	31,2	;volatile
  1141  01B2                     l1239:
  1142                           
  1143                           ;ADC.c: 23:     if (canal == 1) {
  1144  01B2  0374               	decf	canalADC@canal,w
  1145  01B3  1D03               	btfss	3,2
  1146  01B4  29B6               	goto	u741
  1147  01B5  29B7               	goto	u740
  1148  01B6                     u741:
  1149  01B6  29BD               	goto	l1243
  1150  01B7                     u740:
  1151  01B7                     l1241:
  1152                           
  1153                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
  1154  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01B9  129F               	bcf	31,5	;volatile
  1157                           
  1158                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
  1159  01BA  121F               	bcf	31,4	;volatile
  1160                           
  1161                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
  1162  01BB  119F               	bcf	31,3	;volatile
  1163                           
  1164                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
  1165  01BC  151F               	bsf	31,2	;volatile
  1166  01BD                     l1243:
  1167                           
  1168                           ;ADC.c: 32:     if (canal == 2) {
  1169  01BD  3002               	movlw	2
  1170  01BE  0674               	xorwf	canalADC@canal,w
  1171  01BF  1D03               	btfss	3,2
  1172  01C0  29C2               	goto	u751
  1173  01C1  29C3               	goto	u750
  1174  01C2                     u751:
  1175  01C2  29C9               	goto	l1247
  1176  01C3                     u750:
  1177  01C3                     l1245:
  1178                           
  1179                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
  1180  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1181  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1182  01C5  129F               	bcf	31,5	;volatile
  1183                           
  1184                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
  1185  01C6  121F               	bcf	31,4	;volatile
  1186                           
  1187                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
  1188  01C7  159F               	bsf	31,3	;volatile
  1189                           
  1190                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
  1191  01C8  111F               	bcf	31,2	;volatile
  1192  01C9                     l1247:
  1193                           
  1194                           ;ADC.c: 41:     if (canal == 3) {
  1195  01C9  3003               	movlw	3
  1196  01CA  0674               	xorwf	canalADC@canal,w
  1197  01CB  1D03               	btfss	3,2
  1198  01CC  29CE               	goto	u761
  1199  01CD  29CF               	goto	u760
  1200  01CE                     u761:
  1201  01CE  29D5               	goto	l1251
  1202  01CF                     u760:
  1203  01CF                     l1249:
  1204                           
  1205                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
  1206  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1207  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1208  01D1  129F               	bcf	31,5	;volatile
  1209                           
  1210                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
  1211  01D2  121F               	bcf	31,4	;volatile
  1212                           
  1213                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
  1214  01D3  159F               	bsf	31,3	;volatile
  1215                           
  1216                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
  1217  01D4  151F               	bsf	31,2	;volatile
  1218  01D5                     l1251:
  1219                           
  1220                           ;ADC.c: 50:     if (canal == 4) {
  1221  01D5  3004               	movlw	4
  1222  01D6  0674               	xorwf	canalADC@canal,w
  1223  01D7  1D03               	btfss	3,2
  1224  01D8  29DA               	goto	u771
  1225  01D9  29DB               	goto	u770
  1226  01DA                     u771:
  1227  01DA  29E1               	goto	l1255
  1228  01DB                     u770:
  1229  01DB                     l1253:
  1230                           
  1231                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
  1232  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01DD  129F               	bcf	31,5	;volatile
  1235                           
  1236                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
  1237  01DE  161F               	bsf	31,4	;volatile
  1238                           
  1239                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
  1240  01DF  119F               	bcf	31,3	;volatile
  1241                           
  1242                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
  1243  01E0  111F               	bcf	31,2	;volatile
  1244  01E1                     l1255:
  1245                           
  1246                           ;ADC.c: 59:     if (canal == 5) {
  1247  01E1  3005               	movlw	5
  1248  01E2  0674               	xorwf	canalADC@canal,w
  1249  01E3  1D03               	btfss	3,2
  1250  01E4  29E6               	goto	u781
  1251  01E5  29E7               	goto	u780
  1252  01E6                     u781:
  1253  01E6  29ED               	goto	l1259
  1254  01E7                     u780:
  1255  01E7                     l1257:
  1256                           
  1257                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
  1258  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1259  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1260  01E9  129F               	bcf	31,5	;volatile
  1261                           
  1262                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
  1263  01EA  161F               	bsf	31,4	;volatile
  1264                           
  1265                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
  1266  01EB  119F               	bcf	31,3	;volatile
  1267                           
  1268                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
  1269  01EC  151F               	bsf	31,2	;volatile
  1270  01ED                     l1259:
  1271                           
  1272                           ;ADC.c: 68:     if (canal == 6) {
  1273  01ED  3006               	movlw	6
  1274  01EE  0674               	xorwf	canalADC@canal,w
  1275  01EF  1D03               	btfss	3,2
  1276  01F0  29F2               	goto	u791
  1277  01F1  29F3               	goto	u790
  1278  01F2                     u791:
  1279  01F2  29F9               	goto	l1263
  1280  01F3                     u790:
  1281  01F3                     l1261:
  1282                           
  1283                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
  1284  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1285  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1286  01F5  129F               	bcf	31,5	;volatile
  1287                           
  1288                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
  1289  01F6  161F               	bsf	31,4	;volatile
  1290                           
  1291                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
  1292  01F7  159F               	bsf	31,3	;volatile
  1293                           
  1294                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
  1295  01F8  111F               	bcf	31,2	;volatile
  1296  01F9                     l1263:
  1297                           
  1298                           ;ADC.c: 77:     if (canal == 7) {
  1299  01F9  3007               	movlw	7
  1300  01FA  0674               	xorwf	canalADC@canal,w
  1301  01FB  1D03               	btfss	3,2
  1302  01FC  29FE               	goto	u801
  1303  01FD  29FF               	goto	u800
  1304  01FE                     u801:
  1305  01FE  2A05               	goto	l1267
  1306  01FF                     u800:
  1307  01FF                     l1265:
  1308                           
  1309                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
  1310  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0201  129F               	bcf	31,5	;volatile
  1313                           
  1314                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
  1315  0202  161F               	bsf	31,4	;volatile
  1316                           
  1317                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
  1318  0203  159F               	bsf	31,3	;volatile
  1319                           
  1320                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
  1321  0204  151F               	bsf	31,2	;volatile
  1322  0205                     l1267:
  1323                           
  1324                           ;ADC.c: 86:     if (canal == 8) {
  1325  0205  3008               	movlw	8
  1326  0206  0674               	xorwf	canalADC@canal,w
  1327  0207  1D03               	btfss	3,2
  1328  0208  2A0A               	goto	u811
  1329  0209  2A0B               	goto	u810
  1330  020A                     u811:
  1331  020A  2A11               	goto	l1271
  1332  020B                     u810:
  1333  020B                     l1269:
  1334                           
  1335                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
  1336  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1337  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1338  020D  169F               	bsf	31,5	;volatile
  1339                           
  1340                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
  1341  020E  121F               	bcf	31,4	;volatile
  1342                           
  1343                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
  1344  020F  119F               	bcf	31,3	;volatile
  1345                           
  1346                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
  1347  0210  111F               	bcf	31,2	;volatile
  1348  0211                     l1271:
  1349                           
  1350                           ;ADC.c: 94:     if (canal == 9) {
  1351  0211  3009               	movlw	9
  1352  0212  0674               	xorwf	canalADC@canal,w
  1353  0213  1D03               	btfss	3,2
  1354  0214  2A16               	goto	u821
  1355  0215  2A17               	goto	u820
  1356  0216                     u821:
  1357  0216  2A1D               	goto	l1275
  1358  0217                     u820:
  1359  0217                     l1273:
  1360                           
  1361                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1362  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0219  169F               	bsf	31,5	;volatile
  1365                           
  1366                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1367  021A  121F               	bcf	31,4	;volatile
  1368                           
  1369                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1370  021B  119F               	bcf	31,3	;volatile
  1371                           
  1372                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1373  021C  151F               	bsf	31,2	;volatile
  1374  021D                     l1275:
  1375                           
  1376                           ;ADC.c: 102:     if (canal == 10) {
  1377  021D  300A               	movlw	10
  1378  021E  0674               	xorwf	canalADC@canal,w
  1379  021F  1D03               	btfss	3,2
  1380  0220  2A22               	goto	u831
  1381  0221  2A23               	goto	u830
  1382  0222                     u831:
  1383  0222  2A29               	goto	l1279
  1384  0223                     u830:
  1385  0223                     l1277:
  1386                           
  1387                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1388  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0225  169F               	bsf	31,5	;volatile
  1391                           
  1392                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1393  0226  121F               	bcf	31,4	;volatile
  1394                           
  1395                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1396  0227  159F               	bsf	31,3	;volatile
  1397                           
  1398                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1399  0228  111F               	bcf	31,2	;volatile
  1400  0229                     l1279:
  1401                           
  1402                           ;ADC.c: 111:     if (canal == 11) {
  1403  0229  300B               	movlw	11
  1404  022A  0674               	xorwf	canalADC@canal,w
  1405  022B  1D03               	btfss	3,2
  1406  022C  2A2E               	goto	u841
  1407  022D  2A2F               	goto	u840
  1408  022E                     u841:
  1409  022E  2A35               	goto	l1283
  1410  022F                     u840:
  1411  022F                     l1281:
  1412                           
  1413                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1414  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0231  169F               	bsf	31,5	;volatile
  1417                           
  1418                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1419  0232  121F               	bcf	31,4	;volatile
  1420                           
  1421                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1422  0233  159F               	bsf	31,3	;volatile
  1423                           
  1424                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1425  0234  151F               	bsf	31,2	;volatile
  1426  0235                     l1283:
  1427                           
  1428                           ;ADC.c: 120:     if (canal == 12) {
  1429  0235  300C               	movlw	12
  1430  0236  0674               	xorwf	canalADC@canal,w
  1431  0237  1D03               	btfss	3,2
  1432  0238  2A3A               	goto	u851
  1433  0239  2A3B               	goto	u850
  1434  023A                     u851:
  1435  023A  2A41               	goto	l1287
  1436  023B                     u850:
  1437  023B                     l1285:
  1438                           
  1439                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1440  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1441  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1442  023D  169F               	bsf	31,5	;volatile
  1443                           
  1444                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1445  023E  161F               	bsf	31,4	;volatile
  1446                           
  1447                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1448  023F  119F               	bcf	31,3	;volatile
  1449                           
  1450                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1451  0240  111F               	bcf	31,2	;volatile
  1452  0241                     l1287:
  1453                           
  1454                           ;ADC.c: 129:     if (canal == 13) {
  1455  0241  300D               	movlw	13
  1456  0242  0674               	xorwf	canalADC@canal,w
  1457  0243  1D03               	btfss	3,2
  1458  0244  2A46               	goto	u861
  1459  0245  2A47               	goto	u860
  1460  0246                     u861:
  1461  0246  2A4D               	goto	l193
  1462  0247                     u860:
  1463  0247                     l1289:
  1464                           
  1465                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1466  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0249  169F               	bsf	31,5	;volatile
  1469                           
  1470                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1471  024A  161F               	bsf	31,4	;volatile
  1472                           
  1473                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1474  024B  119F               	bcf	31,3	;volatile
  1475                           
  1476                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1477  024C  151F               	bsf	31,2	;volatile
  1478  024D                     l193:	
  1479                           ;ADC.c: 135:     }
  1480                           
  1481                           
  1482                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1483  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1484  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1485  024F  149F               	bsf	31,1	;volatile
  1486  0250                     l194:	
  1487                           ;ADC.c: 138:     return;
  1488                           
  1489  0250  0008               	return
  1490  0251                     __end_of_canalADC:
  1491                           
  1492                           	psect	text3
  1493  00EA                     __ptext3:	
  1494 ;; *************** function ___xxtofl *****************
  1495 ;; Defined at:
  1496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  sign            1    wreg     unsigned char 
  1499 ;;  val             4   14[BANK0 ] long 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  sign            1   22[BANK0 ] unsigned char 
  1502 ;;  arg             4   24[BANK0 ] unsigned long 
  1503 ;;  exp             1   23[BANK0 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  4   14[BANK0 ] unsigned char 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       4       0       0       0
  1514 ;;      Locals:         0       6       0       0       0
  1515 ;;      Temps:          0       4       0       0       0
  1516 ;;      Totals:         0      14       0       0       0
  1517 ;;Total ram usage:       14 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    2
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___xxtofl
  1529  00EA                     ___xxtofl:
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1533                           ;___xxtofl@sign stored from wreg
  1534  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1535  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1536  00EC  00B6               	movwf	___xxtofl@sign
  1537  00ED                     l1411:
  1538  00ED  0836               	movf	___xxtofl@sign,w
  1539  00EE  1903               	btfsc	3,2
  1540  00EF  28F1               	goto	u1041
  1541  00F0  28F2               	goto	u1040
  1542  00F1                     u1041:
  1543  00F1  2906               	goto	l1417
  1544  00F2                     u1040:
  1545  00F2                     l1413:
  1546  00F2  1FB1               	btfss	___xxtofl@val+3,7
  1547  00F3  28F5               	goto	u1051
  1548  00F4  28F6               	goto	u1050
  1549  00F5                     u1051:
  1550  00F5  2906               	goto	l1417
  1551  00F6                     u1050:
  1552  00F6                     l1415:
  1553  00F6  092E               	comf	___xxtofl@val,w
  1554  00F7  00B8               	movwf	___xxtofl@arg
  1555  00F8  092F               	comf	___xxtofl@val+1,w
  1556  00F9  00B9               	movwf	___xxtofl@arg+1
  1557  00FA  0930               	comf	___xxtofl@val+2,w
  1558  00FB  00BA               	movwf	___xxtofl@arg+2
  1559  00FC  0931               	comf	___xxtofl@val+3,w
  1560  00FD  00BB               	movwf	___xxtofl@arg+3
  1561  00FE  0AB8               	incf	___xxtofl@arg,f
  1562  00FF  1903               	skipnz
  1563  0100  0AB9               	incf	___xxtofl@arg+1,f
  1564  0101  1903               	skipnz
  1565  0102  0ABA               	incf	___xxtofl@arg+2,f
  1566  0103  1903               	skipnz
  1567  0104  0ABB               	incf	___xxtofl@arg+3,f
  1568  0105  290E               	goto	l716
  1569  0106                     l1417:
  1570  0106  0831               	movf	___xxtofl@val+3,w
  1571  0107  00BB               	movwf	___xxtofl@arg+3
  1572  0108  0830               	movf	___xxtofl@val+2,w
  1573  0109  00BA               	movwf	___xxtofl@arg+2
  1574  010A  082F               	movf	___xxtofl@val+1,w
  1575  010B  00B9               	movwf	___xxtofl@arg+1
  1576  010C  082E               	movf	___xxtofl@val,w
  1577  010D  00B8               	movwf	___xxtofl@arg
  1578  010E                     l716:
  1579  010E  0831               	movf	___xxtofl@val+3,w
  1580  010F  0430               	iorwf	___xxtofl@val+2,w
  1581  0110  042F               	iorwf	___xxtofl@val+1,w
  1582  0111  042E               	iorwf	___xxtofl@val,w
  1583  0112  1D03               	skipz
  1584  0113  2915               	goto	u1061
  1585  0114  2916               	goto	u1060
  1586  0115                     u1061:
  1587  0115  291F               	goto	l1423
  1588  0116                     u1060:
  1589  0116                     l1419:
  1590  0116  3000               	movlw	0
  1591  0117  00B1               	movwf	?___xxtofl+3
  1592  0118  3000               	movlw	0
  1593  0119  00B0               	movwf	?___xxtofl+2
  1594  011A  3000               	movlw	0
  1595  011B  00AF               	movwf	?___xxtofl+1
  1596  011C  3000               	movlw	0
  1597  011D  00AE               	movwf	?___xxtofl
  1598  011E  29A5               	goto	l718
  1599  011F                     l1423:
  1600  011F  3096               	movlw	150
  1601  0120  00B2               	movwf	??___xxtofl
  1602  0121  0832               	movf	??___xxtofl,w
  1603  0122  00B7               	movwf	___xxtofl@exp
  1604  0123  2931               	goto	l1427
  1605  0124                     l1425:
  1606  0124  3001               	movlw	1
  1607  0125  00B2               	movwf	??___xxtofl
  1608  0126  0832               	movf	??___xxtofl,w
  1609  0127  07B7               	addwf	___xxtofl@exp,f
  1610  0128  3001               	movlw	1
  1611  0129                     u1075:
  1612  0129  1003               	clrc
  1613  012A  0CBB               	rrf	___xxtofl@arg+3,f
  1614  012B  0CBA               	rrf	___xxtofl@arg+2,f
  1615  012C  0CB9               	rrf	___xxtofl@arg+1,f
  1616  012D  0CB8               	rrf	___xxtofl@arg,f
  1617  012E  3EFF               	addlw	-1
  1618  012F  1D03               	skipz
  1619  0130  2929               	goto	u1075
  1620  0131                     l1427:
  1621  0131  30FE               	movlw	254
  1622  0132  053B               	andwf	___xxtofl@arg+3,w
  1623  0133  1D03               	btfss	3,2
  1624  0134  2936               	goto	u1081
  1625  0135  2937               	goto	u1080
  1626  0136                     u1081:
  1627  0136  2924               	goto	l1425
  1628  0137                     u1080:
  1629  0137  2953               	goto	l722
  1630  0138                     l1429:
  1631  0138  3001               	movlw	1
  1632  0139  00B2               	movwf	??___xxtofl
  1633  013A  0832               	movf	??___xxtofl,w
  1634  013B  07B7               	addwf	___xxtofl@exp,f
  1635  013C                     l1431:
  1636  013C  3001               	movlw	1
  1637  013D  07B8               	addwf	___xxtofl@arg,f
  1638  013E  3000               	movlw	0
  1639  013F  1803               	skipnc
  1640  0140  3001               	movlw	1
  1641  0141  07B9               	addwf	___xxtofl@arg+1,f
  1642  0142  3000               	movlw	0
  1643  0143  1803               	skipnc
  1644  0144  3001               	movlw	1
  1645  0145  07BA               	addwf	___xxtofl@arg+2,f
  1646  0146  3000               	movlw	0
  1647  0147  1803               	skipnc
  1648  0148  3001               	movlw	1
  1649  0149  07BB               	addwf	___xxtofl@arg+3,f
  1650  014A                     l1433:
  1651  014A  3001               	movlw	1
  1652  014B                     u1095:
  1653  014B  1003               	clrc
  1654  014C  0CBB               	rrf	___xxtofl@arg+3,f
  1655  014D  0CBA               	rrf	___xxtofl@arg+2,f
  1656  014E  0CB9               	rrf	___xxtofl@arg+1,f
  1657  014F  0CB8               	rrf	___xxtofl@arg,f
  1658  0150  3EFF               	addlw	-1
  1659  0151  1D03               	skipz
  1660  0152  294B               	goto	u1095
  1661  0153                     l722:
  1662  0153  30FF               	movlw	255
  1663  0154  053B               	andwf	___xxtofl@arg+3,w
  1664  0155  1D03               	btfss	3,2
  1665  0156  2958               	goto	u1101
  1666  0157  2959               	goto	u1100
  1667  0158                     u1101:
  1668  0158  2938               	goto	l1429
  1669  0159                     u1100:
  1670  0159  2965               	goto	l1437
  1671  015A                     l1435:
  1672  015A  3001               	movlw	1
  1673  015B  02B7               	subwf	___xxtofl@exp,f
  1674  015C  3001               	movlw	1
  1675  015D  00B2               	movwf	??___xxtofl
  1676  015E                     u1115:
  1677  015E  1003               	clrc
  1678  015F  0DB8               	rlf	___xxtofl@arg,f
  1679  0160  0DB9               	rlf	___xxtofl@arg+1,f
  1680  0161  0DBA               	rlf	___xxtofl@arg+2,f
  1681  0162  0DBB               	rlf	___xxtofl@arg+3,f
  1682  0163  0BB2               	decfsz	??___xxtofl,f
  1683  0164  295E               	goto	u1115
  1684  0165                     l1437:
  1685  0165  1BBA               	btfsc	___xxtofl@arg+2,7
  1686  0166  2968               	goto	u1121
  1687  0167  2969               	goto	u1120
  1688  0168                     u1121:
  1689  0168  296F               	goto	l729
  1690  0169                     u1120:
  1691  0169                     l1439:
  1692  0169  3002               	movlw	2
  1693  016A  0237               	subwf	___xxtofl@exp,w
  1694  016B  1803               	skipnc
  1695  016C  296E               	goto	u1131
  1696  016D  296F               	goto	u1130
  1697  016E                     u1131:
  1698  016E  295A               	goto	l1435
  1699  016F                     u1130:
  1700  016F                     l729:
  1701  016F  1837               	btfsc	___xxtofl@exp,0
  1702  0170  2972               	goto	u1141
  1703  0171  2973               	goto	u1140
  1704  0172                     u1141:
  1705  0172  297B               	goto	l730
  1706  0173                     u1140:
  1707  0173                     l1441:
  1708  0173  30FF               	movlw	255
  1709  0174  05B8               	andwf	___xxtofl@arg,f
  1710  0175  30FF               	movlw	255
  1711  0176  05B9               	andwf	___xxtofl@arg+1,f
  1712  0177  307F               	movlw	127
  1713  0178  05BA               	andwf	___xxtofl@arg+2,f
  1714  0179  30FF               	movlw	255
  1715  017A  05BB               	andwf	___xxtofl@arg+3,f
  1716  017B                     l730:
  1717  017B  1003               	clrc
  1718  017C  0CB7               	rrf	___xxtofl@exp,f
  1719  017D                     l1443:
  1720  017D  0837               	movf	___xxtofl@exp,w
  1721  017E  00B2               	movwf	??___xxtofl
  1722  017F  01B3               	clrf	??___xxtofl+1
  1723  0180  01B4               	clrf	??___xxtofl+2
  1724  0181  01B5               	clrf	??___xxtofl+3
  1725  0182  3018               	movlw	24
  1726  0183                     u1155:
  1727  0183  1003               	clrc
  1728  0184  0DB2               	rlf	??___xxtofl,f
  1729  0185  0DB3               	rlf	??___xxtofl+1,f
  1730  0186  0DB4               	rlf	??___xxtofl+2,f
  1731  0187  0DB5               	rlf	??___xxtofl+3,f
  1732  0188                     u1150:
  1733  0188  3EFF               	addlw	-1
  1734  0189  1D03               	skipz
  1735  018A  2983               	goto	u1155
  1736  018B  0832               	movf	??___xxtofl,w
  1737  018C  04B8               	iorwf	___xxtofl@arg,f
  1738  018D  0833               	movf	??___xxtofl+1,w
  1739  018E  04B9               	iorwf	___xxtofl@arg+1,f
  1740  018F  0834               	movf	??___xxtofl+2,w
  1741  0190  04BA               	iorwf	___xxtofl@arg+2,f
  1742  0191  0835               	movf	??___xxtofl+3,w
  1743  0192  04BB               	iorwf	___xxtofl@arg+3,f
  1744  0193                     l1445:
  1745  0193  0836               	movf	___xxtofl@sign,w
  1746  0194  1903               	btfsc	3,2
  1747  0195  2997               	goto	u1161
  1748  0196  2998               	goto	u1160
  1749  0197                     u1161:
  1750  0197  299D               	goto	l1451
  1751  0198                     u1160:
  1752  0198                     l1447:
  1753  0198  1FB1               	btfss	___xxtofl@val+3,7
  1754  0199  299B               	goto	u1171
  1755  019A  299C               	goto	u1170
  1756  019B                     u1171:
  1757  019B  299D               	goto	l1451
  1758  019C                     u1170:
  1759  019C                     l1449:
  1760  019C  17BB               	bsf	___xxtofl@arg+3,7
  1761  019D                     l1451:
  1762  019D  083B               	movf	___xxtofl@arg+3,w
  1763  019E  00B1               	movwf	?___xxtofl+3
  1764  019F  083A               	movf	___xxtofl@arg+2,w
  1765  01A0  00B0               	movwf	?___xxtofl+2
  1766  01A1  0839               	movf	___xxtofl@arg+1,w
  1767  01A2  00AF               	movwf	?___xxtofl+1
  1768  01A3  0838               	movf	___xxtofl@arg,w
  1769  01A4  00AE               	movwf	?___xxtofl
  1770  01A5                     l718:
  1771  01A5  0008               	return
  1772  01A6                     __end_of___xxtofl:
  1773                           
  1774                           	psect	text4
  1775  0414                     __ptext4:	
  1776 ;; *************** function ___wmul *****************
  1777 ;; Defined at:
  1778 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  multiplier      2    8[BANK0 ] unsigned int 
  1781 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  product         2   12[BANK0 ] unsigned int 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2    8[BANK0 ] unsigned int 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       4       0       0       0
  1794 ;;      Locals:         0       2       0       0       0
  1795 ;;      Temps:          0       0       0       0       0
  1796 ;;      Totals:         0       6       0       0       0
  1797 ;;Total ram usage:        6 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    2
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function ___wmul
  1809  0414                     ___wmul:
  1810  0414                     l1353:	
  1811                           ;incstack = 0
  1812                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1813                           
  1814  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0416  01AC               	clrf	___wmul@product
  1817  0417  01AD               	clrf	___wmul@product+1
  1818  0418                     l1355:
  1819  0418  1C28               	btfss	___wmul@multiplier,0
  1820  0419  2C1B               	goto	u901
  1821  041A  2C1C               	goto	u900
  1822  041B                     u901:
  1823  041B  2C22               	goto	l283
  1824  041C                     u900:
  1825  041C                     l1357:
  1826  041C  082A               	movf	___wmul@multiplicand,w
  1827  041D  07AC               	addwf	___wmul@product,f
  1828  041E  1803               	skipnc
  1829  041F  0AAD               	incf	___wmul@product+1,f
  1830  0420  082B               	movf	___wmul@multiplicand+1,w
  1831  0421  07AD               	addwf	___wmul@product+1,f
  1832  0422                     l283:
  1833  0422  3001               	movlw	1
  1834  0423                     u915:
  1835  0423  1003               	clrc
  1836  0424  0DAA               	rlf	___wmul@multiplicand,f
  1837  0425  0DAB               	rlf	___wmul@multiplicand+1,f
  1838  0426  3EFF               	addlw	-1
  1839  0427  1D03               	skipz
  1840  0428  2C23               	goto	u915
  1841  0429                     l1359:
  1842  0429  3001               	movlw	1
  1843  042A                     u925:
  1844  042A  1003               	clrc
  1845  042B  0CA9               	rrf	___wmul@multiplier+1,f
  1846  042C  0CA8               	rrf	___wmul@multiplier,f
  1847  042D  3EFF               	addlw	-1
  1848  042E  1D03               	skipz
  1849  042F  2C2A               	goto	u925
  1850  0430                     l1361:
  1851  0430  0828               	movf	___wmul@multiplier,w
  1852  0431  0429               	iorwf	___wmul@multiplier+1,w
  1853  0432  1D03               	btfss	3,2
  1854  0433  2C35               	goto	u931
  1855  0434  2C36               	goto	u930
  1856  0435                     u931:
  1857  0435  2C18               	goto	l1355
  1858  0436                     u930:
  1859  0436                     l1363:
  1860  0436  082D               	movf	___wmul@product+1,w
  1861  0437  00A9               	movwf	?___wmul+1
  1862  0438  082C               	movf	___wmul@product,w
  1863  0439  00A8               	movwf	?___wmul
  1864  043A                     l285:
  1865  043A  0008               	return
  1866  043B                     __end_of___wmul:
  1867                           
  1868                           	psect	text5
  1869  02FC                     __ptext5:	
  1870 ;; *************** function ___awdiv *****************
  1871 ;; Defined at:
  1872 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  divisor         2    0[BANK0 ] int 
  1875 ;;  dividend        2    2[BANK0 ] int 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  quotient        2    6[BANK0 ] int 
  1878 ;;  sign            1    5[BANK0 ] unsigned char 
  1879 ;;  counter         1    4[BANK0 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    0[BANK0 ] int 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       4       0       0       0
  1890 ;;      Locals:         0       4       0       0       0
  1891 ;;      Temps:          1       0       0       0       0
  1892 ;;      Totals:         1       8       0       0       0
  1893 ;;Total ram usage:        9 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    2
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function ___awdiv
  1905  02FC                     ___awdiv:
  1906  02FC                     l1619:	
  1907                           ;incstack = 0
  1908                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1909                           
  1910  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1911  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1912  02FE  01A5               	clrf	___awdiv@sign
  1913  02FF                     l1621:
  1914  02FF  1FA1               	btfss	___awdiv@divisor+1,7
  1915  0300  2B02               	goto	u1371
  1916  0301  2B03               	goto	u1370
  1917  0302                     u1371:
  1918  0302  2B0A               	goto	l1627
  1919  0303                     u1370:
  1920  0303                     l1623:
  1921  0303  09A0               	comf	___awdiv@divisor,f
  1922  0304  09A1               	comf	___awdiv@divisor+1,f
  1923  0305  0AA0               	incf	___awdiv@divisor,f
  1924  0306  1903               	skipnz
  1925  0307  0AA1               	incf	___awdiv@divisor+1,f
  1926  0308                     l1625:
  1927  0308  01A5               	clrf	___awdiv@sign
  1928  0309  0AA5               	incf	___awdiv@sign,f
  1929  030A                     l1627:
  1930  030A  1FA3               	btfss	___awdiv@dividend+1,7
  1931  030B  2B0D               	goto	u1381
  1932  030C  2B0E               	goto	u1380
  1933  030D                     u1381:
  1934  030D  2B17               	goto	l1633
  1935  030E                     u1380:
  1936  030E                     l1629:
  1937  030E  09A2               	comf	___awdiv@dividend,f
  1938  030F  09A3               	comf	___awdiv@dividend+1,f
  1939  0310  0AA2               	incf	___awdiv@dividend,f
  1940  0311  1903               	skipnz
  1941  0312  0AA3               	incf	___awdiv@dividend+1,f
  1942  0313                     l1631:
  1943  0313  3001               	movlw	1
  1944  0314  00F4               	movwf	??___awdiv
  1945  0315  0874               	movf	??___awdiv,w
  1946  0316  06A5               	xorwf	___awdiv@sign,f
  1947  0317                     l1633:
  1948  0317  01A6               	clrf	___awdiv@quotient
  1949  0318  01A7               	clrf	___awdiv@quotient+1
  1950  0319                     l1635:
  1951  0319  0820               	movf	___awdiv@divisor,w
  1952  031A  0421               	iorwf	___awdiv@divisor+1,w
  1953  031B  1903               	btfsc	3,2
  1954  031C  2B1E               	goto	u1391
  1955  031D  2B1F               	goto	u1390
  1956  031E                     u1391:
  1957  031E  2B56               	goto	l1655
  1958  031F                     u1390:
  1959  031F                     l1637:
  1960  031F  01A4               	clrf	___awdiv@counter
  1961  0320  0AA4               	incf	___awdiv@counter,f
  1962  0321  2B2D               	goto	l1643
  1963  0322                     l1639:
  1964  0322  3001               	movlw	1
  1965  0323                     u1405:
  1966  0323  1003               	clrc
  1967  0324  0DA0               	rlf	___awdiv@divisor,f
  1968  0325  0DA1               	rlf	___awdiv@divisor+1,f
  1969  0326  3EFF               	addlw	-1
  1970  0327  1D03               	skipz
  1971  0328  2B23               	goto	u1405
  1972  0329                     l1641:
  1973  0329  3001               	movlw	1
  1974  032A  00F4               	movwf	??___awdiv
  1975  032B  0874               	movf	??___awdiv,w
  1976  032C  07A4               	addwf	___awdiv@counter,f
  1977  032D                     l1643:
  1978  032D  1FA1               	btfss	___awdiv@divisor+1,7
  1979  032E  2B30               	goto	u1411
  1980  032F  2B31               	goto	u1410
  1981  0330                     u1411:
  1982  0330  2B22               	goto	l1639
  1983  0331                     u1410:
  1984  0331                     l1645:
  1985  0331  3001               	movlw	1
  1986  0332                     u1425:
  1987  0332  1003               	clrc
  1988  0333  0DA6               	rlf	___awdiv@quotient,f
  1989  0334  0DA7               	rlf	___awdiv@quotient+1,f
  1990  0335  3EFF               	addlw	-1
  1991  0336  1D03               	skipz
  1992  0337  2B32               	goto	u1425
  1993  0338  0821               	movf	___awdiv@divisor+1,w
  1994  0339  0223               	subwf	___awdiv@dividend+1,w
  1995  033A  1D03               	skipz
  1996  033B  2B3E               	goto	u1435
  1997  033C  0820               	movf	___awdiv@divisor,w
  1998  033D  0222               	subwf	___awdiv@dividend,w
  1999  033E                     u1435:
  2000  033E  1C03               	skipc
  2001  033F  2B41               	goto	u1431
  2002  0340  2B42               	goto	u1430
  2003  0341                     u1431:
  2004  0341  2B49               	goto	l1651
  2005  0342                     u1430:
  2006  0342                     l1647:
  2007  0342  0820               	movf	___awdiv@divisor,w
  2008  0343  02A2               	subwf	___awdiv@dividend,f
  2009  0344  0821               	movf	___awdiv@divisor+1,w
  2010  0345  1C03               	skipc
  2011  0346  03A3               	decf	___awdiv@dividend+1,f
  2012  0347  02A3               	subwf	___awdiv@dividend+1,f
  2013  0348                     l1649:
  2014  0348  1426               	bsf	___awdiv@quotient,0
  2015  0349                     l1651:
  2016  0349  3001               	movlw	1
  2017  034A                     u1445:
  2018  034A  1003               	clrc
  2019  034B  0CA1               	rrf	___awdiv@divisor+1,f
  2020  034C  0CA0               	rrf	___awdiv@divisor,f
  2021  034D  3EFF               	addlw	-1
  2022  034E  1D03               	skipz
  2023  034F  2B4A               	goto	u1445
  2024  0350                     l1653:
  2025  0350  3001               	movlw	1
  2026  0351  02A4               	subwf	___awdiv@counter,f
  2027  0352  1D03               	btfss	3,2
  2028  0353  2B55               	goto	u1451
  2029  0354  2B56               	goto	u1450
  2030  0355                     u1451:
  2031  0355  2B31               	goto	l1645
  2032  0356                     u1450:
  2033  0356                     l1655:
  2034  0356  0825               	movf	___awdiv@sign,w
  2035  0357  1903               	btfsc	3,2
  2036  0358  2B5A               	goto	u1461
  2037  0359  2B5B               	goto	u1460
  2038  035A                     u1461:
  2039  035A  2B60               	goto	l1659
  2040  035B                     u1460:
  2041  035B                     l1657:
  2042  035B  09A6               	comf	___awdiv@quotient,f
  2043  035C  09A7               	comf	___awdiv@quotient+1,f
  2044  035D  0AA6               	incf	___awdiv@quotient,f
  2045  035E  1903               	skipnz
  2046  035F  0AA7               	incf	___awdiv@quotient+1,f
  2047  0360                     l1659:
  2048  0360  0827               	movf	___awdiv@quotient+1,w
  2049  0361  00A1               	movwf	?___awdiv+1
  2050  0362  0826               	movf	___awdiv@quotient,w
  2051  0363  00A0               	movwf	?___awdiv
  2052  0364                     l436:
  2053  0364  0008               	return
  2054  0365                     __end_of___awdiv:
  2055                           
  2056                           	psect	text6
  2057  0492                     __ptext6:	
  2058 ;; *************** function _Setup *****************
  2059 ;; Defined at:
  2060 ;;		line 115 in file "main.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    2
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _Setup
  2090  0492                     _Setup:
  2091  0492                     l1291:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _Setup: [wreg+status,2]
  2094                           
  2095  0492  30FF               	movlw	255
  2096  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0495  0085               	movwf	5	;volatile
  2099  0496                     l1293:
  2100  0496  0188               	clrf	8	;volatile
  2101  0497                     l1295:
  2102  0497  0187               	clrf	7	;volatile
  2103  0498                     l1297:
  2104  0498  0186               	clrf	6	;volatile
  2105  0499                     l1299:
  2106  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2107  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2108  049B  0185               	clrf	5	;volatile
  2109  049C                     l1301:
  2110  049C  0187               	clrf	7	;volatile
  2111  049D                     l1303:
  2112  049D  0188               	clrf	8	;volatile
  2113  049E                     l1305:
  2114  049E  0186               	clrf	6	;volatile
  2115  049F                     l1307:
  2116  049F  178B               	bsf	11,7	;volatile
  2117  04A0                     l1309:
  2118  04A0  170B               	bsf	11,6	;volatile
  2119  04A1                     l1311:
  2120  04A1  1683               	bsf	3,5	;RP0=1, select bank3
  2121  04A2  1703               	bsf	3,6	;RP1=1, select bank3
  2122  04A3  0188               	clrf	8	;volatile
  2123  04A4                     l1313:
  2124  04A4  0189               	clrf	9	;volatile
  2125  04A5                     l1315:
  2126  04A5  1408               	bsf	8,0	;volatile
  2127  04A6                     l1317:
  2128  04A6  1488               	bsf	8,1	;volatile
  2129  04A7                     l77:
  2130  04A7  0008               	return
  2131  04A8                     __end_of_Setup:
  2132                           
  2133                           	psect	text7
  2134  03B0                     __ptext7:	
  2135 ;; *************** function _Lcd_Write_String *****************
  2136 ;; Defined at:
  2137 ;;		line 56 in file "LCD8bits.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  a               2    1[BANK0 ] PTR unsigned char 
  2140 ;;		 -> RAM(512), buf(20), STR_3(3), STR_2(3), 
  2141 ;;		 -> STR_1(3), 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  i               2    3[BANK0 ] int 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       2       0       0       0
  2154 ;;      Locals:         0       2       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         0       4       0       0       0
  2157 ;;Total ram usage:        4 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    4
  2160 ;; This function calls:
  2161 ;;		_Lcd_Write_Char
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _Lcd_Write_String
  2169  03B0                     _Lcd_Write_String:
  2170  03B0                     l1611:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2173                           
  2174                           
  2175                           ;LCD8bits.c: 57:     int i;;LCD8bits.c: 58:     for (i = 0; a[i] != '\0'; i++)
  2176  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2177  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2178  03B2  01A3               	clrf	Lcd_Write_String@i
  2179  03B3  01A4               	clrf	Lcd_Write_String@i+1
  2180  03B4  2BCF               	goto	l1617
  2181  03B5                     l1613:
  2182                           
  2183                           ;LCD8bits.c: 59:         Lcd_Write_Char(a[i]);
  2184  03B5  0823               	movf	Lcd_Write_String@i,w
  2185  03B6  0721               	addwf	Lcd_Write_String@a,w
  2186  03B7  0084               	movwf	4
  2187  03B8  0824               	movf	Lcd_Write_String@i+1,w
  2188  03B9  1803               	skipnc
  2189  03BA  0A24               	incf	Lcd_Write_String@i+1,w
  2190  03BB  0722               	addwf	Lcd_Write_String@a+1,w
  2191  03BC  00FF               	movwf	btemp+1
  2192  03BD  120A  118A  2461  120A  118A  	fcall	stringtab
  2193  03C2  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_Char
  2194  03C7                     l1615:
  2195  03C7  3001               	movlw	1
  2196  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2197  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2198  03CA  07A3               	addwf	Lcd_Write_String@i,f
  2199  03CB  1803               	skipnc
  2200  03CC  0AA4               	incf	Lcd_Write_String@i+1,f
  2201  03CD  3000               	movlw	0
  2202  03CE  07A4               	addwf	Lcd_Write_String@i+1,f
  2203  03CF                     l1617:
  2204  03CF  0823               	movf	Lcd_Write_String@i,w
  2205  03D0  0721               	addwf	Lcd_Write_String@a,w
  2206  03D1  0084               	movwf	4
  2207  03D2  0824               	movf	Lcd_Write_String@i+1,w
  2208  03D3  1803               	skipnc
  2209  03D4  0A24               	incf	Lcd_Write_String@i+1,w
  2210  03D5  0722               	addwf	Lcd_Write_String@a+1,w
  2211  03D6  00FF               	movwf	btemp+1
  2212  03D7  120A  118A  2461  120A  118A  	fcall	stringtab
  2213  03DC  3A00               	xorlw	0
  2214  03DD  1D03               	skipz
  2215  03DE  2BE0               	goto	u1361
  2216  03DF  2BE1               	goto	u1360
  2217  03E0                     u1361:
  2218  03E0  2BB5               	goto	l1613
  2219  03E1                     u1360:
  2220  03E1                     l110:
  2221  03E1  0008               	return
  2222  03E2                     __end_of_Lcd_Write_String:
  2223                           
  2224                           	psect	text8
  2225  04BD                     __ptext8:	
  2226 ;; *************** function _Lcd_Write_Char *****************
  2227 ;; Defined at:
  2228 ;;		line 48 in file "LCD8bits.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  a               1    wreg     unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  a               1    0[BANK0 ] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       1       0       0       0
  2244 ;;      Temps:          1       0       0       0       0
  2245 ;;      Totals:         1       1       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    3
  2249 ;; This function calls:
  2250 ;;		_Lcd_Port
  2251 ;; This function is called by:
  2252 ;;		_Lcd_Write_String
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _Lcd_Write_Char
  2258  04BD                     _Lcd_Write_Char:
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2262                           ;Lcd_Write_Char@a stored from wreg
  2263  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2264  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2265  04BF  00A0               	movwf	Lcd_Write_Char@a
  2266  04C0                     l1577:
  2267                           
  2268                           ;LCD8bits.c: 49:     PORTCbits.RC0 = 1;
  2269  04C0  1407               	bsf	7,0	;volatile
  2270  04C1                     l1579:
  2271                           
  2272                           ;LCD8bits.c: 50:     Lcd_Port(a);
  2273  04C1  0820               	movf	Lcd_Write_Char@a,w
  2274  04C2  120A  118A  24E7  120A  118A  	fcall	_Lcd_Port
  2275  04C7                     l1581:
  2276                           
  2277                           ;LCD8bits.c: 51:     PORTCbits.RC1 = 1;
  2278  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2279  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2280  04C9  1487               	bsf	7,1	;volatile
  2281  04CA                     l1583:
  2282                           
  2283                           ;LCD8bits.c: 52:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  2284  04CA  3003               	movlw	3
  2285  04CB  00F5               	movwf	??_Lcd_Write_Char
  2286  04CC                     u1477:
  2287  04CC  0BF5               	decfsz	??_Lcd_Write_Char,f
  2288  04CD  2CCC               	goto	u1477
  2289  04CE                     l1585:
  2290                           
  2291                           ;LCD8bits.c: 53:     PORTCbits.RC1 = 0;
  2292  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2293  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2294  04D0  1087               	bcf	7,1	;volatile
  2295  04D1                     l104:
  2296  04D1  0008               	return
  2297  04D2                     __end_of_Lcd_Write_Char:
  2298                           
  2299                           	psect	text9
  2300  043B                     __ptext9:	
  2301 ;; *************** function _Lcd_Set_Cursor *****************
  2302 ;; Defined at:
  2303 ;;		line 22 in file "LCD8bits.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  a               1    wreg     unsigned char 
  2306 ;;  b               1    1[BANK0 ] unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  a               1    3[BANK0 ] unsigned char 
  2309 ;;  temp            1    4[BANK0 ] unsigned char 
  2310 ;;  y               1    0        unsigned char 
  2311 ;;  z               1    0        unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       1       0       0       0
  2322 ;;      Locals:         0       2       0       0       0
  2323 ;;      Temps:          0       1       0       0       0
  2324 ;;      Totals:         0       4       0       0       0
  2325 ;;Total ram usage:        4 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    4
  2328 ;; This function calls:
  2329 ;;		_Lcd_Cmd
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _Lcd_Set_Cursor
  2337  043B                     _Lcd_Set_Cursor:
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2341                           ;Lcd_Set_Cursor@a stored from wreg
  2342  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2343  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2344  043D  00A3               	movwf	Lcd_Set_Cursor@a
  2345  043E                     l1599:
  2346                           
  2347                           ;LCD8bits.c: 23:     char temp, z, y;;LCD8bits.c: 24:     if (a == 1) {
  2348  043E  0323               	decf	Lcd_Set_Cursor@a,w
  2349  043F  1D03               	btfss	3,2
  2350  0440  2C42               	goto	u1341
  2351  0441  2C43               	goto	u1340
  2352  0442                     u1341:
  2353  0442  2C4F               	goto	l1605
  2354  0443                     u1340:
  2355  0443                     l1601:
  2356                           
  2357                           ;LCD8bits.c: 25:         temp = 0x80 + b - 1;
  2358  0443  0821               	movf	Lcd_Set_Cursor@b,w
  2359  0444  3E7F               	addlw	127
  2360  0445  00A2               	movwf	??_Lcd_Set_Cursor
  2361  0446  0822               	movf	??_Lcd_Set_Cursor,w
  2362  0447  00A4               	movwf	Lcd_Set_Cursor@temp
  2363  0448                     l1603:
  2364                           
  2365                           ;LCD8bits.c: 26:         Lcd_Cmd(temp);
  2366  0448  0824               	movf	Lcd_Set_Cursor@temp,w
  2367  0449  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2368                           
  2369                           ;LCD8bits.c: 27:     } else if (a == 2) {
  2370  044E  2C60               	goto	l98
  2371  044F                     l1605:
  2372  044F  3002               	movlw	2
  2373  0450  0623               	xorwf	Lcd_Set_Cursor@a,w
  2374  0451  1D03               	btfss	3,2
  2375  0452  2C54               	goto	u1351
  2376  0453  2C55               	goto	u1350
  2377  0454                     u1351:
  2378  0454  2C60               	goto	l98
  2379  0455                     u1350:
  2380  0455                     l1607:
  2381                           
  2382                           ;LCD8bits.c: 28:         temp = 0xC0 + b - 1;
  2383  0455  0821               	movf	Lcd_Set_Cursor@b,w
  2384  0456  3EBF               	addlw	191
  2385  0457  00A2               	movwf	??_Lcd_Set_Cursor
  2386  0458  0822               	movf	??_Lcd_Set_Cursor,w
  2387  0459  00A4               	movwf	Lcd_Set_Cursor@temp
  2388  045A                     l1609:
  2389                           
  2390                           ;LCD8bits.c: 29:         Lcd_Cmd(temp);
  2391  045A  0824               	movf	Lcd_Set_Cursor@temp,w
  2392  045B  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2393  0460                     l98:
  2394  0460  0008               	return
  2395  0461                     __end_of_Lcd_Set_Cursor:
  2396                           
  2397                           	psect	text10
  2398  0365                     __ptext10:	
  2399 ;; *************** function _Lcd_Init *****************
  2400 ;; Defined at:
  2401 ;;		line 33 in file "LCD8bits.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          0       2       0       0       0
  2418 ;;      Totals:         0       2       0       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    4
  2422 ;; This function calls:
  2423 ;;		_Lcd_Cmd
  2424 ;;		_Lcd_Port
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _Lcd_Init
  2432  0365                     _Lcd_Init:
  2433  0365                     l1587:	
  2434                           ;incstack = 0
  2435                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2436                           
  2437                           
  2438                           ;LCD8bits.c: 34:     Lcd_Port(0x00);
  2439  0365  3000               	movlw	0
  2440  0366  120A  118A  24E7  120A  118A  	fcall	_Lcd_Port
  2441  036B                     l1589:
  2442                           
  2443                           ;LCD8bits.c: 35:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2444  036B  301A               	movlw	26
  2445  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2446  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2447  036E  00A2               	movwf	??_Lcd_Init+1
  2448  036F  30F7               	movlw	247
  2449  0370  00A1               	movwf	??_Lcd_Init
  2450  0371                     u1487:
  2451  0371  0BA1               	decfsz	??_Lcd_Init,f
  2452  0372  2B71               	goto	u1487
  2453  0373  0BA2               	decfsz	??_Lcd_Init+1,f
  2454  0374  2B71               	goto	u1487
  2455  0375  2B76               	nop2
  2456  0376                     l1591:
  2457                           
  2458                           ;LCD8bits.c: 36:     Lcd_Cmd(0x30);
  2459  0376  3030               	movlw	48
  2460  0377  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2461                           
  2462                           ;LCD8bits.c: 37:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2463  037C  3007               	movlw	7
  2464  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2465  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2466  037F  00A2               	movwf	??_Lcd_Init+1
  2467  0380  307C               	movlw	124
  2468  0381  00A1               	movwf	??_Lcd_Init
  2469  0382                     u1497:
  2470  0382  0BA1               	decfsz	??_Lcd_Init,f
  2471  0383  2B82               	goto	u1497
  2472  0384  0BA2               	decfsz	??_Lcd_Init+1,f
  2473  0385  2B82               	goto	u1497
  2474  0386  0000               	nop
  2475  0387                     l1593:
  2476                           
  2477                           ;LCD8bits.c: 38:     Lcd_Cmd(0x30);
  2478  0387  3030               	movlw	48
  2479  0388  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2480  038D                     l1595:
  2481                           
  2482                           ;LCD8bits.c: 39:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2483  038D  300F               	movlw	15
  2484  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2485  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0390  00A2               	movwf	??_Lcd_Init+1
  2487  0391  3047               	movlw	71
  2488  0392  00A1               	movwf	??_Lcd_Init
  2489  0393                     u1507:
  2490  0393  0BA1               	decfsz	??_Lcd_Init,f
  2491  0394  2B93               	goto	u1507
  2492  0395  0BA2               	decfsz	??_Lcd_Init+1,f
  2493  0396  2B93               	goto	u1507
  2494                           
  2495                           ;LCD8bits.c: 40:     Lcd_Cmd(0x30);
  2496  0397  3030               	movlw	48
  2497  0398  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2498                           
  2499                           ;LCD8bits.c: 42:     Lcd_Cmd(0b00111000);
  2500  039D  3038               	movlw	56
  2501  039E  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2502                           
  2503                           ;LCD8bits.c: 43:     Lcd_Cmd(0x0C);
  2504  03A3  300C               	movlw	12
  2505  03A4  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2506                           
  2507                           ;LCD8bits.c: 44:     Lcd_Cmd(0x6);
  2508  03A9  3006               	movlw	6
  2509  03AA  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2510  03AF                     l101:
  2511  03AF  0008               	return
  2512  03B0                     __end_of_Lcd_Init:
  2513                           
  2514                           	psect	text11
  2515  04D2                     __ptext11:	
  2516 ;; *************** function _Lcd_Clear *****************
  2517 ;; Defined at:
  2518 ;;		line 17 in file "LCD8bits.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    4
  2539 ;; This function calls:
  2540 ;;		_Lcd_Cmd
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _Lcd_Clear
  2548  04D2                     _Lcd_Clear:
  2549  04D2                     l1597:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2552                           
  2553                           
  2554                           ;LCD8bits.c: 18:     Lcd_Cmd(0);
  2555  04D2  3000               	movlw	0
  2556  04D3  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2557                           
  2558                           ;LCD8bits.c: 19:     Lcd_Cmd(1);
  2559  04D8  3001               	movlw	1
  2560  04D9  120A  118A  247A  120A  118A  	fcall	_Lcd_Cmd
  2561  04DE                     l92:
  2562  04DE  0008               	return
  2563  04DF                     __end_of_Lcd_Clear:
  2564                           
  2565                           	psect	text12
  2566  047A                     __ptext12:	
  2567 ;; *************** function _Lcd_Cmd *****************
  2568 ;; Defined at:
  2569 ;;		line 9 in file "LCD8bits.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  a               1    wreg     unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  a               1    0[BANK0 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         0       0       0       0       0
  2584 ;;      Locals:         0       1       0       0       0
  2585 ;;      Temps:          1       0       0       0       0
  2586 ;;      Totals:         1       1       0       0       0
  2587 ;;Total ram usage:        2 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    3
  2590 ;; This function calls:
  2591 ;;		_Lcd_Port
  2592 ;; This function is called by:
  2593 ;;		_Lcd_Clear
  2594 ;;		_Lcd_Set_Cursor
  2595 ;;		_Lcd_Init
  2596 ;;		_Lcd_Shift_Right
  2597 ;;		_Lcd_Shift_Left
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _Lcd_Cmd
  2603  047A                     _Lcd_Cmd:
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2607                           ;Lcd_Cmd@a stored from wreg
  2608  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2609  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2610  047C  00A0               	movwf	Lcd_Cmd@a
  2611  047D                     l1567:
  2612                           
  2613                           ;LCD8bits.c: 10:     PORTCbits.RC0 = 0;
  2614  047D  1007               	bcf	7,0	;volatile
  2615  047E                     l1569:
  2616                           
  2617                           ;LCD8bits.c: 11:     Lcd_Port(a);
  2618  047E  0820               	movf	Lcd_Cmd@a,w
  2619  047F  120A  118A  24E7  120A  118A  	fcall	_Lcd_Port
  2620  0484                     l1571:
  2621                           
  2622                           ;LCD8bits.c: 12:     PORTCbits.RC1 = 1;
  2623  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0486  1487               	bsf	7,1	;volatile
  2626  0487                     l1573:
  2627                           
  2628                           ;LCD8bits.c: 13:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2629  0487  30C7               	movlw	199
  2630  0488  00F5               	movwf	??_Lcd_Cmd
  2631  0489                     u1517:
  2632  0489  2C8A               	nop2
  2633  048A  0BF5               	decfsz	??_Lcd_Cmd,f
  2634  048B  2C89               	goto	u1517
  2635  048C  2C8D               	nop2
  2636  048D  2C8E               	nop2
  2637  048E                     l1575:
  2638                           
  2639                           ;LCD8bits.c: 14:     PORTCbits.RC1 = 0;
  2640  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2641  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0490  1087               	bcf	7,1	;volatile
  2643  0491                     l89:
  2644  0491  0008               	return
  2645  0492                     __end_of_Lcd_Cmd:
  2646                           
  2647                           	psect	text13
  2648  04E7                     __ptext13:	
  2649 ;; *************** function _Lcd_Port *****************
  2650 ;; Defined at:
  2651 ;;		line 5 in file "LCD8bits.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  a               1    wreg     unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  a               1    4[COMMON] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0
  2668 ;;      Totals:         1       0       0       0       0
  2669 ;;Total ram usage:        1 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    2
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_Lcd_Cmd
  2676 ;;		_Lcd_Init
  2677 ;;		_Lcd_Write_Char
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _Lcd_Port
  2683  04E7                     _Lcd_Port:
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _Lcd_Port: [wreg]
  2687                           ;Lcd_Port@a stored from wreg
  2688  04E7  00F4               	movwf	Lcd_Port@a
  2689  04E8                     l1565:
  2690                           
  2691                           ;LCD8bits.c: 6:     PORTD = a;
  2692  04E8  0874               	movf	Lcd_Port@a,w
  2693  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2694  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2695  04EB  0088               	movwf	8	;volatile
  2696  04EC                     l86:
  2697  04EC  0008               	return
  2698  04ED                     __end_of_Lcd_Port:
  2699                           
  2700                           	psect	text14
  2701  03E2                     __ptext14:	
  2702 ;; *************** function _ISR *****************
  2703 ;; Defined at:
  2704 ;;		line 54 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          3       0       0       0       0
  2721 ;;      Totals:         3       0       0       0       0
  2722 ;;Total ram usage:        3 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    1
  2725 ;; This function calls:
  2726 ;;		i1_canalADC
  2727 ;; This function is called by:
  2728 ;;		Interrupt level 1
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _ISR
  2734  03E2                     _ISR:
  2735  03E2                     i1l1511:
  2736                           
  2737                           ;main.c: 56:     while (1) {
  2738  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2739  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2740  03E4  1F0C               	btfss	12,6	;volatile
  2741  03E5  2BE7               	goto	u132_21
  2742  03E6  2BE8               	goto	u132_20
  2743  03E7                     u132_21:
  2744  03E7  2C0D               	goto	i1l66
  2745  03E8                     u132_20:
  2746  03E8                     i1l1513:
  2747                           
  2748                           ;main.c: 59: 
  2749  03E8  0879               	movf	_bandera,w
  2750  03E9  1D03               	btfss	3,2
  2751  03EA  2BEC               	goto	u133_21
  2752  03EB  2BED               	goto	u133_20
  2753  03EC                     u133_21:
  2754  03EC  2BFC               	goto	i1l1521
  2755  03ED                     u133_20:
  2756  03ED                     i1l1515:
  2757                           
  2758                           ;main.c: 60:         Lcd_Set_Cursor(1, 1);
  2759  03ED  081E               	movf	30,w	;volatile
  2760  03EE  00F1               	movwf	??_ISR
  2761  03EF  0871               	movf	??_ISR,w
  2762  03F0  00C3               	movwf	_varADC1
  2763  03F1                     i1l1517:
  2764                           
  2765                           ;main.c: 61:         Lcd_Write_String("S1");
  2766  03F1  3001               	movlw	1
  2767  03F2  120A  118A  2251  120A  118A  	fcall	i1_canalADC
  2768  03F7                     i1l1519:
  2769                           
  2770                           ;main.c: 62:         Lcd_Set_Cursor(1, 8);
  2771  03F7  3001               	movlw	1
  2772  03F8  00F1               	movwf	??_ISR
  2773  03F9  0871               	movf	??_ISR,w
  2774  03FA  07F9               	addwf	_bandera,f
  2775                           
  2776                           ;main.c: 63:         Lcd_Write_String("S2");
  2777  03FB  2C07               	goto	i1l1527
  2778  03FC                     i1l1521:
  2779                           
  2780                           ;main.c: 64:         Lcd_Set_Cursor(1, 15);
  2781  03FC  081E               	movf	30,w	;volatile
  2782  03FD  00F1               	movwf	??_ISR
  2783  03FE  0871               	movf	??_ISR,w
  2784  03FF  00C2               	movwf	_varADC2
  2785  0400                     i1l1523:
  2786                           
  2787                           ;main.c: 65:         Lcd_Write_String("S3");
  2788  0400  3000               	movlw	0
  2789  0401  120A  118A  2251  120A  118A  	fcall	i1_canalADC
  2790  0406                     i1l1525:
  2791                           
  2792                           ;main.c: 66: 
  2793  0406  01F9               	clrf	_bandera
  2794  0407                     i1l1527:
  2795                           
  2796                           ;main.c: 68: 
  2797  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0409  0843               	movf	_varADC1,w
  2800  040A  0086               	movwf	6	;volatile
  2801  040B                     i1l1529:
  2802                           
  2803                           ;main.c: 70:         Lcd_Set_Cursor(2,1);
  2804  040B  130C               	bcf	12,6	;volatile
  2805  040C                     i1l1531:
  2806                           
  2807                           ;main.c: 71:         Lcd_Write_String(buf);
  2808  040C  149F               	bsf	31,1	;volatile
  2809  040D                     i1l66:
  2810  040D  0873               	movf	??_ISR+2,w
  2811  040E  008A               	movwf	10
  2812  040F  0E72               	swapf	??_ISR+1,w
  2813  0410  0083               	movwf	3
  2814  0411  0EFE               	swapf	btemp,f
  2815  0412  0E7E               	swapf	btemp,w
  2816  0413  0009               	retfie
  2817  0414                     __end_of_ISR:
  2818                           
  2819                           	psect	intentry
  2820  0004                     __pintentry:	
  2821                           ;incstack = 0
  2822                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2823                           
  2824  0004                     interrupt_function:
  2825  007E                     saved_w	set	btemp
  2826  0004  00FE               	movwf	btemp
  2827  0005  0E03               	swapf	3,w
  2828  0006  00F2               	movwf	??_ISR+1
  2829  0007  080A               	movf	10,w
  2830  0008  00F3               	movwf	??_ISR+2
  2831  0009  120A  118A  2BE2   	ljmp	_ISR
  2832                           
  2833                           	psect	text15
  2834  0251                     __ptext15:	
  2835 ;; *************** function i1_canalADC *****************
  2836 ;; Defined at:
  2837 ;;		line 13 in file "ADC.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  canal           1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  canal           1    0[COMMON] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0
  2854 ;;      Totals:         1       0       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_ISR
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function i1_canalADC
  2866  0251                     i1_canalADC:
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in i1_canalADC: [wreg+status,2+status,0]
  2870                           ;i1canalADC@canal stored from wreg
  2871  0251  00F0               	movwf	i1canalADC@canal
  2872  0252                     i1l1455:
  2873                           
  2874                           ;ADC.c: 15:     if (canal == 0) {
  2875  0252  0870               	movf	i1canalADC@canal,w
  2876  0253  1D03               	btfss	3,2
  2877  0254  2A56               	goto	u118_21
  2878  0255  2A57               	goto	u118_20
  2879  0256                     u118_21:
  2880  0256  2A5D               	goto	i1l1459
  2881  0257                     u118_20:
  2882  0257                     i1l1457:
  2883                           
  2884                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
  2885  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0259  129F               	bcf	31,5	;volatile
  2888                           
  2889                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
  2890  025A  121F               	bcf	31,4	;volatile
  2891                           
  2892                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
  2893  025B  119F               	bcf	31,3	;volatile
  2894                           
  2895                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
  2896  025C  111F               	bcf	31,2	;volatile
  2897  025D                     i1l1459:
  2898                           
  2899                           ;ADC.c: 23:     if (canal == 1) {
  2900  025D  0370               	decf	i1canalADC@canal,w
  2901  025E  1D03               	btfss	3,2
  2902  025F  2A61               	goto	u119_21
  2903  0260  2A62               	goto	u119_20
  2904  0261                     u119_21:
  2905  0261  2A68               	goto	i1l1463
  2906  0262                     u119_20:
  2907  0262                     i1l1461:
  2908                           
  2909                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
  2910  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0264  129F               	bcf	31,5	;volatile
  2913                           
  2914                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
  2915  0265  121F               	bcf	31,4	;volatile
  2916                           
  2917                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
  2918  0266  119F               	bcf	31,3	;volatile
  2919                           
  2920                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
  2921  0267  151F               	bsf	31,2	;volatile
  2922  0268                     i1l1463:
  2923                           
  2924                           ;ADC.c: 32:     if (canal == 2) {
  2925  0268  3002               	movlw	2
  2926  0269  0670               	xorwf	i1canalADC@canal,w
  2927  026A  1D03               	btfss	3,2
  2928  026B  2A6D               	goto	u120_21
  2929  026C  2A6E               	goto	u120_20
  2930  026D                     u120_21:
  2931  026D  2A74               	goto	i1l1467
  2932  026E                     u120_20:
  2933  026E                     i1l1465:
  2934                           
  2935                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
  2936  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2937  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0270  129F               	bcf	31,5	;volatile
  2939                           
  2940                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
  2941  0271  121F               	bcf	31,4	;volatile
  2942                           
  2943                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
  2944  0272  159F               	bsf	31,3	;volatile
  2945                           
  2946                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
  2947  0273  111F               	bcf	31,2	;volatile
  2948  0274                     i1l1467:
  2949                           
  2950                           ;ADC.c: 41:     if (canal == 3) {
  2951  0274  3003               	movlw	3
  2952  0275  0670               	xorwf	i1canalADC@canal,w
  2953  0276  1D03               	btfss	3,2
  2954  0277  2A79               	goto	u121_21
  2955  0278  2A7A               	goto	u121_20
  2956  0279                     u121_21:
  2957  0279  2A80               	goto	i1l1471
  2958  027A                     u121_20:
  2959  027A                     i1l1469:
  2960                           
  2961                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
  2962  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2963  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2964  027C  129F               	bcf	31,5	;volatile
  2965                           
  2966                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
  2967  027D  121F               	bcf	31,4	;volatile
  2968                           
  2969                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
  2970  027E  159F               	bsf	31,3	;volatile
  2971                           
  2972                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
  2973  027F  151F               	bsf	31,2	;volatile
  2974  0280                     i1l1471:
  2975                           
  2976                           ;ADC.c: 50:     if (canal == 4) {
  2977  0280  3004               	movlw	4
  2978  0281  0670               	xorwf	i1canalADC@canal,w
  2979  0282  1D03               	btfss	3,2
  2980  0283  2A85               	goto	u122_21
  2981  0284  2A86               	goto	u122_20
  2982  0285                     u122_21:
  2983  0285  2A8C               	goto	i1l1475
  2984  0286                     u122_20:
  2985  0286                     i1l1473:
  2986                           
  2987                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
  2988  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0288  129F               	bcf	31,5	;volatile
  2991                           
  2992                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
  2993  0289  161F               	bsf	31,4	;volatile
  2994                           
  2995                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
  2996  028A  119F               	bcf	31,3	;volatile
  2997                           
  2998                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
  2999  028B  111F               	bcf	31,2	;volatile
  3000  028C                     i1l1475:
  3001                           
  3002                           ;ADC.c: 59:     if (canal == 5) {
  3003  028C  3005               	movlw	5
  3004  028D  0670               	xorwf	i1canalADC@canal,w
  3005  028E  1D03               	btfss	3,2
  3006  028F  2A91               	goto	u123_21
  3007  0290  2A92               	goto	u123_20
  3008  0291                     u123_21:
  3009  0291  2A98               	goto	i1l1479
  3010  0292                     u123_20:
  3011  0292                     i1l1477:
  3012                           
  3013                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
  3014  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0293  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0294  129F               	bcf	31,5	;volatile
  3017                           
  3018                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
  3019  0295  161F               	bsf	31,4	;volatile
  3020                           
  3021                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
  3022  0296  119F               	bcf	31,3	;volatile
  3023                           
  3024                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
  3025  0297  151F               	bsf	31,2	;volatile
  3026  0298                     i1l1479:
  3027                           
  3028                           ;ADC.c: 68:     if (canal == 6) {
  3029  0298  3006               	movlw	6
  3030  0299  0670               	xorwf	i1canalADC@canal,w
  3031  029A  1D03               	btfss	3,2
  3032  029B  2A9D               	goto	u124_21
  3033  029C  2A9E               	goto	u124_20
  3034  029D                     u124_21:
  3035  029D  2AA4               	goto	i1l1483
  3036  029E                     u124_20:
  3037  029E                     i1l1481:
  3038                           
  3039                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
  3040  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3041  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3042  02A0  129F               	bcf	31,5	;volatile
  3043                           
  3044                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
  3045  02A1  161F               	bsf	31,4	;volatile
  3046                           
  3047                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
  3048  02A2  159F               	bsf	31,3	;volatile
  3049                           
  3050                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
  3051  02A3  111F               	bcf	31,2	;volatile
  3052  02A4                     i1l1483:
  3053                           
  3054                           ;ADC.c: 77:     if (canal == 7) {
  3055  02A4  3007               	movlw	7
  3056  02A5  0670               	xorwf	i1canalADC@canal,w
  3057  02A6  1D03               	btfss	3,2
  3058  02A7  2AA9               	goto	u125_21
  3059  02A8  2AAA               	goto	u125_20
  3060  02A9                     u125_21:
  3061  02A9  2AB0               	goto	i1l1487
  3062  02AA                     u125_20:
  3063  02AA                     i1l1485:
  3064                           
  3065                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
  3066  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3067  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3068  02AC  129F               	bcf	31,5	;volatile
  3069                           
  3070                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
  3071  02AD  161F               	bsf	31,4	;volatile
  3072                           
  3073                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
  3074  02AE  159F               	bsf	31,3	;volatile
  3075                           
  3076                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
  3077  02AF  151F               	bsf	31,2	;volatile
  3078  02B0                     i1l1487:
  3079                           
  3080                           ;ADC.c: 86:     if (canal == 8) {
  3081  02B0  3008               	movlw	8
  3082  02B1  0670               	xorwf	i1canalADC@canal,w
  3083  02B2  1D03               	btfss	3,2
  3084  02B3  2AB5               	goto	u126_21
  3085  02B4  2AB6               	goto	u126_20
  3086  02B5                     u126_21:
  3087  02B5  2ABC               	goto	i1l1491
  3088  02B6                     u126_20:
  3089  02B6                     i1l1489:
  3090                           
  3091                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
  3092  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3093  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3094  02B8  169F               	bsf	31,5	;volatile
  3095                           
  3096                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
  3097  02B9  121F               	bcf	31,4	;volatile
  3098                           
  3099                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
  3100  02BA  119F               	bcf	31,3	;volatile
  3101                           
  3102                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
  3103  02BB  111F               	bcf	31,2	;volatile
  3104  02BC                     i1l1491:
  3105                           
  3106                           ;ADC.c: 94:     if (canal == 9) {
  3107  02BC  3009               	movlw	9
  3108  02BD  0670               	xorwf	i1canalADC@canal,w
  3109  02BE  1D03               	btfss	3,2
  3110  02BF  2AC1               	goto	u127_21
  3111  02C0  2AC2               	goto	u127_20
  3112  02C1                     u127_21:
  3113  02C1  2AC8               	goto	i1l1495
  3114  02C2                     u127_20:
  3115  02C2                     i1l1493:
  3116                           
  3117                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  3118  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3119  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3120  02C4  169F               	bsf	31,5	;volatile
  3121                           
  3122                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  3123  02C5  121F               	bcf	31,4	;volatile
  3124                           
  3125                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  3126  02C6  119F               	bcf	31,3	;volatile
  3127                           
  3128                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  3129  02C7  151F               	bsf	31,2	;volatile
  3130  02C8                     i1l1495:
  3131                           
  3132                           ;ADC.c: 102:     if (canal == 10) {
  3133  02C8  300A               	movlw	10
  3134  02C9  0670               	xorwf	i1canalADC@canal,w
  3135  02CA  1D03               	btfss	3,2
  3136  02CB  2ACD               	goto	u128_21
  3137  02CC  2ACE               	goto	u128_20
  3138  02CD                     u128_21:
  3139  02CD  2AD4               	goto	i1l1499
  3140  02CE                     u128_20:
  3141  02CE                     i1l1497:
  3142                           
  3143                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  3144  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3145  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3146  02D0  169F               	bsf	31,5	;volatile
  3147                           
  3148                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  3149  02D1  121F               	bcf	31,4	;volatile
  3150                           
  3151                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  3152  02D2  159F               	bsf	31,3	;volatile
  3153                           
  3154                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  3155  02D3  111F               	bcf	31,2	;volatile
  3156  02D4                     i1l1499:
  3157                           
  3158                           ;ADC.c: 111:     if (canal == 11) {
  3159  02D4  300B               	movlw	11
  3160  02D5  0670               	xorwf	i1canalADC@canal,w
  3161  02D6  1D03               	btfss	3,2
  3162  02D7  2AD9               	goto	u129_21
  3163  02D8  2ADA               	goto	u129_20
  3164  02D9                     u129_21:
  3165  02D9  2AE0               	goto	i1l1503
  3166  02DA                     u129_20:
  3167  02DA                     i1l1501:
  3168                           
  3169                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  3170  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3171  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3172  02DC  169F               	bsf	31,5	;volatile
  3173                           
  3174                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  3175  02DD  121F               	bcf	31,4	;volatile
  3176                           
  3177                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  3178  02DE  159F               	bsf	31,3	;volatile
  3179                           
  3180                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  3181  02DF  151F               	bsf	31,2	;volatile
  3182  02E0                     i1l1503:
  3183                           
  3184                           ;ADC.c: 120:     if (canal == 12) {
  3185  02E0  300C               	movlw	12
  3186  02E1  0670               	xorwf	i1canalADC@canal,w
  3187  02E2  1D03               	btfss	3,2
  3188  02E3  2AE5               	goto	u130_21
  3189  02E4  2AE6               	goto	u130_20
  3190  02E5                     u130_21:
  3191  02E5  2AEC               	goto	i1l1507
  3192  02E6                     u130_20:
  3193  02E6                     i1l1505:
  3194                           
  3195                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  3196  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3197  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3198  02E8  169F               	bsf	31,5	;volatile
  3199                           
  3200                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  3201  02E9  161F               	bsf	31,4	;volatile
  3202                           
  3203                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  3204  02EA  119F               	bcf	31,3	;volatile
  3205                           
  3206                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  3207  02EB  111F               	bcf	31,2	;volatile
  3208  02EC                     i1l1507:
  3209                           
  3210                           ;ADC.c: 129:     if (canal == 13) {
  3211  02EC  300D               	movlw	13
  3212  02ED  0670               	xorwf	i1canalADC@canal,w
  3213  02EE  1D03               	btfss	3,2
  3214  02EF  2AF1               	goto	u131_21
  3215  02F0  2AF2               	goto	u131_20
  3216  02F1                     u131_21:
  3217  02F1  2AF8               	goto	i1l193
  3218  02F2                     u131_20:
  3219  02F2                     i1l1509:
  3220                           
  3221                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  3222  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3223  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3224  02F4  169F               	bsf	31,5	;volatile
  3225                           
  3226                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  3227  02F5  161F               	bsf	31,4	;volatile
  3228                           
  3229                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  3230  02F6  119F               	bcf	31,3	;volatile
  3231                           
  3232                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  3233  02F7  151F               	bsf	31,2	;volatile
  3234  02F8                     i1l193:	
  3235                           ;ADC.c: 135:     }
  3236                           
  3237                           
  3238                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  3239  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3240  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3241  02FA  149F               	bsf	31,1	;volatile
  3242  02FB                     i1l194:	
  3243                           ;ADC.c: 138:     return;
  3244                           
  3245  02FB  0008               	return
  3246  02FC                     __end_ofi1_canalADC:
  3247  007E                     btemp	set	126	;btemp
  3248  007E                     wtemp0	set	126
  3249                           
  3250                           	psect	config
  3251                           
  3252                           ;Config register CONFIG1 @ 0x2007
  3253                           ;	Oscillator Selection bits
  3254                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3255                           ;	Watchdog Timer Enable bit
  3256                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3257                           ;	Power-up Timer Enable bit
  3258                           ;	PWRTE = OFF, PWRT disabled
  3259                           ;	RE3/MCLR pin function select bit
  3260                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3261                           ;	Code Protection bit
  3262                           ;	CP = OFF, Program memory code protection is disabled
  3263                           ;	Data Code Protection bit
  3264                           ;	CPD = OFF, Data memory code protection is disabled
  3265                           ;	Brown Out Reset Selection bits
  3266                           ;	BOREN = OFF, BOR disabled
  3267                           ;	Internal External Switchover bit
  3268                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3269                           ;	Fail-Safe Clock Monitor Enabled bit
  3270                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3271                           ;	Low Voltage Programming Enable bit
  3272                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3273                           ;	In-Circuit Debugger Mode bit
  3274                           ;	DEBUG = 0x1, unprogrammed default
  3275  2007                     	org	8199
  3276  2007  20D4               	dw	8404
  3277                           
  3278                           ;Config register CONFIG2 @ 0x2008
  3279                           ;	Brown-out Reset Selection bit
  3280                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3281                           ;	Flash Program Memory Self Write Enable bits
  3282                           ;	WRT = OFF, Write protection off
  3283  2008                     	org	8200
  3284  2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     30      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    resultado	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), buf(BANK0[20]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    ___xxtofl->___awdiv
    ___wmul->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    _ISR->i1_canalADC

Critical Paths under _main in BANK0

    _main->___xxtofl
    ___xxtofl->___wmul
    ___wmul->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3076
                                             28 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                            ___awdiv
                             ___wmul
                           ___xxtofl
                           _canalADC
                          _configADC
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     308
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             14 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     642
                                              1 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     704
                                              1 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0     308
                                              1 COMMON     3     3      0
                         i1_canalADC
 ---------------------------------------------------------------------------------
 (5) i1_canalADC                                           1     1      0     308
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   ___xxtofl
     ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   _canalADC
   _configADC

 _ISR (ROOT)
   i1_canalADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      42       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      42      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 23:33:35 2021

                        pc 0002                         l92 04DE                         l77 04A7  
                       l86 04EC                         l89 0491                         l98 0460  
             ___awdiv@sign 0025                 i1_canalADC 0251                         fsr 0004  
      ___wmul@multiplicand 002A                        l101 03AF                        l110 03E1  
                      l104 04D1                        l193 024D                        l194 0250  
                      l283 0422                        l436 0364                        l285 043A  
                      l197 04BC                        l730 017B                        l722 0153  
                      l716 010E                        l718 01A5                        l729 016F  
                      _ISR 03E2                        u800 01FF                        u801 01FE  
                      u810 020B                        u730 01AC                        u811 020A  
                      u731 01AB                        u900 041C                        u820 0217  
                      u740 01B7                        u901 041B                        u821 0216  
                      u741 01B6                        u830 0223                        u750 01C3  
                      u831 0222                        u751 01C2                        u840 022F  
                      u760 01CF                        u841 022E                        u761 01CE  
                      u930 0436                        u850 023B                        u770 01DB  
                      u931 0435                        u915 0423                        u851 023A  
                      u771 01DA                        u860 0247                        u780 01E7  
                      u925 042A                        u861 0246                        u781 01E6  
                      u790 01F3                        u791 01F2                        _buf 0044  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1301 049C                       l1311 04A1                       l1303 049D  
                     l1313 04A4                       l1305 049E                       l1241 01B7  
                     l1315 04A5                       l1307 049F                       l1411 00ED  
                     l1251 01D5                       l1243 01BD                       l1235 01A7  
                     l1331 04A8                       l1317 04A6                       l1309 04A0  
                     l1413 00F2                       l1261 01F3                       l1253 01DB  
                     l1245 01C3                       l1237 01AC                       l1431 013C  
                     l1423 011F                       l1415 00F6                       l1271 0211  
                     l1263 01F9                       l1255 01E1                       l1247 01C9  
                     l1239 01B2                       l1601 0443                       l1361 0430  
                     l1353 0414                       l1441 0173                       l1433 014A  
                     l1425 0124                       l1417 0106                       l1281 022F  
                     l1273 0217                       l1265 01FF                       l1257 01E7  
                     l1249 01CF                       l1603 0448                       l1611 03B0  
                     l1291 0492                       l1363 0436                       l1355 0418  
                     l1451 019D                       l1443 017D                       l1435 015A  
                     l1427 0131                       l1419 0116                       l1283 0235  
                     l1275 021D                       l1267 0205                       l1259 01ED  
                     l1605 044F                       l1613 03B5                       l1293 0496  
                     l1621 02FF                       l1357 041C                       l1445 0193  
                     l1437 0165                       l1429 0138                       l1285 023B  
                     l1277 0223                       l1269 020B                       l1607 0455  
                     l1615 03C7                       l1295 0497                       l1631 0313  
                     l1623 0303                       l1359 0429                       l1447 0198  
                     l1439 0169                       l1287 0241                       l1279 0229  
                     l1609 045A                       l1617 03CF                       l1297 0498  
                     l1641 0329                       l1633 0317                       l1625 0308  
                     l1449 019C                       l1289 0247                       l1571 0484  
                     l1299 0499                       l1651 0349                       l1643 032D  
                     l1635 0319                       l1627 030A                       l1619 02FC  
                     l1565 04E8                       l1573 0487                       l1581 04C7  
                     l1653 0350                       l1645 0331                       l1637 031F  
                     l1629 030E                       l1575 048E                       l1567 047D  
                     l1591 0376                       l1583 04CA                       l1647 0342  
                     l1639 0322                       l1655 0356                       l1671 0044  
                     l1663 0020                       l1569 047E                       l1593 0387  
                     l1585 04CE                       l1577 04C0                       l1657 035B  
                     l1649 0348                       l1681 007D                       l1673 004F  
                     l1665 002F                       l1595 038D                       l1587 0365  
                     l1579 04C1                       l1659 0360                       l1683 00B9  
                     l1675 005B                       l1667 0034                       l1597 04D2  
                     l1589 036B                       l1685 00C1                       l1677 0066  
                     l1669 003A                       l1599 043E                       l1687 00CC  
                     l1679 0072                       l1689 00D8                       _ADIF 0066  
                     STR_1 0471                       STR_2 0474                       STR_3 0477  
                     u1100 0159                       u1101 0158                       u1120 0169  
                     u1040 00F2                       u1121 0168                       u1041 00F1  
                     u1130 016F                       u1050 00F6                       u1131 016E  
                     u1115 015E                       u1051 00F5                       u1140 0173  
                     u1060 0116                       u1141 0172                       u1061 0115  
                     u1150 0188                       u1160 0198                       u1080 0137  
                     u1161 0197                       u1081 0136                       u1410 0331  
                     u1170 019C                       u1411 0330                       u1171 019B  
                     u1155 0183                       u1075 0129                       u1340 0443  
                     u1341 0442                       u1405 0323                       u1350 0455  
                     u1430 0342                       u1351 0454                       u1431 0341  
                     u1095 014B                       u1360 03E1                       u1361 03E0  
                     u1425 0332                       u1450 0356                       u1370 0303  
                     u1507 0393                       u1451 0355                       u1435 033E  
                     u1371 0302                       u1460 035B                       u1380 030E  
                     u1517 0489                       u1461 035A                       u1445 034A  
                     u1381 030D                       u1390 031F                       u1391 031E  
                     u1477 04CC                       u1487 0371                       u1497 0382  
                     i1l66 040D          ?_Lcd_Write_String 0021                       _main 0020  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 0492                      ??_ISR 0071                      ?_main 0070  
          __end_of___awdiv 0365                      _ANSEL 0188            ___awdiv@divisor 0020  
                    i1l193 02F8                      i1l194 02FB            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TXREG 0019  
                    _Setup 0492                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 03B0           __end_of_Lcd_Port 04ED  
          __initialization 000F               __end_of_main 00EA                ?i1_canalADC 0070  
                   ??_main 003C         __size_of_Lcd_Clear 000D                     ?_Setup 0070  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l1501 02DA                     i1l1503 02E0                     i1l1511 03E2  
                   u120_20 026E                     i1l1505 02E6                     u120_21 026D  
                   i1l1521 03FC                     i1l1513 03E8                     i1l1507 02EC  
                   i1l1531 040C                     i1l1523 0400                     i1l1515 03ED  
                   i1l1509 02F2                     i1l1461 0262                     i1l1525 0406  
                   i1l1517 03F1                     i1l1471 0280                     i1l1463 0268  
                   i1l1455 0252                     i1l1527 0407                     i1l1519 03F7  
                   u121_20 027A                     i1l1481 029E                     i1l1473 0286  
                   u121_21 0279                     i1l1465 026E                     i1l1457 0257  
                   i1l1529 040B                     i1l1491 02BC                     i1l1483 02A4  
                   i1l1475 028C                     i1l1467 0274                     i1l1459 025D  
                   i1l1493 02C2                     i1l1485 02AA                     i1l1477 0292  
                   i1l1469 027A                     i1l1495 02C8                     i1l1487 02B0  
                   i1l1479 0298                     u130_20 02E6                     u122_20 0286  
                   u130_21 02E5                     i1l1497 02CE                     i1l1489 02B6  
                   u122_21 0285                     i1l1499 02D4                     u131_20 02F2  
                   u123_20 0292                     u131_21 02F1                     u123_21 0291  
                   u124_20 029E                     u132_20 03E8                     u124_21 029D  
                   u132_21 03E7                     u125_20 02AA                     u133_20 03ED  
                   u125_21 02A9                     u133_21 03EC                     u126_20 02B6  
                   u118_20 0257                     u126_21 02B5                     u118_21 0256  
                   u127_20 02C2                     u119_20 0262                     u127_21 02C1  
                   u119_21 0261                     u128_20 02CE                     u128_21 02CD  
                   u129_20 02DA                     u129_21 02D9           __end_of_canalADC 0251  
                ??_Lcd_Cmd 0075    __size_of_Lcd_Write_Char 0015           __end_of___xxtofl 01A6  
                   ___wmul 0414                  ??___awdiv 0074           ___awdiv@quotient 0026  
                   _status 0076                     saved_w 007E            Lcd_Set_Cursor@a 0023  
          Lcd_Set_Cursor@b 0021               ___xxtofl@arg 0038               ___xxtofl@exp 0037  
             ___xxtofl@val 002E    __end_of__initialization 001C        __size_ofi1_canalADC 00AB  
        __end_of_Lcd_Clear 04DF             __pcstackCOMMON 0070              __end_of_Setup 04A8  
           _Lcd_Set_Cursor 043B         __size_of_configADC 0015                    ??_Setup 0074  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 003E  
               __pmaintext 0020                    ?___wmul 0028                 __pintentry 0004  
__size_of_Lcd_Write_String 0032     __end_of_Lcd_Set_Cursor 0461                  ?_canalADC 0070  
                ?___xxtofl 002E                 ??_Lcd_Init 0021                 ??_Lcd_Port 0074  
               __stringtab 0461             _Lcd_Write_Char 04BD                    _Lcd_Cmd 047A  
        __end_of_configADC 04BD                    ___awdiv 02FC            __size_of___wmul 0027  
                  _bandera 0079               ??i1_canalADC 0070                  _ANSELbits 0188  
          ?_Lcd_Set_Cursor 0021                    __ptext1 04A8                    __ptext2 01A6  
                  __ptext3 00EA                    __ptext4 0414                    __ptext5 02FC  
                  __ptext6 0492                    __ptext7 03B0                    __ptext8 04BD  
                  __ptext9 043B                 ??_canalADC 0074               __size_of_ISR 0032  
                  _varADC1 0043                    _varADC2 0042                 ??___xxtofl 0032  
                  clrloop0 04E0     __end_of_Lcd_Write_Char 04D2       end_of_initialization 001C  
       __end_ofi1_canalADC 02FC                  _RCSTAbits 0018                  Lcd_Port@a 0074  
                _PORTCbits 0007              ___xxtofl@sign 0036                  _TRISBbits 0086  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0021          Lcd_Write_String@i 0023  
                _TXSTAbits 0098                  _Lcd_Clear 04D2             __end_of___wmul 043B  
         _Lcd_Write_String 03B0        start_initialization 000F                __end_of_ISR 0414  
        __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
                 ??___wmul 0075            Lcd_Write_Char@a 0020                __pbssCOMMON 0076  
                ___latbits 0002          __size_of_canalADC 00AB              __pcstackBANK0 0020  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0022  
                 ?___awdiv 0020                  _configADC 04A8                  __pstrings 0461  
                _convertir 003E             __size_of_Setup 0016          interrupt_function 0004  
           ___wmul@product 002C                  clear_ram0 04DF                   _PIE1bits 008C  
                 Lcd_Cmd@a 0020                   _PIR1bits 000C                ??_Lcd_Clear 0076  
                _resultado 0078                 ?_configADC 0070                 _ADCON0bits 001F  
              __stringbase 0470                 _ADCON1bits 009F          ___wmul@multiplier 0028  
         ??_Lcd_Write_Char 0075                   _Lcd_Init 0365                   _Lcd_Port 04E7  
 __end_of_Lcd_Write_String 03E2           __size_of_Lcd_Cmd 0018           __size_of___awdiv 0069  
       __end_of__stringtab 0471                   _canalADC 01A6                   ___xxtofl 00EA  
            canalADC@canal 0074                   __ptext10 0365                   __ptext11 04D2  
                 __ptext12 047A                   __ptext13 04E7                   __ptext14 03E2  
                 __ptext15 0251              __size_of_main 00CA                ??_configADC 0074  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 046B  
       Lcd_Set_Cursor@temp 0024                   stringdir 046B                   stringtab 0461  
          i1canalADC@canal 0070  
