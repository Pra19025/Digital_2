

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 19:07:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0007                     _PORTCbits	set	7
   291  0008                     _PORTD	set	8
   292  0007                     _PORTC	set	7
   293  0005                     _PORTA	set	5
   294  0087                     _TRISC	set	135
   295  0088                     _TRISD	set	136
   296  0085                     _TRISA	set	133
   297                           
   298                           	psect	strings
   299  0100                     __pstrings:
   300  0100                     stringtab:
   301  0100                     __stringtab:
   302  0100                     stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305  0100                     stringdir:
   306  0100  3001               	movlw	high stringdir
   307  0101  008A               	movwf	10
   308  0102  0804               	movf	4,w
   309  0103  0A84               	incf	4,f
   310  0104  0782               	addwf	2,f
   311  0105                     __stringbase:
   312  0105  3400               	retlw	0
   313  0106                     __end_of__stringtab:
   314  0106                     STR_5:
   315  0106  3477               	retlw	119	;'w'
   316  0107  3477               	retlw	119	;'w'
   317  0108  3477               	retlw	119	;'w'
   318  0109  342E               	retlw	46	;'.'
   319  010A  3465               	retlw	101	;'e'
   320  010B  346C               	retlw	108	;'l'
   321  010C  3465               	retlw	101	;'e'
   322  010D  3463               	retlw	99	;'c'
   323  010E  3474               	retlw	116	;'t'
   324  010F  3472               	retlw	114	;'r'
   325  0110  346F               	retlw	111	;'o'
   326  0111  3453               	retlw	83	;'S'
   327  0112  346F               	retlw	111	;'o'
   328  0113  346D               	retlw	109	;'m'
   329  0114  3465               	retlw	101	;'e'
   330  0115  342E               	retlw	46	;'.'
   331  0116  3463               	retlw	99	;'c'
   332  0117  346F               	retlw	111	;'o'
   333  0118  346D               	retlw	109	;'m'
   334  0119  3400               	retlw	0
   335  011A                     STR_1:
   336  011A  344C               	retlw	76	;'L'
   337  011B  3443               	retlw	67	;'C'
   338  011C  3444               	retlw	68	;'D'
   339  011D  3420               	retlw	32	;' '
   340  011E  344C               	retlw	76	;'L'
   341  011F  3469               	retlw	105	;'i'
   342  0120  3462               	retlw	98	;'b'
   343  0121  3472               	retlw	114	;'r'
   344  0122  3461               	retlw	97	;'a'
   345  0123  3472               	retlw	114	;'r'
   346  0124  3479               	retlw	121	;'y'
   347  0125  3420               	retlw	32	;' '
   348  0126  3466               	retlw	102	;'f'
   349  0127  346F               	retlw	111	;'o'
   350  0128  3472               	retlw	114	;'r'
   351  0129  3400               	retlw	0
   352  012A                     STR_3:
   353  012A  3444               	retlw	68	;'D'
   354  012B  3465               	retlw	101	;'e'
   355  012C  3476               	retlw	118	;'v'
   356  012D  3465               	retlw	101	;'e'
   357  012E  346C               	retlw	108	;'l'
   358  012F  346F               	retlw	111	;'o'
   359  0130  3470               	retlw	112	;'p'
   360  0131  3465               	retlw	101	;'e'
   361  0132  3464               	retlw	100	;'d'
   362  0133  3420               	retlw	32	;' '
   363  0134  3442               	retlw	66	;'B'
   364  0135  3479               	retlw	121	;'y'
   365  0136  3400               	retlw	0
   366  0137                     STR_4:
   367  0137  3465               	retlw	101	;'e'
   368  0138  346C               	retlw	108	;'l'
   369  0139  3465               	retlw	101	;'e'
   370  013A  3463               	retlw	99	;'c'
   371  013B  3474               	retlw	116	;'t'
   372  013C  3472               	retlw	114	;'r'
   373  013D  346F               	retlw	111	;'o'
   374  013E  3453               	retlw	83	;'S'
   375  013F  346F               	retlw	111	;'o'
   376  0140  346D               	retlw	109	;'m'
   377  0141  3465               	retlw	101	;'e'
   378  0142  3400               	retlw	0
   379  0143                     STR_2:
   380  0143  344D               	retlw	77	;'M'
   381  0144  3450               	retlw	80	;'P'
   382  0145  344C               	retlw	76	;'L'
   383  0146  3441               	retlw	65	;'A'
   384  0147  3442               	retlw	66	;'B'
   385  0148  3420               	retlw	32	;' '
   386  0149  3458               	retlw	88	;'X'
   387  014A  3443               	retlw	67	;'C'
   388  014B  3438               	retlw	56	;'8'
   389  014C  3400               	retlw	0
   390                           
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396  000F                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  000F                     __end_of__initialization:
   400  000F  0183               	clrf	3
   401  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	cstackCOMMON
   404  0070                     __pcstackCOMMON:
   405  0070                     ?_Setup:
   406  0070                     ?_Lcd_Init:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_Lcd_Clear:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_Lcd_Write_String:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_ISR:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_ISR:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_main:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Lcd_Port:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_Lcd_Cmd:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_Lcd_Write_Char:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	2
   436  0072                     ??_Setup:
   437  0072                     ??_Lcd_Port:	
   438                           ; 1 bytes @ 0x2
   439                           
   440  0072                     Lcd_Port@a:	
   441                           ; 1 bytes @ 0x2
   442                           
   443                           
   444                           ; 1 bytes @ 0x2
   445  0072                     	ds	1
   446  0073                     ??_Lcd_Cmd:
   447  0073                     ??_Lcd_Write_Char:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452  0073                     	ds	1
   453  0074                     Lcd_Write_Char@a:
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     ??_Lcd_Write_String:
   458  0075                     Lcd_Cmd@a:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0075                     Lcd_Write_String@i:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 2 bytes @ 0x5
   466  0075                     	ds	1
   467  0076                     ??_Lcd_Init:
   468  0076                     ??_Lcd_Clear:	
   469                           ; 1 bytes @ 0x6
   470                           
   471  0076                     ?_Lcd_Set_Cursor:	
   472                           ; 1 bytes @ 0x6
   473                           
   474  0076                     Lcd_Set_Cursor@b:	
   475                           ; 1 bytes @ 0x6
   476                           
   477                           
   478                           ; 1 bytes @ 0x6
   479  0076                     	ds	1
   480  0077                     ??_Lcd_Set_Cursor:
   481  0077                     Lcd_Write_String@a:	
   482                           ; 1 bytes @ 0x7
   483                           
   484                           
   485                           ; 1 bytes @ 0x7
   486  0077                     	ds	1
   487  0078                     Lcd_Set_Cursor@a:
   488                           
   489                           ; 1 bytes @ 0x8
   490  0078                     	ds	1
   491  0079                     Lcd_Set_Cursor@temp:
   492                           
   493                           ; 1 bytes @ 0x9
   494  0079                     	ds	1
   495                           
   496                           	psect	cstackBANK0
   497  0020                     __pcstackBANK0:
   498  0020                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	3
   502                           
   503                           	psect	maintext
   504  0013                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 50 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       3       0       0       0
   527 ;;      Totals:         0       3       0       0       0
   528 ;;Total ram usage:        3 bytes
   529 ;; Hardware stack levels required when called:    4
   530 ;; This function calls:
   531 ;;		_Lcd_Clear
   532 ;;		_Lcd_Init
   533 ;;		_Lcd_Set_Cursor
   534 ;;		_Lcd_Write_String
   535 ;;		_Setup
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _main
   543  0013                     _main:
   544  0013                     l793:	
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;main.c: 51:     Setup();
   550  0013  120A  118A  2218  120A  118A  	fcall	_Setup
   551  0018                     l795:
   552                           
   553                           ;main.c: 52:     _delay((unsigned long)((100)*(8000000/4000.0)));
   554  0018  3002               	movlw	2
   555  0019  1283               	bcf	3,5	;RP0=0, select bank0
   556  001A  1303               	bcf	3,6	;RP1=0, select bank0
   557  001B  00A2               	movwf	??_main+2
   558  001C  3004               	movlw	4
   559  001D  00A1               	movwf	??_main+1
   560  001E  30B9               	movlw	185
   561  001F  00A0               	movwf	??_main
   562  0020                     u77:
   563  0020  0BA0               	decfsz	??_main,f
   564  0021  2820               	goto	u77
   565  0022  0BA1               	decfsz	??_main+1,f
   566  0023  2820               	goto	u77
   567  0024  0BA2               	decfsz	??_main+2,f
   568  0025  2820               	goto	u77
   569  0026  2827               	nop2
   570  0027                     l797:
   571                           
   572                           ;main.c: 53:     Lcd_Init();
   573  0027  120A  118A  214D  120A  118A  	fcall	_Lcd_Init
   574  002C                     l799:
   575                           
   576                           ;main.c: 57:         Lcd_Clear();
   577  002C  120A  118A  220B  120A  118A  	fcall	_Lcd_Clear
   578  0031                     l801:
   579                           
   580                           ;main.c: 58:         _delay((unsigned long)((100)*(8000000/4000.0)));
   581  0031  3002               	movlw	2
   582  0032  1283               	bcf	3,5	;RP0=0, select bank0
   583  0033  1303               	bcf	3,6	;RP1=0, select bank0
   584  0034  00A2               	movwf	??_main+2
   585  0035  3004               	movlw	4
   586  0036  00A1               	movwf	??_main+1
   587  0037  30B9               	movlw	185
   588  0038  00A0               	movwf	??_main
   589  0039                     u87:
   590  0039  0BA0               	decfsz	??_main,f
   591  003A  2839               	goto	u87
   592  003B  0BA1               	decfsz	??_main+1,f
   593  003C  2839               	goto	u87
   594  003D  0BA2               	decfsz	??_main+2,f
   595  003E  2839               	goto	u87
   596  003F  2840               	nop2
   597                           
   598                           ;main.c: 59:         Lcd_Set_Cursor(1, 1);
   599  0040  01F6               	clrf	Lcd_Set_Cursor@b
   600  0041  0AF6               	incf	Lcd_Set_Cursor@b,f
   601  0042  3001               	movlw	1
   602  0043  120A  118A  21B7  120A  118A  	fcall	_Lcd_Set_Cursor
   603  0048                     l803:
   604                           
   605                           ;main.c: 60:         Lcd_Write_String("LCD Library for");
   606  0048  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   607  0049  120A  118A  2192  120A  118A  	fcall	_Lcd_Write_String
   608  004E                     l805:
   609                           
   610                           ;main.c: 61:         _delay((unsigned long)((100)*(8000000/4000.0)));
   611  004E  3002               	movlw	2
   612  004F  1283               	bcf	3,5	;RP0=0, select bank0
   613  0050  1303               	bcf	3,6	;RP1=0, select bank0
   614  0051  00A2               	movwf	??_main+2
   615  0052  3004               	movlw	4
   616  0053  00A1               	movwf	??_main+1
   617  0054  30B9               	movlw	185
   618  0055  00A0               	movwf	??_main
   619  0056                     u97:
   620  0056  0BA0               	decfsz	??_main,f
   621  0057  2856               	goto	u97
   622  0058  0BA1               	decfsz	??_main+1,f
   623  0059  2856               	goto	u97
   624  005A  0BA2               	decfsz	??_main+2,f
   625  005B  2856               	goto	u97
   626  005C  285D               	nop2
   627  005D                     l807:
   628                           
   629                           ;main.c: 62:         Lcd_Set_Cursor(2, 1);
   630  005D  01F6               	clrf	Lcd_Set_Cursor@b
   631  005E  0AF6               	incf	Lcd_Set_Cursor@b,f
   632  005F  3002               	movlw	2
   633  0060  120A  118A  21B7  120A  118A  	fcall	_Lcd_Set_Cursor
   634  0065                     l809:
   635                           
   636                           ;main.c: 63:         Lcd_Write_String("MPLAB XC8");
   637  0065  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   638  0066  120A  118A  2192  120A  118A  	fcall	_Lcd_Write_String
   639                           
   640                           ;main.c: 64:         _delay((unsigned long)((200)*(8000000/4000.0)));
   641  006B  3003               	movlw	3
   642  006C  1283               	bcf	3,5	;RP0=0, select bank0
   643  006D  1303               	bcf	3,6	;RP1=0, select bank0
   644  006E  00A2               	movwf	??_main+2
   645  006F  3008               	movlw	8
   646  0070  00A1               	movwf	??_main+1
   647  0071  3076               	movlw	118
   648  0072  00A0               	movwf	??_main
   649  0073                     u107:
   650  0073  0BA0               	decfsz	??_main,f
   651  0074  2873               	goto	u107
   652  0075  0BA1               	decfsz	??_main+1,f
   653  0076  2873               	goto	u107
   654  0077  0BA2               	decfsz	??_main+2,f
   655  0078  2873               	goto	u107
   656  0079  0000               	nop
   657  007A                     l811:
   658                           
   659                           ;main.c: 65:         Lcd_Clear();
   660  007A  120A  118A  220B  120A  118A  	fcall	_Lcd_Clear
   661  007F                     l813:
   662                           
   663                           ;main.c: 66:         Lcd_Set_Cursor(1, 1);
   664  007F  01F6               	clrf	Lcd_Set_Cursor@b
   665  0080  0AF6               	incf	Lcd_Set_Cursor@b,f
   666  0081  3001               	movlw	1
   667  0082  120A  118A  21B7  120A  118A  	fcall	_Lcd_Set_Cursor
   668  0087                     l815:
   669                           
   670                           ;main.c: 67:         Lcd_Write_String("Developed By");
   671  0087  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   672  0088  120A  118A  2192  120A  118A  	fcall	_Lcd_Write_String
   673  008D                     l817:
   674                           
   675                           ;main.c: 68:         Lcd_Set_Cursor(2, 1);
   676  008D  01F6               	clrf	Lcd_Set_Cursor@b
   677  008E  0AF6               	incf	Lcd_Set_Cursor@b,f
   678  008F  3002               	movlw	2
   679  0090  120A  118A  21B7  120A  118A  	fcall	_Lcd_Set_Cursor
   680  0095                     l819:
   681                           
   682                           ;main.c: 69:         Lcd_Write_String("electroSome");
   683  0095  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   684  0096  120A  118A  2192  120A  118A  	fcall	_Lcd_Write_String
   685  009B                     l821:
   686                           
   687                           ;main.c: 70:         _delay((unsigned long)((200)*(8000000/4000.0)));
   688  009B  3003               	movlw	3
   689  009C  1283               	bcf	3,5	;RP0=0, select bank0
   690  009D  1303               	bcf	3,6	;RP1=0, select bank0
   691  009E  00A2               	movwf	??_main+2
   692  009F  3008               	movlw	8
   693  00A0  00A1               	movwf	??_main+1
   694  00A1  3076               	movlw	118
   695  00A2  00A0               	movwf	??_main
   696  00A3                     u117:
   697  00A3  0BA0               	decfsz	??_main,f
   698  00A4  28A3               	goto	u117
   699  00A5  0BA1               	decfsz	??_main+1,f
   700  00A6  28A3               	goto	u117
   701  00A7  0BA2               	decfsz	??_main+2,f
   702  00A8  28A3               	goto	u117
   703  00A9  0000               	nop
   704                           
   705                           ;main.c: 71:         Lcd_Clear();
   706  00AA  120A  118A  220B  120A  118A  	fcall	_Lcd_Clear
   707                           
   708                           ;main.c: 72:         Lcd_Set_Cursor(1, 1);
   709  00AF  01F6               	clrf	Lcd_Set_Cursor@b
   710  00B0  0AF6               	incf	Lcd_Set_Cursor@b,f
   711  00B1  3001               	movlw	1
   712  00B2  120A  118A  21B7  120A  118A  	fcall	_Lcd_Set_Cursor
   713  00B7                     l823:
   714                           
   715                           ;main.c: 73:         Lcd_Write_String("www.electroSome.com");
   716  00B7  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   717  00B8  120A  118A  2192  120A  118A  	fcall	_Lcd_Write_String
   718  00BD  282C               	goto	l799
   719  00BE  120A  118A  280C   	ljmp	start
   720  00C1                     __end_of_main:
   721                           
   722                           	psect	text1
   723  0218                     __ptext1:	
   724 ;; *************** function _Setup *****************
   725 ;; Defined at:
   726 ;;		line 81 in file "main.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _Setup
   756  0218                     _Setup:
   757  0218                     l693:	
   758                           ;incstack = 0
   759                           ; Regs used in _Setup: [wreg+status,2]
   760                           
   761                           
   762                           ;main.c: 83:     TRISA = 255;
   763  0218  30FF               	movlw	255
   764  0219  1683               	bsf	3,5	;RP0=1, select bank1
   765  021A  1303               	bcf	3,6	;RP1=0, select bank1
   766  021B  0085               	movwf	5	;volatile
   767  021C                     l695:
   768                           
   769                           ;main.c: 84:     TRISD = 0;
   770  021C  0188               	clrf	8	;volatile
   771  021D                     l697:
   772                           
   773                           ;main.c: 85:     TRISC = 0;
   774  021D  0187               	clrf	7	;volatile
   775  021E                     l699:
   776                           
   777                           ;main.c: 87:     PORTA = 0;
   778  021E  1283               	bcf	3,5	;RP0=0, select bank0
   779  021F  1303               	bcf	3,6	;RP1=0, select bank0
   780  0220  0185               	clrf	5	;volatile
   781  0221                     l701:
   782                           
   783                           ;main.c: 88:     PORTC = 0;
   784  0221  0187               	clrf	7	;volatile
   785  0222                     l703:
   786                           
   787                           ;main.c: 89:     PORTD = 0;
   788  0222  0188               	clrf	8	;volatile
   789  0223                     l40:
   790  0223  0008               	return
   791  0224                     __end_of_Setup:
   792                           
   793                           	psect	text2
   794  0192                     __ptext2:	
   795 ;; *************** function _Lcd_Write_String *****************
   796 ;; Defined at:
   797 ;;		line 56 in file "LCD8bits.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  a               1    wreg     PTR unsigned char 
   800 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   801 ;;		 -> STR_1(16), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  a               1    7[COMMON] PTR unsigned char 
   804 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   805 ;;		 -> STR_1(16), 
   806 ;;  i               2    5[COMMON] int 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         3       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         3       0       0       0       0
   820 ;;Total ram usage:        3 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    3
   823 ;; This function calls:
   824 ;;		_Lcd_Write_Char
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _Lcd_Write_String
   832  0192                     _Lcd_Write_String:
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   836                           ;Lcd_Write_String@a stored from wreg
   837  0192  00F7               	movwf	Lcd_Write_String@a
   838  0193                     l785:
   839                           
   840                           ;LCD8bits.c: 57:     int i;;LCD8bits.c: 58:     for (i = 0; a[i] != '\0'; i++)
   841  0193  01F5               	clrf	Lcd_Write_String@i
   842  0194  01F6               	clrf	Lcd_Write_String@i+1
   843  0195  29A9               	goto	l791
   844  0196                     l787:
   845                           
   846                           ;LCD8bits.c: 59:         Lcd_Write_Char(a[i]);
   847  0196  0875               	movf	Lcd_Write_String@i,w
   848  0197  0777               	addwf	Lcd_Write_String@a,w
   849  0198  0084               	movwf	4
   850  0199  120A  118A  2100  120A  118A  	fcall	stringdir
   851  019E  120A  118A  21F5  120A  118A  	fcall	_Lcd_Write_Char
   852  01A3                     l789:
   853  01A3  3001               	movlw	1
   854  01A4  07F5               	addwf	Lcd_Write_String@i,f
   855  01A5  1803               	skipnc
   856  01A6  0AF6               	incf	Lcd_Write_String@i+1,f
   857  01A7  3000               	movlw	0
   858  01A8  07F6               	addwf	Lcd_Write_String@i+1,f
   859  01A9                     l791:
   860  01A9  0875               	movf	Lcd_Write_String@i,w
   861  01AA  0777               	addwf	Lcd_Write_String@a,w
   862  01AB  0084               	movwf	4
   863  01AC  120A  118A  2100  120A  118A  	fcall	stringdir
   864  01B1  3A00               	xorlw	0
   865  01B2  1D03               	skipz
   866  01B3  29B5               	goto	u61
   867  01B4  29B6               	goto	u60
   868  01B5                     u61:
   869  01B5  2996               	goto	l787
   870  01B6                     u60:
   871  01B6                     l73:
   872  01B6  0008               	return
   873  01B7                     __end_of_Lcd_Write_String:
   874                           
   875                           	psect	text3
   876  01F5                     __ptext3:	
   877 ;; *************** function _Lcd_Write_Char *****************
   878 ;; Defined at:
   879 ;;		line 48 in file "LCD8bits.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  a               1    wreg     unsigned char 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  a               1    4[COMMON] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         1       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0
   896 ;;      Totals:         2       0       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		_Lcd_Port
   902 ;; This function is called by:
   903 ;;		_Lcd_Write_String
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _Lcd_Write_Char
   909  01F5                     _Lcd_Write_Char:
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   913                           ;Lcd_Write_Char@a stored from wreg
   914  01F5  00F4               	movwf	Lcd_Write_Char@a
   915  01F6                     l683:
   916                           
   917                           ;LCD8bits.c: 49:     PORTCbits.RC0 = 1;
   918  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   919  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   920  01F8  1407               	bsf	7,0	;volatile
   921  01F9                     l685:
   922                           
   923                           ;LCD8bits.c: 50:     Lcd_Port(a);
   924  01F9  0874               	movf	Lcd_Write_Char@a,w
   925  01FA  120A  118A  222B  120A  118A  	fcall	_Lcd_Port
   926  01FF                     l687:
   927                           
   928                           ;LCD8bits.c: 51:     PORTCbits.RC1 = 1;
   929  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   930  0200  1303               	bcf	3,6	;RP1=0, select bank0
   931  0201  1487               	bsf	7,1	;volatile
   932  0202                     l689:
   933                           
   934                           ;LCD8bits.c: 52:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   935  0202  301A               	movlw	26
   936  0203  00F3               	movwf	??_Lcd_Write_Char
   937  0204                     u127:
   938  0204  0BF3               	decfsz	??_Lcd_Write_Char,f
   939  0205  2A04               	goto	u127
   940  0206  0000               	nop
   941  0207                     l691:
   942                           
   943                           ;LCD8bits.c: 53:     PORTCbits.RC1 = 0;
   944  0207  1283               	bcf	3,5	;RP0=0, select bank0
   945  0208  1303               	bcf	3,6	;RP1=0, select bank0
   946  0209  1087               	bcf	7,1	;volatile
   947  020A                     l67:
   948  020A  0008               	return
   949  020B                     __end_of_Lcd_Write_Char:
   950                           
   951                           	psect	text4
   952  01B7                     __ptext4:	
   953 ;; *************** function _Lcd_Set_Cursor *****************
   954 ;; Defined at:
   955 ;;		line 22 in file "LCD8bits.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  a               1    wreg     unsigned char 
   958 ;;  b               1    6[COMMON] unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  a               1    8[COMMON] unsigned char 
   961 ;;  temp            1    9[COMMON] unsigned char 
   962 ;;  y               1    0        unsigned char 
   963 ;;  z               1    0        unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         1       0       0       0       0
   974 ;;      Locals:         2       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0
   976 ;;      Totals:         4       0       0       0       0
   977 ;;Total ram usage:        4 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    3
   980 ;; This function calls:
   981 ;;		_Lcd_Cmd
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _Lcd_Set_Cursor
   989  01B7                     _Lcd_Set_Cursor:
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   993                           ;Lcd_Set_Cursor@a stored from wreg
   994  01B7  00F8               	movwf	Lcd_Set_Cursor@a
   995  01B8                     l773:
   996                           
   997                           ;LCD8bits.c: 23:     char temp, z, y;;LCD8bits.c: 24:     if (a == 1) {
   998  01B8  0378               	decf	Lcd_Set_Cursor@a,w
   999  01B9  1D03               	btfss	3,2
  1000  01BA  29BC               	goto	u41
  1001  01BB  29BD               	goto	u40
  1002  01BC                     u41:
  1003  01BC  29C9               	goto	l779
  1004  01BD                     u40:
  1005  01BD                     l775:
  1006                           
  1007                           ;LCD8bits.c: 25:         temp = 0x80 + b - 1;
  1008  01BD  0876               	movf	Lcd_Set_Cursor@b,w
  1009  01BE  3E7F               	addlw	127
  1010  01BF  00F7               	movwf	??_Lcd_Set_Cursor
  1011  01C0  0877               	movf	??_Lcd_Set_Cursor,w
  1012  01C1  00F9               	movwf	Lcd_Set_Cursor@temp
  1013  01C2                     l777:
  1014                           
  1015                           ;LCD8bits.c: 26:         Lcd_Cmd(temp);
  1016  01C2  0879               	movf	Lcd_Set_Cursor@temp,w
  1017  01C3  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1018                           
  1019                           ;LCD8bits.c: 27:     } else if (a == 2) {
  1020  01C8  29DA               	goto	l61
  1021  01C9                     l779:
  1022  01C9  3002               	movlw	2
  1023  01CA  0678               	xorwf	Lcd_Set_Cursor@a,w
  1024  01CB  1D03               	btfss	3,2
  1025  01CC  29CE               	goto	u51
  1026  01CD  29CF               	goto	u50
  1027  01CE                     u51:
  1028  01CE  29DA               	goto	l61
  1029  01CF                     u50:
  1030  01CF                     l781:
  1031                           
  1032                           ;LCD8bits.c: 28:         temp = 0xC0 + b - 1;
  1033  01CF  0876               	movf	Lcd_Set_Cursor@b,w
  1034  01D0  3EBF               	addlw	191
  1035  01D1  00F7               	movwf	??_Lcd_Set_Cursor
  1036  01D2  0877               	movf	??_Lcd_Set_Cursor,w
  1037  01D3  00F9               	movwf	Lcd_Set_Cursor@temp
  1038  01D4                     l783:
  1039                           
  1040                           ;LCD8bits.c: 29:         Lcd_Cmd(temp);
  1041  01D4  0879               	movf	Lcd_Set_Cursor@temp,w
  1042  01D5  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1043  01DA                     l61:
  1044  01DA  0008               	return
  1045  01DB                     __end_of_Lcd_Set_Cursor:
  1046                           
  1047                           	psect	text5
  1048  014D                     __ptext5:	
  1049 ;; *************** function _Lcd_Init *****************
  1050 ;; Defined at:
  1051 ;;		line 33 in file "LCD8bits.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0
  1068 ;;      Totals:         2       0       0       0       0
  1069 ;;Total ram usage:        2 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    3
  1072 ;; This function calls:
  1073 ;;		_Lcd_Cmd
  1074 ;;		_Lcd_Port
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _Lcd_Init
  1082  014D                     _Lcd_Init:
  1083  014D                     l705:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1086                           
  1087                           
  1088                           ;LCD8bits.c: 34:     Lcd_Port(0x00);
  1089  014D  3000               	movlw	0
  1090  014E  120A  118A  222B  120A  118A  	fcall	_Lcd_Port
  1091  0153                     l707:
  1092                           
  1093                           ;LCD8bits.c: 35:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1094  0153  3034               	movlw	52
  1095  0154  00F7               	movwf	??_Lcd_Init+1
  1096  0155  30F1               	movlw	241
  1097  0156  00F6               	movwf	??_Lcd_Init
  1098  0157                     u137:
  1099  0157  0BF6               	decfsz	??_Lcd_Init,f
  1100  0158  2957               	goto	u137
  1101  0159  0BF7               	decfsz	??_Lcd_Init+1,f
  1102  015A  2957               	goto	u137
  1103  015B  295C               	nop2
  1104  015C                     l709:
  1105                           
  1106                           ;LCD8bits.c: 36:     Lcd_Cmd(0x30);
  1107  015C  3030               	movlw	48
  1108  015D  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1109                           
  1110                           ;LCD8bits.c: 37:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1111  0162  300D               	movlw	13
  1112  0163  00F7               	movwf	??_Lcd_Init+1
  1113  0164  30FB               	movlw	251
  1114  0165  00F6               	movwf	??_Lcd_Init
  1115  0166                     u147:
  1116  0166  0BF6               	decfsz	??_Lcd_Init,f
  1117  0167  2966               	goto	u147
  1118  0168  0BF7               	decfsz	??_Lcd_Init+1,f
  1119  0169  2966               	goto	u147
  1120  016A  296B               	nop2
  1121  016B                     l711:
  1122                           
  1123                           ;LCD8bits.c: 38:     Lcd_Cmd(0x30);
  1124  016B  3030               	movlw	48
  1125  016C  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1126  0171                     l713:
  1127                           
  1128                           ;LCD8bits.c: 39:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1129  0171  301D               	movlw	29
  1130  0172  00F7               	movwf	??_Lcd_Init+1
  1131  0173  3091               	movlw	145
  1132  0174  00F6               	movwf	??_Lcd_Init
  1133  0175                     u157:
  1134  0175  0BF6               	decfsz	??_Lcd_Init,f
  1135  0176  2975               	goto	u157
  1136  0177  0BF7               	decfsz	??_Lcd_Init+1,f
  1137  0178  2975               	goto	u157
  1138                           
  1139                           ;LCD8bits.c: 40:     Lcd_Cmd(0x30);
  1140  0179  3030               	movlw	48
  1141  017A  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1142                           
  1143                           ;LCD8bits.c: 42:     Lcd_Cmd(0b00111000);
  1144  017F  3038               	movlw	56
  1145  0180  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1146                           
  1147                           ;LCD8bits.c: 43:     Lcd_Cmd(0x0C);
  1148  0185  300C               	movlw	12
  1149  0186  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1150                           
  1151                           ;LCD8bits.c: 44:     Lcd_Cmd(0x6);
  1152  018B  3006               	movlw	6
  1153  018C  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1154  0191                     l64:
  1155  0191  0008               	return
  1156  0192                     __end_of_Lcd_Init:
  1157                           
  1158                           	psect	text6
  1159  020B                     __ptext6:	
  1160 ;; *************** function _Lcd_Clear *****************
  1161 ;; Defined at:
  1162 ;;		line 17 in file "LCD8bits.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    3
  1183 ;; This function calls:
  1184 ;;		_Lcd_Cmd
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _Lcd_Clear
  1192  020B                     _Lcd_Clear:
  1193  020B                     l715:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1196                           
  1197                           
  1198                           ;LCD8bits.c: 18:     Lcd_Cmd(0);
  1199  020B  3000               	movlw	0
  1200  020C  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1201                           
  1202                           ;LCD8bits.c: 19:     Lcd_Cmd(1);
  1203  0211  3001               	movlw	1
  1204  0212  120A  118A  21DB  120A  118A  	fcall	_Lcd_Cmd
  1205  0217                     l55:
  1206  0217  0008               	return
  1207  0218                     __end_of_Lcd_Clear:
  1208                           
  1209                           	psect	text7
  1210  01DB                     __ptext7:	
  1211 ;; *************** function _Lcd_Cmd *****************
  1212 ;; Defined at:
  1213 ;;		line 9 in file "LCD8bits.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  a               1    wreg     unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  a               1    5[COMMON] unsigned char 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         1       0       0       0       0
  1229 ;;      Temps:          2       0       0       0       0
  1230 ;;      Totals:         3       0       0       0       0
  1231 ;;Total ram usage:        3 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    2
  1234 ;; This function calls:
  1235 ;;		_Lcd_Port
  1236 ;; This function is called by:
  1237 ;;		_Lcd_Clear
  1238 ;;		_Lcd_Set_Cursor
  1239 ;;		_Lcd_Init
  1240 ;;		_Lcd_Shift_Right
  1241 ;;		_Lcd_Shift_Left
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _Lcd_Cmd
  1247  01DB                     _Lcd_Cmd:
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1251                           ;Lcd_Cmd@a stored from wreg
  1252  01DB  00F5               	movwf	Lcd_Cmd@a
  1253  01DC                     l673:
  1254                           
  1255                           ;LCD8bits.c: 10:     PORTCbits.RC0 = 0;
  1256  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1257  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1258  01DE  1007               	bcf	7,0	;volatile
  1259  01DF                     l675:
  1260                           
  1261                           ;LCD8bits.c: 11:     Lcd_Port(a);
  1262  01DF  0875               	movf	Lcd_Cmd@a,w
  1263  01E0  120A  118A  222B  120A  118A  	fcall	_Lcd_Port
  1264  01E5                     l677:
  1265                           
  1266                           ;LCD8bits.c: 12:     PORTCbits.RC1 = 1;
  1267  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1268  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1269  01E7  1487               	bsf	7,1	;volatile
  1270  01E8                     l679:
  1271                           
  1272                           ;LCD8bits.c: 13:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1273  01E8  300D               	movlw	13
  1274  01E9  00F4               	movwf	??_Lcd_Cmd+1
  1275  01EA  30FB               	movlw	251
  1276  01EB  00F3               	movwf	??_Lcd_Cmd
  1277  01EC                     u167:
  1278  01EC  0BF3               	decfsz	??_Lcd_Cmd,f
  1279  01ED  29EC               	goto	u167
  1280  01EE  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1281  01EF  29EC               	goto	u167
  1282  01F0  29F1               	nop2
  1283  01F1                     l681:
  1284                           
  1285                           ;LCD8bits.c: 14:     PORTCbits.RC1 = 0;
  1286  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1287  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1288  01F3  1087               	bcf	7,1	;volatile
  1289  01F4                     l52:
  1290  01F4  0008               	return
  1291  01F5                     __end_of_Lcd_Cmd:
  1292                           
  1293                           	psect	text8
  1294  022B                     __ptext8:	
  1295 ;; *************** function _Lcd_Port *****************
  1296 ;; Defined at:
  1297 ;;		line 5 in file "LCD8bits.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  a               1    wreg     unsigned char 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  a               1    2[COMMON] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         1       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0
  1314 ;;      Totals:         1       0       0       0       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_Lcd_Cmd
  1322 ;;		_Lcd_Init
  1323 ;;		_Lcd_Write_Char
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _Lcd_Port
  1329  022B                     _Lcd_Port:
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _Lcd_Port: [wreg]
  1333                           ;Lcd_Port@a stored from wreg
  1334  022B  00F2               	movwf	Lcd_Port@a
  1335  022C                     l671:
  1336                           
  1337                           ;LCD8bits.c: 6:     PORTD = a;
  1338  022C  0872               	movf	Lcd_Port@a,w
  1339  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1340  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1341  022F  0088               	movwf	8	;volatile
  1342  0230                     l49:
  1343  0230  0008               	return
  1344  0231                     __end_of_Lcd_Port:
  1345                           
  1346                           	psect	text9
  1347  0224                     __ptext9:	
  1348 ;; *************** function _ISR *****************
  1349 ;; Defined at:
  1350 ;;		line 46 in file "main.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		None
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          2       0       0       0       0
  1367 ;;      Totals:         2       0       0       0       0
  1368 ;;Total ram usage:        2 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		Interrupt level 1
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _ISR
  1379  0224                     _ISR:
  1380  0224                     i1l29:
  1381  0224  0871               	movf	??_ISR+1,w
  1382  0225  008A               	movwf	10
  1383  0226  0E70               	swapf	??_ISR,w
  1384  0227  0083               	movwf	3
  1385  0228  0EFE               	swapf	btemp,f
  1386  0229  0E7E               	swapf	btemp,w
  1387  022A  0009               	retfie
  1388  022B                     __end_of_ISR:
  1389  007E                     btemp	set	126	;btemp
  1390  007E                     wtemp0	set	126
  1391                           
  1392                           	psect	intentry
  1393  0004                     __pintentry:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _ISR: []
  1396                           
  1397  0004                     interrupt_function:
  1398  007E                     saved_w	set	btemp
  1399  0004  00FE               	movwf	btemp
  1400  0005  0E03               	swapf	3,w
  1401  0006  00F0               	movwf	??_ISR
  1402  0007  080A               	movf	10,w
  1403  0008  00F1               	movwf	??_ISR+1
  1404  0009  120A  118A  2A24   	ljmp	_ISR
  1405                           
  1406                           	psect	config
  1407                           
  1408                           ;Config register CONFIG1 @ 0x2007
  1409                           ;	Oscillator Selection bits
  1410                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1411                           ;	Watchdog Timer Enable bit
  1412                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1413                           ;	Power-up Timer Enable bit
  1414                           ;	PWRTE = OFF, PWRT disabled
  1415                           ;	RE3/MCLR pin function select bit
  1416                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1417                           ;	Code Protection bit
  1418                           ;	CP = OFF, Program memory code protection is disabled
  1419                           ;	Data Code Protection bit
  1420                           ;	CPD = OFF, Data memory code protection is disabled
  1421                           ;	Brown Out Reset Selection bits
  1422                           ;	BOREN = OFF, BOR disabled
  1423                           ;	Internal External Switchover bit
  1424                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1425                           ;	Fail-Safe Clock Monitor Enabled bit
  1426                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1427                           ;	Low Voltage Programming Enable bit
  1428                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1429                           ;	In-Circuit Debugger Mode bit
  1430                           ;	DEBUG = 0x1, unprogrammed default
  1431  2007                     	org	8199
  1432  2007  20D4               	dw	8404
  1433                           
  1434                           ;Config register CONFIG2 @ 0x2008
  1435                           ;	Brown-out Reset Selection bit
  1436                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1437                           ;	Flash Program Memory Self Write Enable bits
  1438                           ;	WRT = OFF, Write protection off
  1439  2008                     	org	8200
  1440  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     904
                                              0 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     285
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     544
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 19:07:43 2021

                        pc 0002                         l40 0223                         l52 01F4  
                       l61 01DA                         l55 0217                         l64 0191  
                       l49 0230                         l73 01B6                         l67 020A  
                       u40 01BD                         u41 01BC                         u50 01CF  
                       u51 01CE                         u60 01B6                         u61 01B5  
                       u77 0020                         u87 0039                         u97 0056  
                       fsr 0004                        l701 0221                        l711 016B  
                      l703 0222                        l713 0171                        l705 014D  
                      l801 0031                        l715 020B                        l707 0153  
                      l811 007A                        l803 0048                        l709 015C  
                      l821 009B                        l813 007F                        l805 004E  
                      l671 022C                        l823 00B7                        l815 0087  
                      l807 005D                        l681 01F1                        l673 01DC  
                      l817 008D                        l809 0065                        l675 01DF  
                      l691 0207                        l683 01F6                        l819 0095  
                      l677 01E5                        l781 01CF                        l773 01B8  
                      l685 01F9                        l693 0218                        l679 01E8  
                      l783 01D4                        l775 01BD                        l687 01FF  
                      l791 01A9                        l695 021C                        l777 01C2  
                      l689 0202                        l785 0193                        l697 021D  
                      l793 0013                        l779 01C9                        l787 0196  
                      l699 021E                        l795 0018                        l789 01A3  
                      l797 0027                        l799 002C                        u107 0073  
                      u117 00A3                        u127 0204                        u137 0157  
                      u147 0166                        u157 0175                        u167 01EC  
                      _ISR 0224                        fsr0 0004                       ?_ISR 0070  
                     STR_1 011A                       STR_2 0143                       STR_3 012A  
                     STR_4 0137                       STR_5 0106                       i1l29 0224  
        ?_Lcd_Write_String 0070                       _main 0013                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 01F5  
                    ??_ISR 0070                      ?_main 0070                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _Setup 0218                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0192           __end_of_Lcd_Port 0231  
          __initialization 000F               __end_of_main 00C1                     ??_main 0020  
       __size_of_Lcd_Clear 000D                     ?_Setup 0070                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 0016                     saved_w 007E            Lcd_Set_Cursor@a 0078  
          Lcd_Set_Cursor@b 0076    __end_of__initialization 000F          __end_of_Lcd_Clear 0218  
           __pcstackCOMMON 0070              __end_of_Setup 0224             _Lcd_Set_Cursor 01B7  
                  ??_Setup 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 0013                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 01DB                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
               __stringtab 0100             _Lcd_Write_Char 01F5                    _Lcd_Cmd 01DB  
          ?_Lcd_Set_Cursor 0076                    __ptext1 0218                    __ptext2 0192  
                  __ptext3 01F5                    __ptext4 01B7                    __ptext5 014D  
                  __ptext6 020B                    __ptext7 01DB                    __ptext8 022B  
                  __ptext9 0224               __size_of_ISR 0007     __end_of_Lcd_Write_Char 020B  
     end_of_initialization 000F                  Lcd_Port@a 0072                  _PORTCbits 0007  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 020B           _Lcd_Write_String 0192        start_initialization 000F  
              __end_of_ISR 022B          __size_of_Lcd_Init 0045          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0077  
                __pstrings 0100             __size_of_Setup 000C          interrupt_function 0004  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                __stringbase 0105  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 014D                   _Lcd_Port 022B  
 __end_of_Lcd_Write_String 01B7           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0106  
            __size_of_main 00AE                   intlevel1 0000                  stringcode 0100  
       Lcd_Set_Cursor@temp 0079                   stringdir 0100                   stringtab 0100  
