Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Lab3LCD.X.production.sym \
  --cmf=dist/default/production\Lab3LCD.X.production.cmf -z -Q16F887 \
  -oC:\Users\noelp\AppData\Local\Temp\sfq0.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Lab3LCD.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\noelp\AppData\Local\Temp\sfq0.o \
  dist/default/production\Lab3LCD.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\noelp\AppData\Local\Temp\sfq0.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Lab3LCD.X.production.o
                cinit                                 F        F       11        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text15                              251      251       AB        8       0
                text14                              3E2      3E2       32        8       0
                text13                              4E7      4E7        6      8F4       0
                text12                              47A      47A       18      8F4       0
                text11                              4D2      4D2        D      8F4       0
                text10                              365      365       4B        8       0
                text9                               43B      43B       26        8       0
                text8                               4BD      4BD       15      8F4       0
                text7                               3B0      3B0       32        8       0
                text6                               492      492       16      8F4       0
                text5                               2FC      2FC       69        8       0
                text4                               414      414       27        8       0
                text3                                EA       EA       BC        8       0
                text2                               1A6      1A6       AB        8       0
                text1                               4A8      4A8       15      8F4       0
                maintext                             20       20       CA        8       0
                cstackBANK0                          20       20       1E       20       1
                cstackCOMMON                         70       70        6       70       1
                clrtext                             4DF      4DF        8      8F4       0
                bssBANK0                             3E       3E       1A       20       1
                bssCOMMON                            76       76        4       70       1
                strings                             461      461       19      8C2       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       11         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text15                              251      251       AB         0
                text14                              3E2      3E2       32         0
                text13                              4E7      4E7        6         0
                text12                              47A      47A       18         0
                text11                              4D2      4D2        D         0
                text10                              365      365       4B         0
                text9                               43B      43B       26         0
                text8                               4BD      4BD       15         0
                text7                               3B0      3B0       32         0
                text6                               492      492       16         0
                text5                               2FC      2FC       69         0
                text4                               414      414       27         0
                text3                                EA       EA       BC         0
                text2                               1A6      1A6       AB         0
                text1                               4A8      4A8       15         0
                maintext                             20       20       CA         0
                clrtext                             4DF      4DF        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             461      461       19         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            76       76        4         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1E         1
                bssBANK0                             3E       3E       1A         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00045D  000461         8       0  CODE        2
                cstackBANK0                    000020  000038  000058        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                strings                        000461  000019  00047A       8C2       0  STRING      2
                text12                         00047A  000073  0004ED       8F4       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0058-006F             18           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         04ED-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         04ED-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         04ED-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0058-006F             18           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         04ED-1FFF           1B13
        STRING           0003-0003              1           2
                         04ED-1FFF            100

                                  Symbol Table

?___awdiv                  cstackBANK0  0020
?___wmul                   cstackBANK0  0028
?___xxtofl                 cstackBANK0  002E
Lcd_Cmd@a                  cstackBANK0  0020
Lcd_Port@a                 cstackCOMMON 0074
Lcd_Set_Cursor@a           cstackBANK0  0023
Lcd_Set_Cursor@b           cstackBANK0  0021
Lcd_Set_Cursor@temp        cstackBANK0  0024
Lcd_Write_Char@a           cstackBANK0  0020
Lcd_Write_String@a         cstackBANK0  0021
Lcd_Write_String@i         cstackBANK0  0023
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADIF                      (abs)        0066
_ADRESH                    (abs)        001E
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_ANSELbits                 (abs)        0188
_INTCONbits                (abs)        000B
_ISR                       text14       03E2
_Lcd_Clear                 text11       04D2
_Lcd_Cmd                   text12       047A
_Lcd_Init                  text10       0365
_Lcd_Port                  text13       04E7
_Lcd_Set_Cursor            text9        043B
_Lcd_Write_Char            text8        04BD
_Lcd_Write_String          text7        03B0
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTC                     (abs)        0007
_PORTCbits                 (abs)        0007
_PORTD                     (abs)        0008
_RCREG                     (abs)        001A
_RCSTAbits                 (abs)        0018
_SPBRG                     (abs)        0099
_Setup                     text6        0492
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISBbits                 (abs)        0086
_TRISC                     (abs)        0087
_TRISD                     (abs)        0088
_TXREG                     (abs)        0019
_TXSTAbits                 (abs)        0098
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0020
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        04ED
__Hspace_1                 (abs)        007A
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        04ED
__S1                       (abs)        007A
__S2                       (abs)        0000
__S3                       (abs)        0000
___awdiv                   text5        02FC
___awdiv@counter           cstackBANK0  0024
___awdiv@dividend          cstackBANK0  0022
___awdiv@divisor           cstackBANK0  0020
___awdiv@quotient          cstackBANK0  0026
___awdiv@sign              cstackBANK0  0025
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text4        0414
___wmul@multiplicand       cstackBANK0  002A
___wmul@multiplier         cstackBANK0  0028
___wmul@product            cstackBANK0  002C
___xxtofl                  text3        00EA
___xxtofl@arg              cstackBANK0  0038
___xxtofl@exp              cstackBANK0  0037
___xxtofl@sign             cstackBANK0  0036
___xxtofl@val              cstackBANK0  002E
__end_of_ISR               text14       0414
__end_of_Lcd_Clear         text11       04DF
__end_of_Lcd_Cmd           text12       0492
__end_of_Lcd_Init          text10       03B0
__end_of_Lcd_Port          text13       04ED
__end_of_Lcd_Set_Cursor    text9        0461
__end_of_Lcd_Write_Char    text8        04D2
__end_of_Lcd_Write_String  text7        03E2
__end_of_Setup             text6        04A8
__end_of___awdiv           text5        0365
__end_of___wmul            text4        043B
__end_of___xxtofl          text3        01A6
__end_of__initialization   cinit        001C
__end_of__stringtab        strings      0471
__end_of_canalADC          text2        0251
__end_of_configADC         text1        04BD
__end_of_main              maintext     00EA
__end_ofi1_canalADC        text15       02FC
__initialization           cinit        000F
__pbssBANK0                bssBANK0     003E
__pbssCOMMON               bssCOMMON    0076
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     0020
__pstrings                 strings      0461
__ptext1                   text1        04A8
__ptext10                  text10       0365
__ptext11                  text11       04D2
__ptext12                  text12       047A
__ptext13                  text13       04E7
__ptext14                  text14       03E2
__ptext15                  text15       0251
__ptext2                   text2        01A6
__ptext3                   text3        00EA
__ptext4                   text4        0414
__ptext5                   text5        02FC
__ptext6                   text6        0492
__ptext7                   text7        03B0
__ptext8                   text8        04BD
__ptext9                   text9        043B
__size_of_ISR              (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Setup            (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of___xxtofl         (abs)        0000
__size_of_canalADC         (abs)        0000
__size_of_configADC        (abs)        0000
__size_of_main             (abs)        0000
__size_ofi1_canalADC       (abs)        0000
__stringbase               strings      0470
__stringtab                strings      0461
_bandera                   bssCOMMON    0079
_buf                       bssBANK0     0044
_canalADC                  text2        01A6
_configADC                 text1        04A8
_convertir                 bssBANK0     003E
_main                      maintext     0020
_varADC1                   bssBANK0     0043
_varADC2                   bssBANK0     0042
btemp                      (abs)        007E
canalADC@canal             cstackCOMMON 0074
clear_ram0                 clrtext      04DF
end_of_initialization      cinit        001C
i1_canalADC                text15       0251
i1canalADC@canal           cstackCOMMON 0070
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_Setup
		___awdiv
		___wmul
		___xxtofl
		_canalADC
		_configADC
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _configADC *****************
 Defined at:
		line 141 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _canalADC *****************
 Defined at:
		line 13 in file "ADC.c"
 Parameters:    Size  Location     Type
  canal           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  canal           1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4   14[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1   22[BANK0 ] unsigned char 
  arg             4   24[BANK0 ] unsigned long 
  exp             1   23[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   14[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    8[BANK0 ] unsigned int 
  multiplicand    2   10[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   12[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] int 
  dividend        2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] int 
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       8       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Setup *****************
 Defined at:
		line 115 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 56 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               2    1[BANK0 ] PTR unsigned char 
		 -> RAM(512), buf(20), STR_3(3), STR_2(3), 
		 -> STR_1(3), 
 Auto vars:     Size  Location     Type
  i               2    3[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 48 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       1       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 22 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[BANK0 ] unsigned char 
  temp            1    4[BANK0 ] unsigned char 
  y               1    0        unsigned char 
  z               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 33 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 17 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 9 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       1       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 5 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 54 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_canalADC
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_canalADC *****************
 Defined at:
		line 13 in file "ADC.c"
 Parameters:    Size  Location     Type
  canal           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  canal           1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
LCD8bits.c
		_Lcd_Write_String		CODE           	03B0	0000	50
		_Lcd_Init      		CODE           	0365	0000	75
		_Lcd_Write_Char		CODE           	04BD	0000	21
		_Lcd_Cmd       		CODE           	047A	0000	24
		_Lcd_Set_Cursor		CODE           	043B	0000	38
		_Lcd_Clear     		CODE           	04D2	0000	13
		_Lcd_Port      		CODE           	04E7	0000	6

LCD8bits.c estimated size: 227

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0414	0000	39

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 39

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	02FC	0000	105

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c estimated size: 105

shared
		__stringtab    		STRING         	0461	0000	16
		__initialization		CODE           	000F	0000	13
		i1_canalADC    		CODE           	0251	0000	171

shared estimated size: 200

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	00EA	0000	188

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c estimated size: 188

ADC.c
		_canalADC      		CODE           	01A6	0000	171
		_configADC     		CODE           	04A8	0000	21

ADC.c estimated size: 192

main.c
		_ISR           		CODE           	03E2	0000	50
		_main          		CODE           	0020	0000	202
		_Setup         		CODE           	0492	0000	22

main.c estimated size: 274

