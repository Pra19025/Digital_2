

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 15:37:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  0005                     _PORTA	set	5
   369  0005                     _PORTAbits	set	5
   370  0006                     _PORTB	set	6
   371  001F                     _ADCON0bits	set	31
   372  001E                     _ADRESH	set	30
   373  0063                     _SSPIF	set	99
   374  0066                     _ADIF	set	102
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  008C                     _PIE1bits	set	140
   379  0086                     _TRISB	set	134
   380  0085                     _TRISA	set	133
   381  0085                     _TRISAbits	set	133
   382  043B                     _TRISC3	set	1083
   383  043D                     _TRISC5	set	1085
   384  0188                     _ANSELbits	set	392
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390                           ; #config settings
   391                           
   392  000F                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   396  0010                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  0010                     __end_of__initialization:
   400  0010  0183               	clrf	3
   401  0011  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0078                     __pbssCOMMON:
   405  0078                     _varADC:
   406  0078                     	ds	1
   407                           
   408                           	psect	cstackCOMMON
   409  0070                     __pcstackCOMMON:
   410  0070                     ?_spiWrite:
   411  0070                     ??_spiWrite:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_Setup:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_configADC:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_canalADC:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ISR:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     spiWrite@dat:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	1
   435  0071                     ??_ISR:
   436                           
   437                           ; 1 bytes @ 0x1
   438  0071                     	ds	3
   439  0074                     ??_Setup:
   440  0074                     ??_configADC:	
   441                           ; 1 bytes @ 0x4
   442                           
   443  0074                     ??_canalADC:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ?_spiInit:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     canalADC@canal:	
   450                           ; 1 bytes @ 0x4
   451                           
   452  0074                     spiInit@sDataSample:	
   453                           ; 1 bytes @ 0x4
   454                           
   455                           
   456                           ; 1 bytes @ 0x4
   457  0074                     	ds	1
   458  0075                     spiInit@sClockIdle:
   459                           
   460                           ; 1 bytes @ 0x5
   461  0075                     	ds	1
   462  0076                     spiInit@sTransmitEdge:
   463                           
   464                           ; 1 bytes @ 0x6
   465  0076                     	ds	1
   466  0077                     ??_spiInit:
   467  0077                     spiInit@sType:	
   468                           ; 1 bytes @ 0x7
   469                           
   470                           
   471                           ; 1 bytes @ 0x7
   472  0077                     	ds	1
   473  0078                     ??_main:
   474                           
   475                           	psect	maintext
   476  00E8                     __pmaintext:	
   477                           ; 1 bytes @ 0x8
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 68 in file "mainEsclavo1.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B00/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_Setup
   505 ;;		_canalADC
   506 ;;		_configADC
   507 ;;		_spiInit
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _main
   515  00E8                     _main:
   516  00E8                     l862:	
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;mainEsclavo1.c: 69:     TRISAbits.TRISA5 = 1;
   522  00E8  120A  118A  210A  120A  118A  	fcall	_Setup
   523  00ED                     l864:
   524                           
   525                           ;mainEsclavo1.c: 70: 
   526  00ED  120A  118A  2137  120A  118A  	fcall	_configADC
   527  00F2                     l866:
   528                           
   529                           ;mainEsclavo1.c: 71: 
   530  00F2  3000               	movlw	0
   531  00F3  120A  118A  2014  120A  118A  	fcall	_canalADC
   532  00F8                     l868:
   533                           
   534                           ;mainEsclavo1.c: 72: }
   535  00F8  01F4               	clrf	spiInit@sDataSample
   536  00F9  01F5               	clrf	spiInit@sClockIdle
   537  00FA  01F6               	clrf	spiInit@sTransmitEdge
   538  00FB  3024               	movlw	36
   539  00FC  120A  118A  2121  120A  118A  	fcall	_spiInit
   540  0101                     l870:
   541  0101  1283               	bcf	3,5	;RP0=0, select bank0
   542  0102  1303               	bcf	3,6	;RP1=0, select bank0
   543  0103  1685               	bsf	5,5	;volatile
   544  0104  0878               	movf	_varADC,w
   545  0105  0086               	movwf	6	;volatile
   546  0106  2901               	goto	l870
   547  0107  120A  118A  280C   	ljmp	start
   548  010A                     __end_of_main:
   549                           
   550                           	psect	text1
   551  0121                     __ptext1:	
   552 ;; *************** function _spiInit *****************
   553 ;; Defined at:
   554 ;;		line 12 in file "SPI.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  sType           1    wreg     enum E1264
   557 ;;  sDataSample     1    4[COMMON] enum E1272
   558 ;;  sClockIdle      1    5[COMMON] enum E1276
   559 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  sType           1    7[COMMON] enum E1264
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         3       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0
   574 ;;      Totals:         4       0       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _spiInit
   587  0121                     _spiInit:
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   591                           ;spiInit@sType stored from wreg
   592  0121  00F7               	movwf	spiInit@sType
   593  0122                     l852:
   594                           
   595                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   596  0122  1683               	bsf	3,5	;RP0=1, select bank1
   597  0123  1303               	bcf	3,6	;RP1=0, select bank1
   598  0124  1287               	bcf	7,5	;volatile
   599                           
   600                           ;SPI.c: 15:     if(sType & 0b00000100)
   601  0125  1D77               	btfss	spiInit@sType,2
   602  0126  2928               	goto	u191
   603  0127  2929               	goto	u190
   604  0128                     u191:
   605  0128  292D               	goto	l858
   606  0129                     u190:
   607  0129                     l854:
   608                           
   609                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   610  0129  0876               	movf	spiInit@sTransmitEdge,w
   611  012A  0094               	movwf	20	;volatile
   612  012B                     l856:
   613                           
   614                           ;SPI.c: 18:         TRISC3 = 1;
   615  012B  1587               	bsf	7,3	;volatile
   616                           
   617                           ;SPI.c: 19:     }
   618  012C  2931               	goto	l110
   619  012D                     l858:
   620                           
   621                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   622  012D  0874               	movf	spiInit@sDataSample,w
   623  012E  0476               	iorwf	spiInit@sTransmitEdge,w
   624  012F  0094               	movwf	20	;volatile
   625  0130                     l860:
   626                           
   627                           ;SPI.c: 23:         TRISC3 = 0;
   628  0130  1187               	bcf	7,3	;volatile
   629  0131                     l110:	
   630                           ;SPI.c: 24:     }
   631                           
   632                           
   633                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   634  0131  0877               	movf	spiInit@sType,w
   635  0132  0475               	iorwf	spiInit@sClockIdle,w
   636  0133  1283               	bcf	3,5	;RP0=0, select bank0
   637  0134  1303               	bcf	3,6	;RP1=0, select bank0
   638  0135  0094               	movwf	20	;volatile
   639  0136                     l111:
   640  0136  0008               	return
   641  0137                     __end_of_spiInit:
   642                           
   643                           	psect	text2
   644  0137                     __ptext2:	
   645 ;; *************** function _configADC *****************
   646 ;; Defined at:
   647 ;;		line 140 in file "ADC.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		None
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _configADC
   677  0137                     _configADC:
   678  0137                     l746:	
   679                           ;incstack = 0
   680                           ; Regs used in _configADC: []
   681                           
   682                           
   683                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   684  0137  1283               	bcf	3,5	;RP0=0, select bank0
   685  0138  1303               	bcf	3,6	;RP1=0, select bank0
   686  0139  171F               	bsf	31,6	;volatile
   687                           
   688                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   689  013A  139F               	bcf	31,7	;volatile
   690                           
   691                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   692  013B  1683               	bsf	3,5	;RP0=1, select bank1
   693  013C  1303               	bcf	3,6	;RP1=0, select bank1
   694  013D  121F               	bcf	31,4	;volatile
   695                           
   696                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   697  013E  129F               	bcf	31,5	;volatile
   698                           
   699                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   700  013F  139F               	bcf	31,7	;volatile
   701                           
   702                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   703  0140  1283               	bcf	3,5	;RP0=0, select bank0
   704  0141  1303               	bcf	3,6	;RP1=0, select bank0
   705  0142  130C               	bcf	12,6	;volatile
   706                           
   707                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   708  0143  1683               	bsf	3,5	;RP0=1, select bank1
   709  0144  1303               	bcf	3,6	;RP1=0, select bank1
   710  0145  170C               	bsf	12,6	;volatile
   711                           
   712                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   713  0146  178B               	bsf	11,7	;volatile
   714                           
   715                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   716  0147  170B               	bsf	11,6	;volatile
   717                           
   718                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   719  0148  1283               	bcf	3,5	;RP0=0, select bank0
   720  0149  1303               	bcf	3,6	;RP1=0, select bank0
   721  014A  141F               	bsf	31,0	;volatile
   722  014B                     l94:
   723  014B  0008               	return
   724  014C                     __end_of_configADC:
   725                           
   726                           	psect	text3
   727  0014                     __ptext3:	
   728 ;; *************** function _canalADC *****************
   729 ;; Defined at:
   730 ;;		line 13 in file "ADC.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  canal           1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  canal           1    4[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    2
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _canalADC
   760  0014                     _canalADC:
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   764                           ;canalADC@canal stored from wreg
   765  0014  00F4               	movwf	canalADC@canal
   766  0015                     l748:
   767                           
   768                           ;ADC.c: 15:     if (canal == 0) {
   769  0015  0874               	movf	canalADC@canal,w
   770  0016  1D03               	btfss	3,2
   771  0017  2819               	goto	u11
   772  0018  281A               	goto	u10
   773  0019                     u11:
   774  0019  2820               	goto	l752
   775  001A                     u10:
   776  001A                     l750:
   777                           
   778                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   779  001A  1283               	bcf	3,5	;RP0=0, select bank0
   780  001B  1303               	bcf	3,6	;RP1=0, select bank0
   781  001C  129F               	bcf	31,5	;volatile
   782                           
   783                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   784  001D  121F               	bcf	31,4	;volatile
   785                           
   786                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   787  001E  119F               	bcf	31,3	;volatile
   788                           
   789                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   790  001F  111F               	bcf	31,2	;volatile
   791  0020                     l752:
   792                           
   793                           ;ADC.c: 23:     if (canal == 1) {
   794  0020  0374               	decf	canalADC@canal,w
   795  0021  1D03               	btfss	3,2
   796  0022  2824               	goto	u21
   797  0023  2825               	goto	u20
   798  0024                     u21:
   799  0024  282B               	goto	l756
   800  0025                     u20:
   801  0025                     l754:
   802                           
   803                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   804  0025  1283               	bcf	3,5	;RP0=0, select bank0
   805  0026  1303               	bcf	3,6	;RP1=0, select bank0
   806  0027  129F               	bcf	31,5	;volatile
   807                           
   808                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   809  0028  121F               	bcf	31,4	;volatile
   810                           
   811                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   812  0029  119F               	bcf	31,3	;volatile
   813                           
   814                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   815  002A  151F               	bsf	31,2	;volatile
   816  002B                     l756:
   817                           
   818                           ;ADC.c: 32:     if (canal == 2) {
   819  002B  3002               	movlw	2
   820  002C  0674               	xorwf	canalADC@canal,w
   821  002D  1D03               	btfss	3,2
   822  002E  2830               	goto	u31
   823  002F  2831               	goto	u30
   824  0030                     u31:
   825  0030  2837               	goto	l760
   826  0031                     u30:
   827  0031                     l758:
   828                           
   829                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   830  0031  1283               	bcf	3,5	;RP0=0, select bank0
   831  0032  1303               	bcf	3,6	;RP1=0, select bank0
   832  0033  129F               	bcf	31,5	;volatile
   833                           
   834                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   835  0034  121F               	bcf	31,4	;volatile
   836                           
   837                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   838  0035  159F               	bsf	31,3	;volatile
   839                           
   840                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   841  0036  111F               	bcf	31,2	;volatile
   842  0037                     l760:
   843                           
   844                           ;ADC.c: 41:     if (canal == 3) {
   845  0037  3003               	movlw	3
   846  0038  0674               	xorwf	canalADC@canal,w
   847  0039  1D03               	btfss	3,2
   848  003A  283C               	goto	u41
   849  003B  283D               	goto	u40
   850  003C                     u41:
   851  003C  2843               	goto	l764
   852  003D                     u40:
   853  003D                     l762:
   854                           
   855                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   856  003D  1283               	bcf	3,5	;RP0=0, select bank0
   857  003E  1303               	bcf	3,6	;RP1=0, select bank0
   858  003F  129F               	bcf	31,5	;volatile
   859                           
   860                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   861  0040  121F               	bcf	31,4	;volatile
   862                           
   863                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   864  0041  159F               	bsf	31,3	;volatile
   865                           
   866                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   867  0042  151F               	bsf	31,2	;volatile
   868  0043                     l764:
   869                           
   870                           ;ADC.c: 50:     if (canal == 4) {
   871  0043  3004               	movlw	4
   872  0044  0674               	xorwf	canalADC@canal,w
   873  0045  1D03               	btfss	3,2
   874  0046  2848               	goto	u51
   875  0047  2849               	goto	u50
   876  0048                     u51:
   877  0048  284F               	goto	l768
   878  0049                     u50:
   879  0049                     l766:
   880                           
   881                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   882  0049  1283               	bcf	3,5	;RP0=0, select bank0
   883  004A  1303               	bcf	3,6	;RP1=0, select bank0
   884  004B  129F               	bcf	31,5	;volatile
   885                           
   886                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   887  004C  161F               	bsf	31,4	;volatile
   888                           
   889                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   890  004D  119F               	bcf	31,3	;volatile
   891                           
   892                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   893  004E  111F               	bcf	31,2	;volatile
   894  004F                     l768:
   895                           
   896                           ;ADC.c: 59:     if (canal == 5) {
   897  004F  3005               	movlw	5
   898  0050  0674               	xorwf	canalADC@canal,w
   899  0051  1D03               	btfss	3,2
   900  0052  2854               	goto	u61
   901  0053  2855               	goto	u60
   902  0054                     u61:
   903  0054  285B               	goto	l772
   904  0055                     u60:
   905  0055                     l770:
   906                           
   907                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   908  0055  1283               	bcf	3,5	;RP0=0, select bank0
   909  0056  1303               	bcf	3,6	;RP1=0, select bank0
   910  0057  129F               	bcf	31,5	;volatile
   911                           
   912                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   913  0058  161F               	bsf	31,4	;volatile
   914                           
   915                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   916  0059  119F               	bcf	31,3	;volatile
   917                           
   918                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   919  005A  151F               	bsf	31,2	;volatile
   920  005B                     l772:
   921                           
   922                           ;ADC.c: 68:     if (canal == 6) {
   923  005B  3006               	movlw	6
   924  005C  0674               	xorwf	canalADC@canal,w
   925  005D  1D03               	btfss	3,2
   926  005E  2860               	goto	u71
   927  005F  2861               	goto	u70
   928  0060                     u71:
   929  0060  2867               	goto	l776
   930  0061                     u70:
   931  0061                     l774:
   932                           
   933                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   934  0061  1283               	bcf	3,5	;RP0=0, select bank0
   935  0062  1303               	bcf	3,6	;RP1=0, select bank0
   936  0063  129F               	bcf	31,5	;volatile
   937                           
   938                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   939  0064  161F               	bsf	31,4	;volatile
   940                           
   941                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   942  0065  159F               	bsf	31,3	;volatile
   943                           
   944                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   945  0066  111F               	bcf	31,2	;volatile
   946  0067                     l776:
   947                           
   948                           ;ADC.c: 77:     if (canal == 7) {
   949  0067  3007               	movlw	7
   950  0068  0674               	xorwf	canalADC@canal,w
   951  0069  1D03               	btfss	3,2
   952  006A  286C               	goto	u81
   953  006B  286D               	goto	u80
   954  006C                     u81:
   955  006C  2873               	goto	l780
   956  006D                     u80:
   957  006D                     l778:
   958                           
   959                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   960  006D  1283               	bcf	3,5	;RP0=0, select bank0
   961  006E  1303               	bcf	3,6	;RP1=0, select bank0
   962  006F  129F               	bcf	31,5	;volatile
   963                           
   964                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   965  0070  161F               	bsf	31,4	;volatile
   966                           
   967                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   968  0071  159F               	bsf	31,3	;volatile
   969                           
   970                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   971  0072  151F               	bsf	31,2	;volatile
   972  0073                     l780:
   973                           
   974                           ;ADC.c: 86:     if (canal == 8) {
   975  0073  3008               	movlw	8
   976  0074  0674               	xorwf	canalADC@canal,w
   977  0075  1D03               	btfss	3,2
   978  0076  2878               	goto	u91
   979  0077  2879               	goto	u90
   980  0078                     u91:
   981  0078  287F               	goto	l784
   982  0079                     u90:
   983  0079                     l782:
   984                           
   985                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   986  0079  1283               	bcf	3,5	;RP0=0, select bank0
   987  007A  1303               	bcf	3,6	;RP1=0, select bank0
   988  007B  169F               	bsf	31,5	;volatile
   989                           
   990                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   991  007C  121F               	bcf	31,4	;volatile
   992                           
   993                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   994  007D  119F               	bcf	31,3	;volatile
   995                           
   996                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
   997  007E  111F               	bcf	31,2	;volatile
   998  007F                     l784:
   999                           
  1000                           ;ADC.c: 94:     if (canal == 9) {
  1001  007F  3009               	movlw	9
  1002  0080  0674               	xorwf	canalADC@canal,w
  1003  0081  1D03               	btfss	3,2
  1004  0082  2884               	goto	u101
  1005  0083  2885               	goto	u100
  1006  0084                     u101:
  1007  0084  288B               	goto	l788
  1008  0085                     u100:
  1009  0085                     l786:
  1010                           
  1011                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1012  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0087  169F               	bsf	31,5	;volatile
  1015                           
  1016                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1017  0088  121F               	bcf	31,4	;volatile
  1018                           
  1019                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1020  0089  119F               	bcf	31,3	;volatile
  1021                           
  1022                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1023  008A  151F               	bsf	31,2	;volatile
  1024  008B                     l788:
  1025                           
  1026                           ;ADC.c: 102:     if (canal == 10) {
  1027  008B  300A               	movlw	10
  1028  008C  0674               	xorwf	canalADC@canal,w
  1029  008D  1D03               	btfss	3,2
  1030  008E  2890               	goto	u111
  1031  008F  2891               	goto	u110
  1032  0090                     u111:
  1033  0090  2897               	goto	l792
  1034  0091                     u110:
  1035  0091                     l790:
  1036                           
  1037                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1038  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0093  169F               	bsf	31,5	;volatile
  1041                           
  1042                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1043  0094  121F               	bcf	31,4	;volatile
  1044                           
  1045                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1046  0095  159F               	bsf	31,3	;volatile
  1047                           
  1048                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1049  0096  111F               	bcf	31,2	;volatile
  1050  0097                     l792:
  1051                           
  1052                           ;ADC.c: 111:     if (canal == 11) {
  1053  0097  300B               	movlw	11
  1054  0098  0674               	xorwf	canalADC@canal,w
  1055  0099  1D03               	btfss	3,2
  1056  009A  289C               	goto	u121
  1057  009B  289D               	goto	u120
  1058  009C                     u121:
  1059  009C  28A3               	goto	l796
  1060  009D                     u120:
  1061  009D                     l794:
  1062                           
  1063                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1064  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1065  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1066  009F  169F               	bsf	31,5	;volatile
  1067                           
  1068                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1069  00A0  121F               	bcf	31,4	;volatile
  1070                           
  1071                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1072  00A1  159F               	bsf	31,3	;volatile
  1073                           
  1074                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1075  00A2  151F               	bsf	31,2	;volatile
  1076  00A3                     l796:
  1077                           
  1078                           ;ADC.c: 120:     if (canal == 12) {
  1079  00A3  300C               	movlw	12
  1080  00A4  0674               	xorwf	canalADC@canal,w
  1081  00A5  1D03               	btfss	3,2
  1082  00A6  28A8               	goto	u131
  1083  00A7  28A9               	goto	u130
  1084  00A8                     u131:
  1085  00A8  28AF               	goto	l800
  1086  00A9                     u130:
  1087  00A9                     l798:
  1088                           
  1089                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1090  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1091  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1092  00AB  169F               	bsf	31,5	;volatile
  1093                           
  1094                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1095  00AC  161F               	bsf	31,4	;volatile
  1096                           
  1097                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1098  00AD  119F               	bcf	31,3	;volatile
  1099                           
  1100                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1101  00AE  111F               	bcf	31,2	;volatile
  1102  00AF                     l800:
  1103                           
  1104                           ;ADC.c: 129:     if (canal == 13) {
  1105  00AF  300D               	movlw	13
  1106  00B0  0674               	xorwf	canalADC@canal,w
  1107  00B1  1D03               	btfss	3,2
  1108  00B2  28B4               	goto	u141
  1109  00B3  28B5               	goto	u140
  1110  00B4                     u141:
  1111  00B4  28BB               	goto	l90
  1112  00B5                     u140:
  1113  00B5                     l802:
  1114                           
  1115                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1116  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00B7  169F               	bsf	31,5	;volatile
  1119                           
  1120                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1121  00B8  161F               	bsf	31,4	;volatile
  1122                           
  1123                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1124  00B9  119F               	bcf	31,3	;volatile
  1125                           
  1126                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1127  00BA  151F               	bsf	31,2	;volatile
  1128  00BB                     l90:	
  1129                           ;ADC.c: 135:     }
  1130                           
  1131                           
  1132                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1133  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1134  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1135  00BD  149F               	bsf	31,1	;volatile
  1136  00BE                     l91:
  1137  00BE  0008               	return
  1138  00BF                     __end_of_canalADC:
  1139                           
  1140                           	psect	text4
  1141  010A                     __ptext4:	
  1142 ;; *************** function _Setup *****************
  1143 ;; Defined at:
  1144 ;;		line 83 in file "mainEsclavo1.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _Setup
  1174  010A                     _Setup:
  1175  010A                     l722:	
  1176                           ;incstack = 0
  1177                           ; Regs used in _Setup: [wreg+status,2]
  1178                           
  1179  010A  1683               	bsf	3,5	;RP0=1, select bank3
  1180  010B  1703               	bsf	3,6	;RP1=1, select bank3
  1181  010C  0188               	clrf	8	;volatile
  1182  010D  0189               	clrf	9	;volatile
  1183  010E                     l724:
  1184  010E  1408               	bsf	8,0	;volatile
  1185  010F                     l726:
  1186  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0111  1685               	bsf	5,5	;volatile
  1189  0112                     l728:
  1190  0112  3001               	movlw	1
  1191  0113  0085               	movwf	5	;volatile
  1192  0114                     l730:
  1193  0114  0186               	clrf	6	;volatile
  1194  0115                     l732:
  1195  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0117  0186               	clrf	6	;volatile
  1198  0118                     l734:
  1199  0118  0185               	clrf	5	;volatile
  1200  0119                     l736:
  1201  0119  178B               	bsf	11,7	;volatile
  1202  011A                     l738:
  1203  011A  170B               	bsf	11,6	;volatile
  1204  011B                     l740:
  1205  011B  118C               	bcf	12,3	;volatile
  1206  011C                     l742:
  1207  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1208  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1209  011E  158C               	bsf	12,3	;volatile
  1210  011F                     l744:
  1211  011F  1685               	bsf	5,5	;volatile
  1212  0120                     l64:
  1213  0120  0008               	return
  1214  0121                     __end_of_Setup:
  1215                           
  1216                           	psect	text5
  1217  00BF                     __ptext5:	
  1218 ;; *************** function _ISR *****************
  1219 ;; Defined at:
  1220 ;;		line 48 in file "mainEsclavo1.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          3       0       0       0       0
  1237 ;;      Totals:         3       0       0       0       0
  1238 ;;Total ram usage:        3 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    1
  1241 ;; This function calls:
  1242 ;;		_spiWrite
  1243 ;; This function is called by:
  1244 ;;		Interrupt level 1
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _ISR
  1250  00BF                     _ISR:
  1251  00BF                     i1l816:
  1252                           
  1253                           ;mainEsclavo1.c: 50: }
  1254  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1255  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1256  00C1  1F0C               	btfss	12,6	;volatile
  1257  00C2  28C4               	goto	u17_21
  1258  00C3  28C5               	goto	u17_20
  1259  00C4                     u17_21:
  1260  00C4  28D4               	goto	i1l824
  1261  00C5                     u17_20:
  1262  00C5                     i1l818:
  1263                           
  1264                           ;mainEsclavo1.c: 51: 
  1265  00C5  30C7               	movlw	199
  1266  00C6  00F1               	movwf	??_ISR
  1267  00C7                     u20_27:
  1268  00C7  28C8               	nop2
  1269  00C8  0BF1               	decfsz	??_ISR,f
  1270  00C9  28C7               	goto	u20_27
  1271  00CA  28CB               	nop2
  1272  00CB  28CC               	nop2
  1273                           
  1274                           ;mainEsclavo1.c: 52: void Setup(void) {
  1275  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1277  00CE  081E               	movf	30,w	;volatile
  1278  00CF  00F1               	movwf	??_ISR
  1279  00D0  0871               	movf	??_ISR,w
  1280  00D1  00F8               	movwf	_varADC
  1281  00D2                     i1l820:
  1282                           
  1283                           ;mainEsclavo1.c: 54:     ANSEL = 0;
  1284  00D2  130C               	bcf	12,6	;volatile
  1285  00D3                     i1l822:
  1286                           
  1287                           ;mainEsclavo1.c: 55:     ANSELH = 0;
  1288  00D3  149F               	bsf	31,1	;volatile
  1289  00D4                     i1l824:
  1290                           
  1291                           ;mainEsclavo1.c: 59:     TRISB = 0;
  1292  00D4  1D8C               	btfss	12,3	;volatile
  1293  00D5  28D7               	goto	u18_21
  1294  00D6  28D8               	goto	u18_20
  1295  00D7                     u18_21:
  1296  00D7  28E1               	goto	i1l53
  1297  00D8                     u18_20:
  1298  00D8                     i1l826:
  1299                           
  1300                           ;mainEsclavo1.c: 60: 
  1301  00D8  0806               	movf	6,w	;volatile
  1302  00D9  120A  118A  214C  120A  118A  	fcall	_spiWrite
  1303  00DE                     i1l828:
  1304                           
  1305                           ;mainEsclavo1.c: 61:     PORTB = 0;
  1306  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1307  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1308  00E0  118C               	bcf	12,3	;volatile
  1309  00E1                     i1l53:
  1310  00E1  0873               	movf	??_ISR+2,w
  1311  00E2  008A               	movwf	10
  1312  00E3  0E72               	swapf	??_ISR+1,w
  1313  00E4  0083               	movwf	3
  1314  00E5  0EFE               	swapf	btemp,f
  1315  00E6  0E7E               	swapf	btemp,w
  1316  00E7  0009               	retfie
  1317  00E8                     __end_of_ISR:
  1318                           
  1319                           	psect	intentry
  1320  0004                     __pintentry:	
  1321                           ;incstack = 0
  1322                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1323                           
  1324  0004                     interrupt_function:
  1325  007E                     saved_w	set	btemp
  1326  0004  00FE               	movwf	btemp
  1327  0005  0E03               	swapf	3,w
  1328  0006  00F2               	movwf	??_ISR+1
  1329  0007  080A               	movf	10,w
  1330  0008  00F3               	movwf	??_ISR+2
  1331  0009  120A  118A  28BF   	ljmp	_ISR
  1332                           
  1333                           	psect	text6
  1334  014C                     __ptext6:	
  1335 ;; *************** function _spiWrite *****************
  1336 ;; Defined at:
  1337 ;;		line 34 in file "SPI.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  dat             1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  dat             1    0[COMMON] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         1       0       0       0       0
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_ISR
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _spiWrite
  1366  014C                     _spiWrite:
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _spiWrite: [wreg]
  1370                           ;spiWrite@dat stored from wreg
  1371  014C  00F0               	movwf	spiWrite@dat
  1372  014D                     i1l720:
  1373                           
  1374                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1375  014D  0870               	movf	spiWrite@dat,w
  1376  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1377  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0150  0093               	movwf	19	;volatile
  1379  0151                     i1l120:
  1380  0151  0008               	return
  1381  0152                     __end_of_spiWrite:
  1382  007E                     btemp	set	126	;btemp
  1383  007E                     wtemp0	set	126
  1384                           
  1385                           	psect	config
  1386                           
  1387                           ;Config register CONFIG1 @ 0x2007
  1388                           ;	Oscillator Selection bits
  1389                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1390                           ;	Watchdog Timer Enable bit
  1391                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1392                           ;	Power-up Timer Enable bit
  1393                           ;	PWRTE = OFF, PWRT disabled
  1394                           ;	RE3/MCLR pin function select bit
  1395                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1396                           ;	Code Protection bit
  1397                           ;	CP = OFF, Program memory code protection is disabled
  1398                           ;	Data Code Protection bit
  1399                           ;	CPD = OFF, Data memory code protection is disabled
  1400                           ;	Brown Out Reset Selection bits
  1401                           ;	BOREN = OFF, BOR disabled
  1402                           ;	Internal External Switchover bit
  1403                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1404                           ;	Fail-Safe Clock Monitor Enabled bit
  1405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1406                           ;	Low Voltage Programming Enable bit
  1407                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1408                           ;	In-Circuit Debugger Mode bit
  1409                           ;	DEBUG = 0x1, unprogrammed default
  1410  2007                     	org	8199
  1411  2007  20D4               	dw	8404
  1412                           
  1413                           ;Config register CONFIG2 @ 0x2008
  1414                           ;	Brown-out Reset Selection bit
  1415                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1416                           ;	Flash Program Memory Self Write Enable bits
  1417                           ;	WRT = OFF, Write protection off
  1418  2008                     	org	8200
  1419  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     570
                              _Setup
                           _canalADC
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 15:37:19 2021

            _SSPSTATbits 0094                       l64 0120                       l90 00BB  
                     l91 00BE                       l94 014B                       u10 001A  
                     u11 0019                       u20 0025                       u21 0024  
                     u30 0031                       u31 0030                       u40 003D  
                     u41 003C                       u50 0049                       u51 0048  
                     u60 0055                       u61 0054                       u70 0061  
                     u71 0060                       u80 006D                       u81 006C  
                     u90 0079                       u91 0078                      l110 0131  
                    l111 0136                      l800 00AF                      l730 0114  
                    l722 010A                      l802 00B5                      l740 011B  
                    l732 0115                      l724 010E                      l742 011C  
                    l734 0118                      l726 010F                      l750 001A  
                    l744 011F                      l736 0119                      l728 0112  
                    l760 0037                      l752 0020                      l738 011A  
                    l770 0055                      l762 003D                      l754 0025  
                    l746 0137                      l780 0073                      l772 005B  
                    l764 0043                      l756 002B                      l748 0015  
                    l860 0130                      l852 0122                      l790 0091  
                    l782 0079                      l774 0061                      l766 0049  
                    l758 0031                      l854 0129                      l870 0101  
                    l862 00E8                      l792 0097                      l784 007F  
                    l776 0067                      l768 004F                      l856 012B  
                    l864 00ED                      l794 009D                      l786 0085  
                    l778 006D                      l858 012D                      l866 00F2  
                    l796 00A3                      l788 008B                      l868 00F8  
                    l798 00A9                      u100 0085                      u101 0084  
                    u110 0091                      u111 0090                      u120 009D  
                    u121 009C                      u130 00A9                      u131 00A8  
                    u140 00B5                      u141 00B4                      u190 0129  
                    u191 0128                      _ISR 00BF                     ?_ISR 0070  
                   _ADIF 0066                     i1l53 00E1                     _main 00E8  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l120 0151  
                  i1l720 014D                    i1l820 00D2                    i1l822 00D3  
                  i1l824 00D4                    i1l816 00BF                    i1l826 00D8  
                  i1l818 00C5                    i1l828 00DE                    u20_27 00C7  
                  u17_20 00C5                    u17_21 00C4                    u18_20 00D8  
                  u18_21 00D7                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _SSPIF 0063  
                  _Setup 010A                    pclath 000A          __end_of_spiInit 0137  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 010A                   ??_main 0078                   ?_Setup 0070  
                 _ADRESH 001E                   _ANSELH 0189         __end_of_canalADC 00BF  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   _varADC 0078                   saved_w 007E  
       __end_of_spiWrite 0152                ??_spiInit 0077  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_Setup 0121       __size_of_configADC 0015  
                ??_Setup 0074               __pmaintext 00E8               __pintentry 0004  
              ?_canalADC 0070                  _SSPSTAT 0094        __end_of_configADC 014C  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0121  
                __ptext2 0137                  __ptext3 0014                  __ptext4 010A  
                __ptext5 00BF                  __ptext6 014C               ??_canalADC 0074  
           __size_of_ISR 0029                  _spiInit 0121     end_of_initialization 0010  
             ??_spiWrite 0070                _PORTAbits 0005                _TRISAbits 0085  
            spiWrite@dat 0070      start_initialization 000F              __end_of_ISR 00E8  
            __pbssCOMMON 0078                ___latbits 0002        __size_of_canalADC 00AB  
              _configADC 0137        __size_of_spiWrite 0006                 ?_spiInit 0074  
         __size_of_Setup 0017     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             ?_configADC 0070               _ADCON0bits 001F               _ADCON1bits 009F  
               _canalADC 0014            canalADC@canal 0074         __size_of_spiInit 0016  
          __size_of_main 0022                 _spiWrite 014C             spiInit@sType 0077  
            ??_configADC 0074        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000  
