

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 17:37:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  000B                     _INTCONbits	set	11
   369  000C                     _PIR1bits	set	12
   370  0005                     _PORTA	set	5
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  001F                     _ADCON0bits	set	31
   374  001E                     _ADRESH	set	30
   375  0063                     _SSPIF	set	99
   376  0066                     _ADIF	set	102
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  008C                     _PIE1bits	set	140
   380  009F                     _ADCON1bits	set	159
   381  0086                     _TRISB	set	134
   382  0085                     _TRISA	set	133
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0188                     _ANSELbits	set	392
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   397  0010                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0010                     __end_of__initialization:
   401  0010  0183               	clrf	3
   402  0011  120A  118A  28F0   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _varADC:
   407  0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_spiRead:
   412  0070                     ??_spiRead:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiWrite:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_Setup:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_configADC:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_canalADC:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_ISR:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     spiWrite@dat:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     ??_ISR:
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	3
   452  0074                     ??_Setup:
   453  0074                     ??_configADC:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     ??_canalADC:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     ?_spiInit:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     canalADC@canal:	
   463                           ; 1 bytes @ 0x4
   464                           
   465  0074                     spiInit@sDataSample:	
   466                           ; 1 bytes @ 0x4
   467                           
   468                           
   469                           ; 1 bytes @ 0x4
   470  0074                     	ds	1
   471  0075                     spiInit@sClockIdle:
   472                           
   473                           ; 1 bytes @ 0x5
   474  0075                     	ds	1
   475  0076                     spiInit@sTransmitEdge:
   476                           
   477                           ; 1 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??_spiInit:
   480  0077                     spiInit@sType:	
   481                           ; 1 bytes @ 0x7
   482                           
   483                           
   484                           ; 1 bytes @ 0x7
   485  0077                     	ds	1
   486  0078                     ??_main:
   487                           
   488                           	psect	maintext
   489  00F0                     __pmaintext:	
   490                           ; 1 bytes @ 0x8
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 69 in file "mainEsclavo1.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels required when called:    4
   516 ;; This function calls:
   517 ;;		_Setup
   518 ;;		_canalADC
   519 ;;		_configADC
   520 ;;		_spiInit
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  00F0                     _main:
   529  00F0                     l842:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   532                           
   533  00F0  120A  118A  213C  120A  118A  	fcall	_Setup
   534  00F5                     l844:
   535  00F5  120A  118A  2127  120A  118A  	fcall	_configADC
   536  00FA                     l846:
   537  00FA  3000               	movlw	0
   538  00FB  120A  118A  2014  120A  118A  	fcall	_canalADC
   539  0100                     l848:
   540  0100  01F4               	clrf	spiInit@sDataSample
   541  0101  01F5               	clrf	spiInit@sClockIdle
   542  0102  01F6               	clrf	spiInit@sTransmitEdge
   543  0103  3024               	movlw	36
   544  0104  120A  118A  2111  120A  118A  	fcall	_spiInit
   545  0109                     l52:
   546  0109  0878               	movf	_varADC,w
   547  010A  1283               	bcf	3,5	;RP0=0, select bank0
   548  010B  1303               	bcf	3,6	;RP1=0, select bank0
   549  010C  0086               	movwf	6	;volatile
   550  010D  2909               	goto	l52
   551  010E  120A  118A  280C   	ljmp	start
   552  0111                     __end_of_main:
   553                           
   554                           	psect	text1
   555  0111                     __ptext1:	
   556 ;; *************** function _spiInit *****************
   557 ;; Defined at:
   558 ;;		line 12 in file "SPI.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  sType           1    wreg     enum E1264
   561 ;;  sDataSample     1    4[COMMON] enum E1272
   562 ;;  sClockIdle      1    5[COMMON] enum E1276
   563 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  sType           1    7[COMMON] enum E1264
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         3       0       0       0       0
   576 ;;      Locals:         1       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         4       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    3
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _spiInit
   591  0111                     _spiInit:
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   595                           ;spiInit@sType stored from wreg
   596  0111  00F7               	movwf	spiInit@sType
   597  0112                     l832:
   598                           
   599                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   600  0112  1683               	bsf	3,5	;RP0=1, select bank1
   601  0113  1303               	bcf	3,6	;RP1=0, select bank1
   602  0114  1287               	bcf	7,5	;volatile
   603                           
   604                           ;SPI.c: 15:     if(sType & 0b00000100)
   605  0115  1D77               	btfss	spiInit@sType,2
   606  0116  2918               	goto	u191
   607  0117  2919               	goto	u190
   608  0118                     u191:
   609  0118  291D               	goto	l838
   610  0119                     u190:
   611  0119                     l834:
   612                           
   613                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   614  0119  0876               	movf	spiInit@sTransmitEdge,w
   615  011A  0094               	movwf	20	;volatile
   616  011B                     l836:
   617                           
   618                           ;SPI.c: 18:         TRISC3 = 1;
   619  011B  1587               	bsf	7,3	;volatile
   620                           
   621                           ;SPI.c: 19:     }
   622  011C  2921               	goto	l104
   623  011D                     l838:
   624                           
   625                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   626  011D  0874               	movf	spiInit@sDataSample,w
   627  011E  0476               	iorwf	spiInit@sTransmitEdge,w
   628  011F  0094               	movwf	20	;volatile
   629  0120                     l840:
   630                           
   631                           ;SPI.c: 23:         TRISC3 = 0;
   632  0120  1187               	bcf	7,3	;volatile
   633  0121                     l104:	
   634                           ;SPI.c: 24:     }
   635                           
   636                           
   637                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   638  0121  0877               	movf	spiInit@sType,w
   639  0122  0475               	iorwf	spiInit@sClockIdle,w
   640  0123  1283               	bcf	3,5	;RP0=0, select bank0
   641  0124  1303               	bcf	3,6	;RP1=0, select bank0
   642  0125  0094               	movwf	20	;volatile
   643  0126                     l105:
   644  0126  0008               	return
   645  0127                     __end_of_spiInit:
   646                           
   647                           	psect	text2
   648  0127                     __ptext2:	
   649 ;; *************** function _configADC *****************
   650 ;; Defined at:
   651 ;;		line 140 in file "ADC.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		None
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    3
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _configADC
   681  0127                     _configADC:
   682  0127                     l736:	
   683                           ;incstack = 0
   684                           ; Regs used in _configADC: []
   685                           
   686                           
   687                           ;ADC.c: 142:     ADCON0bits.ADCS0 = 1;
   688  0127  1283               	bcf	3,5	;RP0=0, select bank0
   689  0128  1303               	bcf	3,6	;RP1=0, select bank0
   690  0129  171F               	bsf	31,6	;volatile
   691                           
   692                           ;ADC.c: 143:     ADCON0bits.ADCS1 = 0;
   693  012A  139F               	bcf	31,7	;volatile
   694                           
   695                           ;ADC.c: 145:     ADCON1bits.VCFG0 = 0;
   696  012B  1683               	bsf	3,5	;RP0=1, select bank1
   697  012C  1303               	bcf	3,6	;RP1=0, select bank1
   698  012D  121F               	bcf	31,4	;volatile
   699                           
   700                           ;ADC.c: 146:     ADCON1bits.VCFG1 = 0;
   701  012E  129F               	bcf	31,5	;volatile
   702                           
   703                           ;ADC.c: 148:     ADCON1bits.ADFM = 0;
   704  012F  139F               	bcf	31,7	;volatile
   705                           
   706                           ;ADC.c: 150:     PIR1bits.ADIF = 0;
   707  0130  1283               	bcf	3,5	;RP0=0, select bank0
   708  0131  1303               	bcf	3,6	;RP1=0, select bank0
   709  0132  130C               	bcf	12,6	;volatile
   710                           
   711                           ;ADC.c: 151:     PIE1bits.ADIE = 1;
   712  0133  1683               	bsf	3,5	;RP0=1, select bank1
   713  0134  1303               	bcf	3,6	;RP1=0, select bank1
   714  0135  170C               	bsf	12,6	;volatile
   715                           
   716                           ;ADC.c: 152:     INTCONbits.GIE = 1;
   717  0136  178B               	bsf	11,7	;volatile
   718                           
   719                           ;ADC.c: 153:     INTCONbits.PEIE = 1;
   720  0137  170B               	bsf	11,6	;volatile
   721                           
   722                           ;ADC.c: 155:     ADCON0bits.ADON = 1;
   723  0138  1283               	bcf	3,5	;RP0=0, select bank0
   724  0139  1303               	bcf	3,6	;RP1=0, select bank0
   725  013A  141F               	bsf	31,0	;volatile
   726  013B                     l88:
   727  013B  0008               	return
   728  013C                     __end_of_configADC:
   729                           
   730                           	psect	text3
   731  0014                     __ptext3:	
   732 ;; *************** function _canalADC *****************
   733 ;; Defined at:
   734 ;;		line 13 in file "ADC.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  canal           1    wreg     unsigned char 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  canal           1    4[COMMON] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         1       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         1       0       0       0       0
   752 ;;Total ram usage:        1 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _canalADC
   764  0014                     _canalADC:
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _canalADC: [wreg+status,2+status,0]
   768                           ;canalADC@canal stored from wreg
   769  0014  00F4               	movwf	canalADC@canal
   770  0015                     l738:
   771                           
   772                           ;ADC.c: 15:     if (canal == 0) {
   773  0015  0874               	movf	canalADC@canal,w
   774  0016  1D03               	btfss	3,2
   775  0017  2819               	goto	u21
   776  0018  281A               	goto	u20
   777  0019                     u21:
   778  0019  2820               	goto	l742
   779  001A                     u20:
   780  001A                     l740:
   781                           
   782                           ;ADC.c: 16:         ADCON0bits.CHS3 = 0;
   783  001A  1283               	bcf	3,5	;RP0=0, select bank0
   784  001B  1303               	bcf	3,6	;RP1=0, select bank0
   785  001C  129F               	bcf	31,5	;volatile
   786                           
   787                           ;ADC.c: 17:         ADCON0bits.CHS2 = 0;
   788  001D  121F               	bcf	31,4	;volatile
   789                           
   790                           ;ADC.c: 18:         ADCON0bits.CHS1 = 0;
   791  001E  119F               	bcf	31,3	;volatile
   792                           
   793                           ;ADC.c: 19:         ADCON0bits.CHS0 = 0;
   794  001F  111F               	bcf	31,2	;volatile
   795  0020                     l742:
   796                           
   797                           ;ADC.c: 23:     if (canal == 1) {
   798  0020  0374               	decf	canalADC@canal,w
   799  0021  1D03               	btfss	3,2
   800  0022  2824               	goto	u31
   801  0023  2825               	goto	u30
   802  0024                     u31:
   803  0024  282B               	goto	l746
   804  0025                     u30:
   805  0025                     l744:
   806                           
   807                           ;ADC.c: 24:         ADCON0bits.CHS3 = 0;
   808  0025  1283               	bcf	3,5	;RP0=0, select bank0
   809  0026  1303               	bcf	3,6	;RP1=0, select bank0
   810  0027  129F               	bcf	31,5	;volatile
   811                           
   812                           ;ADC.c: 25:         ADCON0bits.CHS2 = 0;
   813  0028  121F               	bcf	31,4	;volatile
   814                           
   815                           ;ADC.c: 26:         ADCON0bits.CHS1 = 0;
   816  0029  119F               	bcf	31,3	;volatile
   817                           
   818                           ;ADC.c: 27:         ADCON0bits.CHS0 = 1;
   819  002A  151F               	bsf	31,2	;volatile
   820  002B                     l746:
   821                           
   822                           ;ADC.c: 32:     if (canal == 2) {
   823  002B  3002               	movlw	2
   824  002C  0674               	xorwf	canalADC@canal,w
   825  002D  1D03               	btfss	3,2
   826  002E  2830               	goto	u41
   827  002F  2831               	goto	u40
   828  0030                     u41:
   829  0030  2837               	goto	l750
   830  0031                     u40:
   831  0031                     l748:
   832                           
   833                           ;ADC.c: 33:         ADCON0bits.CHS3 = 0;
   834  0031  1283               	bcf	3,5	;RP0=0, select bank0
   835  0032  1303               	bcf	3,6	;RP1=0, select bank0
   836  0033  129F               	bcf	31,5	;volatile
   837                           
   838                           ;ADC.c: 34:         ADCON0bits.CHS2 = 0;
   839  0034  121F               	bcf	31,4	;volatile
   840                           
   841                           ;ADC.c: 35:         ADCON0bits.CHS1 = 1;
   842  0035  159F               	bsf	31,3	;volatile
   843                           
   844                           ;ADC.c: 36:         ADCON0bits.CHS0 = 0;
   845  0036  111F               	bcf	31,2	;volatile
   846  0037                     l750:
   847                           
   848                           ;ADC.c: 41:     if (canal == 3) {
   849  0037  3003               	movlw	3
   850  0038  0674               	xorwf	canalADC@canal,w
   851  0039  1D03               	btfss	3,2
   852  003A  283C               	goto	u51
   853  003B  283D               	goto	u50
   854  003C                     u51:
   855  003C  2843               	goto	l754
   856  003D                     u50:
   857  003D                     l752:
   858                           
   859                           ;ADC.c: 42:         ADCON0bits.CHS3 = 0;
   860  003D  1283               	bcf	3,5	;RP0=0, select bank0
   861  003E  1303               	bcf	3,6	;RP1=0, select bank0
   862  003F  129F               	bcf	31,5	;volatile
   863                           
   864                           ;ADC.c: 43:         ADCON0bits.CHS2 = 0;
   865  0040  121F               	bcf	31,4	;volatile
   866                           
   867                           ;ADC.c: 44:         ADCON0bits.CHS1 = 1;
   868  0041  159F               	bsf	31,3	;volatile
   869                           
   870                           ;ADC.c: 45:         ADCON0bits.CHS0 = 1;
   871  0042  151F               	bsf	31,2	;volatile
   872  0043                     l754:
   873                           
   874                           ;ADC.c: 50:     if (canal == 4) {
   875  0043  3004               	movlw	4
   876  0044  0674               	xorwf	canalADC@canal,w
   877  0045  1D03               	btfss	3,2
   878  0046  2848               	goto	u61
   879  0047  2849               	goto	u60
   880  0048                     u61:
   881  0048  284F               	goto	l758
   882  0049                     u60:
   883  0049                     l756:
   884                           
   885                           ;ADC.c: 51:         ADCON0bits.CHS3 = 0;
   886  0049  1283               	bcf	3,5	;RP0=0, select bank0
   887  004A  1303               	bcf	3,6	;RP1=0, select bank0
   888  004B  129F               	bcf	31,5	;volatile
   889                           
   890                           ;ADC.c: 52:         ADCON0bits.CHS2 = 1;
   891  004C  161F               	bsf	31,4	;volatile
   892                           
   893                           ;ADC.c: 53:         ADCON0bits.CHS1 = 0;
   894  004D  119F               	bcf	31,3	;volatile
   895                           
   896                           ;ADC.c: 54:         ADCON0bits.CHS0 = 0;
   897  004E  111F               	bcf	31,2	;volatile
   898  004F                     l758:
   899                           
   900                           ;ADC.c: 59:     if (canal == 5) {
   901  004F  3005               	movlw	5
   902  0050  0674               	xorwf	canalADC@canal,w
   903  0051  1D03               	btfss	3,2
   904  0052  2854               	goto	u71
   905  0053  2855               	goto	u70
   906  0054                     u71:
   907  0054  285B               	goto	l762
   908  0055                     u70:
   909  0055                     l760:
   910                           
   911                           ;ADC.c: 60:         ADCON0bits.CHS3 = 0;
   912  0055  1283               	bcf	3,5	;RP0=0, select bank0
   913  0056  1303               	bcf	3,6	;RP1=0, select bank0
   914  0057  129F               	bcf	31,5	;volatile
   915                           
   916                           ;ADC.c: 61:         ADCON0bits.CHS2 = 1;
   917  0058  161F               	bsf	31,4	;volatile
   918                           
   919                           ;ADC.c: 62:         ADCON0bits.CHS1 = 0;
   920  0059  119F               	bcf	31,3	;volatile
   921                           
   922                           ;ADC.c: 63:         ADCON0bits.CHS0 = 1;
   923  005A  151F               	bsf	31,2	;volatile
   924  005B                     l762:
   925                           
   926                           ;ADC.c: 68:     if (canal == 6) {
   927  005B  3006               	movlw	6
   928  005C  0674               	xorwf	canalADC@canal,w
   929  005D  1D03               	btfss	3,2
   930  005E  2860               	goto	u81
   931  005F  2861               	goto	u80
   932  0060                     u81:
   933  0060  2867               	goto	l766
   934  0061                     u80:
   935  0061                     l764:
   936                           
   937                           ;ADC.c: 69:         ADCON0bits.CHS3 = 0;
   938  0061  1283               	bcf	3,5	;RP0=0, select bank0
   939  0062  1303               	bcf	3,6	;RP1=0, select bank0
   940  0063  129F               	bcf	31,5	;volatile
   941                           
   942                           ;ADC.c: 70:         ADCON0bits.CHS2 = 1;
   943  0064  161F               	bsf	31,4	;volatile
   944                           
   945                           ;ADC.c: 71:         ADCON0bits.CHS1 = 1;
   946  0065  159F               	bsf	31,3	;volatile
   947                           
   948                           ;ADC.c: 72:         ADCON0bits.CHS0 = 0;
   949  0066  111F               	bcf	31,2	;volatile
   950  0067                     l766:
   951                           
   952                           ;ADC.c: 77:     if (canal == 7) {
   953  0067  3007               	movlw	7
   954  0068  0674               	xorwf	canalADC@canal,w
   955  0069  1D03               	btfss	3,2
   956  006A  286C               	goto	u91
   957  006B  286D               	goto	u90
   958  006C                     u91:
   959  006C  2873               	goto	l770
   960  006D                     u90:
   961  006D                     l768:
   962                           
   963                           ;ADC.c: 78:         ADCON0bits.CHS3 = 0;
   964  006D  1283               	bcf	3,5	;RP0=0, select bank0
   965  006E  1303               	bcf	3,6	;RP1=0, select bank0
   966  006F  129F               	bcf	31,5	;volatile
   967                           
   968                           ;ADC.c: 79:         ADCON0bits.CHS2 = 1;
   969  0070  161F               	bsf	31,4	;volatile
   970                           
   971                           ;ADC.c: 80:         ADCON0bits.CHS1 = 1;
   972  0071  159F               	bsf	31,3	;volatile
   973                           
   974                           ;ADC.c: 81:         ADCON0bits.CHS0 = 1;
   975  0072  151F               	bsf	31,2	;volatile
   976  0073                     l770:
   977                           
   978                           ;ADC.c: 86:     if (canal == 8) {
   979  0073  3008               	movlw	8
   980  0074  0674               	xorwf	canalADC@canal,w
   981  0075  1D03               	btfss	3,2
   982  0076  2878               	goto	u101
   983  0077  2879               	goto	u100
   984  0078                     u101:
   985  0078  287F               	goto	l774
   986  0079                     u100:
   987  0079                     l772:
   988                           
   989                           ;ADC.c: 87:         ADCON0bits.CHS3 = 1;
   990  0079  1283               	bcf	3,5	;RP0=0, select bank0
   991  007A  1303               	bcf	3,6	;RP1=0, select bank0
   992  007B  169F               	bsf	31,5	;volatile
   993                           
   994                           ;ADC.c: 88:         ADCON0bits.CHS2 = 0;
   995  007C  121F               	bcf	31,4	;volatile
   996                           
   997                           ;ADC.c: 89:         ADCON0bits.CHS1 = 0;
   998  007D  119F               	bcf	31,3	;volatile
   999                           
  1000                           ;ADC.c: 90:         ADCON0bits.CHS0 = 0;
  1001  007E  111F               	bcf	31,2	;volatile
  1002  007F                     l774:
  1003                           
  1004                           ;ADC.c: 94:     if (canal == 9) {
  1005  007F  3009               	movlw	9
  1006  0080  0674               	xorwf	canalADC@canal,w
  1007  0081  1D03               	btfss	3,2
  1008  0082  2884               	goto	u111
  1009  0083  2885               	goto	u110
  1010  0084                     u111:
  1011  0084  288B               	goto	l778
  1012  0085                     u110:
  1013  0085                     l776:
  1014                           
  1015                           ;ADC.c: 95:         ADCON0bits.CHS3 = 1;
  1016  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0087  169F               	bsf	31,5	;volatile
  1019                           
  1020                           ;ADC.c: 96:         ADCON0bits.CHS2 = 0;
  1021  0088  121F               	bcf	31,4	;volatile
  1022                           
  1023                           ;ADC.c: 97:         ADCON0bits.CHS1 = 0;
  1024  0089  119F               	bcf	31,3	;volatile
  1025                           
  1026                           ;ADC.c: 98:         ADCON0bits.CHS0 = 1;
  1027  008A  151F               	bsf	31,2	;volatile
  1028  008B                     l778:
  1029                           
  1030                           ;ADC.c: 102:     if (canal == 10) {
  1031  008B  300A               	movlw	10
  1032  008C  0674               	xorwf	canalADC@canal,w
  1033  008D  1D03               	btfss	3,2
  1034  008E  2890               	goto	u121
  1035  008F  2891               	goto	u120
  1036  0090                     u121:
  1037  0090  2897               	goto	l782
  1038  0091                     u120:
  1039  0091                     l780:
  1040                           
  1041                           ;ADC.c: 103:         ADCON0bits.CHS3 = 1;
  1042  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0093  169F               	bsf	31,5	;volatile
  1045                           
  1046                           ;ADC.c: 104:         ADCON0bits.CHS2 = 0;
  1047  0094  121F               	bcf	31,4	;volatile
  1048                           
  1049                           ;ADC.c: 105:         ADCON0bits.CHS1 = 1;
  1050  0095  159F               	bsf	31,3	;volatile
  1051                           
  1052                           ;ADC.c: 106:         ADCON0bits.CHS0 = 0;
  1053  0096  111F               	bcf	31,2	;volatile
  1054  0097                     l782:
  1055                           
  1056                           ;ADC.c: 111:     if (canal == 11) {
  1057  0097  300B               	movlw	11
  1058  0098  0674               	xorwf	canalADC@canal,w
  1059  0099  1D03               	btfss	3,2
  1060  009A  289C               	goto	u131
  1061  009B  289D               	goto	u130
  1062  009C                     u131:
  1063  009C  28A3               	goto	l786
  1064  009D                     u130:
  1065  009D                     l784:
  1066                           
  1067                           ;ADC.c: 112:         ADCON0bits.CHS3 = 1;
  1068  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1069  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1070  009F  169F               	bsf	31,5	;volatile
  1071                           
  1072                           ;ADC.c: 113:         ADCON0bits.CHS2 = 0;
  1073  00A0  121F               	bcf	31,4	;volatile
  1074                           
  1075                           ;ADC.c: 114:         ADCON0bits.CHS1 = 1;
  1076  00A1  159F               	bsf	31,3	;volatile
  1077                           
  1078                           ;ADC.c: 115:         ADCON0bits.CHS0 = 1;
  1079  00A2  151F               	bsf	31,2	;volatile
  1080  00A3                     l786:
  1081                           
  1082                           ;ADC.c: 120:     if (canal == 12) {
  1083  00A3  300C               	movlw	12
  1084  00A4  0674               	xorwf	canalADC@canal,w
  1085  00A5  1D03               	btfss	3,2
  1086  00A6  28A8               	goto	u141
  1087  00A7  28A9               	goto	u140
  1088  00A8                     u141:
  1089  00A8  28AF               	goto	l790
  1090  00A9                     u140:
  1091  00A9                     l788:
  1092                           
  1093                           ;ADC.c: 121:         ADCON0bits.CHS3 = 1;
  1094  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00AB  169F               	bsf	31,5	;volatile
  1097                           
  1098                           ;ADC.c: 122:         ADCON0bits.CHS2 = 1;
  1099  00AC  161F               	bsf	31,4	;volatile
  1100                           
  1101                           ;ADC.c: 123:         ADCON0bits.CHS1 = 0;
  1102  00AD  119F               	bcf	31,3	;volatile
  1103                           
  1104                           ;ADC.c: 124:         ADCON0bits.CHS0 = 0;
  1105  00AE  111F               	bcf	31,2	;volatile
  1106  00AF                     l790:
  1107                           
  1108                           ;ADC.c: 129:     if (canal == 13) {
  1109  00AF  300D               	movlw	13
  1110  00B0  0674               	xorwf	canalADC@canal,w
  1111  00B1  1D03               	btfss	3,2
  1112  00B2  28B4               	goto	u151
  1113  00B3  28B5               	goto	u150
  1114  00B4                     u151:
  1115  00B4  28BB               	goto	l84
  1116  00B5                     u150:
  1117  00B5                     l792:
  1118                           
  1119                           ;ADC.c: 130:         ADCON0bits.CHS3 = 1;
  1120  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1121  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1122  00B7  169F               	bsf	31,5	;volatile
  1123                           
  1124                           ;ADC.c: 131:         ADCON0bits.CHS2 = 1;
  1125  00B8  161F               	bsf	31,4	;volatile
  1126                           
  1127                           ;ADC.c: 132:         ADCON0bits.CHS1 = 0;
  1128  00B9  119F               	bcf	31,3	;volatile
  1129                           
  1130                           ;ADC.c: 133:         ADCON0bits.CHS0 = 1;
  1131  00BA  151F               	bsf	31,2	;volatile
  1132  00BB                     l84:	
  1133                           ;ADC.c: 135:     }
  1134                           
  1135                           
  1136                           ;ADC.c: 137:     ADCON0bits.GO = 1;
  1137  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1138  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1139  00BD  149F               	bsf	31,1	;volatile
  1140  00BE                     l85:
  1141  00BE  0008               	return
  1142  00BF                     __end_of_canalADC:
  1143                           
  1144                           	psect	text4
  1145  013C                     __ptext4:	
  1146 ;; *************** function _Setup *****************
  1147 ;; Defined at:
  1148 ;;		line 83 in file "mainEsclavo1.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0
  1165 ;;      Totals:         0       0       0       0       0
  1166 ;;Total ram usage:        0 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    3
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _Setup
  1178  013C                     _Setup:
  1179  013C                     l724:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _Setup: [wreg+status,2]
  1182                           
  1183  013C  1683               	bsf	3,5	;RP0=1, select bank3
  1184  013D  1703               	bsf	3,6	;RP1=1, select bank3
  1185  013E  0188               	clrf	8	;volatile
  1186  013F  0189               	clrf	9	;volatile
  1187  0140                     l726:
  1188  0140  1408               	bsf	8,0	;volatile
  1189  0141                     l728:
  1190  0141  3001               	movlw	1
  1191  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0144  0085               	movwf	5	;volatile
  1194  0145                     l730:
  1195  0145  0186               	clrf	6	;volatile
  1196  0146                     l732:
  1197  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0148  0186               	clrf	6	;volatile
  1200  0149                     l734:
  1201  0149  0185               	clrf	5	;volatile
  1202  014A                     l58:
  1203  014A  0008               	return
  1204  014B                     __end_of_Setup:
  1205                           
  1206                           	psect	text5
  1207  00BF                     __ptext5:	
  1208 ;; *************** function _ISR *****************
  1209 ;; Defined at:
  1210 ;;		line 48 in file "mainEsclavo1.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          3       0       0       0       0
  1227 ;;      Totals:         3       0       0       0       0
  1228 ;;Total ram usage:        3 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    2
  1231 ;; This function calls:
  1232 ;;		_spiRead
  1233 ;;		_spiWrite
  1234 ;; This function is called by:
  1235 ;;		Interrupt level 1
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _ISR
  1241  00BF                     _ISR:
  1242  00BF                     i1l804:
  1243                           
  1244                           ;mainEsclavo1.c: 50: 
  1245  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1246  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1247  00C1  1F0C               	btfss	12,6	;volatile
  1248  00C2  28C4               	goto	u17_21
  1249  00C3  28C5               	goto	u17_20
  1250  00C4                     u17_21:
  1251  00C4  28D4               	goto	i1l812
  1252  00C5                     u17_20:
  1253  00C5                     i1l806:
  1254                           
  1255                           ;mainEsclavo1.c: 51: 
  1256  00C5  30C7               	movlw	199
  1257  00C6  00F1               	movwf	??_ISR
  1258  00C7                     u20_27:
  1259  00C7  28C8               	nop2
  1260  00C8  0BF1               	decfsz	??_ISR,f
  1261  00C9  28C7               	goto	u20_27
  1262  00CA  28CB               	nop2
  1263  00CB  28CC               	nop2
  1264                           
  1265                           ;mainEsclavo1.c: 52: void Setup(void){
  1266  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1267  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1268  00CE  081E               	movf	30,w	;volatile
  1269  00CF  00F1               	movwf	??_ISR
  1270  00D0  0871               	movf	??_ISR,w
  1271  00D1  00F8               	movwf	_varADC
  1272  00D2                     i1l808:
  1273                           
  1274                           ;mainEsclavo1.c: 54:     ANSEL = 0;
  1275  00D2  130C               	bcf	12,6	;volatile
  1276  00D3                     i1l810:
  1277                           
  1278                           ;mainEsclavo1.c: 55:     ANSELH = 0;
  1279  00D3  149F               	bsf	31,1	;volatile
  1280  00D4                     i1l812:
  1281                           
  1282                           ;mainEsclavo1.c: 59:     TRISB = 0;
  1283  00D4  1D8C               	btfss	12,3	;volatile
  1284  00D5  28D7               	goto	u18_21
  1285  00D6  28D8               	goto	u18_20
  1286  00D7                     u18_21:
  1287  00D7  28E9               	goto	i1l47
  1288  00D8                     u18_20:
  1289  00D8                     i1l814:
  1290                           
  1291                           ;mainEsclavo1.c: 60: 
  1292  00D8  120A  118A  214B  120A  118A  	fcall	_spiRead
  1293  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1294  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1295  00DF  0088               	movwf	8	;volatile
  1296                           
  1297                           ;mainEsclavo1.c: 61:     PORTB = 0;
  1298  00E0  0806               	movf	6,w	;volatile
  1299  00E1  120A  118A  215B  120A  118A  	fcall	_spiWrite
  1300  00E6                     i1l816:
  1301                           
  1302                           ;mainEsclavo1.c: 62: 
  1303  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1304  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1305  00E8  118C               	bcf	12,3	;volatile
  1306  00E9                     i1l47:
  1307  00E9  0873               	movf	??_ISR+2,w
  1308  00EA  008A               	movwf	10
  1309  00EB  0E72               	swapf	??_ISR+1,w
  1310  00EC  0083               	movwf	3
  1311  00ED  0EFE               	swapf	btemp,f
  1312  00EE  0E7E               	swapf	btemp,w
  1313  00EF  0009               	retfie
  1314  00F0                     __end_of_ISR:
  1315                           
  1316                           	psect	intentry
  1317  0004                     __pintentry:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1320                           
  1321  0004                     interrupt_function:
  1322  007E                     saved_w	set	btemp
  1323  0004  00FE               	movwf	btemp
  1324  0005  0E03               	swapf	3,w
  1325  0006  00F2               	movwf	??_ISR+1
  1326  0007  080A               	movf	10,w
  1327  0008  00F3               	movwf	??_ISR+2
  1328  0009  120A  118A  28BF   	ljmp	_ISR
  1329                           
  1330                           	psect	text6
  1331  015B                     __ptext6:	
  1332 ;; *************** function _spiWrite *****************
  1333 ;; Defined at:
  1334 ;;		line 34 in file "SPI.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  dat             1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  dat             1    0[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         1       0       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_ISR
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _spiWrite
  1363  015B                     _spiWrite:
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _spiWrite: [wreg]
  1367                           ;spiWrite@dat stored from wreg
  1368  015B  00F0               	movwf	spiWrite@dat
  1369  015C                     i1l722:
  1370                           
  1371                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1372  015C  0870               	movf	spiWrite@dat,w
  1373  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1374  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1375  015F  0093               	movwf	19	;volatile
  1376  0160                     i1l114:
  1377  0160  0008               	return
  1378  0161                     __end_of_spiWrite:
  1379                           
  1380                           	psect	text7
  1381  014B                     __ptext7:	
  1382 ;; *************** function _spiRead *****************
  1383 ;; Defined at:
  1384 ;;		line 47 in file "SPI.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		_spiReceiveWait
  1407 ;; This function is called by:
  1408 ;;		_ISR
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _spiRead
  1414  014B                     _spiRead:
  1415  014B                     i1l716:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1418                           
  1419                           
  1420                           ;SPI.c: 49:     spiReceiveWait();
  1421  014B  120A  118A  2154  120A  118A  	fcall	_spiReceiveWait
  1422  0150                     i1l718:
  1423                           
  1424                           ;SPI.c: 50:     return(SSPBUF);
  1425  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0152  0813               	movf	19,w	;volatile
  1428  0153                     i1l122:
  1429  0153  0008               	return
  1430  0154                     __end_of_spiRead:
  1431                           
  1432                           	psect	text8
  1433  0154                     __ptext8:	
  1434 ;; *************** function _spiReceiveWait *****************
  1435 ;; Defined at:
  1436 ;;		line 29 in file "SPI.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		None
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_spiRead
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _spiReceiveWait
  1465  0154                     _spiReceiveWait:
  1466  0154                     i1l714:	
  1467                           ;incstack = 0
  1468                           ; Regs used in _spiReceiveWait: []
  1469                           
  1470  0154                     i1l108:	
  1471                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1472                           
  1473  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0156  1C14               	btfss	20,0	;volatile
  1476  0157  2959               	goto	u1_21
  1477  0158  295A               	goto	u1_20
  1478  0159                     u1_21:
  1479  0159  2954               	goto	i1l108
  1480  015A                     u1_20:
  1481  015A                     i1l111:
  1482  015A  0008               	return
  1483  015B                     __end_of_spiReceiveWait:
  1484  007E                     btemp	set	126	;btemp
  1485  007E                     wtemp0	set	126
  1486                           
  1487                           	psect	config
  1488                           
  1489                           ;Config register CONFIG1 @ 0x2007
  1490                           ;	Oscillator Selection bits
  1491                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1492                           ;	Watchdog Timer Enable bit
  1493                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1494                           ;	Power-up Timer Enable bit
  1495                           ;	PWRTE = OFF, PWRT disabled
  1496                           ;	RE3/MCLR pin function select bit
  1497                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1498                           ;	Code Protection bit
  1499                           ;	CP = OFF, Program memory code protection is disabled
  1500                           ;	Data Code Protection bit
  1501                           ;	CPD = OFF, Data memory code protection is disabled
  1502                           ;	Brown Out Reset Selection bits
  1503                           ;	BOREN = OFF, BOR disabled
  1504                           ;	Internal External Switchover bit
  1505                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1506                           ;	Fail-Safe Clock Monitor Enabled bit
  1507                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1508                           ;	Low Voltage Programming Enable bit
  1509                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1510                           ;	In-Circuit Debugger Mode bit
  1511                           ;	DEBUG = 0x1, unprogrammed default
  1512  2007                     	org	8199
  1513  2007  20D4               	dw	8404
  1514                           
  1515                           ;Config register CONFIG2 @ 0x2008
  1516                           ;	Brown-out Reset Selection bit
  1517                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1518                           ;	Flash Program Memory Self Write Enable bits
  1519                           ;	WRT = OFF, Write protection off
  1520  2008                     	org	8200
  1521  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     570
                              _Setup
                           _canalADC
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canalADC                                             1     1      0     210
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _canalADC
   _configADC
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 17:37:58 2021

            _SSPSTATbits 0094                       l52 0109                       l58 014A  
                     l84 00BB                       l85 00BE                       l88 013B  
                     u20 001A                       u21 0019                       u30 0025  
                     u31 0024                       u40 0031                       u41 0030  
                     u50 003D                       u51 003C                       u60 0049  
                     u61 0048                       u70 0055                       u71 0054  
                     u80 0061                       u81 0060                       u90 006D  
                     u91 006C                      l104 0121                      l105 0126  
                    l730 0145                      l732 0146                      l724 013C  
                    l740 001A                      l734 0149                      l726 0140  
                    l750 0037                      l742 0020                      l728 0141  
                    l760 0055                      l752 003D                      l744 0025  
                    l736 0127                      l840 0120                      l832 0112  
                    l770 0073                      l762 005B                      l754 0043  
                    l746 002B                      l738 0015                      l834 0119  
                    l842 00F0                      l780 0091                      l772 0079  
                    l764 0061                      l756 0049                      l748 0031  
                    l836 011B                      l844 00F5                      l790 00AF  
                    l782 0097                      l774 007F                      l766 0067  
                    l758 004F                      l838 011D                      l846 00FA  
                    l792 00B5                      l784 009D                      l776 0085  
                    l768 006D                      l848 0100                      l786 00A3  
                    l778 008B                      l788 00A9                      u100 0079  
                    u101 0078                      u110 0085                      u111 0084  
                    u120 0091                      u121 0090                      u130 009D  
                    u131 009C                      u140 00A9                      u141 00A8  
                    u150 00B5                      u151 00B4                      u190 0119  
                    u191 0118                      _ISR 00BF                     ?_ISR 0070  
                   _ADIF 0066                     i1l47 00E9                     u1_20 015A  
                   u1_21 0159                     _main 00F0                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l111 015A                    i1l122 0153  
                  i1l114 0160                    i1l108 0154                    i1l714 0154  
                  i1l722 015C                    i1l810 00D3                    i1l716 014B  
                  i1l812 00D4                    i1l804 00BF                    i1l718 0150  
                  i1l814 00D8                    i1l806 00C5                    i1l816 00E6  
                  i1l808 00D2                    u20_27 00C7                    u17_20 00C5  
                  u17_21 00C4                    u18_20 00D8                    u18_21 00D7  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _SSPIF 0063  
                  _Setup 013C                    pclath 000A          __end_of_spiInit 0127  
        __end_of_spiRead 0154                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0111                   ??_main 0078  
                 ?_Setup 0070                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_canalADC 00BF                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _varADC 0078  
                 saved_w 007E         __end_of_spiWrite 0161                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_Setup 014B       __size_of_configADC 0015                  ??_Setup 0074  
             __pmaintext 00F0               __pintentry 0004  __size_of_spiReceiveWait 0007  
              ?_canalADC 0070                  _SSPSTAT 0094        __end_of_configADC 013C  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0111  
                __ptext2 0127                  __ptext3 0014                  __ptext4 013C  
                __ptext5 00BF                  __ptext6 015B                  __ptext7 014B  
                __ptext8 0154               ??_canalADC 0074             __size_of_ISR 0031  
                _spiInit 0111                  _spiRead 014B     end_of_initialization 0010  
             ??_spiWrite 0070              spiWrite@dat 0070           _spiReceiveWait 0154  
    start_initialization 000F              __end_of_ISR 00F0   __end_of_spiReceiveWait 015B  
            __pbssCOMMON 0078                ___latbits 0002        __size_of_canalADC 00AB  
        ?_spiReceiveWait 0070                _configADC 0127        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_Setup 000F  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               ?_configADC 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                 _canalADC 0014  
          canalADC@canal 0074         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 0021                 _spiWrite 015B             spiInit@sType 0077  
            ??_configADC 0074        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070  
